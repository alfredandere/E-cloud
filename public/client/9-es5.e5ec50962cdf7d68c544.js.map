{"version":3,"sources":["webpack:///src/common/uploads/formatted-file-size.pipe.ts","webpack:///src/common/shared/billing/full-plan-name/full-plan-name.component.ts","webpack:///src/common/shared/billing/guards/billing-enabled-guard.service.ts","webpack:///src/common/billing/upgrade-page/billing-plans-resolver.service.ts","webpack:///src/common/billing/upgrade-page/accepted-payments-header/accepted-payments-header.component.html","webpack:///src/common/billing/upgrade-page/accepted-payments-header/accepted-payments-header.component.ts","webpack:///src/common/billing/upgrade-page/plan-features-list/plan-features-list.component.html","webpack:///src/common/billing/upgrade-page/plan-features-list/plan-features-list.component.ts","webpack:///src/common/billing/upgrade-page/upgrade-page-aside/upgrade-page-aside.component.html","webpack:///src/common/billing/upgrade-page/upgrade-page-aside/upgrade-page-aside.component.ts","webpack:///src/common/billing/upgrade-page/order-summary/order-summary.component.html","webpack:///src/common/billing/upgrade-page/order-summary/order-summary.component.ts","webpack:///src/common/billing/credit-card-form/credit-card-form.component.html","webpack:///src/common/billing/credit-card-form/credit-card-form.component.ts","webpack:///src/common/billing/subscriptions/create-subscription-panel/create-subscription-panel.component.html","webpack:///src/common/billing/subscriptions/create-subscription-panel/create-subscription-panel.component.ts","webpack:///src/common/billing/subscriptions/user-subscription-page/user-subscription-page.component.html","webpack:///src/common/billing/subscriptions/user-subscription-page/user-subscription-page.component.ts","webpack:///src/common/billing/guards/user-subscribed-guard.service.ts","webpack:///src/common/billing/upgrade-page/currencies-list-resolver.service.ts","webpack:///src/common/billing/invoices/invoice.service.ts","webpack:///src/common/billing/invoices/invoice-index/invoice-index.component.html","webpack:///src/common/billing/invoices/invoice-index/invoice-index.component.ts","webpack:///src/common/billing/pricing-page/pricing-page.component.ts","webpack:///src/common/billing/guards/redirect-to-upgrade-page.service.ts","webpack:///src/common/billing/billing-routing.module.ts","webpack:///src/common/billing/pricing-page/pricing-page.component.html","webpack:///src/common/billing/plans/select-plan-panel/select-plan-panel.component.html","webpack:///src/common/billing/plans/select-plan-panel/select-plan-panel.component.ts","webpack:///src/common/billing/plans/select-plan-period-panel/select-plan-period-panel.component.html","webpack:///src/common/billing/plans/select-plan-period-panel/select-plan-period-panel.component.ts","webpack:///src/common/billing/upgrade-page/contact-widget/contact-widget.component.ts","webpack:///src/common/billing/guards/user-not-subscribed-guard.service.ts","webpack:///src/common/billing/billing.module.ts","webpack:///src/common/billing/upgrade-page/contact-widget/contact-widget.component.html","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/radio.js","webpack:///src/common/shared/billing/plans.service.ts","webpack:///src/common/shared/billing/full-plan-name/full-plan-name.module.ts","webpack:///src/common/core/ui/format-pipes/favicon.pipe.ts","webpack:///src/common/core/utils/get-favicon-from-url.ts","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/tabs.js"],"names":["FormattedFileSizePipe","precision","bytes","isNaN","parseFloat","String","isFinite","FullPlanNameComponent","i18n","this","plan","name","parent","t","BillingEnabledGuard","settings","router","route","state","handle","get","navigate","BillingPlansResolver","plans","all","order","perPage","pipe","map","response","pagination","data","catchError","navigateByUrl","mergeMap","of","AcceptedPaymentsHeaderComponent","el","acceptedCards","getJson","card","getAssetUrl","toLowerCase","PlanFeaturesListComponent","showCheckIcons","dense","UpgradePageAsideComponent","OrderSummaryComponent","CreditCardFormComponent","subscriptions","currentUser","zone","lazyLoader","toast","theme","created","submitButtonText","showSubmitButton","showOrderSummary","loading$","BehaviorSubject","error$","stripeElements","resetForm","initStripe","destroyStripe","error","next","stripe","createToken","token","message","addCardToUser","stripeToken","addCard","id","finalize","subscribe","assignCurrent","user","emit","errResponse","loadAsset","type","then","Stripe","elements","isDarkMode","selectedTheme$","value","is_dark","forEach","field","create","classes","base","style","color","mount","on","onChange","bind","push","unmount","destroy","change","run","submitForm","CreateSubscriptionPanelComponent","paypal","selectedIndex$","loading","submitText","disablePaypalTab","completed","getSubscription","gateway","planId","status","startLoading","createOnStripe","getNewSubscriptionPayload","completeSubscription","confirmCardPayment","key","Object","keys","errors","open","Default","stopLoading","payment_intent_secret","result","action","onAction","finalizeOnStripe","reference","finalResponse","payload","plan_id","from","renews_at","UserSubscriptionPageComponent","UserSubscribedGuard","CurrenciesListResolver","InvoiceService","modal","activeSubscription$","onGracePeriod","isSubscribed","ends_at","split","title","body","ok","cancel","afterClosed","confirmed","cancelSubscription","resume","setSubscription","subscription","e","delete","params","request","share","updateUserAndSubscription","valueLists","currencies","toPromise","http","InvoiceIndexComponent","PricingPageComponent","RedirectToUpgradePage","BillingRoutingModule","invoices","invoices$","index","userId","invoice","getBaseUrl","uuid","routes","path","component","canActivate","listener","active","isLoggedIn","resolve","canActivateChild","children","forChild","SelectPlanPanelComponent","hasRecommendedPlan","selected","filter","recommended","length","selectInitialPlan","setTimeout","parent_id","hidden","mode","free","model$","userSubscribedToPlan","ContactWidgetComponent","UserNotSubscribedGuard","SelectPlanPeriodPanelComponent","BillingModule","showSidebar","baseAmount","getAmountPerDay","amount","Math","ceil","days","interval","interval_count","_c0","_c1","enterDuration","_c2","MAT_RADIO_DEFAULT_OPTIONS","providedIn","factory","nextUniqueId","MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","provide","useExisting","MatRadioGroup","multi","MatRadioChange","source","MAT_RADIO_GROUP","_MatRadioGroupBase","_changeDetector","_value","_name","_selected","_isInitialized","_labelPosition","_disabled","_required","_controlValueAccessorChangeFn","onTouched","checked","_radios","radio","_markForCheck","markForCheck","fn","isDisabled","disabled","_updateRadioButtonNames","v","_markRadiosForCheck","newValue","_updateSelectedRadioFromValue","_checkSelectedRadioButton","c","ɵfac","ɵdir","inputs","labelPosition","required","outputs","ɵMatRadioGroup_BaseFactory","selectors","contentQueries","rf","ctx","dirIndex","_t","MatRadioButton","hostAttrs","exportAs","features","_MatRadioButtonMixinBase","_elementRef","_MatRadioButtonBase","radioGroup","elementRef","_focusMonitor","_radioDispatcher","_animationMode","_providerOverride","tabIndex","super","_uniqueId","_checked","_removeUniqueSelectionListener","listen","options","focusVia","_inputElement","monitor","focusOrigin","_touch","stopMonitoring","disableRipple","event","stopPropagation","groupValueChanged","_emitChangeEvent","newCheckedState","notify","_setDisabled","_color","viewQuery","first","ariaLabel","ariaLabelledby","ariaDescribedby","changeDetector","focusMonitor","radioDispatcher","animationMode","providerOverride","ɵcmp","hostVars","hostBindings","nativeElement","focus","ngContentSelectors","decls","vars","consts","template","$event","_onInputChange","_onInputClick","_r0","inputId","_isRippleDisabled","directives","styles","encapsulation","changeDetection","MatRadioModule","ɵmod","ɵinj","imports","Plans","BASE_URI","post","put","ids","FullPlanNameModule","FaviconPipe","url","includes","window","location","protocol","host","URL","origin","MatTab_ng_template_0_Template","MatTabBody_ng_template_2_Template","a0","animationDuration","a1","_c3","_c4","MatTabGroup_div_2_ng_template_2_ng_template_0_Template","MatTabGroup_div_2_ng_template_2_Template","tab_r4","$implicit","templateLabel","MatTabGroup_div_2_ng_template_3_Template","textLabel","MatTabGroup_div_2_Template","_r12","i_r5","ctx_r11","_handleClick","ctx_r1","selectedIndex","_getTabLabelId","_getTabIndex","_tabs","_getTabContentId","MatTabGroup_mat_tab_body_5_Template","_r16","_removeTabBodyWrapperHeight","_setTabBodyWrapperHeight","tab_r13","i_r14","ctx_r3","content","position","_c5","_c6","_c7","_c8","_c9","_MAT_INK_BAR_POSITIONER","element","left","offsetLeft","width","offsetWidth","MatInkBar","_ngZone","_inkBarPositioner","show","requestAnimationFrame","runOutsideAngular","_setStyles","visibility","positions","inkBar","MAT_TAB_CONTENT","MatTabContent","MAT_TAB_LABEL","MatTabLabel","ɵMatTabLabel_BaseFactory","_MatTabMixinBase","MAT_TAB_GROUP","MatTab","_viewContainerRef","_closestTabGroup","_contentPortal","_stateChanges","isActive","changes","hasOwnProperty","complete","_explicitContent","_implicitContent","_templateLabel","_setTemplateLabelInput","matTabsAnimations","translateTab","transform","minHeight","MatTabBodyPortal","componentFactoryResolver","viewContainerRef","_host","_document","_centeringSub","EMPTY","_leavingSub","_beforeCentering","_isCenterPosition","_position","isCentering","hasAttached","attach","_content","_afterLeavingCenter","detach","unsubscribe","MatTabBody","_MatTabBodyBase","_dir","changeDetectorRef","_dirChangeSubscription","_translateTabComplete","_onCentering","_onCentered","dir","_computePositionAnimationState","x","y","fromState","toState","_computePositionFromOrigin","clientHeight","_getLayoutDirection","_positionIndex","_portalHost","_onTranslateTabStarted","animation","MAT_TABS_CONFIG","nextId","MatTabChangeEvent","_MatTabGroupMixinBase","_MatTabGroupBase","_changeDetectorRef","defaultConfig","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_dynamicHeight","_selectedIndex","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","disablePagination","indexToSelect","_clampTabIndex","isFirstRun","_createChangeEvent","Promise","tab","_subscribeToAllTabChanges","_subscribeToTabLabels","tabs","toArray","i","_allTabs","reset","notifyOnChanges","_tabHeader","_alignInkBarToSelectedTab","min","max","tabHeight","wrapper","_tabBodyWrapper","height","offsetHeight","tabHeader","focusIndex","idx","_animationDuration","test","_backgroundColor","classList","remove","backgroundColor","add","dynamicHeight","MatTabGroup","_focusChanged","MatTabHeader","MatTabLabelWrapper","_MatTabLabelWrapperMixinBase","passiveEventListenerOptions","passive","MatPaginatedTabHeader","_viewportRuler","_platform","_scrollDistance","_selectedIndexChanged","_destroyed","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_stopScrolling","selectFocusedIndex","indexFocused","_stopInterval","_previousPaginator","_handlePaginatorPress","_nextPaginator","dirChange","resize","realign","updatePagination","_keyManager","_items","withHorizontalOrientation","withHomeAndEnd","withWrap","updateActiveItem","newFocusIndex","_setTabFocus","_tabLabelCount","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","keyCode","_itemSelected","onKeydown","textContent","_currentTextContent","_checkPaginationEnabled","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","platform","translateX","_tabList","round","TRIDENT","EDGE","direction","_scrollTo","_scrollHeader","labelIndex","selectedLabel","viewLength","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","_getMaxScrollDistance","selectedItem","selectedLabelWrapper","_inkBar","alignToElement","hide","mouseEvent","button","maxScrollDistance","distance","activeItemIndex","_isValidIndex","setActiveItem","_MatTabHeaderBase","viewportRuler","ngZone","_disableRipple","preventDefault","_handlePaginatorClick","_handleKeydown","_onContentChanges","_MatTabNavBase","updateActiveLink","_element","items","MatTabNav","MatTabLink","attrs","_MatTabLinkMixinBase","_MatTabLinkBase","_tabNavBar","globalRippleOptions","_isActive","rippleConfig","parseInt","exitDuration","tabNavBar","_tabLinkRipple","setupTriggerEvents","_removeTriggerEvents","MatTabsModule"],"mappings":"+9EACA,8DAMO,iBAAMA,EAAN,gFAC0BC,IAAnBC,EAAmBD,uDAAH,EAAGA,yCACzB,OAAIE,MAAMC,WAAWC,OAAOH,OAAcI,SAASJ,GAAe,IAC3D,YAAYA,EAAOD,OAH3B,K,6CAAMD,I,iDAAAA,EAAqB,U,EAA3B,I,oCCJP,0EAOO,iBAAMO,EAAN,WAGH,WAAoBC,aAAA,KAAAA,OAHjB,oDAMC,GAAOC,KAAKC,KAAZ,CACA,IAAIC,EAAOF,KAAKC,KAAKE,OAASH,KAAKC,KAAKE,OAAOD,KAAOF,KAAKC,KAAKC,KAIhE,OAHAA,EAAO,YAAQF,KAAKD,KAAKK,EAAEF,IAC3BA,GAAQ,IAAMF,KAAKD,KAAKK,EAAE,QACtBJ,KAAKC,KAAKE,SAAQD,GAAQ,KAAOF,KAAKC,KAAKC,MACxCA,OAXR,K,6CAAMJ,GAAqB,Y,uBAArBA,EAAqB,+FAHnB,Q,KAAA,2B,sCAGR,I,4GCHA,iBAAMO,EAAN,WACH,WAAoBC,EAA4BC,aAA5B,KAAAD,WAA4B,KAAAC,SAD7C,8CAGSC,EAA+BC,GACvC,OAAOT,KAAKU,WAJb,uCAOcF,EAA+BC,GAC5C,OAAOT,KAAKU,WARb,+BAYC,SAAIV,KAAKM,SAASK,IAAI,wBAAyBX,KAAKM,SAASK,IAAI,qBAIjEX,KAAKO,OAAOK,SAAS,CAAC,cAhBvB,K,6CAAMP,GAAmB,sB,yBAAnBA,EAAmB,QAAnBA,EAAmB,qBAFhB,S,EAET,I,4FCGMQ,E,4PAAN,IAAMA,EAAN,WACH,WACYC,EACAP,aADA,KAAAO,QACA,KAAAP,SAHT,0CAMKC,EAA+BC,cACnC,OAAOT,KAAKc,MAAMC,IAAI,CAACC,MAAO,eAAgBC,QAAS,KAClDC,KAAK,OAAAC,EAAA,IAAIC,YAAQA,OAAIA,EAASC,WAAWC,SACzCJ,KACG,OAAAK,EAAA,IAAW,kBACPvB,EAAKO,OAAOiB,cAAc,KACnB,OAEX,OAAAC,EAAA,IAAUX,YAAKA,OACJ,OAAAY,EAAA,GAAGZ,WAfvB,M,oCAAMD,GAAoB,sB,yBAApBA,EAAoB,QAApBA,EAAoB,qBAFjB,S,2KCNZ,gB,kBAAK,0C,wBACL,gB,gCAAK,mCCMF,IAAMc,EAAN,IAAMA,EAAN,WAGH,WAAmBrB,EAA2BsB,aAA3B,KAAAtB,WAA2B,KAAAsB,KAFvC,KAAAC,cAA0B,GAD9B,6CAMC7B,KAAK6B,cAAgB7B,KAAKM,SAASwB,QAAQ,yBAA0B,MANtE,kCASgBC,GACf,OAAO/B,KAAKM,SAAS0B,cAAgB,kBAAoBD,EAAKE,cAAgB,WAV/E,M,oCAAMN,GAA+B,sB,uBAA/BA,EAA+B,gMDT5C,gBAAwB,mCAAwB,OAChD,gBACI,sBACA,sBACJ,Q,MAFuC,6DACJ,0C,ieEAvB,qB,yBADJ,aACI,2BACA,iBAAY,QAA8C,OAC9D,Q,iCAFiD,sCACjC,sC,yBAHpB,QACI,qBAIJ,Q,mBAJQ,iD,qBAOA,qB,yBADJ,aACI,2BACA,eAAM,QAAW,OACrB,Q,iCAFiD,sCACvC,iB,yBAHd,QACI,qBAIJ,Q,mBAJQ,8C,yBARZ,eACI,+BAMA,+BAMJ,Q,kBAb4C,sBAC1B,kDAMA,kDCEX,IAAMO,EAAN,IAAMA,EAAN,WANP,uBAQa,KAAAC,kBACA,KAAAC,SAHN,4CAMC,OAAOpC,KAAKC,KAAKE,QAAUH,KAAKC,SANjC,M,oCAAMiC,I,uBAAAA,EAAyB,8VDTtC,qB,KAA0B,0B,6gBEE1B,QACI,gBACI,gBAAoB,2BAA+C,OACnE,+BACJ,OAEA,gBAEA,gBACI,gBACI,qBACJ,OACA,gBACI,kBAA2B,8BAAkB,OAC7C,kBAA6B,mEAAuD,OACxF,OACJ,OACJ,Q,kBAf4C,4BACW,4BAAa,oBAAb,CAAa,aCI7D,IAAMG,GAAN,KAAMA,GAAN,yB,oCAAMA,K,wBAAAA,GAAyB,mXDTtC,mCAEA,iC,MAAc,8B,msCEFd,QACI,gBACI,gBACI,2BACJ,OACA,gBAA2B,Q,mBAAwD,OACvF,OAEA,gBACI,gBAAgC,gBAAK,OACrC,iBAA2B,S,oBAAwD,OACvF,OACJ,Q,kBAT4B,uBAEO,4CAKA,8CCD5B,IAAMC,GAAN,KAAMA,GACT,WAAmB7B,aAAA,KAAAA,U,oCADV6B,IAAqB,a,wBAArBA,GAAqB,+MDTlC,iC,sBAAc,8C,2hBEgBV,iBAA8E,QAAS,Q,kBAAT,iB,sBAE9E,wB,0BAEA,oB,gBAA8G,Q,gBAA4B,Q,kBAA1D,sCAA8B,4CCQ3G,IAAMC,GAAN,KAAMA,GAAN,WA0BH,WACYC,EACAC,EACAnC,EACAoC,EACAC,EACAC,EACAC,EACApC,aAPA,KAAA+B,gBACA,KAAAC,cACA,KAAAnC,WACA,KAAAoC,OACA,KAAAC,aACA,KAAAC,QACA,KAAAC,QACA,KAAApC,QA7BF,KAAAqC,QAA8B,IAAI,IAKnC,KAAAC,iBAAmB,SAKnB,KAAAC,oBAKA,KAAAC,oBAEF,KAAAC,SAAW,IAAIC,EAAA,MACf,KAAAC,OAAS,IAAID,EAAA,EAAwB,MACpC,KAAAE,eAA4C,GAYhDrD,KAAKsD,YApCN,oDAwCCtD,KAAKuD,eAxCN,oCA4CCvD,KAAKwD,kBA5CN,mC,uKAqDeC,OAFdzD,KAAKkD,SAASQ,MAAKA,G,SAEU1D,KAAKS,MAAMkD,OAAOC,YAAY5D,KAAKqD,eAAe,I,gBAAxEQ,E,EAAD,OAAQJ,E,EAAF,QAGRzD,KAAKoD,OAAOM,KAAKD,EAAMK,SACvB9D,KAAKkD,SAASQ,MAAKA,IAEnB1D,KAAK+D,cAAcF,G,kDA3DxB,oCA+DkBG,cACjBhE,KAAKkD,SAASQ,MAAKA,GACnB1D,KAAKwC,cAAcyB,QAAQD,EAAYE,IAClChD,KAAK,OAAAiD,EAAA,IAAS,kBAAOnE,EAAKkD,SAASQ,MAAKA,OACxCU,WAAUhD,YACPpB,EAAKsD,YACLtD,EAAKyC,YAAY4B,cAAcjD,EAASkD,MACxCtE,EAAK8C,QAAQyB,KAAKnD,EAASkD,SAC3BE,YACAxE,EAAKoD,OAAOM,KAAKc,EAAYV,cAxEtC,mCA+EiB,WAChB9D,KAAK2C,WAAW8B,UAAU,2BAA4B,CAACC,KAAM,OAAOC,MAAK,WAErE3E,EAAKS,MAAMkD,OAASiB,OAAO5E,EAAKM,SAASK,IAAI,8BAC7C,IAAMkE,EAAW7E,EAAKS,MAAMkD,OAAOkB,WAE7BC,EAAa9E,EAAK6C,MAAMkC,eAAeC,MAAMC,QAJpC,CAAC,aAAc,aAAc,WAKrCC,SAAQC,YACX,IAAMvD,EAAKiD,EAASO,OAAOD,EAAO,CAACE,QAAS,CAACC,KAAM,QAASC,MAAO,CAACD,KAAM,CAACE,MAAOV,EAAa,OAAS,cACxGlD,EAAG6D,MAAM,IAAMN,GACfvD,EAAG8D,GAAG,SAAU1F,EAAK2F,SAASC,KAAK5F,IACnCA,EAAKqD,eAAewC,KAAKjE,WA1FlC,sCAmGC5B,KAAKqD,eAAe6B,SAAQtD,YACxBA,EAAGkE,UACHlE,EAAGmE,eArGR,+BA4GcC,cACbhG,KAAK0C,KAAKuD,KAAI,WACVjG,EAAKoD,OAAOM,KAAKsC,EAAOvC,MAAQuC,EAAOvC,MAAMK,QAAU,WA9G5D,kCAsHC9D,KAAKoD,OAAOM,KAAK,UAtHlB,M,oCAAMnB,IAAuB,qF,wBAAvBA,GAAuB,uwBD5BpC,iBAAM,mCAAY,EAAA2D,gBACd,gBACI,kBAA8B,+BAAoB,OAClD,gBACJ,OAEA,gBACI,kBAA8B,0BAAe,OAC7C,gBACJ,OAEA,gBACI,mBAA2B,eAAG,OAC9B,iBACJ,OAEA,wB,iBAEA,kCAEA,4BACJ,Q,MALkD,0CAE/B,wCAEO,0C,03BEnBtB,oB,gBACI,6BAAkB,wEAA0F,OAChH,O,qBAFS,oCAC6C,8CAA+B,wB,sCAErF,oBACI,gBACI,cAAsB,6GAAkG,OACxH,wBACA,mBAAyC,sE,gBAA4D,Q,gBAAsB,OAC/H,OACJ,O,qBANwB,oCAIuD,8CAA8B,sCCuB1G,IAAMC,GAAN,KAAMA,GAAN,WAmCH,WACY3D,EACAC,EACA2D,EACAxD,EACDtC,EACCG,aALA,KAAA+B,gBACA,KAAAC,cACA,KAAA2D,SACA,KAAAxD,QACD,KAAAtC,WACC,KAAAG,QAxCL,KAAAyC,SAAW,IAAIC,EAAA,MACf,KAAAkD,eAAiB,IAAIlD,EAAA,EAAwB,GAK1C,KAAAmD,QAAU,IAAI,IAKf,KAAAC,WAAa,kBAKb,KAAAC,oBAgBC,KAAAC,UAAsD,IAAI,IAjCjE,sDA+CuB,WAEtB,GAAIzG,KAAKyC,YAAYiE,gBAAgB,CAACC,QAAS,SAAUC,OAAQ5G,KAAKC,KAAKiE,KACvE,OAAOlE,KAAKyG,UAAUlC,KAAK,CAACsC,OAAQ,YAGxC7G,KAAK8G,eAEL9G,KAAKwC,cAAcuE,eAAe/G,KAAKgH,6BAClC5C,WAAUhD,YACiB,aAApBA,EAASyF,OACT7G,EAAKiH,qBAAqB7F,EAASkD,MAEpCtE,EAAKkH,mBAAmB9F,MAE3BoD,YACA,IAAM2C,EAAMC,OAAOC,KAAK7C,EAAY8C,QAAQ,GAC5CtH,EAAK4C,MAAM2E,KAAK/C,EAAY8C,OAAOH,IAAQ,KAAWK,SACtDxH,EAAKyH,mBAjEd,yCAwEwBrG,cACvBpB,KAAKS,MAAMkD,OAAOuD,mBAAmB9F,EAASsG,uBACzC/C,MAAKgD,YACEA,EAAOlE,OACPzD,EAAKyH,cACLzH,EAAK4C,MAAM2E,KAAK,kCAAmC,CAACK,OAAQ,UACvDC,WACAzD,WAAU,WACPpE,EAAKkH,mBAAmB9F,OAGhCpB,EAAKwC,cAAcsF,iBAAiB1G,EAAS2G,UAAW3G,EAASkD,KAAKJ,IACjEE,WAAU4D,YACPhI,EAAKiH,qBAAqBe,EAAc1D,cArF7D,0CA8FuB,WAEtB,GAAItE,KAAKyC,YAAYiE,gBAAgB,CAACC,QAAS,SAAUC,OAAQ5G,KAAKC,KAAKiE,KACvE,OAAOlE,KAAKyG,UAAUlC,KAAK,CAACsC,OAAQ,YAGxC7G,KAAK8G,eAEL9G,KAAKoG,OAAOhC,UAAUpE,KAAKgH,6BAA6BrC,MAAKL,YACzDtE,EAAKiH,qBAAqB3C,GAC1BtE,EAAKqG,eAAe3C,KAAK,MAF7B1D,OAGS8D,YACL9D,EAAKyH,cACLzH,EAAK4C,MAAM2E,KAAKzD,GAAW,oDA3GhC,kDAmHA,IAAMmE,EAAU,CAACC,QAASlI,KAAKC,KAAKiE,IAMpC,OAJIlE,KAAKmI,OACLF,EAAoB,WAAIjI,KAAKmI,KAAKC,WAG/BH,IAzHP,2CA4H0B3D,GACzBtE,KAAKyH,cACLzH,KAAKyC,YAAY4B,cAAcC,GAC/BtE,KAAKyG,UAAUlC,KAAK,CAACsC,OAAQ,cA/H9B,qCAmIC7G,KAAKkD,SAASQ,MAAKA,GACnB1D,KAAKsG,QAAQ/B,MAAKA,KApInB,oCAwICvE,KAAKkD,SAASQ,MAAKA,GACnB1D,KAAKsG,QAAQ/B,MAAKA,OAzInB,M,oCAAM4B,IAAgC,gE,wBAAhCA,GAAgC,uiBD/B7C,0B,gBACI,2BAGA,2BAOJ,Q,MAXe,yBAAsB,4CACM,6DAGe,+D,udEG1C,QACI,YACI,Q,gBACA,iBAAQ,Q,wBAA2C,OACnD,Q,gBACA,iBAAQ,S,oBAA8E,OAAS,cACnG,OAEA,gBAAwE,uBAAW,OACvF,Q,gCAPQ,wEACQ,kDACR,wDACQ,yD,sCAMhB,QACI,YAAG,Q,gBAAgD,iBAAQ,Q,wBAAyC,OAAS,Q,gBAA8F,OAC3M,eAAS,iJAAqI,OAC9I,qBAAyC,wEAAqC,kBAAM,OACxF,O,sBAHO,iEAAwD,gDAAkD,gH,0BAarH,iBACI,iBAAkB,sBAA2C,OAC7D,iBAAkB,QAA4E,OAClG,Q,mBADsB,kG,sCAR1B,gBACI,iBAAsC,yBAAc,OACpD,iBAA0C,2FAAgF,OAE1H,YAAG,Q,gBAAwC,iBAAQ,Q,iBAAgF,OAAS,OAE5I,yBAKA,wCACQ,iFAA2C,8CAChCjD,SAAA,WAKlB,OACL,O,mCAfO,yDAAgD,qEAEzB,0CAQlB,iCAAkB,SAAlB,CAAkB,0C,sCAO9B,gBACI,iBAAsC,8BAAmB,OAEzD,gBACI,eAAS,iHAAsG,OACnH,OAEA,iBACI,oBAAuC,6EAA0C,iBAAM,OAC3F,OACJ,Q,0BAvDR,gBACI,gBACI,gBACI,gBAAgC,2BAAkE,OAClG,gBACI,kCAWA,iCAKJ,OACJ,OAEA,yBAqBA,uBAWJ,OAEA,gCAEA,gC,iBACJ,Q,2BA1D4D,4BAE9B,mCAWA,mCAQI,+DAqBA,mCAaV,iCAEe,iDC1ChC,IAAMmF,GCbAC,GCCAC,GCEAC,GHUN,KAAMH,GAAN,WAIH,WACW/H,EACCmI,EACAjG,EACDC,EACCG,aAJD,KAAAtC,WACC,KAAAmI,QACA,KAAAjG,gBACD,KAAAC,cACC,KAAAG,QARL,KAAAM,SAAW,IAAIC,EAAA,MACf,KAAAuF,oBAAsB,IAAIvF,EAAA,EAA8B,MAF5D,6CAaCnD,KAAK0I,oBAAoBhF,KAAK1D,KAAKyC,YAAYiE,qBAbhD,kCAiBC,OAAO1G,KAAKyC,YAAYkG,kBAjBzB,kCAqBC,OAAO3I,KAAKyC,YAAYmG,iBAAmB5I,KAAKyC,YAAYkG,kBArB7D,+CAyBC,OAAO3I,KAAKM,SAASK,IAAI,0BAA4BX,KAAKM,SAASK,IAAI,2BAzBxE,4CA6BC,OAAOX,KAAK0I,oBAAoB1D,MAAM6D,QAC/B7I,KAAK0I,oBAAoB1D,MAAM6D,QAAQC,MAAM,KAAK,GADH,OA7BvD,8CAkCC,OAAO9I,KAAK0I,oBAAoB1D,MAAMoD,UAC/BpI,KAAK0I,oBAAoB1D,MAAMoD,UAAUU,MAAM,KAAK,GADH,OAlCzD,gCAuCC,OAAO9I,KAAK0I,oBAAoB1D,MAAM/E,OAvCvC,gDA8C6B,WAC5BD,KAAKyI,MAAMlB,KAAK,IAAuB,CACnCwB,MAAO,sBACPC,KAAM,qDACNC,GAAI,cACJC,OAAQ,YACTC,cAAc/E,WAAUgF,YAChBA,GACPpJ,EAAKqJ,qBAAqBjF,WAAU,WAChCpE,EAAK4C,MAAM2E,KAAK,mCAvDzB,2CA+DwB,WACvBvH,KAAKkD,SAASQ,MAAKA,GACnB1D,KAAKwC,cAAc8G,OAAOtJ,KAAK0I,oBAAoB1D,MAAMd,IACpDhD,KAAK,OAAAiD,EAAA,IAAS,kBAAMnE,EAAKkD,SAASQ,MAAKA,OACvCU,WAAUhD,YACPpB,EAAKyC,YAAY8G,gBAAgBnI,EAASoI,cAC1CxJ,EAAK0I,oBAAoBhF,KAAK1D,EAAKyC,YAAYiE,mBAC/C1G,EAAK4C,MAAM2E,KAAK,8BAtEzB,4CA6E0BkC,cAGR,YAAbA,EAAE5C,QAKN7G,KAAKkD,SAASQ,MAAKA,GAGnB1D,KAAKqJ,mBAAmB,CAACK,QAAOA,IAAQtF,WAAU,WAC9CpE,EAAK4C,MAAM2E,KAAK,+BARhBvH,KAAK4C,MAAM2E,KAAK,6BAjFrB,2CAgGwD,WAAhCoC,EAAgC,uDAAH,GACpD3J,KAAKkD,SAASQ,MAAKA,GAEnB,IAAMkG,EAAU5J,KAAKwC,cAAc0G,OAAOlJ,KAAK0I,oBAAoB1D,MAAMd,GAAI,CAACwF,OAAQC,EAAMA,SACvFzI,KAAK,OAAAiD,EAAA,IAAS,kBAAMnE,EAAKkD,SAASQ,MAAKA,OACvCxC,KAAK,OAAA2I,EAAA,MAOV,OALAD,EAAQxF,WAAUhD,YAEdpB,EAAK8J,0BAA0B1I,EAASkD,SAGrCsF,IA5GR,gDAkH+BtF,GAC9BtE,KAAKyC,YAAY4B,cAAcC,GAC/BtE,KAAK0I,oBAAoBhF,KAAK1D,KAAKyC,YAAYiE,uBApHhD,M,oCAAM2B,IAA6B,oD,wBAA7BA,GAA6B,o4BDpB1C,4BAEA,wB,uBAFiB,oEAE+B,uD,+zCGMzC,KAAME,GAAN,WACH,WAAoBwB,aAAA,KAAAA,aADjB,0CAGKvJ,EAA+BC,GACnC,OAAOT,KAAK+J,WAAWpJ,IAAI,CAAC,eAAeO,KAAK,OAAAC,EAAA,IAAIC,YAAQA,OAAIA,EAAS4I,eAAaC,gBAJvF,M,oCAAM1B,IAAsB,a,0BAAtBA,GAAsB,QAAtBA,GAAsB,qBAFnB,S,IDCT,KAAMD,GAAN,WAEH,WAAoB7F,EAAkClC,aAAlC,KAAAkC,cAAkC,KAAAlC,SAFnD,8CAISC,EAA+BC,GACvC,OAAOT,KAAKU,WALb,uCAQcF,EAA+BC,GAC5C,OAAOT,KAAKU,WATb,+BAaC,QAAIV,KAAKyC,YAAYmG,iBAErB5I,KAAKO,OAAOK,SAAS,CAAC,6BAfvB,M,oCAAM0H,IAAmB,sB,0BAAnBA,GAAmB,QAAnBA,GAAmB,qBAFhB,S,2CEKT,KAAME,GAAN,WACH,WAAoB0B,aAAA,KAAAA,OADjB,0CAIyC,IAA/BP,EAA+B,uDAAH,GACrC,OAAO3J,KAAKkK,KAAKvJ,IAAI,kBAAegJ,OALrC,M,oCAAMnB,IAAc,a,0BAAdA,GAAc,QAAdA,GAAc,qBAFX,S,2CCOR,aACI,aAAI,Q,wBAAsC,OAC1C,aAAI,QAAgF,OACpF,aAAI,Q,gBAA+C,OACnD,aACI,eAAyD,gBAAI,OACjE,OACJ,Q,gCANQ,qCACA,6EACA,gDAEG,8C,uBAKf,+BACI,iBAAyB,4CAAiC,OAC9D,QCbG,IAAM2B,GCLAC,GCDAC,GCiDAC,GH3CN,KAAMH,GAAN,WAIH,WACWI,EACDjK,EACCmC,aAFA,KAAA8H,WACD,KAAAjK,WACC,KAAAmC,cANJ,KAAA+H,UAAY,IAAIrH,EAAA,EAA2B,IAC3C,KAAAD,SAAW,IAAIC,EAAA,MAFnB,6CAUO,WACNnD,KAAKkD,SAASQ,MAAKA,GACnB1D,KAAKuK,SAASE,MAAM,CAACC,OAAQ1K,KAAKyC,YAAY9B,IAAI,QAC7CO,KAAK,OAAAiD,EAAA,IAAS,kBAAMnE,EAAKkD,SAASQ,MAAKA,OACvCU,WAAUhD,YACPpB,EAAKwK,UAAU9G,KAAKtC,EAASmJ,eAftC,oCAmBkBI,GACjB,OAAO3K,KAAKM,SAASsK,YAAWA,GAAQ,0BAA4BD,EAAQE,SApB7E,M,oCAAMV,IAAqB,+B,wBAArBA,GAAqB,qTDdlC,4BAEA,gBACI,eAAU,+BAAoB,OAE9B,kBACI,gBACA,aACI,eAAU,eAAI,OACd,eAAU,kBAAM,OAChB,gBAAU,kBAAM,OAChB,gBAAU,mBAAO,OACrB,OACA,OACA,iBACA,wB,iBAQA,OACJ,OACA,uC,kCAGJ,Q,MA5BiB,oEAeL,gDAUmC,8E,gWEhBxC,KAAMC,GAAN,WAEL,aAAa,UAFR,wD,oCAAMA,K,wBAAAA,GAAoB,oGGTjC,0B,kFDcaU,GAAkB,CAC3B,CACIC,KAAM,UACNC,UAAW,GACXC,YAAa,CAAC,MDVTZ,GAAN,WACH,WACY5H,EACAlC,EACA2K,aAFA,KAAAzI,cACA,KAAAlC,SACA,KAAA2K,WAJT,8CAOS1K,EAA+BC,GACvC,SAAIT,KAAKkL,SAASC,SAGdnL,KAAKyC,YAAYmG,gBACjB5I,KAAKO,OAAOK,SAAS,CAAC,yBACf,GACAZ,KAAKyC,YAAY2I,eACxBpL,KAAKO,OAAOK,SAAS,CAAC,oBACf,SAhBZ,K,uCAAMyJ,IAAqB,iC,0BAArBA,GAAqB,QAArBA,GAAqB,qBAFlB,S,KCaRgB,QAAS,CACLvK,MAAO,EACPkJ,WAAY,KAGpB,CACIe,KAAM,GACNE,YAAa,CAAC,KAAqB,KAAW,MAC9CK,iBAAkB,CAAC,MACnBC,SAAU,CACN,CACIR,KAAM,UACNC,UAAW,IACXK,QAAS,CACLvK,MAAO,EACPkJ,WAAY,KAGpB,CACIe,KAAM,eACNC,UAAW,GACXK,QAAS,CAAEvK,MAAO,GAClBmK,YAAa,CAAC,IACd3J,KAAM,CAAEpB,KAAM,iBAElB,CACI6K,KAAM,WACNC,UAAW,GACXC,YAAa,CAAC,QAUvB,KAAMX,GAAN,yB,qBAAMA,K,qDAAAA,KAAoB,SAHpB,CAAC,IAAakB,SAASV,KACtB,O,8BEpDN,gBACI,kBAAqB,Q,mBAAwC,OAC7D,kBAAwB,Q,gBAA2B,OACvD,Q,4BAFyB,4CACG,6C,uBAE5B,iBAA+C,eAAI,Q,sCAEnD,oBAAmC,uFAC/B,Q,gBACJ,O,wCAFwH,2CACpH,2D,sCAEJ,oBAAmC,uFAC/B,Q,gBACJ,O,wCAF0H,2CACtH,2D,0BAZR,gBACI,gBAAkB,QAAa,OAC/B,uBAIA,uBACA,+BACA,0BAGA,0BAGJ,Q,0CAdmF,kCAAsC,SAAtC,CAAsC,WACnG,qBACK,6BAIA,4BACH,uBAC2E,mCAGC,qCCDjG,IAAMW,GAAN,KAAMA,GAAN,WAIH,WACWhL,EACAgC,aADA,KAAAhC,QACA,KAAAgC,cALJ,KAAAiJ,sBACG,KAAAC,SAAW,IAAI,IAFtB,6CAUC3L,KAAK0L,mBAAqB1L,KAAKS,MAAMK,MAAM8K,QAAO3L,YAAIA,OAAIA,EAAK4L,eAAaC,OAAS,IAVtF,iCAae7L,cACdD,KAAKS,MAAMsL,kBAAkB9L,GAE7B+L,YAAW,kBAAMhM,EAAK2L,SAASpH,KAAKtE,QAhBrC,oCAoBC,OAAOD,KAAKS,MAAMK,MAAM8K,QAAO3L,YAAIA,OAAKA,EAAKgM,YAAchM,EAAKiM,YApBjE,2CAuByBjM,G,UACxB,QAAwB,YAApBD,KAAKS,MAAM0L,OAAsBlM,EAAKmM,OAAsD,QAA9C,EAA+B,QAA/B,EAAwB,QAAxB,EAACpM,KAAKyC,YAAY4J,kBAAM,WAAErH,iBAAK,WAAExC,yBAAa,WAAEsJ,YAGzF9L,KAAKyC,YAAYiE,gBAAgB,CAACE,OAAQ3G,EAAKiE,OA3BzD,2CA8ByBjE,GACxB,OAAID,KAAKsM,qBAAqBrM,GACnB,oBACAA,EAAKmM,MAA4B,YAApBpM,KAAKS,MAAM0L,KACxB,cAEA,kBApCZ,M,oCAAMV,IAAwB,uB,wBAAxBA,GAAwB,8uBDXrC,gBACI,wBAeJ,Q,MAhBmB,6CACG,0C,6wDEYN,QACI,iBAA2B,Q,gBAAiF,OAChH,Q,+CAD+B,2E,0BAFnC,iBACI,iC,gBAGA,6BACI,gBACI,gBAAkB,Q,gBAAsB,OACxC,gBAAmB,Q,qCAAiH,OACxI,OACJ,OACJ,Q,8CATkB,qDAGI,2BAEQ,sCACC,kH,0BAcvC,gC,oCAAwC,8C,sCAjC5C,gBACI,gBACI,gBAAyB,iFAAsE,OAC/F,4BAAiC,mFAAmC,iDAAW,EAAAhL,MAAA,iBAAAA,MAAA,oBAC3E,gBACI,6BACI,gBACI,gBAAkB,Q,kCAAgE,OAClF,iBAAmB,S,qCAAuF,OAC9G,OACJ,OACJ,OACA,2BAWJ,OAEA,kBACI,qBAA4C,gBAAI,OAChD,qBAAyC,+CAASkL,SAAA,UAC9C,S,iBACJ,OACJ,OACJ,OAEA,wCACJ,O,8BA/ByC,gDAEP,2BAEQ,4EACC,+EAIG,iDAgB9B,qFAKQ,oCCvBjB,ICFMY,GCDAC,GFGAC,GGmFAC,GHnFN,KAAMD,GAAN,WAIH,WACWhM,aAAA,KAAAA,QAJF,KAAAkM,eACC,KAAAhB,SAAW,IAAI,IAFtB,iDAQmBrG,EAAYnF,GAC9B,IAAMyM,EAAa5M,KAAK6M,gBAAgBvH,GAClCwH,EAAS9M,KAAK6M,gBAAgB1M,GAEpC,OAAO4M,KAAKC,MADKJ,EAAaE,GAAUF,EAAa,OAXtD,sCAeqB3M,GACpB,IAAIgN,EAAO,EASX,MARsB,SAAlBhN,EAAKiN,SACLD,EAAO,EACkB,UAAlBhN,EAAKiN,SACZD,EAAO,GACkB,SAAlBhN,EAAKiN,WACZD,EAAO,KAEXA,GAAchN,EAAKkN,eACZlN,EAAK6M,OAASG,IAzBtB,iDA4B+BhN,GAC9B,OAAOA,EAAK6M,OAAS7M,EAAKkN,mBA7B3B,M,oCAAMV,IAA8B,a,wBAA9BA,GAA8B,4wBDV3C,yB,sBAAqD,6C,kmEGO9C,KAAMD,GAAN,WAEH,WAAoB/J,EAAkClC,aAAlC,KAAAkC,cAAkC,KAAAlC,SAFnD,8CAISC,EAA+BC,GACvC,OAAOT,KAAKU,WALb,uCAQcF,EAA+BC,GAC5C,OAAOT,KAAKU,WATb,+BAaC,OAAOV,KAAKyC,YAAYmG,iBAExB5I,KAAKO,OAAOK,SAAS,CAAC,kCAfvB,M,oCAAM4L,IAAsB,sB,0BAAtBA,GAAsB,QAAtBA,GAAsB,qBAFnB,S,IDGT,KAAMD,GAAN,yB,oCAAMA,K,wBAAAA,GAAsB,2QGRnC,qBAEA,gBAAyB,wDAA6C,OACtE,gBAA4B,wDAA6C,OACzE,cAAgF,qBAAU,S,siBDyFnF,KAAMG,GAAN,yB,qBAAMA,K,qDAAAA,KAAa,UAbX,CACP,EACA,GACA,KACA,KACA,KACA,GACA,IACH,SA/CQ,CACL,IACA,IACA,IACA,KACA,GACA,KACA,KACA,KACA,KACA,KAGA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KA2BA,M,SAxBA,IAAoB,oVAApB,IACA,EACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IAAoB,4E,kCE9E5B,8LAoBMU,EAAM,CAAC,SACPC,EAAM,WAAc,MAAO,CAAEC,cAAe,MAC5CC,EAAM,CAAC,KACPC,EAA4B,IAAI,IAAe,4BAA6B,CAC9EC,WAAY,OACZC,QAEJ,WACI,MAAO,CACHlI,MAAO,aAIXmI,EAAe,EAMbC,EAAyC,CAC3CC,QAAS,IACTC,YAAa,aAAW,kBAAMC,KAC9BC,OAAMA,GAGJC,EACF,WAEAC,EAEAlJ,GAAMA,UACFhF,KAAKkO,OAASA,EACdlO,KAAKgF,MAAQA,GAQfmJ,EAAkB,IAAI,IAAe,iB,iBAKrCC,E,WACF,WAAYC,GAAgBA,UACxBrO,KAAKqO,gBAAkBA,EAEvBrO,KAAKsO,OAAS,KAEdtO,KAAKuO,MAAQ,mBAAmBZ,IAEhC3N,KAAKwO,UAAY,KAEjBxO,KAAKyO,kBAELzO,KAAK0O,eAAiB,QAEtB1O,KAAK2O,aAEL3O,KAAK4O,aAEL5O,KAAK6O,8BAAgC,aAKrC7O,KAAK8O,UAAY,aAMjB9O,KAAKgG,OAAS,IAAI,I,8DAgCdhG,KAAKwO,YAAcxO,KAAKwO,UAAUO,UAClC/O,KAAKwO,UAAUO,c,2CAiCnB/O,KAAKyO,oB,+BAODzO,KAAK8O,WACL9O,KAAK8O,c,gDAGY,WACjB9O,KAAKgP,SACLhP,KAAKgP,QAAQ9J,SAAQ+J,YACjBA,EAAM/O,KAAOF,EAAKE,KAClB+O,EAAMC,qB,sDAKa,WAGvBlP,KAAKgP,UADoC,OAAnBhP,KAAKwO,WAAsBxO,KAAKwO,UAAUxJ,QAAUhF,KAAKsO,UAE/EtO,KAAKwO,UAAY,KACjBxO,KAAKgP,QAAQ9J,SAAQ+J,YACjBA,EAAMF,QAAU/O,EAAKgF,QAAUiK,EAAMjK,MACjCiK,EAAMF,UACN/O,EAAKwO,UAAYS,S,yCAOzBjP,KAAKyO,gBACLzO,KAAKgG,OAAOzB,KAAK,IAAI0J,EAAejO,KAAKwO,UAAWxO,KAAKsO,W,4CAIzDtO,KAAKgP,SACLhP,KAAKgP,QAAQ9J,SAAQ+J,YAAKA,OAAIA,EAAMC,qB,iCAOjClK,GACPhF,KAAKgF,MAAQA,EACbhF,KAAKqO,gBAAgBc,iB,uCAORC,GACbpP,KAAK6O,8BAAgCO,I,wCAOvBA,GACdpP,KAAK8O,UAAYM,I,uCAMJC,GACbrP,KAAKsP,SAAWD,EAChBrP,KAAKqO,gBAAgBc,iB,2BAzIZ,OAAOnP,KAAKuO,O,aAChBvJ,GACLhF,KAAKuO,MAAQvJ,EACbhF,KAAKuP,4B,oCAIL,OAAOvP,KAAK0O,gB,aAEEc,GACdxP,KAAK0O,eAAuB,WAANc,EAAiB,SAAW,QAClDxP,KAAKyP,wB,4BAQK,OAAOzP,KAAKsO,Q,aAChBoB,GACF1P,KAAKsO,SAAWoB,IAEhB1P,KAAKsO,OAASoB,EACd1P,KAAK2P,gCACL3P,KAAK4P,+B,+BAYI,OAAO5P,KAAKwO,W,aAChB7C,GACT3L,KAAKwO,UAAY7C,EACjB3L,KAAKgF,MAAQ2G,EAAWA,EAAS3G,MAAQ,KACzChF,KAAK4P,8B,+BAGQ,OAAO5P,KAAK2O,W,aAChB3J,GACThF,KAAK2O,UAAY,SAAAkB,EAAA,CAAsB7K,GACvChF,KAAKyP,wB,+BAGQ,OAAOzP,KAAK4O,W,aAChB5J,GACThF,KAAK4O,UAAY,SAAAiB,EAAA,CAAsB7K,GACvChF,KAAKyP,0B,YAuFbrB,EAAmB0B,UAAO,SAAoC1P,GAAK,OAAO,IAAKA,GAAKgO,GAAoB,KAAyB,OACjIA,EAAmB2B,UAAO,KAAyB,CAAErL,KAAM0J,EAAoB4B,OAAQ,CAAE9P,KAAM,OAAQ+P,cAAe,gBAAiBjL,MAAO,QAAS2G,SAAU,WAAY2D,SAAU,WAAYY,SAAU,WAAY1K,MAAO,SAAW2K,QAAS,CAAEnK,OAAQ,Y,sBAoCxP+H,E,8FAAsBK,G,OAE5BL,EAAc+B,UAAO,SAA+B1P,GAAK,OAAOgQ,EAA2BhQ,GAAK2N,IAChGA,EAAcgC,UAAO,KAAyB,CAAErL,KAAMqJ,EAAesC,UAAW,CAAC,CAAC,oBAAqBC,eAAgB,SAAsCC,EAAIC,EAAKC,GAG9J,IAAIC,EAH+K,EAALH,GAC9K,KAAsBE,EAAUE,GAAeA,GACxC,EAALJ,GAEF,KAAsBG,EAAK,UAA0BF,EAAIxB,QAAU0B,IAClEE,UAAW,CAAC,OAAQ,aAAc,EAAG,mBAAoBC,SAAU,CAAC,iBAAkBC,SAAU,CAAC,KAA0B,CACxHlD,EACA,CAAEC,QAASM,EAAiBL,YAAaC,KACzC,Q,KAINqC,EAA2C,KAA6BrC,GA4BxEgD,EAA2B,YAAmB,aANhD,WAAYC,GAAYA,UACpBhR,KAAKgR,YAAcA,M,iBAUrBC,E,8BACF,WAAYC,EAAYC,EAAY9C,EAAiB+C,EAAeC,EAAkBC,EAAgBC,EAAmBC,GAASA,wBAC9HC,cAAMN,IACD9C,gBAAkBA,EACvBrO,EAAKoR,cAAgBA,EACrBpR,EAAKqR,iBAAmBA,EACxBrR,EAAKsR,eAAiBA,EACtBtR,EAAKuR,kBAAoBA,EACzBvR,EAAK0R,UAAY,gBAAe/D,EAEhC3N,EAAKkE,GAAKlE,EAAK0R,UAMf1R,EAAKgG,OAAS,IAAI,IAElBhG,EAAK2R,YAEL3R,EAAKsO,OAAS,KAEdtO,EAAK4R,+BAAiC,aAGtC5R,EAAKkR,WAAaA,EACdM,IACAxR,EAAKwR,SAAW,YAAqBA,EAAU,IAEnDxR,EAAK4R,+BACDP,EAAiBQ,QAAO,SAAC3N,EAAIhE,GACrBgE,IAAOlE,EAAKkE,IAAMhE,IAASF,EAAKE,OAChCF,EAAK+O,eA/B6GyC,E,wCAuG5HM,GACF9R,KAAKoR,cAAcW,SAAS/R,KAAKgS,cAAe,WAAYF,K,sCAU5D9R,KAAKqO,gBAAgBc,iB,iCAGjBnP,KAAKkR,aAELlR,KAAK+O,QAAU/O,KAAKkR,WAAWlM,QAAUhF,KAAKsO,OAE9CtO,KAAKE,KAAOF,KAAKkR,WAAWhR,Q,wCAGnB,WACbF,KAAKoR,cACAa,QAAQjS,KAAKgR,aAAYA,GACzB5M,WAAU8N,aACNA,GAAelS,EAAKkR,YACrBlR,EAAKkR,WAAWiB,c,oCAKxBnS,KAAKoR,cAAcgB,eAAepS,KAAKgR,aACvChR,KAAK4R,mC,yCAIL5R,KAAKgG,OAAOzB,KAAK,IAAI0J,EAAejO,KAAMA,KAAKsO,W,0CAG/C,OAAOtO,KAAKqS,eAAiBrS,KAAKsP,W,oCAExBgD,GAQVA,EAAMC,oB,qCAMKD,GAIXA,EAAMC,kBACN,IAAMC,EAAoBxS,KAAKkR,YAAclR,KAAKgF,QAAUhF,KAAKkR,WAAWlM,MAC5EhF,KAAK+O,WACL/O,KAAKyS,mBACDzS,KAAKkR,aACLlR,KAAKkR,WAAWrC,8BAA8B7O,KAAKgF,OAC/CwN,GACAxS,KAAKkR,WAAWuB,sB,mCAKfzN,GACLhF,KAAK2O,YAAc3J,IACnBhF,KAAK2O,UAAY3J,EACjBhF,KAAKqO,gBAAgBc,kB,8BA7Ib,OAAOnP,KAAK2R,U,aAChB3M,GACR,IAAM0N,EAAkB,SAAA7C,EAAA,CAAsB7K,GAC1ChF,KAAK2R,WAAae,IAClB1S,KAAK2R,SAAWe,EACZA,GAAmB1S,KAAKkR,YAAclR,KAAKkR,WAAWlM,QAAUhF,KAAKgF,MACrEhF,KAAKkR,WAAWvF,SAAW3L,MAErB0S,GAAmB1S,KAAKkR,YAAclR,KAAKkR,WAAWlM,QAAUhF,KAAKgF,QAG3EhF,KAAKkR,WAAWvF,SAAW,MAE3B+G,GAEA1S,KAAKqR,iBAAiBsB,OAAO3S,KAAKkE,GAAIlE,KAAKE,MAE/CF,KAAKqO,gBAAgBc,kB,4BAIf,OAAOnP,KAAKsO,Q,aAChBtJ,GACFhF,KAAKsO,SAAWtJ,IAChBhF,KAAKsO,OAAStJ,EACU,OAApBhF,KAAKkR,aACAlR,KAAK+O,UAEN/O,KAAK+O,QAAU/O,KAAKkR,WAAWlM,QAAUA,GAEzChF,KAAK+O,UACL/O,KAAKkR,WAAWvF,SAAW3L,U,oCAOvC,OAAOA,KAAK0O,gBAAmB1O,KAAKkR,YAAclR,KAAKkR,WAAWjB,eAAkB,S,aAEtEjL,GACdhF,KAAK0O,eAAiB1J,I,+BAItB,OAAOhF,KAAK2O,WAAkC,OAApB3O,KAAKkR,YAAuBlR,KAAKkR,WAAW5B,U,aAE7DtK,GACThF,KAAK4S,aAAa,SAAA/C,EAAA,CAAsB7K,M,+BAIxC,OAAOhF,KAAK4O,WAAc5O,KAAKkR,YAAclR,KAAKkR,WAAWhB,U,aAEpDlL,GACThF,KAAK4O,UAAY,SAAAiB,EAAA,CAAsB7K,K,4BAIvC,OAAOhF,KAAK6S,QACP7S,KAAKkR,YAAclR,KAAKkR,WAAW1L,OACpCxF,KAAKuR,mBAAqBvR,KAAKuR,kBAAkB/L,OAAS,U,aAExDkK,GAAY1P,KAAK6S,OAASnD,I,8BAEpB,OAAU1P,KAAKkE,IAAMlE,KAAK0R,WAAnB,a,GAtGOX,G,OAsLlCE,EAAoBnB,UAAO,SAAqC1P,GAAK,OAAO,IAAKA,GAAK6Q,GAAqB,KAAyB7C,GAAqB,KAAyB,KAAoB,KAAyB,KAA2B,KAAyB,KAAsB,KAAyB,KAAmC,KAAyBxO,QAAS,aAAqC,KAAyBA,UACrcqR,EAAoBlB,UAAO,KAAyB,CAAErL,KAAMuM,EAAqB6B,UAAW,SAAmCvC,EAAIC,GAG3H,IAAIE,EAHuI,EAALH,GACtI,KAAmBnD,GAAIA,GAChB,EAALmD,GAEF,KAAsBG,EAAK,UAA0BF,EAAIwB,cAAgBtB,EAAGqC,QAC3E/C,OAAQ,CAAE9L,GAAI,KAAM6K,QAAS,UAAW/J,MAAO,QAASiL,cAAe,gBAAiBX,SAAU,WAAYY,SAAU,WAAY1K,MAAO,QAAStF,KAAM,OAAQ8S,UAAW,CAAC,aAAc,aAAcC,eAAgB,CAAC,kBAAmB,kBAAmBC,gBAAiB,CAAC,mBAAoB,oBAAsB/C,QAAS,CAAEnK,OAAQ,UAAY8K,SAAU,CAAC,Q,sBA8D1WH,E,8BACF,WAAYO,EAAYC,EAAYgC,EAAgBC,EAAcC,EAAiBC,EAAeC,EAAkB/B,GAASA,6BACnHN,EAAYC,EAAYgC,EAAgBC,EAAcC,EAAiBC,EAAeC,EAAkB/B,G,UAFzFP,G,OAK7BN,EAAeb,UAAO,SAAgC1P,GAAK,OAAO,IAAKA,GAAKuQ,GAAgB,KAAyBxC,EAAiB,GAAI,KAAyB,KAAoB,KAAyB,KAA2B,KAAyB,KAAsB,KAAyB,KAAmC,KAAyB,IAAuB,GAAI,KAAyBX,EAA2B,GAAI,KAAyB,cAC3dmD,EAAe6C,UAAO,KAAyB,CAAE9O,KAAMiM,EAAgBN,UAAW,CAAC,CAAC,qBAAsBO,UAAW,CAAC,EAAG,oBAAqB6C,SAAU,GAAIC,aAAc,SAAqCnD,EAAIC,GAAgB,EAALD,GACtN,KAAkB,SAAS,WAAqD,OAAOC,EAAIwB,cAAc2B,cAAcC,WAChH,EAALrD,IACF,KAAmB,YAAa,EAAhC,CAAmC,KAAMC,EAAItM,GAA7C,CAAiD,aAAc,KAA/D,CAAqE,kBAAmB,KAAxF,CAA8F,mBAAoB,MAClH,KAAmB,oBAAqBsM,EAAIzB,QAA5C,CAAqD,qBAAsByB,EAAIlB,SAA/E,CAAyF,0BAAkD,mBAAvBkB,EAAIc,eAAxH,CAA6J,cAA6B,YAAdd,EAAIhL,MAAhL,CAAqM,aAA4B,WAAdgL,EAAIhL,MAAvN,CAA2O,WAA0B,SAAdgL,EAAIhL,SAC1PwK,OAAQ,CAAEqC,cAAe,gBAAiBb,SAAU,YAAcX,SAAU,CAAC,kBAAmBC,SAAU,CAAC,MAAoC+C,mBAAoBtG,EAAKuG,MAAO,GAAIC,KAAM,GAAIC,OAAQ,CAAC,CAAC,EAAG,mBAAoB,CAAC,QAAS,IAAK,CAAC,EAAG,uBAAwB,CAAC,EAAG,0BAA2B,CAAC,EAAG,0BAA2B,CAAC,OAAQ,QAAS,EAAG,kBAAmB,sBAAuB,EAAG,KAAM,UAAW,WAAY,WAAY,WAAY,SAAU,SAAU,CAAC,QAAS,IAAK,CAAC,aAAc,GAAI,EAAG,mBAAoB,sBAAuB,EAAG,mBAAoB,oBAAqB,oBAAqB,kBAAmB,sBAAuB,CAAC,EAAG,qBAAsB,+BAAgC,CAAC,EAAG,2BAA4B,CAAC,EAAG,UAAW,SAAUC,SAAU,SAAiC1D,EAAIC,GAoBlzB,GApBk0B,EAALD,IAC3zB,OACA,KAAsB,EAAG,QAAS,EAAG,GACrC,KAAsB,EAAG,MAAO,GAChC,KAAiB,EAAG,MAAO,GAC3B,KAAiB,EAAG,MAAO,GAC3B,KAAsB,EAAG,QAAS,EAAG,GACrC,KAAkB,UAAU,SAAyD2D,GAAU,OAAO1D,EAAI2D,eAAeD,KAAzH,CAAqI,SAAS,SAAwDA,GAAU,OAAO1D,EAAI4D,cAAcF,MACzO,OACA,KAAsB,EAAG,MAAO,GAChC,KAAiB,EAAG,MAAO,GAC3B,OACA,OACA,KAAsB,EAAG,MAAO,GAChC,KAAsB,GAAI,OAAQ,IAClC,KAAc,GAAI,QAClB,OACA,KAAoB,IACpB,OACA,QACO,EAAL3D,EAAQ,CACV,IAAM8D,EAAM,KAAmB,GAC/B,KAAmB,MAAO7D,EAAI8D,SAC9B,KAAiB,GACjB,KAAkB,KAAM9D,EAAI8D,QAA5B,CAAqC,UAAW9D,EAAIzB,QAApD,CAA6D,WAAYyB,EAAIlB,SAA7E,CAAuF,WAAYkB,EAAIgB,SAAvG,CAAiH,WAAYhB,EAAIN,UACjI,KAAmB,OAAQM,EAAItQ,KAA/B,CAAqC,QAASsQ,EAAIxL,MAAlD,CAAyD,aAAcwL,EAAIwC,UAA3E,CAAsF,kBAAmBxC,EAAIyC,eAA7G,CAA6H,mBAAoBzC,EAAI0C,iBACrJ,KAAiB,GACjB,KAAkB,mBAAoBmB,EAAtC,CAA2C,oBAAqB7D,EAAI+D,oBAApE,CAAyF,qBAAoB,EAA7G,CAAoH,kBAAmB,GAAvI,CAA2I,qBAAsB,KAAuB,GAAIlH,IAC5L,KAAiB,GACjB,KAAmB,yBAA+C,UAArBmD,EAAIP,iBAChDuE,WAAY,CAAC,KAAmBC,OAAQ,CAAC,u7EAAw7EC,cAAe,EAAGC,gBAAiB,I,sBAoEvgFC,E,+BAENA,EAAeC,UAAO,KAAwB,CAAEnQ,KAAMkQ,IACtDA,EAAeE,UAAO,KAAwB,CAAEpH,QAAS,SAAgCtN,GAAK,OAAO,IAAKA,GAAKwU,IAAsBG,QAAS,CAAC,CAAC,IAAiB,KAAkB,O,sGClqB5K,iBAAMC,EAAN,WAEH,WAAoB9K,aAAA,KAAAA,OAFjB,sCAIQP,GACP,OAAO3J,KAAKkK,KAAKvJ,IAAIqU,EAAMC,SAAUtL,KALtC,0BAQQzF,GACP,OAAOlE,KAAKkK,KAAKvJ,IAAVX,UAAiBgV,EAAMC,SAAvBjV,YAAmCkE,MAT3C,6BAYWyF,GACV,OAAO3J,KAAKkK,KAAKgL,KAAKF,EAAMC,SAAUtL,KAbvC,6BAgBWzF,EAAYyF,GACtB,OAAO3J,KAAKkK,KAAKiL,IAAVnV,UAAiBgV,EAAMC,SAAvBjV,YAAmCkE,GAAMyF,KAjBjD,6BAoBWyL,GACV,OAAOpV,KAAKkK,KAALlK,iBAAoBgV,EAAMC,SAA1BjV,YAAsCoV,MArB9C,6BAyBC,OAAOpV,KAAKkK,KAAKgL,KAAQF,EAAMC,SAAT,aAzBvB,K,OACI,EAAAA,SAAW,e,sCADTD,GAAK,Y,yBAALA,EAAK,QAALA,EAAK,qBAFF,S,EAET,I,oFCCA,iBAAMK,EAAN,wB,8BAAMA,I,oDAAAA,M,EAAN,I,wECLMC,E,wBAAN,IAAMA,EAAN,8EACOC,GACN,OAAKA,EAGDA,EAAIC,SAAS,WACN,6DCVZ,SAA2BD,GAC9B,OAAOA,GAIA,YAAcA,KACjBA,EAAME,OAAOC,SAASC,SAAW,KAAOF,OAAOC,SAASE,MAGrD,6CADQ,IAAIC,IAAIN,GAAKO,QANjB,KAFR,CDY8BP,GALlB,SAHZ,M,oCAAMD,I,uCAAAA,EAAW,U,sCENxB,ggBAkCA,SAASS,EAA8BxF,EAAIC,GAAgB,EAALD,GAClD,KAAoB,GAExB,IAAMnD,EAAM,CAAC,KACb,SAAS4I,EAAkCzF,EAAIC,IAC/C,IAAMnD,EAAM,SAAU4I,GAAM,MAAO,CAAEC,kBAAmBD,IAClD1I,EAAM,SAAU0I,EAAIE,GAAM,MAAO,CAAEnR,MAAOiR,EAAItM,OAAQwM,IACtDC,EAAM,CAAC,kBACPC,EAAM,CAAC,aACb,SAASC,EAAuD/F,EAAIC,IACpE,SAAS+F,EAAyChG,EAAIC,GAEpD,GAFoE,EAALD,GAC7D,KAAkB,EAAG+F,EAAwD,EAAG,EAAG,cAAe,GAC3F,EAAL/F,EAAQ,CACV,IAAMiG,EAAS,OAAuBC,UACtC,KAAkB,kBAAmBD,EAAOE,gBAEhD,SAASC,EAAyCpG,EAAIC,GAEpD,GAFoE,EAALD,GAC7D,KAAc,GACP,EAALA,EAAQ,CACV,IAAMiG,EAAS,OAAuBC,UACtC,KAAyBD,EAAOI,YAEpC,SAASC,EAA2BtG,EAAIC,GAAO,GAAS,EAALD,EAAQ,CACvD,IAAMuG,EAAO,OACb,KAAsB,EAAG,MAAO,GAChC,KAAkB,SAAS,WAA6D,KAAqBA,GAAO,IAAMN,EAAShG,EAAIiG,UAAiBM,EAAOvG,EAAI/F,MAAauM,EAAU,OAA8B3C,EAAM,KAAmB,GAAI,OAAO2C,EAAQC,aAAaT,EAAQnC,EAAK0C,MAC9R,KAAsB,EAAG,MAAO,GAChC,KAAkB,EAAGR,EAA0C,EAAG,EAAG,cAAe,GACpF,KAAkB,EAAGI,EAA0C,EAAG,EAAG,cAAe,GACpF,OACA,OACF,GAAS,EAALpG,EAAQ,CACV,IAAMiG,EAAShG,EAAIiG,UACbM,EAAOvG,EAAI/F,MACXyM,EAAS,OACf,KAAmB,uBAAwBA,EAAOC,eAAiBJ,GACnE,KAAkB,KAAMG,EAAOE,eAAeL,GAA9C,CAAqD,WAAYP,EAAOlH,SAAxE,CAAkF,oBAAqBkH,EAAOlH,UAAY4H,EAAO7E,eACjI,KAAmB,WAAY6E,EAAOG,aAAab,EAAQO,GAA3D,CAAkE,gBAAiBA,EAAO,EAA1F,CAA6F,eAAgBG,EAAOI,MAAMxL,OAA1H,CAAkI,gBAAiBoL,EAAOK,iBAAiBR,GAA3K,CAAkL,gBAAiBG,EAAOC,eAAiBJ,EAA3N,CAAiO,aAAcP,EAAOxD,WAAa,KAAnQ,CAAyQ,mBAAoBwD,EAAOxD,WAAawD,EAAOvD,eAAiBuD,EAAOvD,eAAiB,MACjW,KAAiB,GACjB,KAAkB,OAAQuD,EAAOE,eACjC,KAAiB,GACjB,KAAkB,QAASF,EAAOE,gBAEtC,SAASc,EAAoCjH,EAAIC,GAAO,GAAS,EAALD,EAAQ,CAChE,IAAMkH,EAAO,OACb,KAAsB,EAAG,eAAgB,IACzC,KAAkB,eAAe,WAAyJ,OAApE,KAAqBA,GAAuB,OAAuCC,gCAAzM,CAA2O,gBAAgB,SAAkFxD,GAA8E,OAApE,KAAqBuD,GAAuB,OAAuCE,yBAAyBzD,MACnc,OACF,GAAS,EAAL3D,EAAQ,CACV,IAAMqH,EAAUpH,EAAIiG,UACdoB,EAAQrH,EAAI/F,MACZqN,EAAS,OACf,KAAmB,sBAAuBA,EAAOX,eAAiBU,GAClE,KAAkB,KAAMC,EAAOP,iBAAiBM,GAAhD,CAAwD,UAAWD,EAAQG,QAA3E,CAAoF,WAAYH,EAAQI,SAAxG,CAAkH,SAAUJ,EAAQ9B,OAApI,CAA4I,oBAAqBgC,EAAO5B,mBACxK,KAAmB,kBAAmB4B,EAAOV,eAAeS,KAEhE,IAAMI,EAAM,CAAC,oBACPC,EAAM,CAAC,WACPC,EAAM,CAAC,iBACPC,EAAM,CAAC,qBACPC,EAAM,CAAC,kBAAmB,IAC1BC,EAA0B,IAAI,IAAe,sBAAuB,CACtE7K,WAAY,OACZC,QAMJ,WAKI,OAJgB6K,YAAOA,MAAK,CACxBC,KAAMD,GAAWA,EAAQE,YAAc,GAAK,KAAO,IACnDC,MAAOH,GAAWA,EAAQI,aAAe,GAAK,KAAO,S,iBAQvDC,E,WACF,WAAY5H,EAAa6H,EAASC,EAAmBxH,GAAeA,UAChEtR,KAAKgR,YAAcA,EACnBhR,KAAK6Y,QAAUA,EACf7Y,KAAK8Y,kBAAoBA,EACzB9Y,KAAKsR,eAAiBA,E,iDAOXiH,GAAQA,WACnBvY,KAAK+Y,OACgC,oBAA1BC,sBACPhZ,KAAK6Y,QAAQI,mBAAkB,WAC3BD,uBAAsB,kBAAMhZ,EAAKkZ,WAAWX,SAIhDvY,KAAKkZ,WAAWX,K,6BAKpBvY,KAAKgR,YAAY2C,cAAcpO,MAAM4T,WAAa,Y,6BAIlDnZ,KAAKgR,YAAY2C,cAAcpO,MAAM4T,WAAa,W,iCAM3CZ,GACP,IAAMa,EAAYpZ,KAAK8Y,kBAAkBP,GACnCc,EAASrZ,KAAKgR,YAAY2C,cAChC0F,EAAO9T,MAAMiT,KAAOY,EAAUZ,KAC9Ba,EAAO9T,MAAMmT,MAAQU,EAAUV,U,YAGvCE,EAAU9I,UAAO,SAA2B1P,GAAK,OAAO,IAAKA,GAAKwY,GAAW,KAAyB,KAAoB,KAAyB,KAAgB,KAAyBN,GAA0B,KAAyB,IAAuB,KACtQM,EAAU7I,UAAO,KAAyB,CAAErL,KAAMkU,EAAWvI,UAAW,CAAC,CAAC,gBAAiBO,UAAW,CAAC,EAAG,eAAgB6C,SAAU,EAAGC,aAAc,SAAgCnD,EAAIC,GAAgB,EAALD,GAC5L,KAAmB,0BAAkD,mBAAvBC,EAAIc,mB,KAuCpDgI,EAAkB,IAAI,IAAe,iB,iBAErCC,EACF,WAAYtF,GAASA,UACjBjU,KAAKiU,SAAWA,G,OAGxBsF,EAAczJ,UAAO,SAA+B1P,GAAK,OAAO,IAAKA,GAAKmZ,GAAe,KAAyB,OAClHA,EAAcxJ,UAAO,KAAyB,CAAErL,KAAM6U,EAAelJ,UAAW,CAAC,CAAC,GAAI,gBAAiB,KAAMS,SAAU,CAAC,KAA0B,CAAC,CAAEjD,QAASyL,EAAiBxL,YAAayL,Q,KAwBtLC,GAAgB,IAAI,IAAe,e,kBAEnCC,E,8FAAoB,K,OAE1BA,EAAY3J,UAAO,SAA6B1P,GAAK,OAAOsZ,GAAyBtZ,GAAKqZ,IAC1FA,EAAY1J,UAAO,KAAyB,CAAErL,KAAM+U,EAAapJ,UAAW,CAAC,CAAC,GAAI,gBAAiB,IAAK,CAAC,GAAI,cAAe,KAAMS,SAAU,CAAC,KAA0B,CAAC,CAAEjD,QAAS2L,GAAe1L,YAAa2L,KAAiB,Q,KAC1NC,GAAyC,KAA6BD,IAoBtEE,GAAmB,a,0BAKnBC,GAAgB,IAAI,IAAe,iB,kBACnCC,E,8BACF,WAAYC,EAKZC,GAAiBA,wBACbtI,gBACKqI,kBAAoBA,EACzB9Z,EAAK+Z,iBAAmBA,EAExB/Z,EAAK4W,UAAY,GAEjB5W,EAAKga,eAAiB,KAEtBha,EAAKia,cAAgB,IAAI,IAKzBja,EAAKgY,SAAW,KAKhBhY,EAAK8V,OAAS,KAId9V,EAAKka,YAvBQH,E,8CAgCLI,IACJA,EAAQC,eAAe,cAAgBD,EAAQC,eAAe,cAC9Dpa,KAAKia,cAAcvW,S,oCAIvB1D,KAAKia,cAAcI,a,iCAGnBra,KAAKga,eAAiB,IAAI,IAAeha,KAAKsa,kBAAoBta,KAAKua,iBAAkBva,KAAK8Z,qB,6CAQ3E9U,GAKfA,IACAhF,KAAKwa,eAAiBxV,K,oCA7BR,OAAOhF,KAAKwa,gB,aAChBxV,GAAShF,KAAKya,uBAAuBzV,K,8BAGnD,OAAOhF,KAAKga,mB,GApCCL,I,OAiErBE,EAAO/J,UAAO,SAAwB1P,GAAK,OAAO,IAAKA,GAAKyZ,GAAQ,KAAyB,KAA0B,KAAyBD,GAAe,KAC/JC,EAAOrG,UAAO,KAAyB,CAAE9O,KAAMmV,EAAQxJ,UAAW,CAAC,CAAC,YAAaC,eAAgB,SAA+BC,EAAIC,EAAKC,GAIjI,IAAIC,EAJkJ,EAALH,IACjJ,KAAsBE,EAAU+I,IAAcA,GAC9C,KAA4B/I,EAAU6I,GAAgBA,EAAO,MACtD,EAAL/I,IAEF,KAAsBG,EAAK,UAA0BF,EAAIkG,cAAgBhG,EAAGqC,OAC5E,KAAsBrC,EAAK,UAA0BF,EAAI8J,iBAAmB5J,EAAGqC,SAC9ED,UAAW,SAAsBvC,EAAIC,GAGtC,IAAIE,EAHkD,EAALH,GACjD,KAAyB,QAClB,EAALA,GAEF,KAAsBG,EAAK,UAA0BF,EAAI+J,iBAAmB7J,EAAGqC,QAC9E/C,OAAQ,CAAEV,SAAU,WAAYsH,UAAW,CAAC,QAAS,aAAc5D,UAAW,CAAC,aAAc,aAAcC,eAAgB,CAAC,kBAAmB,mBAAqBpC,SAAU,CAAC,UAAWC,SAAU,CAAC,KAAmC,MAA8B+C,mBAAoBzG,EAAK0G,MAAO,EAAGC,KAAM,EAAGE,SAAU,SAAyB1D,EAAIC,GAAgB,EAALD,IACrW,OACA,KAAkB,EAAGwF,EAA+B,EAAG,EAAG,iBACzDrB,cAAe,I,KA4DlBgG,GAAoB,CAEtBC,aAAc,YAAQ,eAAgB,CAElC,YAAM,wDAAyD,YAAM,CAAEC,UAAW,UAKlF,YAAM,OAAQ,YAAM,CAAEA,UAAW,2BAA4BC,UAAW,SACxE,YAAM,QAAS,YAAM,CAAED,UAAW,0BAA2BC,UAAW,SACxE,YAAW,yDAA0D,YAAQ,yDAC7E,YAAW,6BAA8B,CACrC,YAAM,CAAED,UAAW,6BACnB,YAAQ,0DAEZ,YAAW,8BAA+B,CACtC,YAAM,CAAEA,UAAW,4BACnB,YAAQ,6D,kBAgBdE,E,8BACF,WAAYC,EAA0BC,EAAkBC,EAKxDC,GAAUA,wBACNzJ,cAAMsJ,EAA0BC,EAAkBE,IAC7CD,MAAQA,EAEbjb,EAAKmb,cAAgB,IAAaC,MAElCpb,EAAKqb,YAAc,IAAaD,MAN1BF,E,6CASA,WACNzJ,6CACAzR,KAAKmb,cAAgBnb,KAAKib,MAAMK,iBAC3Bpa,KAAK,YAAUlB,KAAKib,MAAMM,kBAAkBvb,KAAKib,MAAMO,aACvDpX,WAAWqX,YACRA,IAAgBzb,EAAK0b,eACrB1b,EAAK2b,OAAO3b,EAAKib,MAAMW,aAG/B5b,KAAKqb,YAAcrb,KAAKib,MAAMY,oBAAoBzX,WAAU,WACxDpE,EAAK8b,c,oCAKTrK,gDACAzR,KAAKmb,cAAcY,cACnB/b,KAAKqb,YAAYU,kB,GAhCM,K,OAmC/BjB,EAAiBhL,UAAO,SAAkC1P,GAAK,OAAO,IAAKA,GAAK0a,GAAkB,KAAyB,KAAkC,KAAyB,KAA0B,KAAyB,aAAW,kBAAMkB,OAAc,KAAyB,OACjSlB,EAAiB/K,UAAO,KAAyB,CAAErL,KAAMoW,EAAkBzK,UAAW,CAAC,CAAC,GAAI,iBAAkB,KAAMS,SAAU,CAAC,Q,uBAuBzHmL,E,WACF,WAAYjL,EAAakL,EAAMC,GAAkBA,qBAC7Cnc,KAAKgR,YAAcA,EACnBhR,KAAKkc,KAAOA,EAEZlc,KAAKoc,uBAAyB,IAAahB,MAE3Cpb,KAAKqc,sBAAwB,IAAI,IAEjCrc,KAAKsc,aAAe,IAAI,IAExBtc,KAAKsb,iBAAmB,IAAI,IAE5Btb,KAAK6b,oBAAsB,IAAI,IAE/B7b,KAAKuc,YAAc,IAAI,QAIvBvc,KAAKkW,kBAAoB,QACrBgG,IACAlc,KAAKoc,uBAAyBF,EAAKlW,OAAO5B,WAAWoY,YACjDxc,EAAKyc,+BAA+BD,GACpCL,EAAkBhN,mBAK1BnP,KAAKqc,sBAAsBnb,KAAK,aAAqB,SAACwb,EAAGC,GAAJ,OAC1CD,EAAEE,YAAcD,EAAEC,WAAaF,EAAEG,UAAYF,EAAEE,YACtDzY,WAAUkO,YAENtS,EAAKub,kBAAkBjJ,EAAMuK,UAAY7c,EAAKub,kBAAkBvb,EAAKwb,YACrExb,EAAKuc,YAAYhY,OAEjBvE,EAAKub,kBAAkBjJ,EAAMsK,aAAe5c,EAAKub,kBAAkBvb,EAAKwb,YACxExb,EAAK6b,oBAAoBtX,U,6CAcX,UAAlBvE,KAAKwb,WAAwC,MAAfxb,KAAK8V,SACnC9V,KAAKwb,UAAYxb,KAAK8c,2BAA2B9c,KAAK8V,W,oCAI1D9V,KAAKoc,uBAAuBL,cAC5B/b,KAAKqc,sBAAsBhC,a,6CAER/H,GACnB,IAAMmJ,EAAczb,KAAKub,kBAAkBjJ,EAAMuK,SACjD7c,KAAKsb,iBAAiB/W,KAAKkX,GACvBA,GACAzb,KAAKsc,aAAa/X,KAAKvE,KAAKgR,YAAY2C,cAAcoJ,gB,4CAK1D,OAAO/c,KAAKkc,MAA4B,QAApBlc,KAAKkc,KAAKlX,MAAkB,MAAQ,Q,wCAG1CgT,GACd,MAAmB,UAAZA,GACS,sBAAZA,GACY,uBAAZA,I,uDAGwDgF,IAAjCR,EAAiCQ,uDAA3Bhd,KAAKgd,sBAElChd,KAAKwb,UADLxb,KAAKid,eAAiB,EACE,OAAPT,EAAe,OAAS,QAEpCxc,KAAKid,eAAiB,EACH,OAAPT,EAAe,QAAU,OAGzB,W,iDAOE1G,GACvB,IAAM0G,EAAMxc,KAAKgd,sBACjB,MAAY,OAAPR,GAAgB1G,GAAU,GAAc,OAAP0G,GAAgB1G,EAAS,EACpD,qBAEJ,wB,6BAvDEkC,GACThY,KAAKid,eAAiBjF,EACtBhY,KAAKyc,qC,YAwDbR,EAAgBnM,UAAO,SAAiC1P,GAAK,OAAO,IAAKA,GAAK6b,GAAiB,KAAyB,KAAoB,KAAyB,IAAuB,GAAI,KAAyB,OACzNA,EAAgBlM,UAAO,KAAyB,CAAErL,KAAMuX,EAAiBjM,OAAQ,CAAEkG,kBAAmB,oBAAqB8B,SAAU,WAAY4D,SAAU,CAAC,UAAW,YAAa9F,OAAQ,UAAY3F,QAAS,CAAEmM,aAAc,eAAgBhB,iBAAkB,mBAAoBO,oBAAqB,sBAAuBU,YAAa,iB,uBA0C1UP,E,8BACF,WAAY7K,EAAYqL,EAAKL,GAAkBA,6BACrChL,EAAYqL,EAAKL,G,UAFNF,I,OAKzBD,EAAWlM,UAAO,SAA4B1P,GAAK,OAAO,IAAKA,GAAK4b,GAAY,KAAyB,KAAoB,KAAyB,IAAuB,GAAI,KAAyB,OAC1MA,EAAWxI,UAAO,KAAyB,CAAE9O,KAAMsX,EAAY3L,UAAW,CAAC,CAAC,iBAAkByC,UAAW,SAA0BvC,EAAIC,GAG/H,IAAIE,EAH2I,EAALH,GAC1I,KAAmB,QACZ,EAALA,GAEF,KAAsBG,EAAK,UAA0BF,EAAI0M,YAAcxM,EAAGqC,QACzEnC,UAAW,CAAC,EAAG,gBAAiBE,SAAU,CAAC,MAAoCgD,MAAO,EAAGC,KAAM,EAAGC,OAAQ,CAAC,CAAC,EAAG,wBAAyB,CAAC,UAAW,IAAK,CAAC,iBAAkB,KAAMC,SAAU,SAA6B1D,EAAIC,GAAgB,EAALD,IACzO,KAAsB,EAAG,MAAO,EAAG,GACnC,KAAkB,uBAAuB,SAAyE2D,GAAU,OAAO1D,EAAI2M,uBAAuBjJ,KAA9J,CAA0K,sBAAsB,SAAwEA,GAAU,OAAO1D,EAAI6L,sBAAsB3Y,KAAKwQ,MACxT,KAAkB,EAAG8B,EAAmC,EAAG,EAAG,cAAe,GAC7E,QACO,EAALzF,GACF,KAAkB,gBAAiB,KAAuB,EAAGhD,EAAKiD,EAAIgL,UAAW,KAAuB,EAAGnO,EAAKmD,EAAI0F,sBACnH1B,WAAY,CAACsG,IAAmBrG,OAAQ,CAAC,0HAA2HC,cAAe,EAAGpT,KAAM,CAAE8b,UAAW,CAAC1C,GAAkBC,iB,KAsC/N0C,GAAkB,IAAI,IAAe,mBAUvCC,GAAS,EAEPC,G,wBASAC,GAAwB,YAAW,aAJrC,WAAYxM,GAAYA,UACpBhR,KAAKgR,YAAcA,KAGwD,W,kBAK7EyM,E,8BACF,WAAYtM,EAAYuM,EAAoBC,EAAerM,GAAeA,wBACtEG,cAAMN,IACDuM,mBAAqBA,EAC1B1d,EAAKsR,eAAiBA,EAEtBtR,EAAKsX,MAAQ,IAAI,IAEjBtX,EAAK4d,eAAiB,EAEtB5d,EAAK6d,sBAAwB,EAE7B7d,EAAK8d,kBAAoB,IAAa1C,MAEtCpb,EAAK+d,sBAAwB,IAAa3C,MAC1Cpb,EAAKge,kBACLhe,EAAKie,eAAiB,KAEtBje,EAAKke,eAAiB,QAEtBle,EAAKme,oBAAsB,IAAI,IAE/Bne,EAAKoe,YAAc,IAAI,IAEvBpe,EAAKqe,cAAgB,IAAI,IAEzBre,EAAKse,kBAAoB,IAAI,QAC7Bte,EAAKue,SAAWjB,KAChBtd,EAAKkW,kBAAoByH,GAAiBA,EAAczH,kBACpDyH,EAAczH,kBAAoB,QACtClW,EAAKwe,qBAAoBb,GAAoD,MAAnCA,EAAca,oBACpDb,EAAca,kBA9BoDlN,E,0DA6DnD,WAGbmN,EAAgBze,KAAK4d,eAAiB5d,KAAK0e,eAAe1e,KAAK4d,gBAGrE,GAAI5d,KAAKie,gBAAkBQ,EAAe,CACtC,IAAME,EAAoC,MAAvB3e,KAAKie,eACnBU,GACD3e,KAAKse,kBAAkB/Z,KAAKvE,KAAK4e,mBAAmBH,IAIxDI,QAAQxT,UAAU1G,MAAK,WACnB3E,EAAKsX,MAAMpS,SAAQ,SAAC4Z,EAAKrU,GAAN,OAAgBqU,EAAI5E,SAAWzP,IAAUgU,KACvDE,GACD3e,EAAKme,oBAAoB5Z,KAAKka,MAK1Cze,KAAKsX,MAAMpS,SAAQ,SAAC4Z,EAAKrU,GACrBqU,EAAI9G,SAAWvN,EAAQgU,EAGI,MAAvBze,EAAKie,gBAA0C,GAAhBa,EAAI9G,UAAkB8G,EAAIhJ,SACzDgJ,EAAIhJ,OAAS2I,EAAgBze,EAAKie,mBAGtCje,KAAKie,iBAAmBQ,IACxBze,KAAKie,eAAiBQ,EACtBze,KAAK0d,mBAAmBvO,kB,2CAGZ,WAChBnP,KAAK+e,4BACL/e,KAAKgf,wBAGLhf,KAAK8d,kBAAoB9d,KAAKsX,MAAM6C,QAAQ/V,WAAU,WAIlD,GAHsBpE,EAAK0e,eAAe1e,EAAK4d,kBAGzB5d,EAAKie,eAEvB,IADA,IAAMgB,EAAOjf,EAAKsX,MAAM4H,UACfC,EAAI,EAAGA,EAAIF,EAAKnT,OAAQqT,IAC7B,GAAIF,EAAKE,GAAGjF,SAAU,CAIlBla,EAAK4d,eAAiB5d,EAAKie,eAAiBkB,EAC5C,MAIZnf,EAAK0d,mBAAmBvO,oB,kDAIL,WAIvBnP,KAAKof,SAASjF,QACTjZ,KAAK,YAAUlB,KAAKof,WACpBhb,WAAW6a,YACZjf,EAAKsX,MAAM+H,MAAMJ,EAAKrT,QAAOkT,YAAGA,OAGpBA,EAAI/E,kBAAoB+E,EAAI/E,mBAAqB/Z,MAE7DA,EAAKsX,MAAMgI,uB,oCAIftf,KAAKsX,MAAMvR,UACX/F,KAAK8d,kBAAkB/B,cACvB/b,KAAK+d,sBAAsBhC,gB,sCAIvB/b,KAAKuf,YACLvf,KAAKuf,WAAWC,8B,oCAGV/U,GACVzK,KAAKoe,YAAY7Z,KAAKvE,KAAK4e,mBAAmBnU,M,yCAE/BA,GACf,IAAM6H,EAAQ,IAAIiL,GAKlB,OAJAjL,EAAM7H,MAAQA,EACVzK,KAAKsX,OAAStX,KAAKsX,MAAMxL,SACzBwG,EAAMwM,IAAM9e,KAAKsX,MAAM4H,UAAUzU,IAE9B6H,I,8CAQY,WACftS,KAAK+d,uBACL/d,KAAK+d,sBAAsBhC,cAE/B/b,KAAK+d,sBAAwB,2BAAS/d,KAAKsX,MAAMnW,KAAI2d,YAAGA,OAAIA,EAAI7E,mBAC3D7V,WAAU,kBAAMpE,EAAK0d,mBAAmBvO,oB,qCAGlC1E,GAIX,OAAOsC,KAAK0S,IAAIzf,KAAKsX,MAAMxL,OAAS,EAAGiB,KAAK2S,IAAIjV,GAAS,EAAG,M,qCAGjD0U,GACX,MAAM,iBAAN,OAAwBnf,KAAKue,SAA7B,YAAyCY,K,uCAG5BA,GACb,MAAM,mBAAN,OAA0Bnf,KAAKue,SAA/B,YAA2CY,K,+CAMtBQ,GACrB,GAAK3f,KAAKge,gBAAmBhe,KAAK6d,sBAAlC,CAGA,IAAM+B,EAAU5f,KAAK6f,gBAAgBlM,cACrCiM,EAAQra,MAAMua,OAAS9f,KAAK6d,sBAAwB,KAGhD7d,KAAK6f,gBAAgBlM,cAAcoM,eACnCH,EAAQra,MAAMua,OAASH,EAAY,S,oDAKvC,IAAMC,EAAU5f,KAAK6f,gBAAgBlM,cACrC3T,KAAK6d,sBAAwB+B,EAAQ7C,aACrC6C,EAAQra,MAAMua,OAAS,GACvB9f,KAAKqe,cAAc9Z,S,mCAGVua,EAAKkB,EAAWvV,GACpBqU,EAAIxP,WACLtP,KAAKmX,cAAgB6I,EAAUC,WAAaxV,K,mCAIvCqU,EAAKoB,GACd,OAAIpB,EAAIxP,SACG,KAEJtP,KAAKmX,gBAAkB+I,EAAM,GAAK,I,oCA1LvB,OAAOlgB,KAAKge,gB,aAChBhZ,GAAShF,KAAKge,eAAiB,SAAAnO,EAAA,CAAsB7K,K,oCAEjD,OAAOhF,KAAKie,gB,aAChBjZ,GACdhF,KAAK4d,eAAiB,YAAqB5Y,EAAO,Q,wCAG5B,OAAOhF,KAAKmgB,oB,aAChBnb,GAClBhF,KAAKmgB,mBAAqB,QAAQC,KAAKpb,GAASA,EAAQ,KAAOA,I,sCAG3C,OAAOhF,KAAKqgB,kB,aAChBrb,GAChB,IAAM2O,EAAgB3T,KAAKgR,YAAY2C,cACvCA,EAAc2M,UAAUC,OAAO,kBAAkBvgB,KAAKwgB,iBAClDxb,GACA2O,EAAc2M,UAAUG,IAAI,kBAAkBzb,GAElDhF,KAAKqgB,iBAAmBrb,M,GAtDDwY,I,OA+N/BC,EAAiB3N,UAAO,SAAkC1P,GAAK,OAAO,IAAKA,GAAKqd,GAAkB,KAAyB,KAAoB,KAAyB,KAA2B,KAAyBJ,GAAiB,GAAI,KAAyB,IAAuB,KACjSI,EAAiB1N,UAAO,KAAyB,CAAErL,KAAM+Y,EAAkBzN,OAAQ,CAAEkO,eAAgB,iBAAkBhI,kBAAmB,oBAAqBsI,kBAAmB,oBAAqBkC,cAAe,gBAAiBvJ,cAAe,gBAAiBqJ,gBAAiB,mBAAqBrQ,QAAS,CAAEgO,oBAAqB,sBAAuBC,YAAa,cAAeC,cAAe,gBAAiBC,kBAAmB,qBAAuBxN,SAAU,CAAC,Q,uBAyD/c6P,E,8BACF,WAAYxP,EAAYgL,EAAmBwB,EAAerK,GAAcA,6BAC9DnC,EAAYgL,EAAmBwB,EAAerK,G,UAFlCmK,I,OAK1BkD,EAAY7Q,UAAO,SAA6B1P,GAAK,OAAO,IAAKA,GAAKugB,GAAa,KAAyB,KAAoB,KAAyB,KAA2B,KAAyBtD,GAAiB,GAAI,KAAyB,IAAuB,KAClRsD,EAAYnN,UAAO,KAAyB,CAAE9O,KAAMic,EAAatQ,UAAW,CAAC,CAAC,kBAAmBC,eAAgB,SAAoCC,EAAIC,EAAKC,GAGtJ,IAAIC,EAHuK,EAALH,GACtK,KAAsBE,EAAUoJ,IAAOA,GAChC,EAALtJ,GAEF,KAAsBG,EAAK,UAA0BF,EAAI4O,SAAW1O,IACnEoC,UAAW,SAA2BvC,EAAIC,GAI3C,IAAIE,EAJuD,EAALH,IACtD,KAAmB6F,GAAIA,GACvB,KAAmBC,GAAIA,IAChB,EAAL9F,IAEF,KAAsBG,EAAK,UAA0BF,EAAIqP,gBAAkBnP,EAAGqC,OAC9E,KAAsBrC,EAAK,UAA0BF,EAAI+O,WAAa7O,EAAGqC,SACxEnC,UAAW,CAAC,EAAG,iBAAkB6C,SAAU,EAAGC,aAAc,SAAkCnD,EAAIC,GAAgB,EAALD,GAC9G,KAAmB,+BAAgCC,EAAIkQ,cAAvD,CAAsE,gCAAwD,UAAvBlQ,EAAI0N,iBAC1GlO,OAAQ,CAAExK,MAAO,QAAS6M,cAAe,iBAAmBxB,SAAU,CAAC,eAAgBC,SAAU,CAAC,KAA0B,CAAC,CACtHjD,QAAS+L,GACT9L,YAAa6S,KACZ,MAAoC7M,MAAO,EAAGC,KAAM,EAAGC,OAAQ,CAAC,CAAC,EAAG,gBAAiB,gBAAiB,oBAAqB,eAAgB,sBAAuB,CAAC,YAAa,IAAK,CAAC,QAAS,oCAAqC,OAAQ,MAAO,qBAAsB,GAAI,aAAc,GAAI,yBAA0B,GAAI,EAAG,KAAM,uBAAwB,WAAY,oBAAqB,QAAS,EAAG,QAAS,WAAY,CAAC,EAAG,wBAAyB,CAAC,iBAAkB,IAAK,CAAC,OAAQ,WAAY,EAAG,KAAM,sBAAuB,UAAW,WAAY,SAAU,oBAAqB,cAAe,eAAgB,EAAG,QAAS,WAAY,CAAC,OAAQ,MAAO,qBAAsB,GAAI,aAAc,GAAI,yBAA0B,GAAI,EAAG,gBAAiB,sBAAuB,EAAG,KAAM,WAAY,oBAAqB,SAAU,CAAC,EAAG,yBAA0B,CAAC,EAAG,QAAS,CAAC,EAAG,mBAAoB,CAAC,OAAQ,WAAY,EAAG,KAAM,UAAW,WAAY,SAAU,oBAAqB,cAAe,iBAAkBC,SAAU,SAA8B1D,EAAIC,GAAgB,EAALD,IACxiC,KAAsB,EAAG,iBAAkB,EAAG,GAC9C,KAAkB,gBAAgB,SAAqE2D,GAAU,OAAO1D,EAAIoQ,cAAc1M,KAA1I,CAAsJ,sBAAsB,SAA2EA,GAAU,OAAO1D,EAAI2G,cAAgBjD,KAC5R,KAAkB,EAAG2C,EAA4B,EAAG,GAAI,MAAO,GAC/D,OACA,KAAsB,EAAG,MAAO,EAAG,GACnC,KAAkB,EAAGW,EAAqC,EAAG,EAAG,eAAgB,GAChF,QACO,EAALjH,IACF,KAAkB,gBAAiBC,EAAI2G,eAAiB,EAAxD,CAA2D,gBAAiB3G,EAAI6B,cAAhF,CAA+F,oBAAqB7B,EAAIgO,mBACxH,KAAiB,GACjB,KAAkB,UAAWhO,EAAI8G,OACjC,KAAiB,GACjB,KAAmB,0BAAkD,mBAAvB9G,EAAIc,gBAClD,KAAiB,GACjB,KAAkB,UAAWd,EAAI8G,SAChC9C,WAAY,WAAc,MAAO,CAACqM,GAAc,IAAgBC,GAAoB,IAAkB,IAAwB,IAAa,IAAwB9E,KAAgBvH,OAAQ,CAAC,w/CAAy/CC,cAAe,I,KAiEvsDqM,GAA+B,a,4CAK/BD,E,8BACF,WAAY3P,GAAWA,wBACnBM,gBACKN,WAAaA,EAFCA,E,0CAMnBnR,KAAKmR,WAAWwC,cAAcC,U,sCAG9B,OAAO5T,KAAKmR,WAAWwC,cAAc8E,a,uCAGrC,OAAOzY,KAAKmR,WAAWwC,cAAcgF,gB,GAbZoI,I,OAgBjCD,EAAmBhR,UAAO,SAAoC1P,GAAK,OAAO,IAAKA,GAAK0gB,GAAoB,KAAyB,OACjIA,EAAmB/Q,UAAO,KAAyB,CAAErL,KAAMoc,EAAoBzQ,UAAW,CAAC,CAAC,GAAI,qBAAsB,KAAMoD,SAAU,EAAGC,aAAc,SAAyCnD,EAAIC,GAAgB,EAALD,IACvM,KAAmB,kBAAmBC,EAAIlB,UAC1C,KAAmB,mBAAoBkB,EAAIlB,YAC1CU,OAAQ,CAAEV,SAAU,YAAcwB,SAAU,CAAC,Q,KAwBhDkQ,GAA8B,YAAgC,CAAEC,SAAQA,I,kBAoBxEC,E,WACF,WAAYlQ,EAAa0M,EAAoByD,EAAgBjF,EAAMrD,EAKnEuI,EAAW9P,GAAeA,qBACtBtR,KAAKgR,YAAcA,EACnBhR,KAAK0d,mBAAqBA,EAC1B1d,KAAKmhB,eAAiBA,EACtBnhB,KAAKkc,KAAOA,EACZlc,KAAK6Y,QAAUA,EACf7Y,KAAKohB,UAAYA,EACjBphB,KAAKsR,eAAiBA,EAEtBtR,KAAKqhB,gBAAkB,EAEvBrhB,KAAKshB,yBAELthB,KAAKuhB,WAAa,IAAI,IAEtBvhB,KAAKwhB,2BAELxhB,KAAKyhB,uBAELzhB,KAAK0hB,wBAEL1hB,KAAK2hB,eAAiB,IAAI,IAK1B3hB,KAAKwe,qBACLxe,KAAKie,eAAiB,EAEtBje,KAAK4hB,mBAAqB,IAAI,IAE9B5hB,KAAK6hB,aAAe,IAAI,IAExBhJ,EAAQI,mBAAkB,WACtB,YAAUjI,EAAY2C,cAAe,cAChCzS,KAAK,YAAUlB,EAAKuhB,aACpBnd,WAAU,WACXpE,EAAK8hB,sB,oDAgBA,WAEb,YAAU9hB,KAAK+hB,mBAAmBpO,cAAe,aAAcqN,IAC1D9f,KAAK,YAAUlB,KAAKuhB,aACpBnd,WAAU,WACXpE,EAAKgiB,sBAAsB,aAE/B,YAAUhiB,KAAKiiB,eAAetO,cAAe,aAAcqN,IACtD9f,KAAK,YAAUlB,KAAKuhB,aACpBnd,WAAU,WACXpE,EAAKgiB,sBAAsB,c,2CAGf,WACVE,EAAYliB,KAAKkc,KAAOlc,KAAKkc,KAAKlW,OAAS,YAAG,MAC9Cmc,EAASniB,KAAKmhB,eAAenb,OAAO,KACpCoc,EAAU,WACZpiB,EAAKqiB,mBACLriB,EAAKwf,6BAETxf,KAAKsiB,YAAc,IAAI,IAAgBtiB,KAAKuiB,QACvCC,0BAA0BxiB,KAAKgd,uBAC/ByF,iBACAC,WACL1iB,KAAKsiB,YAAYK,iBAAiB3iB,KAAKie,gBAGN,oBAA1BjF,sBAAwCA,sBAAsBoJ,GAAWA,IAGhF,YAAMF,EAAWC,EAAQniB,KAAKuiB,OAAOpI,SAASjZ,KAAK,YAAUlB,KAAKuhB,aAAand,WAAU,WAErFya,QAAQxT,UAAU1G,KAAKyd,GACvBpiB,EAAKsiB,YAAYE,0BAA0BxiB,EAAKgd,0BAKpDhd,KAAKsiB,YAAYtc,OAAO9E,KAAK,YAAUlB,KAAKuhB,aAAand,WAAUwe,YAC/D5iB,EAAK6hB,aAAatd,KAAKqe,GACvB5iB,EAAK6iB,aAAaD,Q,8CAKlB5iB,KAAK8iB,gBAAkB9iB,KAAKuiB,OAAOzW,SACnC9L,KAAKqiB,mBACLriB,KAAK8iB,eAAiB9iB,KAAKuiB,OAAOzW,OAClC9L,KAAK0d,mBAAmBvO,gBAIxBnP,KAAKshB,wBACLthB,KAAK+iB,eAAe/iB,KAAKie,gBACzBje,KAAKgjB,0BACLhjB,KAAKwf,4BACLxf,KAAKshB,yBACLthB,KAAK0d,mBAAmBvO,gBAIxBnP,KAAKijB,yBACLjjB,KAAKkjB,2BACLljB,KAAKijB,0BACLjjB,KAAK0d,mBAAmBvO,kB,oCAI5BnP,KAAKuhB,WAAW7d,OAChB1D,KAAKuhB,WAAWlH,WAChBra,KAAK2hB,eAAetH,a,qCAGT/H,GAEX,IAAI,YAAeA,GAGnB,OAAQA,EAAM6Q,SACV,KAAK,IACL,KAAK,IACGnjB,KAAKigB,aAAejgB,KAAKmX,gBACzBnX,KAAK4hB,mBAAmBrd,KAAKvE,KAAKigB,YAClCjgB,KAAKojB,cAAc9Q,IAEvB,MACJ,QACItS,KAAKsiB,YAAYe,UAAU/Q,M,0CAMpB,WACTgR,EAActjB,KAAKgR,YAAY2C,cAAc2P,YAI/CA,IAAgBtjB,KAAKujB,sBACrBvjB,KAAKujB,oBAAsBD,GAAe,GAG1CtjB,KAAK6Y,QAAQ5S,KAAI,WACbjG,EAAKqiB,mBACLriB,EAAKwf,4BACLxf,EAAK0d,mBAAmBvO,qB,yCAYhCnP,KAAKwjB,0BACLxjB,KAAKgjB,0BACLhjB,KAAKkjB,6B,oCAiBKzY,GACV,IAAKzK,KAAKuiB,OACN,OAAM,EAEV,IAAMzD,EAAM9e,KAAKuiB,OAASviB,KAAKuiB,OAAOrD,UAAUzU,GAAS,KACzD,QAASqU,IAAQA,EAAIxP,W,mCAMZkC,GAIT,GAHIxR,KAAKwhB,yBACLxhB,KAAK+iB,eAAevR,GAEpBxR,KAAKuiB,QAAUviB,KAAKuiB,OAAOzW,OAAQ,CACnC9L,KAAKuiB,OAAOrD,UAAU1N,GAAUoC,QAIhC,IAAM6P,EAAczjB,KAAK0jB,kBAAkB/P,cACrC6I,EAAMxc,KAAKgd,sBAEbyG,EAAYE,WADL,OAAPnH,EACyB,EAGAiH,EAAYG,YAAcH,EAAY9K,e,4CAMvE,OAAO3Y,KAAKkc,MAA4B,QAApBlc,KAAKkc,KAAKlX,MAAkB,MAAQ,Q,iDAIxD,IAAIhF,KAAKwe,kBAAT,CAGA,IAAMqF,EAAiB7jB,KAAK6jB,eACtBC,EAAW9jB,KAAKohB,UAChB2C,EAA4C,QAA/B/jB,KAAKgd,uBAAmC6G,EAAiBA,EAO5E7jB,KAAKgkB,SAASrQ,cAAcpO,MAAMqV,UAAlC5a,qBAA4D+M,KAAKkX,MAAMF,GAAvE/jB,OAMI8jB,IAAaA,EAASI,SAAWJ,EAASK,QAC1CnkB,KAAK0jB,kBAAkB/P,cAAcgQ,WAAa,M,oCAgB5CS,GAIV,OAAOpkB,KAAKqkB,UAAUrkB,KAAKqhB,iBADQ,UAAb+C,GAAyB,EAAI,GAFhCpkB,KAAK0jB,kBAAkB/P,cAAcgF,YAEa,K,4CAInDyL,GAClBpkB,KAAK8hB,gBACL9hB,KAAKskB,cAAcF,K,qCAQRG,GACX,IAAIvkB,KAAKwe,kBAAT,CAGA,IAAMgG,EAAgBxkB,KAAKuiB,OAASviB,KAAKuiB,OAAOrD,UAAUqF,GAAc,KACxE,GAAKC,EAAL,CAIMC,IAEFC,EAAgBC,EAFdF,EAAazkB,KAAK0jB,kBAAkB/P,cAAcgF,YAAlD8L,EAC8BD,EAAcrT,WAAWwC,cAArD8E,EADFgM,EACA,WAAc9L,EADd8L,EACY,YAEgB,OAA9BzkB,KAAKgd,sBAEL2H,GADAD,EAAiBjM,GACgBE,EAIjC+L,GADAC,EAAgB3kB,KAAKgkB,SAASrQ,cAAcgF,YAAcF,GACzBE,EAErC,IAAMiM,EAAmB5kB,KAAK6jB,eACxBgB,EAAkB7kB,KAAK6jB,eAAiBY,EAC1CC,EAAiBE,EAEjB5kB,KAAK6jB,gBAAkBe,EAAmBF,EAlUvB,GAoUdC,EAAgBE,IAErB7kB,KAAK6jB,gBAAkBc,EAAgBE,EAtUpB,Q,gDAkVvB,GAAI7kB,KAAKwe,kBACLxe,KAAKwhB,+BAEJ,CACD,IAAMsD,EAAY9kB,KAAKgkB,SAASrQ,cAAciQ,YAAc5jB,KAAKgR,YAAY2C,cAAcgF,YACtFmM,IACD9kB,KAAK6jB,eAAiB,GAEtBiB,IAAc9kB,KAAKwhB,yBACnBxhB,KAAK0d,mBAAmBvO,eAE5BnP,KAAKwhB,wBAA0BsD,K,gDAa/B9kB,KAAKwe,kBACLxe,KAAKyhB,oBAAsBzhB,KAAK0hB,yBAIhC1hB,KAAK0hB,qBAA8C,GAAvB1hB,KAAK6jB,eACjC7jB,KAAKyhB,oBAAsBzhB,KAAK6jB,gBAAkB7jB,KAAK+kB,wBACvD/kB,KAAK0d,mBAAmBvO,kB,8CAa5B,OAFwBnP,KAAKgkB,SAASrQ,cAAciQ,YACjC5jB,KAAK0jB,kBAAkB/P,cAAcgF,aACf,I,kDAIzC,IAAMqM,EAAehlB,KAAKuiB,QAAUviB,KAAKuiB,OAAOzW,OAC5C9L,KAAKuiB,OAAOrD,UAAUlf,KAAKmX,eAAiB,KAC1C8N,EAAuBD,EAAeA,EAAa7T,WAAWwC,cAAgB,KAChFsR,EACAjlB,KAAKklB,QAAQC,eAAeF,GAG5BjlB,KAAKklB,QAAQE,S,sCAKjBplB,KAAK2hB,eAAeje,S,4CAOF0gB,EAAWiB,GAAWA,WAGpCA,GAAmC,MAArBA,EAAWC,QAAwC,IAAtBD,EAAWC,SAI1DtlB,KAAK8hB,gBAEL,YAzZoB,IAKG,KAsZlB5gB,KAAK,YAAU,YAAMlB,KAAK2hB,eAAgB3hB,KAAKuhB,cAC/Cnd,WAAU,iBAC6BpE,EAAKskB,cAAcF,GAAnDmB,EADG,EACL,kBAAqBC,EADhB,EACc,UAER,IAAbA,GAAkBA,GAAYD,IAC9BvlB,EAAK8hB,sB,gCASP9J,GACN,GAAIhY,KAAKwe,kBACL,MAAO,CAAE+G,kBAAmB,EAAGC,SAAU,GAE7C,IAAMD,EAAoBvlB,KAAK+kB,wBAM/B,OALA/kB,KAAKqhB,gBAAkBtU,KAAK2S,IAAI,EAAG3S,KAAK0S,IAAI8F,EAAmBvN,IAG/DhY,KAAKijB,0BACLjjB,KAAKgjB,0BACE,CAAEuC,oBAAmBC,SAAUxlB,KAAKqhB,mB,oCAzXzB,OAAOrhB,KAAKie,gB,aAChBjZ,GACdA,EAAQ,YAAqBA,GACzBhF,KAAKie,gBAAkBjZ,IACvBhF,KAAKshB,yBACLthB,KAAKie,eAAiBjZ,EAClBhF,KAAKsiB,aACLtiB,KAAKsiB,YAAYK,iBAAiB3d,M,iCA+H1C,OAAOhF,KAAKsiB,YAActiB,KAAKsiB,YAAYmD,gBAAkB,G,aAGlDzgB,GACNhF,KAAK0lB,cAAc1gB,IAAUhF,KAAKigB,aAAejb,GAAUhF,KAAKsiB,aAGrEtiB,KAAKsiB,YAAYqD,cAAc3gB,K,qCAiEZ,OAAOhF,KAAKqhB,iB,aAChBrc,GACfhF,KAAKqkB,UAAUrf,O,YA4KvBkc,EAAsBpR,UAAO,SAAuC1P,GAAK,OAAO,IAAKA,GAAK8gB,GAAuB,KAAyB,KAAoB,KAAyB,KAA2B,KAAyB,KAAuB,KAAyB,IAAuB,GAAI,KAAyB,KAAgB,KAAyB,KAAkB,KAAyB,IAAuB,KAC1bA,EAAsBnR,UAAO,KAAyB,CAAErL,KAAMwc,EAAuBlR,OAAQ,CAAEwO,kBAAmB,uB,uBAqC5GoH,E,8BACF,WAAYzU,EAAYgL,EAAmB0J,EAAerJ,EAAKsJ,EAAQhC,EAEvExQ,GAAcA,wBACV7B,cAAMN,EAAYgL,EAAmB0J,EAAerJ,EAAKsJ,EAAQhC,EAAUxQ,IACtEyS,kBAFKzS,E,gDAOAhB,GACVA,EAAM0T,mB,oCAHY,OAAOhmB,KAAK+lB,gB,aAChB/gB,GAAShF,KAAK+lB,eAAiB,SAAAlW,EAAA,CAAsB7K,O,GAT3Ckc,I,OAchC0E,EAAkB9V,UAAO,SAAmC1P,GAAK,OAAO,IAAKA,GAAKwlB,GAAmB,KAAyB,KAAoB,KAAyB,KAA2B,KAAyB,KAAuB,KAAyB,IAAuB,GAAI,KAAyB,KAAgB,KAAyB,KAAkB,KAAyB,IAAuB,KAC9aA,EAAkB7V,UAAO,KAAyB,CAAErL,KAAMkhB,EAAmB5V,OAAQ,CAAEqC,cAAe,iBAAmBvB,SAAU,CAAC,Q,uBAgC9H+P,E,8BACF,WAAY1P,EAAYgL,EAAmB0J,EAAerJ,EAAKsJ,EAAQhC,EAEvExQ,GAAcA,6BACJnC,EAAYgL,EAAmB0J,EAAerJ,EAAKsJ,EAAQhC,EAAUxQ,G,UAJxDsS,I,OAO3B/E,EAAa/Q,UAAO,SAA8B1P,GAAK,OAAO,IAAKA,GAAKygB,GAAc,KAAyB,KAAoB,KAAyB,KAA2B,KAAyB,KAAuB,KAAyB,IAAuB,GAAI,KAAyB,KAAgB,KAAyB,KAAkB,KAAyB,IAAuB,KAC/ZA,EAAarN,UAAO,KAAyB,CAAE9O,KAAMmc,EAAcxQ,UAAW,CAAC,CAAC,mBAAoBC,eAAgB,SAAqCC,EAAIC,EAAKC,GAG1J,IAAIC,EAH2K,EAALH,GAC1K,KAAsBE,EAAUqQ,IAAmBA,GAC5C,EAALvQ,GAEF,KAAsBG,EAAK,UAA0BF,EAAI+R,OAAS7R,IACjEoC,UAAW,SAA4BvC,EAAIC,GAO5C,IAAIE,EAPwD,EAALH,IACvD,KAAyBqI,GAAUA,GACnC,KAAyBX,GAAIA,GAC7B,KAAyBC,GAAIA,GAC7B,KAAmBC,GAAIA,GACvB,KAAmBC,GAAIA,IAChB,EAAL7H,IAEF,KAAsBG,EAAK,UAA0BF,EAAI0U,QAAUxU,EAAGqC,OACtE,KAAsBrC,EAAK,UAA0BF,EAAIkT,kBAAoBhT,EAAGqC,OAChF,KAAsBrC,EAAK,UAA0BF,EAAIwT,SAAWtT,EAAGqC,OACvE,KAAsBrC,EAAK,UAA0BF,EAAIyR,eAAiBvR,EAAGqC,OAC7E,KAAsBrC,EAAK,UAA0BF,EAAIuR,mBAAqBrR,EAAGqC,SAChFnC,UAAW,CAAC,EAAG,kBAAmB6C,SAAU,EAAGC,aAAc,SAAmCnD,EAAIC,GAAgB,EAALD,GAChH,KAAmB,6CAA8CC,EAAIgR,wBAArE,CAA8F,qBAAmD,OAA7BhR,EAAIwM,wBACvHhN,OAAQ,CAAEmH,cAAe,iBAAmBhH,QAAS,CAAEyR,mBAAoB,qBAAsBC,aAAc,gBAAkB/Q,SAAU,CAAC,MAAoC+C,mBAAoBzG,EAAK0G,MAAO,GAAIC,KAAM,EAAGC,OAAQ,CAAC,CAAC,cAAe,OAAQ,aAAc,GAAI,EAAG,4BAA6B,mCAAoC,mBAAoB,EAAG,oBAAqB,QAAS,YAAa,YAAa,CAAC,oBAAqB,IAAK,CAAC,EAAG,qCAAsC,CAAC,EAAG,0BAA2B,EAAG,WAAY,CAAC,mBAAoB,IAAK,CAAC,OAAQ,UAAW,EAAG,eAAgB,EAAG,qBAAsB,CAAC,UAAW,IAAK,CAAC,EAAG,kBAAmB,CAAC,cAAe,OAAQ,aAAc,GAAI,EAAG,4BAA6B,kCAAmC,mBAAoB,EAAG,oBAAqB,YAAa,QAAS,YAAa,CAAC,gBAAiB,KAAMC,SAAU,SAA+B1D,EAAIC,GAAgB,EAALD,IACr6B,OACA,KAAsB,EAAG,MAAO,EAAG,GACnC,KAAkB,SAAS,WAAwD,OAAOC,EAAIyV,sBAAsB,YAApH,CAAkI,aAAa,SAAwD/R,GAAU,OAAO1D,EAAIwR,sBAAsB,SAAU9N,KAA5P,CAAwQ,YAAY,WAA2D,OAAO1D,EAAIsR,mBAC1V,KAAiB,EAAG,MAAO,GAC3B,OACA,KAAsB,EAAG,MAAO,EAAG,GACnC,KAAkB,WAAW,SAAsD5N,GAAU,OAAO1D,EAAI0V,eAAehS,MACvH,KAAsB,EAAG,MAAO,EAAG,GACnC,KAAkB,qBAAqB,WAAoE,OAAO1D,EAAI2V,uBACtH,KAAsB,EAAG,MAAO,GAChC,KAAoB,GACpB,OACA,KAAiB,EAAG,eACpB,OACA,OACA,KAAsB,GAAI,MAAO,EAAG,GACpC,KAAkB,aAAa,SAAyDjS,GAAU,OAAO1D,EAAIwR,sBAAsB,QAAS9N,KAA5I,CAAwJ,SAAS,WAAyD,OAAO1D,EAAIyV,sBAAsB,WAA3P,CAAwQ,YAAY,WAA4D,OAAOzV,EAAIsR,mBAC3V,KAAiB,GAAI,MAAO,GAC5B,QACO,EAALvR,IACF,KAAmB,qCAAsCC,EAAIkR,sBAC7D,KAAkB,oBAAqBlR,EAAIkR,sBAAwBlR,EAAI6B,eACvE,KAAiB,GACjB,KAAmB,0BAAkD,mBAAvB7B,EAAIc,gBAClD,KAAiB,GACjB,KAAmB,qCAAsCd,EAAIiR,qBAC7D,KAAkB,oBAAqBjR,EAAIiR,qBAAuBjR,EAAI6B,iBACrEmC,WAAY,CAAC,IAAkB,IAA0BoE,GAAYnE,OAAQ,CAAC,4mFAA+mFC,cAAe,I,uBAyE/sF0R,E,8BACF,WAAYjV,EAAYqL,EAAKsJ,EAAQ3J,EAAmB0J,EAIxD/B,EAAUxQ,GAAcA,wBACpB7B,cAAMN,EAAYgL,EAAmB0J,EAAerJ,EAAKsJ,EAAQhC,EAAUxQ,IACtEyS,kBAEL/lB,EAAKwF,MAAQ,UAJO8N,E,gGAsBJ,WAGhBtT,KAAKuiB,OAAOpI,QAAQjZ,KAAK,YAAU,MAAO,YAAUlB,KAAKuhB,aAAand,WAAU,WAC5EpE,EAAKqmB,sBADTrmB,yD,uCASasmB,GACb,GAAKtmB,KAAKuiB,OAAV,CAIA,IADA,IAAMgE,EAAQvmB,KAAKuiB,OAAOrD,UACjBC,EAAI,EAAGA,EAAIoH,EAAMza,OAAQqT,IAC9B,GAAIoH,EAAMpH,GAAGhU,OAGT,OAFAnL,KAAKmX,cAAgBgI,OACrBnf,KAAK0d,mBAAmBvO,eAKhCnP,KAAKmX,eAAiB,EACtBnX,KAAKklB,QAAQE,U,sCAzCO,OAAOplB,KAAKqgB,kB,aAChBrb,GAChB,IAAMsb,EAAYtgB,KAAKgR,YAAY2C,cAAc2M,UACjDA,EAAUC,OAAO,kBAAkBvgB,KAAKwgB,iBACpCxb,GACAsb,EAAUG,IAAI,kBAAkBzb,GAEpChF,KAAKqgB,iBAAmBrb,I,oCAGN,OAAOhF,KAAK+lB,gB,aAChB/gB,GAAShF,KAAK+lB,eAAiB,SAAAlW,EAAA,CAAsB7K,O,GAvB9Ckc,I,OAwD7BkF,EAAetW,UAAO,SAAgC1P,GAAK,OAAO,IAAKA,GAAKgmB,GAAgB,KAAyB,KAAoB,KAAyB,IAAuB,GAAI,KAAyB,KAAgB,KAAyB,KAA2B,KAAyB,KAAuB,KAAyB,KAAkB,KAAyB,IAAuB,KACraA,EAAerW,UAAO,KAAyB,CAAErL,KAAM0hB,EAAgBpW,OAAQ,CAAExK,MAAO,QAASgb,gBAAiB,kBAAmBnO,cAAe,iBAAmBvB,SAAU,CAAC,Q,uBAmC5K0V,E,8BACF,WAAYrV,EAAYqL,EAAKsJ,EAAQ3J,EAAmB0J,EAIxD/B,EAAUxQ,GAAcA,6BACdnC,EAAYqL,EAAKsJ,EAAQ3J,EAAmB0J,EAAe/B,EAAUxQ,G,UAN3D8S,I,OASxBI,EAAU1W,UAAO,SAA2B1P,GAAK,OAAO,IAAKA,GAAKomB,GAAW,KAAyB,KAAoB,KAAyB,IAAuB,GAAI,KAAyB,KAAgB,KAAyB,KAA2B,KAAyB,KAAuB,KAAyB,KAAkB,KAAyB,IAAuB,KACtZA,EAAUhT,UAAO,KAAyB,CAAE9O,KAAM8hB,EAAWnW,UAAW,CAAC,CAAC,GAAI,kBAAmB,KAAMC,eAAgB,SAAkCC,EAAIC,EAAKC,GAG1J,IAAIC,EAH2K,EAALH,GAC1K,KAAsBE,EAAUgW,IAAWA,GACpC,EAALlW,GAEF,KAAsBG,EAAK,UAA0BF,EAAI+R,OAAS7R,IACjEoC,UAAW,SAAyBvC,EAAIC,GAOzC,IAAIE,EAPqD,EAALH,IACpD,KAAyBqI,GAAUA,GACnC,KAAyBX,GAAIA,GAC7B,KAAyBC,GAAIA,GAC7B,KAAmBC,GAAIA,GACvB,KAAmBC,GAAIA,IAChB,EAAL7H,IAEF,KAAsBG,EAAK,UAA0BF,EAAI0U,QAAUxU,EAAGqC,OACtE,KAAsBrC,EAAK,UAA0BF,EAAIkT,kBAAoBhT,EAAGqC,OAChF,KAAsBrC,EAAK,UAA0BF,EAAIwT,SAAWtT,EAAGqC,OACvE,KAAsBrC,EAAK,UAA0BF,EAAIyR,eAAiBvR,EAAGqC,OAC7E,KAAsBrC,EAAK,UAA0BF,EAAIuR,mBAAqBrR,EAAGqC,SAChFnC,UAAW,CAAC,EAAG,kBAAmB,kBAAmB6C,SAAU,GAAIC,aAAc,SAAgCnD,EAAIC,GAAgB,EAALD,GACjI,KAAmB,6CAA8CC,EAAIgR,wBAArE,CAA8F,qBAAmD,OAA7BhR,EAAIwM,sBAAxH,CAAwJ,cAA6B,SAAdxM,EAAIhL,OAAkC,WAAdgL,EAAIhL,MAAnM,CAAuN,aAA4B,WAAdgL,EAAIhL,MAAzO,CAA6P,WAA0B,SAAdgL,EAAIhL,QAC5QwK,OAAQ,CAAExK,MAAO,SAAWqL,SAAU,CAAC,eAAgB,aAAcC,SAAU,CAAC,MAAoC4V,MAAOrO,EAAKxE,mBAAoBzG,EAAK0G,MAAO,GAAIC,KAAM,EAAGC,OAAQ,CAAC,CAAC,cAAe,OAAQ,aAAc,GAAI,EAAG,4BAA6B,mCAAoC,mBAAoB,EAAG,oBAAqB,QAAS,YAAa,YAAa,CAAC,oBAAqB,IAAK,CAAC,EAAG,qCAAsC,CAAC,EAAG,yBAA0B,EAAG,WAAY,CAAC,mBAAoB,IAAK,CAAC,EAAG,eAAgB,EAAG,qBAAsB,CAAC,UAAW,IAAK,CAAC,EAAG,iBAAkB,CAAC,cAAe,OAAQ,aAAc,GAAI,EAAG,4BAA6B,kCAAmC,mBAAoB,EAAG,oBAAqB,YAAa,QAAS,YAAa,CAAC,gBAAiB,KAAMC,SAAU,SAA4B1D,EAAIC,GAAgB,EAALD,IAC71B,OACA,KAAsB,EAAG,MAAO,EAAG,GACnC,KAAkB,SAAS,WAAqD,OAAOC,EAAIyV,sBAAsB,YAAjH,CAA+H,aAAa,SAAqD/R,GAAU,OAAO1D,EAAIwR,sBAAsB,SAAU9N,KAAtP,CAAkQ,YAAY,WAAwD,OAAO1D,EAAIsR,mBACjV,KAAiB,EAAG,MAAO,GAC3B,OACA,KAAsB,EAAG,MAAO,EAAG,GACnC,KAAkB,WAAW,SAAmD5N,GAAU,OAAO1D,EAAI0V,eAAehS,MACpH,KAAsB,EAAG,MAAO,EAAG,GACnC,KAAkB,qBAAqB,WAAiE,OAAO1D,EAAI2V,uBACnH,KAAsB,EAAG,MAAO,GAChC,KAAoB,GACpB,OACA,KAAiB,EAAG,eACpB,OACA,OACA,KAAsB,GAAI,MAAO,EAAG,GACpC,KAAkB,aAAa,SAAsDjS,GAAU,OAAO1D,EAAIwR,sBAAsB,QAAS9N,KAAzI,CAAqJ,SAAS,WAAsD,OAAO1D,EAAIyV,sBAAsB,WAArP,CAAkQ,YAAY,WAAyD,OAAOzV,EAAIsR,mBAClV,KAAiB,GAAI,MAAO,GAC5B,QACO,EAALvR,IACF,KAAmB,qCAAsCC,EAAIkR,sBAC7D,KAAkB,oBAAqBlR,EAAIkR,sBAAwBlR,EAAI6B,eACvE,KAAiB,GACjB,KAAmB,0BAAkD,mBAAvB7B,EAAIc,gBAClD,KAAiB,GACjB,KAAmB,qCAAsCd,EAAIiR,qBAC7D,KAAkB,oBAAqBjR,EAAIiR,qBAAuBjR,EAAI6B,iBACrEmC,WAAY,CAAC,IAAkB,IAA0BoE,GAAYnE,OAAQ,CAAC,uvFAA0vFC,cAAe,I,KAmE11FiS,GAAuB,YAAc,YAAmB,a,8CAExDC,E,8BACF,WAAYC,EAAY1V,EAAY2V,EAAqBtV,EAAUJ,EAAekC,GAAcA,wBAC5F7B,gBACKoV,WAAaA,EAClB7mB,EAAKmR,WAAaA,EAClBnR,EAAKoR,cAAgBA,EAErBpR,EAAK+mB,aACL/mB,EAAKgnB,aAAeF,GAAuB,GAC3C9mB,EAAKwR,SAAWyV,SAASzV,IAAa,EAChB,mBAAlB8B,IACAtT,EAAKgnB,aAAa5J,UAAY,CAAE9P,cAAe,EAAG4Z,aAAc,IAVwB5T,E,0CA8B5FtT,KAAKmR,WAAWwC,cAAcC,U,wCAG9B5T,KAAKoR,cAAca,QAAQjS,KAAKmR,c,oCAGhCnR,KAAKoR,cAAcgB,eAAepS,KAAKmR,c,6BAtB5B,OAAOnR,KAAK+mB,W,aAChB/hB,GACHA,IAAUhF,KAAK+mB,YACf/mB,KAAK+mB,UAAY/hB,EACjBhF,KAAK6mB,WAAWR,iBAAiBrmB,KAAKmR,e,qCAQ1C,OAAOnR,KAAKsP,UAAYtP,KAAKqS,eAAiBrS,KAAK6mB,WAAWxU,iBACxDrS,KAAKgnB,aAAa1X,a,GA5BFqX,I,OAwC9BC,EAAgB9W,UAAO,SAAiC1P,GAAK,OAAO,IAAKA,GAAKwmB,GAAiB,KAAyBR,IAAiB,KAAyB,KAAoB,KAAyB,IAA2B,GAAI,KAAyB,YAAa,KAAyB,KAAsB,KAAyB,IAAuB,KACnXQ,EAAgB7W,UAAO,KAAyB,CAAErL,KAAMkiB,EAAiB5W,OAAQ,CAAE7E,OAAQ,UAAY2F,SAAU,CAAC,Q,uBAiC5G2V,E,8BACF,WAAYU,EAAWhW,EAAY2U,EAAQhC,EAAUgD,EAAqBtV,EAAU4B,EAAcE,GAAcA,wBAC5G7B,cAAM0V,EAAWhW,EAAY2V,EAAqBtV,EAAU4B,EAAcE,IACrE8T,eAAiB,IAAI,IAAJ,KAAyBtB,EAAQ3U,EAAY2S,GACnE9jB,EAAKonB,eAAeC,mBAAmBlW,EAAWwC,eAH0DL,E,gDAM5G7B,gDACAzR,KAAKonB,eAAeE,2B,GARHV,I,OAWzBH,EAAW3W,UAAO,SAA4B1P,GAAK,OAAO,IAAKA,GAAKqmB,GAAY,KAAyBD,IAAY,KAAyB,KAAoB,KAAyB,KAAgB,KAAyB,KAAkB,KAAyB,IAA2B,GAAI,KAAyB,YAAa,KAAyB,KAAsB,KAAyB,IAAuB,KACnbC,EAAW1W,UAAO,KAAyB,CAAErL,KAAM+hB,EAAYpW,UAAW,CAAC,CAAC,GAAI,eAAgB,IAAK,CAAC,GAAI,aAAc,KAAMO,UAAW,CAAC,EAAG,eAAgB,uBAAwB6C,SAAU,EAAGC,aAAc,SAAiCnD,EAAIC,GAAgB,EAALD,IACxP,KAAmB,eAAgBC,EAAIrF,OAAS,OAAS,KAAzD,CAA+D,gBAAiBqF,EAAIlB,SAApF,CAA8F,WAAYkB,EAAIgB,UAC9G,KAAmB,mBAAoBhB,EAAIlB,SAA3C,CAAqD,uBAAwBkB,EAAIrF,UAChF6E,OAAQ,CAAEV,SAAU,WAAY+C,cAAe,gBAAiBb,SAAU,YAAcX,SAAU,CAAC,cAAeC,SAAU,CAAC,Q,uBAgDhIyW,E,+BAENA,EAAc1S,UAAO,KAAwB,CAAEnQ,KAAM6iB,IACrDA,EAAczS,UAAO,KAAwB,CAAEpH,QAAS,SAA+BtN,GAAK,OAAO,IAAKA,GAAKmnB,IAAqBxS,QAAS,CAAC,CAChI,IACA,IACA,IACA,IACA,IACA,KACD,O","file":"x","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\nimport { prettyBytes } from '../core/utils/pretty-bytes';\r\n\r\n@Pipe({\r\n    name: 'formattedFileSize',\r\n    pure: true,\r\n})\r\nexport class FormattedFileSizePipe implements PipeTransform {\r\n    transform(bytes: number = 0, precision?: number|string): string {\r\n        if (isNaN(parseFloat(String(bytes))) || ! isFinite(bytes)) return '-';\r\n        return prettyBytes(bytes, precision);\r\n    }\r\n}\r\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\r\nimport {Plan} from '@common/core/types/models/Plan';\r\nimport {Translations} from '@common/core/translations/translations.service';\r\nimport {ucFirst} from '@common/core/utils/uc-first';\r\n\r\n@Component({\r\n    selector: 'full-plan-name',\r\n    template: '{{getFullPlanName()}}',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FullPlanNameComponent {\r\n    @Input() plan: Plan;\r\n\r\n    constructor(private i18n: Translations) {}\r\n\r\n    public getFullPlanName(): string {\r\n        if ( ! this.plan) return;\r\n        let name = this.plan.parent ? this.plan.parent.name : this.plan.name;\r\n        name = ucFirst(this.i18n.t(name));\r\n        name += ' ' + this.i18n.t('Plan');\r\n        if (this.plan.parent) name += ': ' + this.plan.name;\r\n        return name;\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild} from '@angular/router';\r\nimport {Settings} from '@common/core/config/settings.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class BillingEnabledGuard implements CanActivate, CanActivateChild {\r\n    constructor(private settings: Settings, private router: Router) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        return this.handle();\r\n    }\r\n\r\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        return this.handle();\r\n    }\r\n\r\n    private handle() {\r\n        if (this.settings.get('billing.integrated') && this.settings.get('billing.enable')) {\r\n            return true;\r\n        }\r\n\r\n        this.router.navigate(['/']);\r\n        return false;\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Resolve, RouterStateSnapshot, ActivatedRouteSnapshot, Router} from '@angular/router';\r\nimport {catchError, map, mergeMap} from 'rxjs/operators';\r\nimport {EMPTY, Observable, of} from 'rxjs';\r\nimport {Plan} from '@common/core/types/models/Plan';\r\nimport {Plans} from '@common/shared/billing/plans.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class BillingPlansResolver implements Resolve<Plan[]> {\r\n    constructor(\r\n        private plans: Plans,\r\n        private router: Router\r\n    ) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Plan[]> {\r\n        return this.plans.all({order: 'position|asc', perPage: 30})\r\n            .pipe(map(response => response.pagination.data))\r\n            .pipe(\r\n                catchError(() => {\r\n                    this.router.navigateByUrl('/');\r\n                    return EMPTY;\r\n                }),\r\n                mergeMap((plans: Plan[]) => {\r\n                    return of(plans);\r\n                })\r\n            );\r\n    }\r\n}\r\n\r\n","<div class=\"text\" trans>Accepted Payment Methods</div>\r\n<div class=\"card-icons\">\r\n    <img [src]=\"getCardIcon('paypal')\" *ngIf=\"settings.get('billing.paypal.enable')\">\r\n    <img [src]=\"getCardIcon(card)\" *ngFor=\"let card of acceptedCards\">\r\n</div>\r\n","import {ChangeDetectionStrategy, Component, ElementRef, OnInit} from '@angular/core';\r\nimport {Settings} from '@common/core/config/settings.service';\r\n\r\n@Component({\r\n    selector: 'accepted-payments-header',\r\n    templateUrl: './accepted-payments-header.component.html',\r\n    styleUrls: ['./accepted-payments-header.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AcceptedPaymentsHeaderComponent implements OnInit {\r\n    public acceptedCards: string[] = [];\r\n\r\n    constructor(public settings: Settings, public el: ElementRef) {}\r\n\r\n    ngOnInit() {\r\n        this.acceptedCards = this.settings.getJson('billing.accepted_cards', []);\r\n    }\r\n\r\n    public getCardIcon(card: string) {\r\n        return this.settings.getAssetUrl() + 'images/billing/' + card.toLowerCase() + '.png';\r\n    }\r\n}\r\n","<ul class=\"unstyled-list\" *ngIf=\"getPlan()\" [class.dense]=\"dense\">\r\n    <ng-container *ngIf=\"getPlan().show_permissions\">\r\n        <li *ngFor=\"let permission of getPlan().permissions\">\r\n            <mat-icon class=\"check-icon\" svgIcon=\"check\" *ngIf=\"showCheckIcons\"></mat-icon>\r\n            <span trans>{{permission.display_name || permission.name}}</span>\r\n        </li>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"getPlan().features.length\">\r\n        <li *ngFor=\"let feature of getPlan().features\">\r\n            <mat-icon class=\"check-icon\" svgIcon=\"check\" *ngIf=\"showCheckIcons\"></mat-icon>\r\n            <span>{{feature}}</span>\r\n        </li>\r\n    </ng-container>\r\n</ul>\r\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\r\nimport {Plan} from '@common/core/types/models/Plan';\r\n\r\n@Component({\r\n    selector: 'plan-features-list',\r\n    templateUrl: './plan-features-list.component.html',\r\n    styleUrls: ['./plan-features-list.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PlanFeaturesListComponent {\r\n    @Input() plan: Plan;\r\n    @Input() showCheckIcons = false;\r\n    @Input() dense = false;\r\n\r\n    public getPlan() {\r\n        return this.plan.parent || this.plan;\r\n    }\r\n}\r\n","<accepted-payments-header></accepted-payments-header>\r\n\r\n<ng-container *ngIf=\"plan\">\r\n    <div class=\"selected-plan\">\r\n        <div class=\"header\"><full-plan-name [plan]=\"plan\"></full-plan-name></div>\r\n        <plan-features-list class=\"plan-features-list\" [plan]=\"plan\" [showCheckIcons]=\"true\" [dense]=\"true\"></plan-features-list>\r\n    </div>\r\n\r\n    <div class=\"divider\"></div>\r\n\r\n    <div class=\"secure-shopping\">\r\n        <div class=\"icon-container\">\r\n            <mat-icon svgIcon=\"shield-custom\"></mat-icon>\r\n        </div>\r\n        <div class=\"text\">\r\n            <div class=\"primary\" trans>SSL Secure Payment</div>\r\n            <div class=\"secondary\" trans>Your information is protected by 256-bit SSL encryption</div>\r\n        </div>\r\n    </div>\r\n</ng-container>","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\r\nimport {Plan} from '@common/core/types/models/Plan';\r\n\r\n@Component({\r\n    selector: 'upgrade-page-aside',\r\n    templateUrl: './upgrade-page-aside.component.html',\r\n    styleUrls: ['./upgrade-page-aside.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UpgradePageAsideComponent {\r\n    @Input() plan: Plan;\r\n}\r\n","<ng-container *ngIf=\"state.selectedPlan$ | async as selectedPlan\">\r\n    <div class=\"line\">\r\n        <div class=\"summary-left\">\r\n            <full-plan-name [plan]=\"selectedPlan\"></full-plan-name>\r\n        </div>\r\n        <div class=\"summary-right\">{{selectedPlan.amount | currency:selectedPlan.currency}}</div>\r\n    </div>\r\n\r\n    <div class=\"line emphasis\">\r\n        <div class=\"summary-left\" trans>Total</div>\r\n        <div class=\"summary-right\">{{selectedPlan.amount | currency:selectedPlan.currency}}</div>\r\n    </div>\r\n</ng-container>","import {ChangeDetectionStrategy, Component} from '@angular/core';\r\nimport {SubscriptionStepperState} from '@common/billing/subscriptions/subscription-stepper-state.service';\r\n\r\n@Component({\r\n    selector: 'order-summary',\r\n    templateUrl: './order-summary.component.html',\r\n    styleUrls: ['./order-summary.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderSummaryComponent {\r\n    constructor(public state: SubscriptionStepperState) {}\r\n}\r\n","<form (ngSubmit)=\"submitForm()\" class=\"card-form many-inputs\" ngNativeValidate>\r\n    <div class=\"input-container\">\r\n        <label for=\"cardNumber\" trans>Credit or Debit Card</label>\r\n        <div id=\"cardNumber\" class=\"fake-input\"></div>\r\n    </div>\r\n\r\n    <div class=\"input-container\">\r\n        <label for=\"cardExpiry\" trans>Card Expiration</label>\r\n        <div id=\"cardExpiry\" class=\"fake-input\"></div>\r\n    </div>\r\n\r\n    <div class=\"input-container\">\r\n        <label for=\"cardCvc\" trans>CVC</label>\r\n        <div id=\"cardCvc\" class=\"fake-input\"></div>\r\n    </div>\r\n\r\n    <div class=\"error margin-bottom\" role=\"alert\" *ngIf=\"error$ | async as error\">{{error}}</div>\r\n\r\n    <order-summary *ngIf=\"showOrderSummary\"></order-summary>\r\n\r\n    <button type=\"submit\" *ngIf=\"showSubmitButton\" mat-raised-button color=\"accent\" [disabled]=\"loading$ | async\">{{submitButtonText | trans}}</button>\r\n</form>\r\n","import {\r\n    AfterViewInit,\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    NgZone,\r\n    OnDestroy,\r\n    Output\r\n} from '@angular/core';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {User} from '../../core/types/models/User';\r\nimport {Settings} from '../../core/config/settings.service';\r\nimport {LazyLoaderService} from '../../core/utils/lazy-loader.service';\r\nimport {CurrentUser} from '../../auth/current-user';\r\nimport {Subscriptions} from '../../shared/billing/subscriptions.service';\r\nimport {Toast} from '../../core/ui/toast.service';\r\nimport {ThemeService} from '@common/core/theme.service';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {SubscriptionStepperState} from '@common/billing/subscriptions/subscription-stepper-state.service';\r\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\r\n\r\n@Component({\r\n    selector: 'credit-card-form',\r\n    templateUrl: './credit-card-form.component.html',\r\n    styleUrls: ['./credit-card-form.component.scss'],\r\n    // changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CreditCardFormComponent implements OnDestroy, AfterViewInit {\r\n\r\n    /**\r\n     * Event fired when form is submitted and card is added successfully on active gateway.\r\n     */\r\n    @Output() created: EventEmitter<User> = new EventEmitter();\r\n\r\n    /**\r\n     * Display text for form submit button.\r\n     */\r\n    @Input() submitButtonText = 'Submit';\r\n\r\n    /**\r\n     * Whether form submit button should be shown.\r\n     */\r\n    @Input() showSubmitButton = true;\r\n\r\n    /**\r\n     * Whether order summary should be shown in the template.\r\n     */\r\n    @Input() showOrderSummary = false;\r\n\r\n    public loading$ = new BehaviorSubject<boolean>(false);\r\n    public error$ = new BehaviorSubject<string>(null);\r\n    private stripeElements: stripe.elements.Element[] = [];\r\n\r\n    constructor(\r\n        private subscriptions: Subscriptions,\r\n        private currentUser: CurrentUser,\r\n        private settings: Settings,\r\n        private zone: NgZone,\r\n        private lazyLoader: LazyLoaderService,\r\n        private toast: Toast,\r\n        private theme: ThemeService,\r\n        private state: SubscriptionStepperState,\r\n    ) {\r\n        this.resetForm();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.initStripe();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroyStripe();\r\n    }\r\n\r\n    /**\r\n     * Submit stripe elements credit card form.\r\n     */\r\n    public async submitForm() {\r\n        this.loading$.next(true);\r\n\r\n        const {token, error} = await this.state.stripe.createToken(this.stripeElements[0]);\r\n\r\n        if (error) {\r\n            this.error$.next(error.message);\r\n            this.loading$.next(false);\r\n        } else {\r\n            this.addCardToUser(token);\r\n        }\r\n    }\r\n\r\n    public addCardToUser(stripeToken: stripe.Token) {\r\n        this.loading$.next(true);\r\n        this.subscriptions.addCard(stripeToken.id)\r\n            .pipe(finalize(() =>  this.loading$.next(false)))\r\n            .subscribe(response => {\r\n                this.resetForm();\r\n                this.currentUser.assignCurrent(response.user);\r\n                this.created.emit(response.user);\r\n            }, (errResponse: BackendErrorResponse) => {\r\n                this.error$.next(errResponse.message);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Initiate stripe elements credit card form.\r\n     */\r\n    private initStripe() {\r\n        this.lazyLoader.loadAsset('https://js.stripe.com/v3', {type: 'js'}).then(() => {\r\n            const fields = ['cardNumber', 'cardExpiry', 'cardCvc'] as stripe.elements.elementsType[];\r\n            this.state.stripe = Stripe(this.settings.get('billing.stripe_public_key'));\r\n            const elements = this.state.stripe.elements();\r\n\r\n            const isDarkMode = this.theme.selectedTheme$.value.is_dark;\r\n            fields.forEach(field => {\r\n                const el = elements.create(field, {classes: {base: 'base'}, style: {base: {color: isDarkMode ? '#fff' : 'inherit'}}});\r\n                el.mount('#' + field);\r\n                el.on('change', this.onChange.bind(this));\r\n                this.stripeElements.push(el);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Destroy all stripe elements instances.\r\n     */\r\n    private destroyStripe() {\r\n        this.stripeElements.forEach(el => {\r\n            el.unmount();\r\n            el.destroy();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Fired on stripe element \"change\" event.\r\n     */\r\n    private onChange(change: stripe.elements.ElementChangeResponse) {\r\n        this.zone.run(() => {\r\n            this.error$.next(change.error ? change.error.message : null);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Reset credit card form.\r\n     */\r\n    private resetForm() {\r\n        this.error$.next(null);\r\n    }\r\n}\r\n","<mat-tab-group [dynamicHeight]=\"true\" color=\"accent\" [selectedIndex]=\"selectedIndex$ | async\">\r\n    <mat-tab [label]=\"'Bank Card' | trans\" *ngIf=\"settings.get('billing.stripe.enable')\">\r\n        <credit-card-form (created)=\"subscribeOnStripe()\" [submitButtonText]=\"submitText\" [showOrderSummary]=\"true\"></credit-card-form>\r\n    </mat-tab>\r\n    <mat-tab label=\"Paypal\" [disabled]=\"disablePaypalTab\" *ngIf=\"settings.get('billing.paypal.enable')\">\r\n        <div class=\"paypal-tab\">\r\n            <p class=\"info\" trans>After clicking the button below, you will be redirected to paypal.com to approve the subscription.</p>\r\n            <order-summary></order-summary>\r\n            <button mat-raised-button color=\"accent\" (click)=\"subscribeOnPaypal()\" [disabled]=\"loading$ | async\">{{submitText | trans}}</button>\r\n        </div>\r\n    </mat-tab>\r\n</mat-tab-group>\r\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, Output} from '@angular/core';\r\nimport {Subscription} from '@common/shared/billing/models/subscription';\r\nimport {Plan} from '@common/core/types/models/Plan';\r\nimport {CreateSubOnStripeResponse, Subscriptions} from '@common/shared/billing/subscriptions.service';\r\nimport {CurrentUser} from '@common/auth/current-user';\r\nimport {PaypalSubscriptions} from '@common/billing/subscriptions/paypal-subscriptions';\r\nimport {Toast} from '@common/core/ui/toast.service';\r\nimport {Settings} from '@common/core/config/settings.service';\r\nimport {User} from '@common/core/types/models/User';\r\nimport {CreditCard} from '@common/billing/upgrade-page/upgrade-page.component';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {SubscriptionStepperState} from '@common/billing/subscriptions/subscription-stepper-state.service';\r\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\r\nimport {HttpErrors} from '@common/core/http/errors/http-errors.enum';\r\n\r\nexport interface SubscriptionCompletedEvent {\r\n    status: 'created'|'updated';\r\n}\r\n\r\ninterface NewSubscriptionPayload {\r\n    card?: CreditCard;\r\n    start_date?: string;\r\n    plan_id: number;\r\n}\r\n\r\n@Component({\r\n    selector: 'create-subscription-panel',\r\n    templateUrl: './create-subscription-panel.component.html',\r\n    styleUrls: ['./create-subscription-panel.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CreateSubscriptionPanelComponent {\r\n    public loading$ = new BehaviorSubject<boolean>(false);\r\n    public selectedIndex$ = new BehaviorSubject<number>(0);\r\n\r\n    /**\r\n     * Fired when subscription creation starts or ends.\r\n     */\r\n    @Output() loading = new EventEmitter<boolean>();\r\n\r\n    /**\r\n     * Text for submit purchase button.\r\n     */\r\n    @Input() submitText = 'Submit Purchase';\r\n\r\n    /**\r\n     * Whether paypal tab should be disabled.\r\n     */\r\n    @Input() disablePaypalTab = false;\r\n\r\n    /**\r\n     * We're changing user subscription from this one.\r\n     * Used for prorating the new subscription start date.\r\n     */\r\n    @Input() from: Subscription;\r\n\r\n    /**\r\n     * Plan user should be subscribed to.\r\n     */\r\n    @Input() plan: Plan;\r\n\r\n    /**\r\n     * Fired when subscription is created or updated.\r\n     */\r\n    @Output() completed: EventEmitter<SubscriptionCompletedEvent> = new EventEmitter();\r\n\r\n    constructor(\r\n        private subscriptions: Subscriptions,\r\n        private currentUser: CurrentUser,\r\n        private paypal: PaypalSubscriptions,\r\n        private toast: Toast,\r\n        public settings: Settings,\r\n        private state: SubscriptionStepperState,\r\n    ) {}\r\n\r\n    /**\r\n     * Subscribe user to current plan on stripe gateway.\r\n     */\r\n    public subscribeOnStripe() {\r\n        // if user is already subscribed to this plan, fire \"updated\" event and bail\r\n        if (this.currentUser.getSubscription({gateway: 'stripe', planId: this.plan.id})) {\r\n            return this.completed.emit({status: 'updated'});\r\n        }\r\n\r\n        this.startLoading();\r\n\r\n        this.subscriptions.createOnStripe(this.getNewSubscriptionPayload())\r\n            .subscribe(response => {\r\n                if (response.status === 'complete') {\r\n                    this.completeSubscription(response.user);\r\n                } else {\r\n                   this.confirmCardPayment(response);\r\n                }\r\n            }, (errResponse: BackendErrorResponse) => {\r\n                const key = Object.keys(errResponse.errors)[0];\r\n                this.toast.open(errResponse.errors[key] || HttpErrors.Default);\r\n                this.stopLoading();\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Confirm card payment via 3D secure.\r\n     */\r\n    private confirmCardPayment(response: CreateSubOnStripeResponse) {\r\n        this.state.stripe.confirmCardPayment(response.payment_intent_secret)\r\n            .then(result => {\r\n                if (result.error) {\r\n                    this.stopLoading();\r\n                    this.toast.open('Card payment was not confirmed.', {action: 'Retry'})\r\n                        .onAction()\r\n                        .subscribe(() => {\r\n                            this.confirmCardPayment(response);\r\n                        });\r\n                } else {\r\n                    this.subscriptions.finalizeOnStripe(response.reference, response.user.id)\r\n                        .subscribe(finalResponse => {\r\n                            this.completeSubscription(finalResponse.user);\r\n                        });\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Subscribe user to current plan on paypal gateway.\r\n     */\r\n    public subscribeOnPaypal() {\r\n        // if user is already subscribed to this plan, fire \"updated\" event and bail\r\n        if (this.currentUser.getSubscription({gateway: 'paypal', planId: this.plan.id})) {\r\n            return this.completed.emit({status: 'updated'});\r\n        }\r\n\r\n        this.startLoading();\r\n\r\n        this.paypal.subscribe(this.getNewSubscriptionPayload()).then(user => {\r\n            this.completeSubscription(user);\r\n            this.selectedIndex$.next(0);\r\n        }).catch(message => {\r\n            this.stopLoading();\r\n            this.toast.open(message || 'There was an issue. Please try again later.');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get payload for backend for creating a new subscription.\r\n     */\r\n    private getNewSubscriptionPayload(): NewSubscriptionPayload {\r\n       const payload = {plan_id: this.plan.id};\r\n\r\n       if (this.from) {\r\n           payload['start_date'] = this.from.renews_at;\r\n       }\r\n\r\n       return payload;\r\n    }\r\n\r\n    private completeSubscription(user: User) {\r\n        this.stopLoading();\r\n        this.currentUser.assignCurrent(user);\r\n        this.completed.emit({status: 'created'});\r\n    }\r\n\r\n    private startLoading() {\r\n        this.loading$.next(true);\r\n        this.loading.emit(true);\r\n    }\r\n\r\n    private stopLoading() {\r\n        this.loading$.next(false);\r\n        this.loading.emit(false);\r\n    }\r\n}\r\n","<material-navbar [menuPosition]=\"settings.get('vebto.navbar.defaultPosition')\"></material-navbar>\r\n\r\n<div class=\"content container mat-elevation-z1\" *ngIf=\"activeSubscription$ | async as activeSubscription\">\r\n    <div class=\"main\">\r\n        <div class=\"main-section\">\r\n            <div class=\"main-section-title\"><full-plan-name [plan]=\"activeSubscription.plan\"></full-plan-name></div>\r\n            <div class=\"main-section-content\">\r\n                <ng-container *ngIf=\"canCancel()\">\r\n                    <p>\r\n                        {{ 'Your plan will automatically renew on' | trans }}\r\n                        <strong>{{getFormattedRenewDate() | formattedDate}}</strong>\r\n                        {{ \"and you'll be charged\" | trans }}\r\n                        <strong>{{activeSubscription.plan.amount | currency:activeSubscription.plan.currency}}</strong>.\r\n                    </p>\r\n\r\n                    <a mat-raised-button color=\"accent\" routerLink=\"/billing/upgrade\" trans>Change Plan</a>\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"canResume()\">\r\n                    <p>{{ 'You are on a grace period until' | trans }} <strong>{{getFormattedEndDate() | formattedDate}}</strong>. {{ 'Your subscription will not automatically resume and you will not be charged' | trans }}.</p>\r\n                    <p trans>You still have access to your plan's features until this date and you can resume your subscription anytime, by clicking button below.</p>\r\n                    <button mat-raised-button color=\"accent\" (click)=\"resumeSubscription()\" trans>Resume</button>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"main-section\" *ngIf=\"canCancel() && canChangePaymentMethod()\">\r\n            <div class=\"main-section-title\" trans>Payment Method</div>\r\n            <div class=\"main-title-description\" trans>Change your preferred payment method below. You can use a credit card or PayPal.</div>\r\n\r\n            <p>{{ 'Current payment Method' | trans }}: <strong>{{activeSubscription.gateway === 'paypal' ? 'PayPal' : ('Credit Card' | trans)}}</strong></p>\r\n\r\n            <div class=\"card-preview\" *ngIf=\"activeSubscription.gateway === 'stripe'\">\r\n                <div class=\"icon\"><mat-icon svgIcon=\"credit-card\"></mat-icon></div>\r\n                <div class=\"info\">{{currentUser.get('card_brand')}} **** {{currentUser.get('card_last_four')}}</div>\r\n            </div>\r\n\r\n            <create-subscription-panel\r\n                    (completed)=\"onPaymentMethodChange($event)\"\r\n                    (loading)=\"loading$.next($event)\"\r\n                    [plan]=\"getPlan()\"\r\n                    [from]=\"activeSubscription\"\r\n                    [disablePaypalTab]=\"activeSubscription.gateway === 'paypal'\"\r\n                    submitText=\"Change Payment Method\"\r\n            ></create-subscription-panel>\r\n        </div>\r\n\r\n        <div class=\"main-section\" *ngIf=\"canCancel()\">\r\n            <div class=\"main-section-title\" trans>Cancel Subscription</div>\r\n\r\n            <div class=\"main-section-content\">\r\n                <p trans>After cancelling subscription, you will have access to your active plan until your billing period end.</p>\r\n            </div>\r\n\r\n            <div class=\"main-section-actions\">\r\n                <button mat-raised-button color=\"warn\" (click)=\"maybeCancelSubscription()\" trans>Cancel</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <upgrade-page-aside [plan]=\"getPlan()\"></upgrade-page-aside>\r\n\r\n    <loading-indicator class=\"overlay\" [isVisible]=\"loading$ | async\"></loading-indicator>\r\n</div>\r\n\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { finalize, share } from 'rxjs/operators';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Subscription } from '@common/shared/billing/models/subscription';\r\nimport { Settings } from '@common/core/config/settings.service';\r\nimport { Modal } from '@common/core/ui/dialogs/modal.service';\r\nimport { Subscriptions } from '@common/shared/billing/subscriptions.service';\r\nimport { CurrentUser } from '@common/auth/current-user';\r\nimport { Toast } from '@common/core/ui/toast.service';\r\nimport { Plan } from '@common/core/types/models/Plan';\r\nimport { ConfirmModalComponent } from '@common/core/ui/confirm-modal/confirm-modal.component';\r\nimport { SubscriptionCompletedEvent } from '@common/billing/subscriptions/create-subscription-panel/create-subscription-panel.component';\r\nimport { User } from '@common/core/types/models/User';\r\n\r\n@Component({\r\n    selector: 'user-subscription-page',\r\n    templateUrl: './user-subscription-page.component.html',\r\n    styleUrls: ['./user-subscription-page.component.scss'],\r\n   changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UserSubscriptionPageComponent implements OnInit {\r\n    public loading$ = new BehaviorSubject<boolean>(false);\r\n    public activeSubscription$ = new BehaviorSubject<Subscription>(null);\r\n\r\n    constructor(\r\n        public settings: Settings,\r\n        private modal: Modal,\r\n        private subscriptions: Subscriptions,\r\n        public currentUser: CurrentUser,\r\n        private toast: Toast,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.activeSubscription$.next(this.currentUser.getSubscription());\r\n    }\r\n\r\n    public canResume() {\r\n        return this.currentUser.onGracePeriod();\r\n    }\r\n\r\n    public canCancel() {\r\n        return this.currentUser.isSubscribed() && !this.currentUser.onGracePeriod();\r\n    }\r\n\r\n    public canChangePaymentMethod() {\r\n        return this.settings.get('billing.stripe.enable') || this.settings.get('billing.paypal.enable');\r\n    }\r\n\r\n    public getFormattedEndDate(): string {\r\n        if ( ! this.activeSubscription$.value.ends_at) return null;\r\n        return this.activeSubscription$.value.ends_at.split(' ')[0];\r\n    }\r\n\r\n    public getFormattedRenewDate() {\r\n        if ( ! this.activeSubscription$.value.renews_at) return null;\r\n        return this.activeSubscription$.value.renews_at.split(' ')[0];\r\n    }\r\n\r\n    public getPlan(): Plan {\r\n        return this.activeSubscription$.value.plan;\r\n    }\r\n\r\n    /**\r\n     * Ask user to confirm deletion of selected templates\r\n     * and delete selected templates if user confirms.\r\n     */\r\n    public maybeCancelSubscription() {\r\n        this.modal.open(ConfirmModalComponent, {\r\n            title: 'Cancel Subscription',\r\n            body: 'Are you sure you want to cancel your subscription?',\r\n            ok: 'Yes, Cancel',\r\n            cancel: 'Go Back'\r\n        }).afterClosed().subscribe(confirmed => {\r\n            if ( ! confirmed) return;\r\n            this.cancelSubscription().subscribe(() => {\r\n                this.toast.open('Subscription cancelled.');\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Resume cancelled subscription.\r\n     */\r\n    public resumeSubscription() {\r\n        this.loading$.next(true);\r\n        this.subscriptions.resume(this.activeSubscription$.value.id)\r\n            .pipe(finalize(() => this.loading$.next(false)))\r\n            .subscribe(response => {\r\n                this.currentUser.setSubscription(response.subscription);\r\n                this.activeSubscription$.next(this.currentUser.getSubscription());\r\n                this.toast.open('Subscription resumed.');\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Called after user payment method for active subscription has been changed successfully.\r\n     */\r\n    public onPaymentMethodChange(e: SubscriptionCompletedEvent) {\r\n        // if we've only changed customer card information on same\r\n        // payment gateway, show success message and bail\r\n        if (e.status === 'updated') {\r\n            this.toast.open('Payment method updated.');\r\n            return;\r\n        }\r\n\r\n        this.loading$.next(true);\r\n\r\n        // otherwise cancel user's subscription on the other gateway\r\n        this.cancelSubscription({delete: true}).subscribe(() => {\r\n            this.toast.open('Payment method updated.');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Cancel currently active user subscription.\r\n     */\r\n    private cancelSubscription(params: {delete?: boolean} = {}): Observable<{user: User}> {\r\n        this.loading$.next(true);\r\n\r\n        const request = this.subscriptions.cancel(this.activeSubscription$.value.id, {delete: params.delete})\r\n            .pipe(finalize(() => this.loading$.next(false)))\r\n            .pipe(share());\r\n\r\n        request.subscribe(response => {\r\n            // set new active subscription, if user had more then one\r\n            this.updateUserAndSubscription(response.user);\r\n        });\r\n\r\n        return request;\r\n    }\r\n\r\n    /**\r\n     * Update current user and active subscription.\r\n     */\r\n    private updateUserAndSubscription(user: User) {\r\n        this.currentUser.assignCurrent(user);\r\n        this.activeSubscription$.next(this.currentUser.getSubscription());\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild} from '@angular/router';\r\nimport {CurrentUser} from '../../auth/current-user';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserSubscribedGuard implements CanActivate, CanActivateChild {\r\n\r\n    constructor(private currentUser: CurrentUser, private router: Router) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        return this.handle();\r\n    }\r\n\r\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        return this.handle();\r\n    }\r\n\r\n    private handle() {\r\n        if (this.currentUser.isSubscribed()) { return true; }\r\n\r\n        this.router.navigate(['/billing/upgrade']);\r\n\r\n        return false;\r\n    }\r\n}","import {Injectable} from '@angular/core';\r\nimport {Resolve, RouterStateSnapshot, ActivatedRouteSnapshot} from '@angular/router';\r\nimport {map} from 'rxjs/operators';\r\nimport {ValueLists} from '../../core/services/value-lists.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CurrenciesListResolver implements Resolve<any> {\r\n    constructor(private valueLists: ValueLists) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<any> {\r\n        return this.valueLists.get(['currencies']).pipe(map(response => response.currencies)).toPromise();\r\n    }\r\n}\r\n\r\n","import {Injectable} from '@angular/core';\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\nimport {BackendResponse} from '@common/core/types/backend-response';\nimport {Invoice} from '@common/billing/invoices/invoice';\n\nconst BASE_URI = 'billing/invoice';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class InvoiceService {\n    constructor(private http: AppHttpClient) {\n    }\n\n    public index(params: {userId?: number} = {}): BackendResponse<{invoices: Invoice[]}> {\n        return this.http.get(`${BASE_URI}`, params);\n    }\n}\n","<material-navbar [menuPosition]=\"settings.get('vebto.navbar.defaultPosition')\"></material-navbar>\n\n<div class=\"container\">\n    <h1 trans>Your Payment History</h1>\n\n    <table class=\"material-table\">\n        <thead>\n        <tr>\n            <th trans>Date</th>\n            <th trans>Amount</th>\n            <th trans>Status</th>\n            <th trans>Invoice</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let invoice of invoices$ | async\">\n            <td>{{invoice.created_at | formattedDate}}</td>\n            <td>{{invoice.subscription.plan.currency_symbol + invoice.subscription.plan.amount}}</td>\n            <td>{{(invoice.paid ? 'Paid' : 'Pending' | trans)}}</td>\n            <td>\n                <a [href]=\"getInvoiceUrl(invoice)\" target=\"_blank\" trans>View</a>\n            </td>\n        </tr>\n        </tbody>\n    </table>\n    <no-results-message svgImage=\"receipt.svg\" *ngIf=\"!(invoices$ | async).length && !(loading$ | async)\">\n        <span primary-text trans>You do not have any invoices yet.</span>\n    </no-results-message>\n</div>\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {InvoiceService} from '@common/billing/invoices/invoice.service';\nimport {Invoice} from '@common/billing/invoices/invoice';\nimport {BehaviorSubject} from 'rxjs';\nimport {Settings} from '@common/core/config/settings.service';\nimport {finalize} from 'rxjs/operators';\nimport {CurrentUser} from '@common/auth/current-user';\n\n@Component({\n    selector: 'invoice-index',\n    templateUrl: './invoice-index.component.html',\n    styleUrls: ['./invoice-index.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class InvoiceIndexComponent implements OnInit {\n    public invoices$ = new BehaviorSubject<Invoice[]>([]);\n    public loading$ = new BehaviorSubject<boolean>(false);\n\n    constructor(\n       private invoices: InvoiceService,\n       public settings: Settings,\n       private currentUser: CurrentUser,\n    ) {}\n\n    ngOnInit() {\n        this.loading$.next(true);\n        this.invoices.index({userId: this.currentUser.get('id')})\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                this.invoices$.next(response.invoices);\n            });\n    }\n\n    public getInvoiceUrl(invoice: Invoice) {\n        return this.settings.getBaseUrl(true) + 'secure/billing/invoice/' + invoice.uuid;\n    }\n}\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'pricing-page',\n  templateUrl: './pricing-page.component.html',\n  styleUrls: ['./pricing-page.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PricingPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Injectable} from '@angular/core';\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {CurrentUser} from '../../auth/current-user';\r\nimport {AppearanceListenerService} from '../../shared/appearance/appearance-listener.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class RedirectToUpgradePage implements CanActivate {\r\n    constructor(\r\n        private currentUser: CurrentUser,\r\n        private router: Router,\r\n        private listener: AppearanceListenerService,\r\n    ) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        if (this.listener.active) {\r\n            return true;\r\n        }\r\n        if (this.currentUser.isSubscribed()) {\r\n            this.router.navigate(['billing/subscription']);\r\n            return false;\r\n        } else if (this.currentUser.isLoggedIn()) {\r\n            this.router.navigate(['billing/upgrade']);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n","import {Route, RouterModule} from '@angular/router';\r\nimport {UpgradePageComponent} from './upgrade-page/upgrade-page.component';\r\nimport {NgModule} from '@angular/core';\r\nimport {BillingPlansResolver} from './upgrade-page/billing-plans-resolver.service';\r\nimport {UserSubscriptionPageComponent} from './subscriptions/user-subscription-page/user-subscription-page.component';\r\nimport {CurrenciesListResolver} from './upgrade-page/currencies-list-resolver.service';\r\nimport {UserSubscribedGuard} from './guards/user-subscribed-guard.service';\r\nimport {AuthGuard} from '../guards/auth-guard.service';\r\nimport {BillingEnabledGuard} from '../shared/billing/guards/billing-enabled-guard.service';\r\nimport {InvoiceIndexComponent} from '@common/billing/invoices/invoice-index/invoice-index.component';\r\nimport {CheckPermissionsGuard} from '@common/guards/check-permissions-guard.service';\r\nimport {PricingPageComponent} from '@common/billing/pricing-page/pricing-page.component';\r\nimport {RedirectToUpgradePage} from '@common/billing/guards/redirect-to-upgrade-page.service';\r\n\r\nexport const routes: Route[] = [\r\n    {\r\n        path: 'pricing',\r\n        component: PricingPageComponent,\r\n        canActivate: [BillingEnabledGuard, RedirectToUpgradePage],\r\n        resolve: {\r\n            plans: BillingPlansResolver,\r\n            currencies: CurrenciesListResolver\r\n        }\r\n    },\r\n    {\r\n        path: '',\r\n        canActivate: [BillingEnabledGuard, AuthGuard, CheckPermissionsGuard],\r\n        canActivateChild: [CheckPermissionsGuard],\r\n        children: [\r\n            {\r\n                path: 'upgrade',\r\n                component: UpgradePageComponent,\r\n                resolve: {\r\n                    plans: BillingPlansResolver,\r\n                    currencies: CurrenciesListResolver\r\n                }\r\n            },\r\n            {\r\n                path: 'subscription',\r\n                component: UserSubscriptionPageComponent,\r\n                resolve: { plans: BillingPlansResolver },\r\n                canActivate: [UserSubscribedGuard],\r\n                data: { name: 'subscription' }\r\n            },\r\n            {\r\n                path: 'invoices',\r\n                component: InvoiceIndexComponent,\r\n                canActivate: [UserSubscribedGuard],\r\n            },\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class BillingRoutingModule {}\r\n","<upgrade-page mode=\"pricing\"></upgrade-page>","<div class=\"plans\" [class.has-recommended]=\"hasRecommendedPlan\">\r\n    <div class=\"plan\" *ngFor=\"let plan of getAllPlans(); last as last; first as first\" [class.recommended]=\"plan.recommended\" [class.last]=\"last\" [class.first]=\"first\">\r\n        <div class=\"name\">{{plan.name}}</div>\r\n        <div class=\"price-box\" *ngIf=\"!plan.free\">\r\n            <span class=\"number\">{{plan.amount | currency:plan.currency}}</span>\r\n            <span class=\"interval\"> / {{plan.interval | trans}}</span>\r\n        </div>\r\n        <div class=\"price-box\" *ngIf=\"plan.free\" trans>Free</div>\r\n        <plan-features-list [plan]=\"plan\"></plan-features-list>\r\n        <button class=\"select-plan-button\" (click)=\"selectPlan(plan)\" mat-raised-button color=\"accent\" *ngIf=\"plan.recommended\" [disabled]=\"userSubscribedToPlan(plan)\">\r\n            {{ selectPlanButtonText(plan) | trans }}\r\n        </button>\r\n        <button class=\"select-plan-button\" (click)=\"selectPlan(plan)\" mat-stroked-button color=\"accent\" *ngIf=\"!plan.recommended\" [disabled]=\"userSubscribedToPlan(plan)\">\r\n            {{ selectPlanButtonText(plan) | trans }}\r\n        </button>\r\n    </div>\r\n</div>\r\n","import {ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {SubscriptionStepperState} from '../../subscriptions/subscription-stepper-state.service';\r\nimport {Plan} from '@common/core/types/models/Plan';\r\nimport { CurrentUser } from '@common/auth/current-user';\r\n\r\n@Component({\r\n    selector: 'select-plan-panel',\r\n    templateUrl: './select-plan-panel.component.html',\r\n    styleUrls: ['./select-plan-panel.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SelectPlanPanelComponent implements OnInit {\r\n    public hasRecommendedPlan = false;\r\n    @Output() selected = new EventEmitter();\r\n\r\n    constructor(\r\n        public state: SubscriptionStepperState,\r\n        public currentUser: CurrentUser,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.hasRecommendedPlan = this.state.plans.filter(plan => plan.recommended).length > 0;\r\n    }\r\n\r\n    public selectPlan(plan: Plan) {\r\n        this.state.selectInitialPlan(plan);\r\n        // fire event on next render to avoid race conditions\r\n        setTimeout(() => this.selected.emit(plan));\r\n    }\r\n\r\n    public getAllPlans() {\r\n        return this.state.plans.filter(plan => !plan.parent_id && !plan.hidden);\r\n    }\r\n\r\n    public userSubscribedToPlan(plan: Plan): boolean {\r\n        if (this.state.mode !== 'pricing' && plan.free && !this.currentUser.model$?.value?.subscriptions?.length) {\r\n            return true;\r\n        }\r\n        return !!this.currentUser.getSubscription({planId: plan.id});\r\n    }\r\n\r\n    public selectPlanButtonText(plan: Plan) {\r\n        if (this.userSubscribedToPlan(plan)) {\r\n            return 'Your Current Plan';\r\n        } else if (plan.free && this.state.mode === 'pricing') {\r\n            return 'Get Started';\r\n        } else {\r\n            return 'Choose Plan';\r\n        }\r\n    }\r\n}\r\n","<div class=\"subscription-period-step step-container\" *ngIf=\"state.initialPlan$ | async as initialPlan\">\r\n    <div class=\"left-col\">\r\n        <div class=\"title\" trans>Select the duration of your plan. Longer plans offer better discounts!</div>\r\n        <mat-radio-group class=\"periods\" [(ngModel)]=\"state.radioGroupModel\" (change)=\"state.selectPlanById(state.radioGroupModel)\">\r\n            <div class=\"radio-button-wrapper no-label\">\r\n                <mat-radio-button [value]=\"initialPlan.id\" class=\"period\" color=\"accent\">\r\n                    <div class=\"radio-button-content\">\r\n                        <div class=\"name\">1 {{initialPlan.interval | trans}} {{ 'subscription' | trans }}:</div>\r\n                        <div class=\"price\">{{initialPlan.amount | currency:initialPlan.currency}}/{{initialPlan.interval | trans}}</div>\r\n                    </div>\r\n                </mat-radio-button>\r\n            </div>\r\n            <div class=\"radio-button-wrapper\" *ngFor=\"let plan of state.getChildPlans(initialPlan)\">\r\n                <ng-container *ngIf=\"state.selectedPlan$ | async as selectedPlan\">\r\n                    <div class=\"savings-label\">{{'Save' | trans}} {{getPlanSavings(selectedPlan.parent || selectedPlan, plan)}}%</div>\r\n                </ng-container>\r\n                <mat-radio-button [value]=\"plan.id\" class=\"period\" color=\"accent\">\r\n                    <div class=\"radio-button-content\">\r\n                        <div class=\"name\">{{plan.name | trans}}:</div>\r\n                        <div class=\"price\">{{getAmountForSingleInterval(plan) | currency:plan.currency}}/{{(plan.interval || initialPlan.interval) | trans}}</div>\r\n                    </div>\r\n                </mat-radio-button>\r\n            </div>\r\n        </mat-radio-group>\r\n\r\n        <div class=\"actions\">\r\n            <button mat-button matStepperPrevious trans>Back</button>\r\n            <button mat-raised-button color=\"accent\" (click)=\"selected.emit()\">\r\n                {{ (state.mode === 'changePlan' ? 'Change Plan' : 'Select') | trans }}\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n    <upgrade-page-aside *ngIf=\"showSidebar\" [plan]=\"state.selectedPlan$ | async\" class=\"right-col\"></upgrade-page-aside>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { SubscriptionStepperState } from '../../subscriptions/subscription-stepper-state.service';\r\nimport { Plan } from '@common/core/types/models/Plan';\r\n\r\n@Component({\r\n    selector: 'select-plan-period-panel',\r\n    templateUrl: './select-plan-period-panel.component.html',\r\n    styleUrls: ['./select-plan-period-panel.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SelectPlanPeriodPanelComponent {\r\n    @Input() showSidebar = false;\r\n    @Output() selected = new EventEmitter();\r\n\r\n    constructor(\r\n        public state: SubscriptionStepperState,\r\n    ) {}\r\n\r\n    public getPlanSavings(base: Plan, parent: Plan): number {\r\n        const baseAmount = this.getAmountPerDay(base);\r\n        const amount = this.getAmountPerDay(parent);\r\n        const savings = (baseAmount - amount) / baseAmount * 100;\r\n        return Math.ceil(savings);\r\n    }\r\n\r\n    private getAmountPerDay(plan: Plan) {\r\n        let days = 1;\r\n        if (plan.interval === 'week') {\r\n            days = 7;\r\n        } else if (plan.interval === 'month') {\r\n            days = 30;\r\n        } else if (plan.interval === 'year') {\r\n            days = 365;\r\n        }\r\n        days = days * plan.interval_count;\r\n        return plan.amount / days;\r\n    }\r\n\r\n    public getAmountForSingleInterval(plan: Plan) {\r\n        return plan.amount / plan.interval_count;\r\n    }\r\n}\r\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'contact-widget',\r\n    templateUrl: './contact-widget.component.html',\r\n    styleUrls: ['./contact-widget.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ContactWidgetComponent {}\r\n","import {Injectable} from '@angular/core';\r\nimport {CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild} from '@angular/router';\r\nimport {CurrentUser} from '../../auth/current-user';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserNotSubscribedGuard implements CanActivate, CanActivateChild {\r\n\r\n    constructor(private currentUser: CurrentUser, private router: Router) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        return this.handle();\r\n    }\r\n\r\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        return this.handle();\r\n    }\r\n\r\n    private handle() {\r\n        if ( ! this.currentUser.isSubscribed()) { return true; }\r\n\r\n        this.router.navigate(['/billing/subscription']);\r\n\r\n        return false;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { UpgradePageComponent } from './upgrade-page/upgrade-page.component';\r\nimport { BillingPlansResolver } from './upgrade-page/billing-plans-resolver.service';\r\nimport { BillingRoutingModule } from './billing-routing.module';\r\nimport { PlanFeaturesListComponent } from './upgrade-page/plan-features-list/plan-features-list.component';\r\nimport { OrderSummaryComponent } from './upgrade-page/order-summary/order-summary.component';\r\nimport { AcceptedPaymentsHeaderComponent } from './upgrade-page/accepted-payments-header/accepted-payments-header.component';\r\nimport { UserSubscriptionPageComponent } from './subscriptions/user-subscription-page/user-subscription-page.component';\r\nimport { UpgradePageAsideComponent } from './upgrade-page/upgrade-page-aside/upgrade-page-aside.component';\r\nimport { CurrenciesListResolver } from './upgrade-page/currencies-list-resolver.service';\r\nimport { CreditCardFormComponent } from './credit-card-form/credit-card-form.component';\r\nimport { PaypalSubscriptions } from './subscriptions/paypal-subscriptions';\r\nimport { SelectPlanPanelComponent } from './plans/select-plan-panel/select-plan-panel.component';\r\nimport { SelectPlanPeriodPanelComponent } from './plans/select-plan-period-panel/select-plan-period-panel.component';\r\nimport { SubscriptionStepperState } from './subscriptions/subscription-stepper-state.service';\r\nimport { UserNotSubscribedGuard } from './guards/user-not-subscribed-guard.service';\r\nimport { UserSubscribedGuard } from './guards/user-subscribed-guard.service';\r\nimport { CreateSubscriptionPanelComponent } from './subscriptions/create-subscription-panel/create-subscription-panel.component';\r\nimport { ContactWidgetComponent } from './upgrade-page/contact-widget/contact-widget.component';\r\nimport { FullPlanNameModule } from '../shared/billing/full-plan-name/full-plan-name.module';\r\nimport { InvoiceIndexComponent } from '@common/billing/invoices/invoice-index/invoice-index.component';\r\nimport { PricingPageComponent } from './pricing-page/pricing-page.component';\r\nimport { MaterialNavbarModule } from '@common/core/ui/material-navbar/material-navbar.module';\r\nimport { TranslationsModule } from '@common/core/translations/translations.module';\r\nimport { FormatPipesModule } from '@common/core/ui/format-pipes/format-pipes.module';\r\nimport { NoResultsMessageModule } from '@common/core/ui/no-results-message/no-results-message.module';\r\nimport { LoadingIndicatorModule } from '@common/core/ui/loading-indicator/loading-indicator.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MaterialNavbarModule,\r\n        BillingRoutingModule,\r\n        FullPlanNameModule,\r\n        TranslationsModule,\r\n        FormatPipesModule,\r\n        NoResultsMessageModule,\r\n        LoadingIndicatorModule,\r\n\r\n        // material\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatSnackBarModule,\r\n        MatCheckboxModule,\r\n        MatTooltipModule,\r\n        MatDialogModule,\r\n        MatStepperModule,\r\n        MatProgressBarModule,\r\n        MatTabsModule,\r\n        MatRadioModule,\r\n    ],\r\n    declarations: [\r\n        UpgradePageComponent,\r\n        PlanFeaturesListComponent,\r\n        OrderSummaryComponent,\r\n        AcceptedPaymentsHeaderComponent,\r\n        UserSubscriptionPageComponent,\r\n        UpgradePageAsideComponent,\r\n        CreditCardFormComponent,\r\n        CreateSubscriptionPanelComponent,\r\n        SelectPlanPanelComponent,\r\n        SelectPlanPeriodPanelComponent,\r\n        ContactWidgetComponent,\r\n        InvoiceIndexComponent,\r\n        PricingPageComponent,\r\n    ],\r\n    providers: [\r\n        BillingPlansResolver,\r\n        CurrenciesListResolver,\r\n        PaypalSubscriptions,\r\n        SubscriptionStepperState,\r\n        SubscriptionStepperState,\r\n        UserNotSubscribedGuard,\r\n        UserSubscribedGuard,\r\n    ],\r\n    exports: [\r\n        BillingRoutingModule,\r\n    ]\r\n})\r\nexport class BillingModule {\r\n}\r\n","<mat-icon svgIcon=\"question-answer\" class=\"icon\"></mat-icon>\r\n\r\n<div class=\"title\" trans>Do you have any questions about PRO accounts?</div>\r\n<div class=\"subtitle\" trans>Our support team will be happy to assist you.</div>\r\n<a mat-raised-button color=\"accent\" target=\"_blank\" routerLink=\"/contact\" trans>Contact Us</a>","import { InjectionToken, forwardRef, EventEmitter, Directive, ChangeDetectorRef, Output, Input, ContentChildren, ElementRef, ViewChild, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, Attribute, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/collections';\nimport * as ɵngcc3 from '@angular/material/core';\n\nconst _c0 = [\"input\"];\nconst _c1 = function () { return { enterDuration: 150 }; };\nconst _c2 = [\"*\"];\nconst MAT_RADIO_DEFAULT_OPTIONS = new InjectionToken('mat-radio-default-options', {\n    providedIn: 'root',\n    factory: MAT_RADIO_DEFAULT_OPTIONS_FACTORY\n});\nfunction MAT_RADIO_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent'\n    };\n}\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nconst MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatRadioGroup),\n    multi: true\n};\n/** Change event object emitted by MatRadio and MatRadioGroup. */\nclass MatRadioChange {\n    constructor(\n    /** The MatRadioButton that emits the change event. */\n    source, \n    /** The value of the MatRadioButton. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * Injection token that can be used to inject instances of `MatRadioGroup`. It serves as\n * alternative token to the actual `MatRadioGroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_RADIO_GROUP = new InjectionToken('MatRadioGroup');\n/**\n * Base class with all of the `MatRadioGroup` functionality.\n * @docs-private\n */\nclass _MatRadioGroupBase {\n    constructor(_changeDetector) {\n        this._changeDetector = _changeDetector;\n        /** Selected value for the radio group. */\n        this._value = null;\n        /** The HTML name attribute applied to radio buttons in this group. */\n        this._name = `mat-radio-group-${nextUniqueId++}`;\n        /** The currently selected radio button. Should match value. */\n        this._selected = null;\n        /** Whether the `value` has been set to its initial value. */\n        this._isInitialized = false;\n        /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n        this._labelPosition = 'after';\n        /** Whether the radio group is disabled. */\n        this._disabled = false;\n        /** Whether the radio group is required. */\n        this._required = false;\n        /** The method to be called in order to update ngModel */\n        this._controlValueAccessorChangeFn = () => { };\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         * @docs-private\n         */\n        this.onTouched = () => { };\n        /**\n         * Event emitted when the group value changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * a radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n    }\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    get name() { return this._name; }\n    set name(value) {\n        this._name = value;\n        this._updateRadioButtonNames();\n    }\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    get labelPosition() {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this._markRadiosForCheck();\n    }\n    /**\n     * Value for the radio-group. Should equal the value of the selected radio button if there is\n     * a corresponding radio button with a matching value. If there is not such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    get value() { return this._value; }\n    set value(newValue) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n            this._updateSelectedRadioFromValue();\n            this._checkSelectedRadioButton();\n        }\n    }\n    _checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n    /**\n     * The currently selected radio button. If set to a new radio button, the radio group value\n     * will be updated to match the new selected button.\n     */\n    get selected() { return this._selected; }\n    set selected(selected) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this._checkSelectedRadioButton();\n    }\n    /** Whether the radio group is disabled */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /** Whether the radio group is required */\n    get required() { return this._required; }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on MatRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the MatRadioGroup.\n        this._isInitialized = true;\n    }\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    _touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n    _updateRadioButtonNames() {\n        if (this._radios) {\n            this._radios.forEach(radio => {\n                radio.name = this.name;\n                radio._markForCheck();\n            });\n        }\n    }\n    /** Updates the `selected` radio button from the internal _value state. */\n    _updateSelectedRadioFromValue() {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n        if (this._radios && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach(radio => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n    /** Dispatch change event with current selection and group value. */\n    _emitChangeEvent() {\n        if (this._isInitialized) {\n            this.change.emit(new MatRadioChange(this._selected, this._value));\n        }\n    }\n    _markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach(radio => radio._markForCheck());\n        }\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n}\n_MatRadioGroupBase.ɵfac = function _MatRadioGroupBase_Factory(t) { return new (t || _MatRadioGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_MatRadioGroupBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatRadioGroupBase, inputs: { name: \"name\", labelPosition: \"labelPosition\", value: \"value\", selected: \"selected\", disabled: \"disabled\", required: \"required\", color: \"color\" }, outputs: { change: \"change\" } });\n_MatRadioGroupBase.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\n_MatRadioGroupBase.propDecorators = {\n    change: [{ type: Output }],\n    color: [{ type: Input }],\n    name: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    value: [{ type: Input }],\n    selected: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatRadioGroupBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { change: [{\n            type: Output\n        }], name: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }] }); })();\n/**\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\n */\nclass MatRadioGroup extends _MatRadioGroupBase {\n}\nMatRadioGroup.ɵfac = function MatRadioGroup_Factory(t) { return ɵMatRadioGroup_BaseFactory(t || MatRadioGroup); };\nMatRadioGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRadioGroup, selectors: [[\"mat-radio-group\"]], contentQueries: function MatRadioGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatRadioButton, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._radios = _t);\n    } }, hostAttrs: [\"role\", \"radiogroup\", 1, \"mat-radio-group\"], exportAs: [\"matRadioGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\n            { provide: MAT_RADIO_GROUP, useExisting: MatRadioGroup },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatRadioGroup.propDecorators = {\n    _radios: [{ type: ContentChildren, args: [forwardRef(() => MatRadioButton), { descendants: true },] }]\n};\nconst ɵMatRadioGroup_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatRadioGroup);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRadioGroup, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-radio-group',\n                exportAs: 'matRadioGroup',\n                providers: [\n                    MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\n                    { provide: MAT_RADIO_GROUP, useExisting: MatRadioGroup },\n                ],\n                host: {\n                    'role': 'radiogroup',\n                    'class': 'mat-radio-group'\n                }\n            }]\n    }], null, { _radios: [{\n            type: ContentChildren,\n            args: [forwardRef(() => MatRadioButton), { descendants: true }]\n        }] }); })();\n// Boilerplate for applying mixins to MatRadioButton.\n/** @docs-private */\nclass MatRadioButtonBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n// As per Material design specifications the selection control radio should use the accent color\n// palette by default. https://material.io/guidelines/components/selection-controls.html\nconst _MatRadioButtonMixinBase = mixinDisableRipple(mixinTabIndex(MatRadioButtonBase));\n/**\n * Base class with all of the `MatRadioButton` functionality.\n * @docs-private\n */\nclass _MatRadioButtonBase extends _MatRadioButtonMixinBase {\n    constructor(radioGroup, elementRef, _changeDetector, _focusMonitor, _radioDispatcher, _animationMode, _providerOverride, tabIndex) {\n        super(elementRef);\n        this._changeDetector = _changeDetector;\n        this._focusMonitor = _focusMonitor;\n        this._radioDispatcher = _radioDispatcher;\n        this._animationMode = _animationMode;\n        this._providerOverride = _providerOverride;\n        this._uniqueId = `mat-radio-${++nextUniqueId}`;\n        /** The unique ID for the radio button. */\n        this.id = this._uniqueId;\n        /**\n         * Event emitted when the checked state of this radio button changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * the radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n        /** Whether this radio is checked. */\n        this._checked = false;\n        /** Value assigned to this radio. */\n        this._value = null;\n        /** Unregister function for _radioDispatcher */\n        this._removeUniqueSelectionListener = () => { };\n        // Assertions. Ideally these should be stripped out by the compiler.\n        // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n        this.radioGroup = radioGroup;\n        if (tabIndex) {\n            this.tabIndex = coerceNumberProperty(tabIndex, 0);\n        }\n        this._removeUniqueSelectionListener =\n            _radioDispatcher.listen((id, name) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n    /** Whether this radio button is checked. */\n    get checked() { return this._checked; }\n    set checked(value) {\n        const newCheckedState = coerceBooleanProperty(value);\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            }\n            else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n    /** The value of this radio button. */\n    get value() { return this._value; }\n    set value(value) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup !== null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    get labelPosition() {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    /** Whether the radio button is disabled. */\n    get disabled() {\n        return this._disabled || (this.radioGroup !== null && this.radioGroup.disabled);\n    }\n    set disabled(value) {\n        this._setDisabled(coerceBooleanProperty(value));\n    }\n    /** Whether the radio button is required. */\n    get required() {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Theme color of the radio button. */\n    get color() {\n        return this._color ||\n            (this.radioGroup && this.radioGroup.color) ||\n            this._providerOverride && this._providerOverride.color || 'accent';\n    }\n    set color(newValue) { this._color = newValue; }\n    /** ID of the native input element inside `<mat-radio-button>` */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /** Focuses the radio button. */\n    focus(options) {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n    }\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    _markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe(focusOrigin => {\n            if (!focusOrigin && this.radioGroup) {\n                this.radioGroup._touch();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._removeUniqueSelectionListener();\n    }\n    /** Dispatch change event with current value. */\n    _emitChangeEvent() {\n        this.change.emit(new MatRadioChange(this, this._value));\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /**\n     * Triggered when the radio button received a click or the input recognized any change.\n     * Clicking on a label element, will trigger a change event on the associated input.\n     */\n    _onInputChange(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this._emitChangeEvent();\n        if (this.radioGroup) {\n            this.radioGroup._controlValueAccessorChangeFn(this.value);\n            if (groupValueChanged) {\n                this.radioGroup._emitChangeEvent();\n            }\n        }\n    }\n    /** Sets the disabled state and marks for check if a change occurred. */\n    _setDisabled(value) {\n        if (this._disabled !== value) {\n            this._disabled = value;\n            this._changeDetector.markForCheck();\n        }\n    }\n}\n_MatRadioButtonBase.ɵfac = function _MatRadioButtonBase_Factory(t) { return new (t || _MatRadioButtonBase)(ɵngcc0.ɵɵdirectiveInject(_MatRadioGroupBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(String), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(String)); };\n_MatRadioButtonBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatRadioButtonBase, viewQuery: function _MatRadioButtonBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, inputs: { id: \"id\", checked: \"checked\", value: \"value\", labelPosition: \"labelPosition\", disabled: \"disabled\", required: \"required\", color: \"color\", name: \"name\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"] }, outputs: { change: \"change\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatRadioButtonBase.ctorParameters = () => [\n    { type: _MatRadioGroupBase },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: UniqueSelectionDispatcher },\n    { type: String },\n    { type: undefined },\n    { type: String }\n];\n_MatRadioButtonBase.propDecorators = {\n    id: [{ type: Input }],\n    name: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    checked: [{ type: Input }],\n    value: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }],\n    color: [{ type: Input }],\n    change: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatRadioButtonBase, [{\n        type: Directive\n    }], function () { return [{ type: _MatRadioGroupBase }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc2.UniqueSelectionDispatcher }, { type: String }, { type: undefined }, { type: String }]; }, { id: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], checked: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\n/**\n * A Material design radio-button. Typically placed inside of `<mat-radio-group>` elements.\n */\nclass MatRadioButton extends _MatRadioButtonBase {\n    constructor(radioGroup, elementRef, changeDetector, focusMonitor, radioDispatcher, animationMode, providerOverride, tabIndex) {\n        super(radioGroup, elementRef, changeDetector, focusMonitor, radioDispatcher, animationMode, providerOverride, tabIndex);\n    }\n}\nMatRadioButton.ɵfac = function MatRadioButton_Factory(t) { return new (t || MatRadioButton)(ɵngcc0.ɵɵdirectiveInject(MAT_RADIO_GROUP, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_RADIO_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatRadioButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatRadioButton, selectors: [[\"mat-radio-button\"]], hostAttrs: [1, \"mat-radio-button\"], hostVars: 17, hostBindings: function MatRadioButton_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatRadioButton_focus_HostBindingHandler() { return ctx._inputElement.nativeElement.focus(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", -1)(\"id\", ctx.id)(\"aria-label\", null)(\"aria-labelledby\", null)(\"aria-describedby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-radio-checked\", ctx.checked)(\"mat-radio-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matRadioButton\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 13, vars: 19, consts: [[1, \"mat-radio-label\"], [\"label\", \"\"], [1, \"mat-radio-container\"], [1, \"mat-radio-outer-circle\"], [1, \"mat-radio-inner-circle\"], [\"type\", \"radio\", 1, \"mat-radio-input\", \"cdk-visually-hidden\", 3, \"id\", \"checked\", \"disabled\", \"tabIndex\", \"required\", \"change\", \"click\"], [\"input\", \"\"], [\"mat-ripple\", \"\", 1, \"mat-radio-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-radio-persistent-ripple\"], [1, \"mat-radio-label-content\"], [2, \"display\", \"none\"]], template: function MatRadioButton_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelement(3, \"div\", 3);\n        ɵngcc0.ɵɵelement(4, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"input\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"change\", function MatRadioButton_Template_input_change_5_listener($event) { return ctx._onInputChange($event); })(\"click\", function MatRadioButton_Template_input_click_5_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelementStart(10, \"span\", 10);\n        ɵngcc0.ɵɵtext(11, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"value\", ctx.value)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-describedby\", ctx.ariaDescribedby);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(18, _c1));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-radio-label-before\", ctx.labelPosition == \"before\");\n    } }, directives: [ɵngcc3.MatRipple], styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;width:20px;transform:scale(0.001)}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5)}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatRadioButton.ctorParameters = () => [\n    { type: MatRadioGroup, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RADIO_GROUP,] }] },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: UniqueSelectionDispatcher },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RADIO_DEFAULT_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRadioButton, [{\n        type: Component,\n        args: [{\n                selector: 'mat-radio-button',\n                template: \"<!-- TODO(jelbourn): render the radio on either side of the content -->\\n<!-- TODO(mtlin): Evaluate trade-offs of using native radio vs. cost of additional bindings. -->\\n<label [attr.for]=\\\"inputId\\\" class=\\\"mat-radio-label\\\" #label>\\n  <!-- The actual 'radio' part of the control. -->\\n  <div class=\\\"mat-radio-container\\\">\\n    <div class=\\\"mat-radio-outer-circle\\\"></div>\\n    <div class=\\\"mat-radio-inner-circle\\\"></div>\\n    <input #input class=\\\"mat-radio-input cdk-visually-hidden\\\" type=\\\"radio\\\"\\n        [id]=\\\"inputId\\\"\\n        [checked]=\\\"checked\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [tabIndex]=\\\"tabIndex\\\"\\n        [attr.name]=\\\"name\\\"\\n        [attr.value]=\\\"value\\\"\\n        [required]=\\\"required\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n        (change)=\\\"_onInputChange($event)\\\"\\n        (click)=\\\"_onInputClick($event)\\\">\\n\\n    <!-- The ripple comes after the input so that we can target it with a CSS\\n         sibling selector when the input is focused. -->\\n    <div mat-ripple class=\\\"mat-radio-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n      <div class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></div>\\n    </div>\\n  </div>\\n\\n  <!-- The label content for radio control. -->\\n  <div class=\\\"mat-radio-label-content\\\" [class.mat-radio-label-before]=\\\"labelPosition == 'before'\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </div>\\n</label>\\n\",\n                inputs: ['disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRadioButton',\n                host: {\n                    'class': 'mat-radio-button',\n                    '[class.mat-radio-checked]': 'checked',\n                    '[class.mat-radio-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    // Needs to be -1 so the `focus` event still fires.\n                    '[attr.tabindex]': '-1',\n                    '[attr.id]': 'id',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[attr.aria-describedby]': 'null',\n                    // Note: under normal conditions focus shouldn't land on this element, however it may be\n                    // programmatically set, for example inside of a focus trap, in this case we want to forward\n                    // the focus to the native element.\n                    '(focus)': '_inputElement.nativeElement.focus()'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;width:20px;transform:scale(0.001)}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5)}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"]\n            }]\n    }], function () { return [{ type: MatRadioGroup, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RADIO_GROUP]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc2.UniqueSelectionDispatcher }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RADIO_DEFAULT_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatRadioModule {\n}\nMatRadioModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatRadioModule });\nMatRadioModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatRadioModule_Factory(t) { return new (t || MatRadioModule)(); }, imports: [[MatRippleModule, MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRadioModule, { declarations: function () { return [MatRadioGroup, MatRadioButton]; }, imports: function () { return [MatRippleModule, MatCommonModule]; }, exports: function () { return [MatRadioGroup, MatRadioButton, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRadioModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatRippleModule, MatCommonModule],\n                exports: [MatRadioGroup, MatRadioButton, MatCommonModule],\n                declarations: [MatRadioGroup, MatRadioButton]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_RADIO_DEFAULT_OPTIONS, MAT_RADIO_DEFAULT_OPTIONS_FACTORY, MAT_RADIO_GROUP, MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, MatRadioButton, MatRadioChange, MatRadioGroup, MatRadioModule, _MatRadioButtonBase, _MatRadioGroupBase };\n\n//# sourceMappingURL=radio.js.map","import { Injectable } from '@angular/core';\r\nimport { AppHttpClient } from '../../core/http/app-http-client.service';\r\nimport { PaginatedBackendResponse } from '../../core/types/pagination/paginated-backend-response';\r\nimport { BackendResponse } from '@common/core/types/backend-response';\r\nimport { Plan } from '@common/core/types/models/Plan';\r\nimport { PaginationParams } from '@common/core/types/pagination/pagination-params';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class Plans {\r\n    static BASE_URI = 'billing-plan';\r\n    constructor(private http: AppHttpClient) {}\r\n\r\n    public all(params?: PaginationParams): PaginatedBackendResponse<Plan> {\r\n        return this.http.get(Plans.BASE_URI, params);\r\n    }\r\n\r\n    public get(id: number): BackendResponse<{plan: Plan}> {\r\n        return this.http.get(`${Plans.BASE_URI}/${id}`);\r\n    }\r\n\r\n    public create(params: object): BackendResponse<{plan: Plan}> {\r\n        return this.http.post(Plans.BASE_URI, params);\r\n    }\r\n\r\n    public update(id: number, params: object): BackendResponse<{plan: Plan}> {\r\n        return this.http.put(`${Plans.BASE_URI}/${id}`, params);\r\n    }\r\n\r\n    public delete(ids: number[]): BackendResponse<void> {\r\n        return this.http.delete(`${Plans.BASE_URI}/${ids}`);\r\n    }\r\n\r\n    public sync(): BackendResponse<void> {\r\n        return this.http.post(`${Plans.BASE_URI}/sync`);\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {FullPlanNameComponent} from './full-plan-name.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        FullPlanNameComponent,\r\n    ],\r\n    exports: [\r\n        FullPlanNameComponent,\r\n    ]\r\n})\r\nexport class FullPlanNameModule {}\r\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {getFaviconFromUrl} from '@common/core/utils/get-favicon-from-url';\n\n@Pipe({\n    name: 'favicon'\n})\nexport class FaviconPipe implements PipeTransform {\n    transform(url: string): string {\n        if (!url) {\n            return null;\n        }\n        if (url.includes('youtube')) {\n            return 'https://www.youtube.com/s/desktop/ca54e1bd/img/favicon.ico';\n        } else {\n            return getFaviconFromUrl(url);\n        }\n    }\n}\n","import {isAbsoluteUrl} from '@common/core/utils/is-absolute-url';\r\n\r\nexport function getFaviconFromUrl(url: string) {\r\n    if ( ! url) {\r\n        return null;\r\n    }\r\n    // relative url to current site\r\n    if ( ! isAbsoluteUrl(url)) {\r\n        url = window.location.protocol + '//' + window.location.host;\r\n    }\r\n    const domain = new URL(url).origin;\r\n    return 'https://www.google.com/s2/favicons?domain=' + domain;\r\n}\r\n","import { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalHostDirective, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, NgZone, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewContainerRef, ContentChild, ViewChild, Input, ComponentFactoryResolver, forwardRef, EventEmitter, ChangeDetectorRef, Output, QueryList, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, merge, fromEvent, of, timer } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token for the MatInkBar's Positioner. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/portal';\nimport * as ɵngcc6 from '@angular/cdk/scrolling';\nimport * as ɵngcc7 from '@angular/cdk/platform';\nimport * as ɵngcc8 from '@angular/cdk/observers';\n\nfunction MatTab_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nfunction MatTabBody_ng_template_2_Template(rf, ctx) { }\nconst _c1 = function (a0) { return { animationDuration: a0 }; };\nconst _c2 = function (a0, a1) { return { value: a0, params: a1 }; };\nconst _c3 = [\"tabBodyWrapper\"];\nconst _c4 = [\"tabHeader\"];\nfunction MatTabGroup_div_2_ng_template_2_ng_template_0_Template(rf, ctx) { }\nfunction MatTabGroup_div_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, MatTabGroup_div_2_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", tab_r4.templateLabel);\n} }\nfunction MatTabGroup_div_2_ng_template_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(tab_r4.textLabel);\n} }\nfunction MatTabGroup_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function MatTabGroup_div_2_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); const tab_r4 = ctx.$implicit; const i_r5 = ctx.index; const ctx_r11 = ɵngcc0.ɵɵnextContext(); const _r0 = ɵngcc0.ɵɵreference(1); return ctx_r11._handleClick(tab_r4, _r0, i_r5); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_ng_template_2_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵtemplate(3, MatTabGroup_div_2_ng_template_3_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-label-active\", ctx_r1.selectedIndex == i_r5);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r1._getTabLabelId(i_r5))(\"disabled\", tab_r4.disabled)(\"matRippleDisabled\", tab_r4.disabled || ctx_r1.disableRipple);\n    ɵngcc0.ɵɵattribute(\"tabIndex\", ctx_r1._getTabIndex(tab_r4, i_r5))(\"aria-posinset\", i_r5 + 1)(\"aria-setsize\", ctx_r1._tabs.length)(\"aria-controls\", ctx_r1._getTabContentId(i_r5))(\"aria-selected\", ctx_r1.selectedIndex == i_r5)(\"aria-label\", tab_r4.ariaLabel || null)(\"aria-labelledby\", !tab_r4.ariaLabel && tab_r4.ariaLabelledby ? tab_r4.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r4.templateLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !tab_r4.templateLabel);\n} }\nfunction MatTabGroup_mat_tab_body_5_Template(rf, ctx) { if (rf & 1) {\n    const _r16 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-tab-body\", 10);\n    ɵngcc0.ɵɵlistener(\"_onCentered\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener() { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15._removeTabBodyWrapperHeight(); })(\"_onCentering\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r17 = ɵngcc0.ɵɵnextContext(); return ctx_r17._setTabBodyWrapperHeight($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r13 = ctx.$implicit;\n    const i_r14 = ctx.index;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-body-active\", ctx_r3.selectedIndex == i_r14);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r3._getTabContentId(i_r14))(\"content\", tab_r13.content)(\"position\", tab_r13.position)(\"origin\", tab_r13.origin)(\"animationDuration\", ctx_r3.animationDuration);\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx_r3._getTabLabelId(i_r14));\n} }\nconst _c5 = [\"tabListContainer\"];\nconst _c6 = [\"tabList\"];\nconst _c7 = [\"nextPaginator\"];\nconst _c8 = [\"previousPaginator\"];\nconst _c9 = [\"mat-tab-nav-bar\", \"\"];\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    const method = (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    });\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\nclass MatInkBar {\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param element\n     */\n    alignToElement(element) {\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => this._setStyles(element));\n            });\n        }\n        else {\n            this._setStyles(element);\n        }\n    }\n    /** Shows the ink bar. */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /** Hides the ink bar. */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @param element\n     */\n    _setStyles(element) {\n        const positions = this._inkBarPositioner(element);\n        const inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    }\n}\nMatInkBar.ɵfac = function MatInkBar_Factory(t) { return new (t || MatInkBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(_MAT_INK_BAR_POSITIONER), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatInkBar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInkBar, selectors: [[\"mat-ink-bar\"]], hostAttrs: [1, \"mat-ink-bar\"], hostVars: 2, hostBindings: function MatInkBar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } } });\nMatInkBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInkBar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-ink-bar',\n                host: {\n                    'class': 'mat-ink-bar',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [_MAT_INK_BAR_POSITIONER]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_CONTENT = new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\nclass MatTabContent {\n    constructor(template) {\n        this.template = template;\n    }\n}\nMatTabContent.ɵfac = function MatTabContent_Factory(t) { return new (t || MatTabContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatTabContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabContent, selectors: [[\"\", \"matTabContent\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }])] });\nMatTabContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabContent, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabContent]',\n                providers: [{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_LABEL = new InjectionToken('MatTabLabel');\n/** Used to flag tab labels for use with the portal directive */\nclass MatTabLabel extends CdkPortal {\n}\nMatTabLabel.ɵfac = function MatTabLabel_Factory(t) { return ɵMatTabLabel_BaseFactory(t || MatTabLabel); };\nMatTabLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLabel, selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatTabLabel_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatTabLabel);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-label], [matTabLabel]',\n                providers: [{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nclass MatTabBase {\n}\nconst _MatTabMixinBase = mixinDisabled(MatTabBase);\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab extends _MatTabMixinBase {\n    constructor(_viewContainerRef, \n    /**\n     * @deprecated `_closestTabGroup` parameter to become required.\n     * @breaking-change 10.0.0\n     */\n    _closestTabGroup) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        this._closestTabGroup = _closestTabGroup;\n        /** Plain text label for the tab, used when there is no template label. */\n        this.textLabel = '';\n        /** Portal that will be the hosted content of the tab */\n        this._contentPortal = null;\n        /** Emits whenever the internal state of the tab changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n    get templateLabel() { return this._templateLabel; }\n    set templateLabel(value) { this._setTemplateLabelInput(value); }\n    /** @docs-private */\n    get content() {\n        return this._contentPortal;\n    }\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setTemplateLabelInput(value) {\n        // Only update the templateLabel via query if there is actually\n        // a MatTabLabel found. This works around an issue where a user may have\n        // manually set `templateLabel` during creation mode, which would then get clobbered\n        // by `undefined` when this query resolves.\n        if (value) {\n            this._templateLabel = value;\n        }\n    }\n}\nMatTab.ɵfac = function MatTab_Factory(t) { return new (t || MatTab)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_TAB_GROUP, 8)); };\nMatTab.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTab, selectors: [[\"mat-tab\"]], contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_TAB_LABEL, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MAT_TAB_CONTENT, true, TemplateRef);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n    } }, viewQuery: function MatTab_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n    } }, inputs: { disabled: \"disabled\", textLabel: [\"label\", \"textLabel\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"] }, exportAs: [\"matTab\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatTab_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2 });\nMatTab.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_TAB_GROUP,] }] }\n];\nMatTab.propDecorators = {\n    templateLabel: [{ type: ContentChild, args: [MAT_TAB_LABEL,] }],\n    _explicitContent: [{ type: ContentChild, args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true },] }],\n    _implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    textLabel: [{ type: Input, args: ['label',] }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTab, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab',\n                template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\",\n                inputs: ['disabled'],\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matTab'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_TAB_GROUP]\n            }] }]; }, { textLabel: [{\n            type: Input,\n            args: ['label']\n        }], templateLabel: [{\n            type: ContentChild,\n            args: [MAT_TAB_LABEL]\n        }], _explicitContent: [{\n            type: ContentChild,\n            args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true }]\n        }], _implicitContent: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nconst matTabsAnimations = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    constructor(componentFactoryResolver, viewContainerRef, _host, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        super(componentFactoryResolver, viewContainerRef, _document);\n        this._host = _host;\n        /** Subscription to events for when the tab body begins centering. */\n        this._centeringSub = Subscription.EMPTY;\n        /** Subscription to events for when the tab body finishes leaving from center position. */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        });\n        this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n    /** Clean up centering subscription. */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.ɵfac = function MatTabBodyPortal_Factory(t) { return new (t || MatTabBodyPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatTabBody)), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatTabBodyPortal.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabBodyPortal, selectors: [[\"\", \"matTabBodyHost\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabBodyPortal.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef(() => MatTabBody),] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabBodyPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabBodyHost]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: MatTabBody, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatTabBody)]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\nclass _MatTabBodyBase {\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /** Subscription to the directionality change observable. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Emits when an animation on the tab is complete. */\n        this._translateTabComplete = new Subject();\n        /** Event emitted when the tab begins to animate towards the center as the active tab. */\n        this._onCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._beforeCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._afterLeavingCenter = new EventEmitter();\n        /** Event emitted when the tab completes its animation towards the center. */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /** Duration for the tab's animation. */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            });\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe(event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        });\n    }\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin(this.origin);\n        }\n    }\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    _onTranslateTabStarted(event) {\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /** The text direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the provided position state is considered center, regardless of origin. */\n    _isCenterPosition(position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    }\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    _computePositionFromOrigin(origin) {\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.ɵfac = function _MatTabBodyBase_Factory(t) { return new (t || _MatTabBodyBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_MatTabBodyBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabBodyBase, inputs: { animationDuration: \"animationDuration\", position: \"position\", _content: [\"content\", \"_content\"], origin: \"origin\" }, outputs: { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" } });\n_MatTabBodyBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\n_MatTabBodyBase.propDecorators = {\n    _onCentering: [{ type: Output }],\n    _beforeCentering: [{ type: Output }],\n    _afterLeavingCenter: [{ type: Output }],\n    _onCentered: [{ type: Output }],\n    _content: [{ type: Input, args: ['content',] }],\n    origin: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    position: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabBodyBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _onCentering: [{\n            type: Output\n        }], _beforeCentering: [{\n            type: Output\n        }], _afterLeavingCenter: [{\n            type: Output\n        }], _onCentered: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], position: [{\n            type: Input\n        }], _content: [{\n            type: Input,\n            args: ['content']\n        }], origin: [{\n            type: Input\n        }] }); })();\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.ɵfac = function MatTabBody_Factory(t) { return new (t || MatTabBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatTabBody.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabBody, selectors: [[\"mat-tab-body\"]], viewQuery: function MatTabBody_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(PortalHostDirective, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-body\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 6, consts: [[1, \"mat-tab-body-content\"], [\"content\", \"\"], [\"matTabBodyHost\", \"\"]], template: function MatTabBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) { return ctx._onTranslateTabStarted($event); })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) { return ctx._translateTabComplete.next($event); });\n        ɵngcc0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"@translateTab\", ɵngcc0.ɵɵpureFunction2(3, _c2, ctx._position, ɵngcc0.ɵɵpureFunction1(1, _c1, ctx.animationDuration)));\n    } }, directives: [MatTabBodyPortal], styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"], encapsulation: 2, data: { animation: [matTabsAnimations.translateTab] } });\nMatTabBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\nMatTabBody.propDecorators = {\n    _portalHost: [{ type: ViewChild, args: [PortalHostDirective,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabBody, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-body',\n                template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\">\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matTabsAnimations.translateTab],\n                host: {\n                    'class': 'mat-tab-body'\n                },\n                styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _portalHost: [{\n            type: ViewChild,\n            args: [PortalHostDirective]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options the tabs module. */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n/** A simple change event emitted on focus or selection changes. */\nclass MatTabChangeEvent {\n}\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nclass MatTabGroupMixinBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** All of the tabs that belong to the group. */\n        this._tabs = new QueryList();\n        /** The tab index that should be selected after the content has been checked. */\n        this._indexToSelect = 0;\n        /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n        this._tabBodyWrapperHeight = 0;\n        /** Subscription to tabs being added/removed. */\n        this._tabsSubscription = Subscription.EMPTY;\n        /** Subscription to changes in the tab labels. */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._dynamicHeight = false;\n        this._selectedIndex = null;\n        /** Position of the tab header. */\n        this.headerPosition = 'above';\n        /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n        this.selectedIndexChange = new EventEmitter();\n        /** Event emitted when focus has changed within a tab group. */\n        this.focusChange = new EventEmitter();\n        /** Event emitted when the body animation has completed */\n        this.animationDone = new EventEmitter();\n        /** Event emitted when the tab selection has changed. */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '500ms';\n        this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ?\n            defaultConfig.disablePagination : false;\n    }\n    /** Whether the tab group should grow to the size of the active tab. */\n    get dynamicHeight() { return this._dynamicHeight; }\n    set dynamicHeight(value) { this._dynamicHeight = coerceBooleanProperty(value); }\n    /** The index of the active tab. */\n    get selectedIndex() { return this._selectedIndex; }\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() { return this._animationDuration; }\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    /** Background color of the tab group. */\n    get backgroundColor() { return this._backgroundColor; }\n    set backgroundColor(value) {\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            });\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngAfterContentInit() {\n        this._subscribeToAllTabChanges();\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe(() => {\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this._tabs.toArray();\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Listens to changes in all of the tabs. */\n    _subscribeToAllTabChanges() {\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n        // some that are inside of nested tab groups. We filter them out manually by checking that\n        // the closest group to the tab is the current one.\n        this._allTabs.changes\n            .pipe(startWith(this._allTabs))\n            .subscribe((tabs) => {\n            this._tabs.reset(tabs.filter(tab => {\n                // @breaking-change 10.0.0 Remove null check for `_closestTabGroup`\n                // once it becomes a required parameter in MatTab.\n                return !tab._closestTabGroup || tab._closestTabGroup === this;\n            }));\n            this._tabs.notifyOnChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._tabs.destroy();\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /** Re-aligns the ink bar to the selected tab element. */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    _focusChanged(index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    _createChangeEvent(index) {\n        const event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges))\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /** Returns a unique id for each tab label element */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /** Returns a unique id for each tab content element */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /** Removes the height of the tab body wrapper. */\n    _removeTabBodyWrapperHeight() {\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /** Handle click events, setting new selected index if appropriate. */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /** Retrieves the tabindex for the tab. */\n    _getTabIndex(tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    }\n}\n_MatTabGroupBase.ɵfac = function _MatTabGroupBase_Factory(t) { return new (t || _MatTabGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabGroupBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabGroupBase, inputs: { headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", disablePagination: \"disablePagination\", dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", backgroundColor: \"backgroundColor\" }, outputs: { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabGroupBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabGroupBase.propDecorators = {\n    dynamicHeight: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    headerPosition: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    disablePagination: [{ type: Input }],\n    backgroundColor: [{ type: Input }],\n    selectedIndexChange: [{ type: Output }],\n    focusChange: [{ type: Output }],\n    animationDone: [{ type: Output }],\n    selectedTabChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabGroupBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { headerPosition: [{\n            type: Input\n        }], selectedIndexChange: [{\n            type: Output\n        }], focusChange: [{\n            type: Output\n        }], animationDone: [{\n            type: Output\n        }], selectedTabChange: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], disablePagination: [{\n            type: Input\n        }], dynamicHeight: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }] }); })();\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.ɵfac = function MatTabGroup_Factory(t) { return new (t || MatTabGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabGroup, selectors: [[\"mat-tab-group\"]], contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTab, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n    } }, viewQuery: function MatTabGroup_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n        ɵngcc0.ɵɵviewQuery(_c4, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-group\"], hostVars: 4, hostBindings: function MatTabGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-tab-group-inverted-header\", ctx.headerPosition === \"below\");\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\" }, exportAs: [\"matTabGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_TAB_GROUP,\n                useExisting: MatTabGroup\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 6, vars: 7, consts: [[3, \"selectedIndex\", \"disableRipple\", \"disablePagination\", \"indexFocused\", \"selectFocusedIndex\"], [\"tabHeader\", \"\"], [\"class\", \"mat-tab-label mat-focus-indicator\", \"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 3, \"id\", \"mat-tab-label-active\", \"disabled\", \"matRippleDisabled\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-tab-body-wrapper\"], [\"tabBodyWrapper\", \"\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-tab-body-active\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mat-tab-label\", \"mat-focus-indicator\", 3, \"id\", \"disabled\", \"matRippleDisabled\", \"click\"], [1, \"mat-tab-label-content\"], [3, \"ngIf\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"id\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\"]], template: function MatTabGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-tab-header\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) { return ctx._focusChanged($event); })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) { return ctx.selectedIndex = $event; });\n        ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_Template, 4, 14, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵtemplate(5, MatTabGroup_mat_tab_body_5_Template, 1, 8, \"mat-tab-body\", 5);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n    } }, directives: function () { return [MatTabHeader, ɵngcc2.NgForOf, MatTabLabelWrapper, ɵngcc3.MatRipple, ɵngcc4.CdkMonitorFocus, ɵngcc2.NgIf, ɵngcc5.CdkPortalOutlet, MatTabBody]; }, styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"], encapsulation: 2 });\nMatTabGroup.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabGroup.propDecorators = {\n    _allTabs: [{ type: ContentChildren, args: [MatTab, { descendants: true },] }],\n    _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper',] }],\n    _tabHeader: [{ type: ViewChild, args: ['tabHeader',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-group',\n                exportAs: 'matTabGroup',\n                template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex == i\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                inputs: ['color', 'disableRipple'],\n                providers: [{\n                        provide: MAT_TAB_GROUP,\n                        useExisting: MatTabGroup\n                    }],\n                host: {\n                    'class': 'mat-tab-group',\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"'\n                },\n                styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _allTabs: [{\n            type: ContentChildren,\n            args: [MatTab, { descendants: true }]\n        }], _tabBodyWrapper: [{\n            type: ViewChild,\n            args: ['tabBodyWrapper']\n        }], _tabHeader: [{\n            type: ViewChild,\n            args: ['tabHeader']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nclass MatTabLabelWrapperBase {\n}\nconst _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase {\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /** Sets focus on the wrapper element */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.ɵfac = function MatTabLabelWrapper_Factory(t) { return new (t || MatTabLabelWrapper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatTabLabelWrapper.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLabelWrapper, selectors: [[\"\", \"matTabLabelWrapper\", \"\"]], hostVars: 3, hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabLabelWrapper.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLabelWrapper, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabLabelWrapper]',\n                inputs: ['disabled'],\n                host: {\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[attr.aria-disabled]': '!!disabled'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nclass MatPaginatedTabHeader {\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, \n    /**\n     * @deprecated @breaking-change 9.0.0 `_platform` and `_animationMode`\n     * parameters to become required.\n     */\n    _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /** The distance in pixels that the tab labels should be translated to the left. */\n        this._scrollDistance = 0;\n        /** Whether the header should scroll to the selected index after the view has been checked. */\n        this._selectedIndexChanged = false;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Whether the controls for pagination should be displayed */\n        this._showPaginationControls = false;\n        /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n        this._disableScrollAfter = true;\n        /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n        this._disableScrollBefore = true;\n        /** Stream that will stop the automated scrolling. */\n        this._stopScrolling = new Subject();\n        /**\n         * Whether pagination should be disabled. This can be used to avoid unnecessary\n         * layout recalculations if it's known that pagination won't be required.\n         */\n        this.disablePagination = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the option is selected. */\n        this.selectFocusedIndex = new EventEmitter();\n        /** Event emitted when a label is focused. */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular(() => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => {\n                this._stopInterval();\n            });\n        });\n    }\n    /** The index of the active tab. */\n    get selectedIndex() { return this._selectedIndex; }\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItem(value);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('before');\n        });\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('after');\n        });\n    }\n    ngAfterContentInit() {\n        const dirChange = this._dir ? this._dir.change : of(null);\n        const resize = this._viewportRuler.change(150);\n        const realign = () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        };\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withHomeAndEnd()\n            .withWrap();\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe(() => {\n            // We need to defer this to give the browser some time to recalculate the element dimensions.\n            Promise.resolve().then(realign);\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        });\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        });\n    }\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /** Handles keyboard events on the header. */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case ENTER:\n            case SPACE:\n                if (this.focusIndex !== this.selectedIndex) {\n                    this.selectFocusedIndex.emit(this.focusIndex);\n                    this._itemSelected(event);\n                }\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    _onContentChanges() {\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run(() => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : 0;\n    }\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this._tabListContainer.nativeElement;\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /** The layout direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    _updateTabScrollPosition() {\n        if (this.disablePagination) {\n            return;\n        }\n        const scrollDistance = this.scrollDistance;\n        const platform = this._platform;\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        // @breaking-change 9.0.0 Remove null check for `platform` after it can no longer be undefined.\n        if (platform && (platform.TRIDENT || platform.EDGE)) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance() { return this._scrollDistance; }\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollHeader(direction) {\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /** Handles click events on the pagination arrows. */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollToLabel(labelIndex) {\n        if (this.disablePagination) {\n            return;\n        }\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        let labelBeforePos, labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkPaginationEnabled() {\n        if (this.disablePagination) {\n            this._showPaginationControls = false;\n        }\n        else {\n            const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n            if (!isEnabled) {\n                this.scrollDistance = 0;\n            }\n            if (isEnabled !== this._showPaginationControls) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._showPaginationControls = isEnabled;\n        }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkScrollingControls() {\n        if (this.disablePagination) {\n            this._disableScrollAfter = this._disableScrollBefore = true;\n        }\n        else {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance == 0;\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _getMaxScrollDistance() {\n        const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    }\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    _alignInkBarToSelectedTab() {\n        const selectedItem = this._items && this._items.length ?\n            this._items.toArray()[this.selectedIndex] : null;\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /** Stops the currently-running paginator interval.  */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param direction In which direction the paginator should be scrolled.\n     */\n    _handlePaginatorPress(direction, mouseEvent) {\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n        // null check the `button`, but we do it so we don't break tests that use fake events.\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n            return;\n        }\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe(() => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        });\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @param position Position to which to scroll.\n     * @returns Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        if (this.disablePagination) {\n            return { maxScrollDistance: 0, distance: 0 };\n        }\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.ɵfac = function MatPaginatedTabHeader_Factory(t) { return new (t || MatPaginatedTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPaginatedTabHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPaginatedTabHeader, inputs: { disablePagination: \"disablePagination\" } });\nMatPaginatedTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPaginatedTabHeader.propDecorators = {\n    disablePagination: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatedTabHeader, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disablePagination: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.ɵfac = function _MatTabHeaderBase_Factory(t) { return new (t || _MatTabHeaderBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabHeaderBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabHeaderBase, inputs: { disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabHeaderBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabHeaderBase.propDecorators = {\n    disableRipple: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabHeaderBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disableRipple: [{\n            type: Input\n        }] }); })();\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.ɵfac = function MatTabHeader_Factory(t) { return new (t || MatTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabHeader, selectors: [[\"mat-tab-header\"]], contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabHeader_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatInkBar, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c5, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c6, true);\n        ɵngcc0.ɵɵviewQuery(_c7, true);\n        ɵngcc0.ɵɵviewQuery(_c8, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-header\"], hostVars: 4, hostBindings: function MatTabHeader_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n    } }, inputs: { selectedIndex: \"selectedIndex\" }, outputs: { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-label-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [\"role\", \"tablist\", 1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-labels\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabHeader_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabHeader_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabHeader_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabHeader_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"], encapsulation: 2 });\nMatTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabHeader.propDecorators = {\n    _items: [{ type: ContentChildren, args: [MatTabLabelWrapper, { descendants: false },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-header',\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                outputs: ['selectFocusedIndex', 'indexFocused'],\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                host: {\n                    'class': 'mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n                },\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [MatTabLabelWrapper, { descendants: false }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /** Theme color of the nav bar. */\n        this.color = 'primary';\n    }\n    /** Background color of the tab nav. */\n    get backgroundColor() { return this._backgroundColor; }\n    set backgroundColor(value) {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    _itemSelected() {\n        // noop\n    }\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            this.updateActiveLink();\n        });\n        super.ngAfterContentInit();\n    }\n    /**\n     * Notifies the component that the active link has been changed.\n     * @breaking-change 8.0.0 `element` parameter to be removed.\n     */\n    updateActiveLink(_element) {\n        if (!this._items) {\n            return;\n        }\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n}\n_MatTabNavBase.ɵfac = function _MatTabNavBase_Factory(t) { return new (t || _MatTabNavBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabNavBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabNavBase, inputs: { color: \"color\", backgroundColor: \"backgroundColor\", disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabNavBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabNavBase.propDecorators = {\n    backgroundColor: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    color: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabNavBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { color: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.ɵfac = function MatTabNav_Factory(t) { return new (t || MatTabNav)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabNav.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabNav, selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]], contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLink, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabNav_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatInkBar, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c5, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c6, true);\n        ɵngcc0.ɵɵviewQuery(_c7, true);\n        ɵngcc0.ɵɵviewQuery(_c8, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-nav-bar\", \"mat-tab-header\"], hostVars: 10, hostBindings: function MatTabNav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { color: \"color\" }, exportAs: [\"matTabNavBar\", \"matTabNav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c9, ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-link-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-links\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabNav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabNav_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabNav_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabNav_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabNav_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabNav_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"], encapsulation: 2 });\nMatTabNav.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabNav.propDecorators = {\n    _items: [{ type: ContentChildren, args: [forwardRef(() => MatTabLink), { descendants: true },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabNav, [{\n        type: Component,\n        args: [{\n                selector: '[mat-tab-nav-bar]',\n                exportAs: 'matTabNavBar, matTabNav',\n                inputs: ['color'],\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-tab-nav-bar mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [forwardRef(() => MatTabLink), { descendants: true }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkMixinBase {\n}\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n/** Base class with all of the `MatTabLink` functionality. */\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    constructor(_tabNavBar, elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /** Whether the tab link is active or not. */\n        this._isActive = false;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    /** Whether the link is active. */\n    get active() { return this._isActive; }\n    set active(value) {\n        if (value !== this._isActive) {\n            this._isActive = value;\n            this._tabNavBar.updateActiveLink(this.elementRef);\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled;\n    }\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this.elementRef);\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n}\n_MatTabLinkBase.ɵfac = function _MatTabLinkBase_Factory(t) { return new (t || _MatTabLinkBase)(ɵngcc0.ɵɵdirectiveInject(_MatTabNavBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabLinkBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabLinkBase, inputs: { active: \"active\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabLinkBase.ctorParameters = () => [\n    { type: _MatTabNavBase },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabLinkBase.propDecorators = {\n    active: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabLinkBase, [{\n        type: Directive\n    }], function () { return [{ type: _MatTabNavBase }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { active: [{\n            type: Input\n        }] }); })();\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.ɵfac = function MatTabLink_Factory(t) { return new (t || MatTabLink)(ɵngcc0.ɵɵdirectiveInject(MatTabNav), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabLink.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLink, selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]], hostAttrs: [1, \"mat-tab-link\", \"mat-focus-indicator\"], hostVars: 7, hostBindings: function MatTabLink_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-current\", ctx.active ? \"page\" : null)(\"aria-disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled)(\"mat-tab-label-active\", ctx.active);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matTabLink\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabLink.ctorParameters = () => [\n    { type: MatTabNav },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLink, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-link], [matTabLink]',\n                exportAs: 'matTabLink',\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                host: {\n                    'class': 'mat-tab-link mat-focus-indicator',\n                    '[attr.aria-current]': 'active ? \"page\" : null',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabIndex]': 'tabIndex',\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[class.mat-tab-label-active]': 'active'\n                }\n            }]\n    }], function () { return [{ type: MatTabNav }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatTabsModule {\n}\nMatTabsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTabsModule });\nMatTabsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTabsModule_Factory(t) { return new (t || MatTabsModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            PortalModule,\n            MatRippleModule,\n            ObserversModule,\n            A11yModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTabsModule, { declarations: function () { return [MatTabGroup, MatTabLabel, MatTab, MatInkBar, MatTabLabelWrapper, MatTabNav, MatTabLink, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule]; }, exports: function () { return [MatCommonModule, MatTabGroup, MatTabLabel, MatTab, MatTabNav, MatTabLink, MatTabContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabsModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PortalModule,\n                    MatRippleModule,\n                    ObserversModule,\n                    A11yModule,\n                ],\n                // Don't export all components because some are only to be used internally.\n                exports: [\n                    MatCommonModule,\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabContent,\n                ],\n                declarations: [\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatInkBar,\n                    MatTabLabelWrapper,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabBody,\n                    MatTabBodyPortal,\n                    MatTabHeader,\n                    MatTabContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵangular_material_src_material_tabs_tabs_a, MAT_TAB_LABEL as ɵangular_material_src_material_tabs_tabs_b, MAT_TAB_CONTENT as ɵangular_material_src_material_tabs_tabs_c, MatPaginatedTabHeader as ɵangular_material_src_material_tabs_tabs_d };\n\n//# sourceMappingURL=tabs.js.map"]}