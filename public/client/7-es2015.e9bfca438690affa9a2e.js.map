{"version":3,"sources":["node_modules/lodash/_listCacheHas.js","node_modules/lodash/_cloneArrayBuffer.js","node_modules/lodash/property.js","node_modules/lodash/_initCloneObject.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/autocomplete.js","node_modules/lodash/isSymbol.js","node_modules/lodash/isArguments.js","node_modules/lodash/_stackSet.js","src/common/core/ui/chips/chips.module.ts","node_modules/lodash/stubArray.js","node_modules/lodash/isSet.js","src/common/datatable/datatable.module.ts","node_modules/lodash/_SetCache.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/slide-toggle.js","node_modules/lodash/_baseIsNaN.js","node_modules/lodash/_coreJsData.js","src/common/shared/paginator.service.ts","src/common/datatable/utils/sort-datatable-data.ts","src/common/datatable/datatable.service.ts","src/common/datatable/utils/filter-datatable-data.ts","node_modules/lodash/_setCacheHas.js","node_modules/lodash/_toSource.js","node_modules/lodash/_basePropertyDeep.js","node_modules/lodash/memoize.js","node_modules/lodash/_Hash.js","node_modules/lodash/_hasPath.js","node_modules/lodash/_castPath.js","node_modules/lodash/_cloneBuffer.js","src/common/datatable/datatable-filters-panel/datatable-filters-panel.component.ts","src/common/datatable/datatable-filters-panel/datatable-filters-panel.component.html","src/common/uploads/validation/validations/allowed-extensions-validation.ts","src/common/uploads/formatted-file-size.pipe.ts","node_modules/lodash/_isPrototype.js","node_modules/lodash/_baseProperty.js","node_modules/lodash/_stackClear.js","node_modules/lodash/keys.js","node_modules/lodash/_nativeKeysIn.js","node_modules/lodash/_mapToArray.js","src/common/workspaces/workspace-config.ts","node_modules/lodash/_toKey.js","node_modules/lodash/_isKey.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/chips.js","node_modules/lodash/_baseKeys.js","node_modules/lodash/_getRawTag.js","node_modules/lodash/stubFalse.js","node_modules/lodash/cloneDeep.js","node_modules/lodash/_arrayPush.js","node_modules/lodash/_isStrictComparable.js","node_modules/lodash/_strictIndexOf.js","node_modules/lodash/_getNative.js","node_modules/lodash/isBuffer.js","node_modules/lodash/_baseAssignIn.js","src/common/uploads/directives/upload-button.directive.ts","node_modules/lodash/_isMasked.js","src/common/core/ui/overlay-panel/positions/left-position.ts","src/common/datatable/datatable-header/datatable-header.component.html","src/common/datatable/datatable-header/datatable-header.component.ts","node_modules/lodash/_copySymbolsIn.js","node_modules/lodash/_isKeyable.js","node_modules/lodash/isObjectLike.js","src/common/core/utils/remove-null-from-object.ts","node_modules/lodash/_getAllKeysIn.js","node_modules/lodash/_baseMatchesProperty.js","node_modules/lodash/_stringToPath.js","src/common/uploads/uploads.module.ts","node_modules/lodash/_baseIsMap.js","node_modules/lodash/isObject.js","node_modules/lodash/_mapCacheSet.js","node_modules/lodash/_equalByTag.js","node_modules/lodash/_Promise.js","node_modules/lodash/_hashDelete.js","node_modules/lodash/_memoizeCapped.js","src/common/core/ui/chips/chip-input/chip-input.component.ts","src/common/core/ui/chips/chip-input/chip-input.component.html","node_modules/lodash/_matchesStrictComparable.js","src/common/datatable/selection/table-header-checkbox.component.ts","node_modules/lodash/_Uint8Array.js","node_modules/lodash/_mapCacheGet.js","node_modules/lodash/_hashSet.js","node_modules/lodash/_baseIsArguments.js","node_modules/lodash/_baseHasIn.js","src/common/core/ui/skeleton/skeleton.component.ts","node_modules/lodash/_listCacheClear.js","node_modules/lodash/_objectToString.js","node_modules/lodash/_baseFindIndex.js","node_modules/lodash/_root.js","node_modules/lodash/_stackDelete.js","node_modules/lodash/_baseUniq.js","node_modules/lodash/_arrayFilter.js","node_modules/lodash/_getPrototype.js","node_modules/lodash/isArrayLike.js","node_modules/lodash/_assignValue.js","node_modules/lodash/_getSymbols.js","node_modules/lodash/_baseIsNative.js","src/common/core/utils/has-key.ts","node_modules/lodash/_getValue.js","node_modules/lodash/_baseGetTag.js","node_modules/lodash/_defineProperty.js","node_modules/lodash/_getMatchData.js","node_modules/lodash/_baseClone.js","node_modules/lodash/_WeakMap.js","src/common/uploads/validation/validations/blocked-extensions-validation.ts","node_modules/lodash/_copyArray.js","node_modules/lodash/_baseKeysIn.js","node_modules/lodash/_getMapData.js","node_modules/lodash/_arraySome.js","node_modules/lodash/_getTag.js","node_modules/lodash/_baseIndexOf.js","node_modules/lodash/_hashClear.js","src/common/datatable/columns/user-column/user-column.component.html","src/common/datatable/columns/user-column/user-column.component.ts","node_modules/lodash/_baseTimes.js","src/common/datatable/table-sort-header/table-sort-header.component.ts","src/common/datatable/table-sort-header/table-sort-header.component.html","node_modules/lodash/_nativeKeys.js","node_modules/lodash/_copySymbols.js","node_modules/lodash/_stackHas.js","src/common/workspaces/workspaces.service.ts","src/common/workspaces/types/workspace-invite-notif.ts","node_modules/lodash/_freeGlobal.js","node_modules/lodash/_baseAssign.js","node_modules/lodash/_cloneDataView.js","node_modules/rxjs/_esm2015/internal/operators/mapTo.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/sidenav.js","node_modules/lodash/_ListCache.js","node_modules/lodash/_arrayIncludesWith.js","node_modules/lodash/isEqual.js","node_modules/lodash/_nativeCreate.js","(webpack)/buildin/module.js","node_modules/lodash/isArray.js","node_modules/lodash/_listCacheSet.js","node_modules/lodash/_baseMatches.js","node_modules/lodash/_baseGet.js","node_modules/lodash/_listCacheDelete.js","node_modules/lodash/_cloneRegExp.js","node_modules/lodash/_arrayLikeKeys.js","src/common/datatable/datatable-header/datatable-header-search-input/datatable-header-search-input.component.ts","src/common/datatable/datatable-header/datatable-header-search-input/datatable-header-search-input.component.html","node_modules/lodash/isTypedArray.js","node_modules/lodash/_baseIsTypedArray.js","node_modules/lodash/_createSet.js","node_modules/lodash/_baseCreate.js","node_modules/lodash/toString.js","node_modules/lodash/_MapCache.js","node_modules/lodash/_baseIsEqualDeep.js","src/common/datatable/selection/table-body-checkbox.component.ts","node_modules/lodash/_arrayMap.js","node_modules/lodash/_Map.js","node_modules/lodash/_hashHas.js","node_modules/lodash/_mapCacheClear.js","node_modules/lodash/_baseGetAllKeys.js","node_modules/lodash/_Stack.js","node_modules/lodash/_setCacheAdd.js","node_modules/lodash/_stackGet.js","node_modules/lodash/_arrayEach.js","node_modules/rxjs/_esm2015/internal/operators/throttle.js","node_modules/rxjs/_esm2015/internal/operators/throttleTime.js","src/common/uploads/upload-queue/upload-queue-item.ts","src/common/uploads/validation/default-upload-validator.ts","src/common/uploads/upload-queue/upload-queue.service.ts","node_modules/lodash/hasIn.js","node_modules/lodash/_baseAssignValue.js","src/common/datatable/delete-resource-message.ts","node_modules/lodash/_arrayIncludes.js","node_modules/lodash/_copyObject.js","node_modules/lodash/_mapCacheDelete.js","node_modules/lodash/_overArg.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js","node_modules/lodash/isFunction.js","node_modules/lodash/eq.js","node_modules/lodash/_baseIsMatch.js","src/common/core/ui/skeleton/skeleton.module.ts","node_modules/lodash/keysIn.js","node_modules/lodash/_nodeUtil.js","node_modules/lodash/get.js","node_modules/lodash/_Symbol.js","node_modules/lodash/_getSymbolsIn.js","node_modules/lodash/_equalArrays.js","node_modules/lodash/_cloneSymbol.js","node_modules/lodash/_mapCacheHas.js","node_modules/lodash/uniqBy.js","node_modules/lodash/_getAllKeys.js","node_modules/lodash/_setToArray.js","src/common/uploads/upload-progress-bar/upload-progress-bar.component.ts","src/common/uploads/upload-progress-bar/upload-progress-bar.component.html","src/common/datatable/datatable-footer/datatable-footer.component.ts","src/common/datatable/datatable-footer/datatable-footer.component.html","node_modules/lodash/_baseUnary.js","src/common/core/ui/format-pipes/favicon.pipe.ts","src/common/core/utils/get-favicon-from-url.ts","node_modules/lodash/_equalObjects.js","node_modules/lodash/isLength.js","node_modules/lodash/_listCacheGet.js","node_modules/lodash/_DataView.js","node_modules/lodash/_hashGet.js","node_modules/lodash/_baseIteratee.js","node_modules/lodash/noop.js","src/app/drive/state/actions/commands.ts","src/app/drive/state/models/drive-page.ts","src/app/drive/state/actions/events.ts","src/app/drive/state/models/drive-state-model.ts","src/app/drive/state/models/drive-state-model-defaults.ts","src/app/drive/messages/loading-toast/loading-toast-messages.ts","src/app/drive/upload-input-config.ts","src/app/drive/folders/api/folders-api-routes.enum.ts","src/app/drive/folders/api/folders-api.service.ts","src/app/drive/drive-entry-api.service.ts","src/app/drive/drive-urls.service.ts","src/app/drive/uploads/drive-upload-validator.ts","src/app/drive/state/drive-state.ts","src/app/drive/sidebar/folders-tree/build-folder-tree.ts","src/app/drive/entries/supported-entry-types.ts","src/app/drive/files/components/file-icon/file-icon.component.ts","src/common/core/utils/kebab-case.ts","src/app/drive/files/components/file-icon/file-icon.component.html","src/app/drive/interactions/entry-drag-preview/entry-drag-preview.component.html","src/app/drive/interactions/entry-drag-preview/entry-drag-preview.component.ts","src/app/drive/permissions/drive-entry-permissions.ts","src/app/drive/sharing/shares-api.service.ts","src/app/drive/sharing/state/share-dialog.state.ts","src/app/drive/sharing/sharing-permissions-button/sharing-permissions-button.component.html","src/app/drive/sharing/sharing-permissions-button/sharing-permissions-button.component.ts","src/app/drive/sharing/entries-access-table/entries-access-table.component.html","src/app/drive/sharing/entries-access-table/entries-access-table.component.ts","src/app/drive/sharing/share-dialog/share-dialog.component.html","src/app/drive/sharing/share-dialog/share-dialog.component.ts","src/app/drive/sharing/links/shareable-links-api.service.ts","src/app/drive/sharing/links/share-link.state.ts","src/app/drive/sharing/links/link-options/link-options.component.html","src/app/drive/sharing/links/link-options/link-options.component.ts","src/app/drive/sharing/share-link-dialog/share-link-dialog.component.html","src/app/drive/sharing/share-link-dialog/share-link-dialog.component.ts","src/common/core/utils/share-link-socially.ts","src/app/drive/folders/components/crupdate-folder-dialog/crupdate-folder-dialog.component.html","src/app/drive/folders/components/crupdate-folder-dialog/crupdate-folder-dialog.component.ts","node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/tree.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/tree.js","src/app/drive/sidebar/folders-tree/folders-tree.service.ts","src/common/core/ui/context-menu/available-context-menus.ts","src/common/core/ui/context-menu/context-menu-ref.ts","src/common/core/ui/context-menu/context-menu-data.ts","src/common/core/ui/context-menu/context-menu.service.ts","src/common/core/ui/context-menu/context-menu.directive.ts","src/app/drive/interactions/drop-targets/base-drop-target.ts","src/app/drive/interactions/drop-targets/folder-drop-target.directive.ts","src/app/drive/sidebar/folders-tree/folders-tree.component.html","src/app/drive/sidebar/folders-tree/folders-tree.component.ts","src/app/drive/entries/move-entries-dialog/move-entries-dialog.component.ts","src/app/drive/entries/move-entries-dialog/move-entries-dialog.component.html","src/app/drive/entries/rename-entry-dialog/rename-entry-dialog.component.html","src/app/drive/entries/rename-entry-dialog/rename-entry-dialog.component.ts","src/app/drive/context-actions/drive-context-actions.ts","src/app/drive/context-actions/actions/entry-actions.ts","src/app/drive/context-actions/actions/folder-actions.ts","src/app/drive/context-actions/actions/shares-actions.ts","src/app/drive/context-actions/actions/trash-actions.ts","src/app/drive/context-actions/actions/trash-page-actions.ts","src/app/drive/interactions/drive-dom-cache.service.ts","src/app/drive/search/search-file-types.ts","src/common/core/types/pagination/pagination-response.ts","src/app/drive/search/main-searchbar/main-searchbar.component.html","src/app/drive/search/main-searchbar/main-searchbar.component.ts","src/app/drive/sidebar/sidebar-action-buttons/sidebar-action-buttons.component.ts","src/app/drive/sidebar/sidebar-action-buttons/sidebar-action-buttons.component.html","src/common/core/ui/skeleton/skeleton-animations.ts","src/app/drive/sidebar/available-space-indicator/available-space-indicator.component.html","src/app/drive/sidebar/available-space-indicator/available-space-indicator.component.ts","src/common/workspaces/workspace-selector/workspace-selector.component.html","src/common/workspaces/workspace-selector/workspace-selector.component.ts","src/app/drive/sidebar/sidebar.component.ts","src/app/drive/sidebar/sidebar.component.html","src/app/drive/details-sidebar/details-panel/entry-description-panel/entry-description-panel.component.html","src/app/drive/details-sidebar/details-panel/entry-description-panel/entry-description-panel.component.ts","src/app/drive/files/components/file-thumbnail/file-thumbnail.component.html","src/app/drive/files/components/file-thumbnail/file-thumbnail.component.ts","src/app/drive/details-sidebar/details-panel/details-panel.component.html","src/app/drive/details-sidebar/details-panel/details-panel.component.ts","src/app/drive/details-sidebar/details-sidebar.component.html","src/app/drive/details-sidebar/details-sidebar.component.ts","src/app/drive/files/components/files-grid/files-grid-item/files-grid-item.component.ts","src/app/drive/files/components/files-grid/files-grid-item/files-grid-item.component.html","src/app/drive/interactions/files-drag-select.service.ts","src/app/drive/interactions/drag-entry.service.ts","src/app/drive/interactions/drive-hammer-interactions.directive.ts","src/app/drive/interactions/toggle-selected-class.directive.ts","src/common/uploads/utils/read-uploaded-folders.ts","src/common/uploads/directives/upload-dropzone.directive.ts","src/common/core/ui/infinite-scroll/infinite.scroll.ts","src/app/drive/interactions/drive-infinite-scroll.directive.ts","src/app/drive/context-actions/components/drive-context-menu/drive-context-menu.component.ts","src/app/drive/context-actions/components/drive-context-menu/drive-context-menu.component.html","src/app/drive/drive-toolbar/entry-breadcrumbs/entry-breadcrumbs.component.html","src/app/drive/drive-toolbar/entry-breadcrumbs/entry-breadcrumbs.component.ts","src/app/drive/drive-toolbar/drive-toolbar.component.ts","src/app/drive/drive-toolbar/drive-toolbar.component.html","src/app/drive/entries/available-sorts.ts","src/app/drive/header/entries-sort-button/entries-sort-button.component.html","src/app/drive/header/entries-sort-button/entries-sort-button.component.ts","src/app/drive/context-actions/components/context-actions-container/context-actions-container.component.html","src/app/drive/context-actions/components/context-actions-container/context-actions-container.component.ts","src/app/drive/drive-toolbar/toolbar-actions/toolbar-actions.component.ts","src/app/drive/drive-toolbar/toolbar-actions/toolbar-actions.component.html","src/app/drive/header/file-list-header/file-list-header.component.ts","src/app/drive/header/file-list-header/file-list-header.component.html","src/app/drive/drive.component.html","src/app/drive/drive.component.ts","src/common/core/keybinds/keycodes.enum.ts","src/common/core/keybinds/keybinds.service.ts","src/app/drive/files/components/files-grid/files-grid.component.html","src/app/drive/files/components/files-grid/files-grid.component.ts","src/app/drive/files/components/files-list/files-list.component.html","src/app/drive/files/components/files-list/files-list.component.ts","src/app/drive/messages/no-recent-entries/no-recent-entries.component.ts","src/app/drive/messages/no-recent-entries/no-recent-entries.component.html","src/app/drive/messages/no-trashed-entries/no-trashed-entries.component.ts","src/app/drive/messages/no-trashed-entries/no-trashed-entries.component.html","src/app/drive/messages/no-starred-entries/no-starred-entries.component.ts","src/app/drive/messages/no-starred-entries/no-starred-entries.component.html","src/app/drive/sharing/no-shared-entries/no-shared-entries.component.ts","src/app/drive/sharing/no-shared-entries/no-shared-entries.component.html","src/app/drive/messages/no-search-entries/no-search-entries.component.ts","src/app/drive/messages/no-search-entries/no-search-entries.component.html","src/app/drive/uploads/upload-dropzone/upload-dropzone.component.ts","src/app/drive/uploads/upload-dropzone/upload-dropzone.component.html","src/app/drive/messages/no-folder-entries/no-folder-entries.component.ts","src/app/drive/messages/no-folder-entries/no-folder-entries.component.html","src/app/drive/entries/entries-container/entries-container.component.html","src/app/drive/entries/entries-container/entries-container.component.ts","src/common/file-preview/current-preview-file.ts","src/common/file-preview/preview-url-transformer.ts","src/common/file-preview/base-file-preview.ts","src/common/file-preview/default-preview/default-preview.component.html","src/common/file-preview/default-preview/default-preview.component.ts","src/common/file-preview/text-preview/text-preview.component.html","src/common/file-preview/text-preview/text-preview.component.ts","src/common/file-preview/audio-preview/audio-preview.component.html","src/common/file-preview/audio-preview/audio-preview.component.ts","src/common/file-preview/video-preview/video-preview.component.html","src/common/file-preview/video-preview/video-preview.component.ts","src/common/file-preview/image-preview/image-preview.component.ts","src/common/file-preview/image-preview/image-preview.component.html","src/common/file-preview/pdf-preview/pdf-preview.component.ts","src/common/file-preview/pdf-preview/pdf-preview.component.html","src/common/file-preview/google-docs-viewer/google-docs-viewer.component.html","src/common/file-preview/google-docs-viewer/google-docs-viewer.component.ts","src/common/file-preview/available-previews.ts","src/common/file-preview/preview-files.service.ts","src/app/drive/preview/link-preview-container/link-preview-password-panel/link-preview-password-panel.component.html","src/app/drive/preview/link-preview-container/link-preview-password-panel/link-preview-password-panel.component.ts","src/app/drive/preview/file-preview-overlay/file-preview-toolbar/file-preview-toolbar.component.html","src/app/drive/preview/file-preview-overlay/file-preview-toolbar/file-preview-toolbar.component.ts","src/common/file-preview/preview-container/preview-container.component.html","src/common/file-preview/preview-container/preview-container.component.ts","src/app/drive/preview/file-preview-overlay/file-preview-overlay.component.html","src/app/drive/preview/file-preview-overlay/file-preview-overlay.component.ts","src/app/drive/preview/folder-preview/folder-preview.component.html","src/app/drive/preview/folder-preview/folder-preview.component.ts","src/app/drive/preview/link-preview-container/link-preview-container.component.html","src/app/drive/preview/link-preview-container/link-preview-container.component.ts","src/app/drive/drive-routing.module.ts","node_modules/@angular/material/__ivy_ngcc__/fesm2015/progress-spinner.js","src/app/drive/context-actions/drive-context-menus.ts","src/app/drive/uploads/uploads-panel/uploads-panel-item/uploads-panel-item.component.html","src/app/drive/uploads/uploads-panel/uploads-panel-item/uploads-panel-item.component.ts","src/app/drive/uploads/uploads-panel/uploads-panel.component.html","src/app/drive/uploads/uploads-panel/uploads-panel.component.ts","src/app/drive/state/handlers/overlay-handler.ts","src/app/drive/state/handlers/donwlod-handler.ts","src/common/uploads/utils/download-file-from-url.ts","src/app/drive/messages/loading-toast/loading-toast.component.ts","src/app/drive/messages/loading-toast/loading-toast.component.html","src/app/drive/state/handlers/toast-handler.ts","src/app/drive/state/handlers/upload-panel-handler.ts","src/app/drive/state/handlers/dialog-handler.ts","src/app/drive/sharing/sharing.module.ts","src/app/drive/state/handlers/reset-scroll-handler.ts","src/app/drive/state/handlers/page-change-handler.ts","src/app/drive/state/handlers/page-load-handler.ts","src/app/drive/state/handlers/remove-star-handler.ts","src/common/core/ui/context-menu/context-menu.module.ts","src/common/file-preview/file-preview.module.ts","src/common/workspaces/workspace-selector/workspace-selector.module.ts","src/app/drive/drive.module.ts","node_modules/lodash/_baseIsSet.js","node_modules/lodash/_baseIsEqual.js","node_modules/lodash/_isIndex.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/tabs.js","node_modules/lodash/_initCloneByTag.js","node_modules/lodash/_cacheHas.js","node_modules/lodash/_assocIndexOf.js","node_modules/lodash/_Set.js","node_modules/lodash/_initCloneArray.js","node_modules/lodash/_cloneTypedArray.js","node_modules/lodash/isMap.js","node_modules/lodash/identity.js","node_modules/lodash/_baseToString.js"],"names":["assocIndexOf","module","exports","key","this","__data__","Uint8Array","arrayBuffer","result","constructor","byteLength","set","baseProperty","basePropertyDeep","isKey","toKey","path","baseCreate","getPrototype","isPrototype","object","_c0","MatAutocomplete_ng_template_0_Template","rf","ctx","ctx_r0","id","_classList","_c1","_uniqueAutocompleteIdCounter","MatAutocompleteSelectedEvent","source","option","MatAutocompleteBase","_MatAutocompleteMixinBase","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS","providedIn","factory","autoActiveFirstOption","_MatAutocompleteBase","_changeDetectorRef","_elementRef","defaults","super","_activeOptionChanges","EMPTY","showPanel","_isOpen","displayWith","optionSelected","opened","closed","optionActivated","_autoActiveFirstOption","value","length","split","reduce","classList","className","trim","_setVisibilityClasses","nativeElement","_keyManager","options","withWrap","change","subscribe","index","emit","toArray","_setVisibility","unsubscribe","scrollTop","panel","markForCheck","event","_visibleClass","_hiddenClass","ɵfac","t","ɵdir","type","viewQuery","_t","template","first","inputs","panelWidth","outputs","features","MatAutocomplete","arguments","ɵMatAutocomplete_BaseFactory","ɵcmp","selectors","contentQueries","dirIndex","optionGroups","hostAttrs","disableRipple","exportAs","provide","useExisting","ngContentSelectors","decls","vars","consts","directives","styles","encapsulation","changeDetection","_MatAutocompleteOriginBase","elementRef","MatAutocompleteOrigin","ɵMatAutocompleteOrigin_BaseFactory","MAT_AUTOCOMPLETE_SCROLL_STRATEGY","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","useFactory","overlay","scrollStrategies","reposition","MAT_AUTOCOMPLETE_VALUE_ACCESSOR","MatAutocompleteTrigger","multi","_MatAutocompleteTriggerBase","_element","_overlay","_viewContainerRef","_zone","scrollStrategy","_dir","_formField","_document","_viewportRuler","_componentDestroyed","_autocompleteDisabled","_manuallyFloatingLabel","_viewportSubscription","_canOpenOnNextFocus","_closeKeyEventStream","_windowBlurHandler","activeElement","panelOpen","_onChange","_onTouched","position","autocompleteAttribute","_overlayAttached","optionSelections","autocomplete","map","onSelectionChange","onStable","pipe","_scrollStrategy","window","_getWindow","runOutsideAngular","addEventListener","changes","_positionStrategy","_setStrategyPositions","_overlayRef","updatePosition","removeEventListener","_destroyPanel","complete","_attachOverlay","_floatLabel","_resetLabel","hasAttached","detach","_closingActionsSubscription","detectChanges","tabOut","_getOutsideClickStream","detachments","activeItem","clickTarget","_isInsideShadowRoot","composedPath","target","formField","customOrigin","connectedTo","contains","overlayElement","Promise","resolve","then","_setTriggerValue","fn","isDisabled","disabled","keyCode","preventDefault","activeOption","_selectViaInteraction","_resetActiveItem","prevActiveItem","isArrowKey","onKeydown","_canOpen","openPanel","_scrollToOption","activeItemIndex","parseFloat","_previousValue","shouldAnimate","floatLabel","_animateAndLockLabel","firstStable","optionChanges","reapplyLastPosition","wasOpen","panelClosingActions","_setValueAndClose","closePanel","dispose","toDisplay","inputValue","_control","_clearPreviousSelectedOption","focus","_emitSelectEvent","skip","forEach","selected","deselect","overlayRef","setOrigin","_getConnectedElement","updateSize","width","_getPanelWidth","_portal","create","_getOverlayConfig","keydownEvents","altKey","next","stopPropagation","attach","_subscribeToClosingActions","positionStrategy","_getOverlayPosition","direction","strategy","flexibleConnectedTo","withFlexibleDimensions","withPush","belowPositions","originX","originY","overlayX","overlayY","panelClass","_aboveClass","abovePositions","positions","withPositions","getConnectedOverlayOrigin","_getHostWidth","getBoundingClientRect","setActiveItem","element","readOnly","_a","defaultView","labelCount","_setScrollTop","_getHostElement","newScrollPosition","offsetTop","offsetHeight","_getScrollTop","autocompleteDisabled","ɵMatAutocompleteTrigger_BaseFactory","hostVars","hostBindings","_handleFocus","$event","_handleInput","_handleKeydown","toString","MatAutocompleteModule","ɵmod","ɵinj","providers","imports","baseGetTag","isObjectLike","baseIsArguments","objectProto","Object","prototype","hasOwnProperty","propertyIsEnumerable","isArguments","call","ListCache","Map","MapCache","data","pairs","LARGE_ARRAY_SIZE","push","size","ChipsModule","baseIsSet","baseUnary","nodeUtil","nodeIsSet","isSet","DatatableModule","setCacheAdd","setCacheHas","SetCache","values","add","has","_c2","_c3","enterDuration","_c4","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","disableToggleValue","nextUniqueId","MAT_SLIDE_TOGGLE_VALUE_ACCESSOR","MatSlideToggle","MatSlideToggleChange","checked","MatSlideToggleBase","_MatSlideToggleMixinBase","_focusMonitor","tabIndex","_animationMode","_","_uniqueId","_required","_checked","name","labelPosition","ariaLabel","ariaLabelledby","toggleChange","parseInt","monitor","focusOrigin","_inputElement","stopMonitoring","_emitChangeEvent","focusVia","_thumbEl","_thumbBarEl","color","required","_onChangeEvent","_onInputClick","_onLabelTextChange","_r0","_r4","inputId","textContent","_MatSlideToggleRequiredValidatorModule","MatSlideToggleModule","root","Paginator","router","http","localStorage","params$","BehaviorSubject","paginatedOnce$","loading$","response$","dontUpdateQueryParams","perPageCacheKey","noResults$","r","pagination","current_page","userParams","url","initialData","queryParams","subscription","currentQueryParams","perPage","per_page","page","init","current","total","paginate","newPerPage","routerState","snapshot","uri","switchMap","params","firstPagination","get","of","tap","updateQueryParams","response","Array","isArray","join","navigate","replaceUrl","currentPage","last_page","sortingDataAccessor","sortHeaderId","numberValue","Number","DatatableService","modal","sort$","filters$","staticParams$","paginator","ignoreNextParamChange","originalData$","data$","selectedRows$","tableData","reset","config","staticParams","connectToPaginator","mainSub","combineLatest","debounceTime","assign","entries","keys","applyLocalTransforms","paginatorSub","pairwise","prev","infiniteScroll","query","filter","obj","dataStr","objectToStr","currentTerm","toLowerCase","transformedFilter","indexOf","orderBy","orderDir","sort","a","b","valueA","valueB","valueAType","valueBType","comparatorResult","filters","cmp","open","beforeClosed","modifiedResource","resource","replacements","afterClosed","confirmed","funcToString","Function","func","e","baseGet","memoize","resolver","TypeError","memoized","args","apply","cache","Cache","hashClear","hashDelete","hashGet","hashHas","hashSet","Hash","clear","entry","castPath","isIndex","isLength","hasFunc","stringToPath","freeExports","nodeType","freeModule","Buffer","undefined","allocUnsafe","buffer","isDeep","slice","copy","DatatableFiltersPanelComponent","overlayPanelRef","close","dialogContainer","AllowedExtensionsValidation","i18n","errorMessage","extensions","file","some","extension","FormattedFileSizePipe","bytes","precision","isNaN","String","isFinite","Ctor","arrayLikeKeys","baseKeys","isArrayLike","WORKSPACE_CONFIG","isSymbol","reIsDeepProp","reIsPlainProp","test","MAT_CHIP_REMOVE","MAT_CHIP_AVATAR","MAT_CHIP_TRAILING_ICON","MatChipBase","_MatChipMixinBase","MatChip","_ngZone","platform","globalRippleOptions","animationMode","_hasFocus","chipListSelectable","_chipListMultiple","_chipListDisabled","_selected","_selectable","_disabled","_removable","_onFocus","_onBlur","selectionChange","destroyed","removed","_addHostClassName","_chipRippleTarget","document","createElement","appendChild","_chipRipple","setupTriggerEvents","rippleConfig","_animationsDisabled","coercedValue","_dispatchSelectionChange","_value","selectable","hasAttribute","tagName","chip","_removeTriggerEvents","_markForCheck","isUserInput","removable","remove","toggleSelected","run","avatar","trailingIcon","removeIcon","_handleClick","_blur","ariaSelected","MatChipRemove","_parentChip","nodeName","setAttribute","parentChip","MAT_CHIPS_DEFAULT_OPTIONS","MatChipListBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","_MatChipListMixinBase","MatChipListChange","MatChipList","controlType","_lastDestroyedChipIndex","_destroyed","_uid","_tabIndex","_userTabIndex","_multiple","_compareWith","o1","o2","ariaOrientation","valueChange","valueAccessor","multiple","_selectionModel","empty","_syncChipsState","_initializeSelection","writeValue","_chipInput","stateChanges","placeholder","_placeholder","focused","_hasFocusedChip","chips","withVerticalOrientation","withHomeAndEnd","withHorizontalOrientation","dir","_allowFocusEscape","_resetChips","_updateTabIndex","_updateFocusForDestroyedChips","updateErrorState","_dropSubscriptions","inputElement","ids","_ariaDescribedby","_setSelectionByValue","_originatesFromChip","setFirstItemActive","_focusInput","_isInputEmpty","setLastItemActive","newChipIndex","Math","min","_clearSelection","currentValue","_selectValue","_sortValues","correspondingChip","find","selectViaInteraction","select","fallbackValue","valueToEmit","setTimeout","_markAsTouched","_listenToChipsFocus","_listenToChipsSelection","_listenToChipsRemoved","_chipFocusSubscription","_chipBlurSubscription","_chipSelectionSubscription","_chipRemoveSubscription","chipSelectionChanges","isSelected","_propagateChanges","chipFocusChanges","chipIndex","_isValidIndex","updateActiveItem","chipBlurChanges","chipRemoveChanges","currentElement","parentElement","_keydown","role","errorState","compareWith","errorStateMatcher","nextUniqueId$1","MatChipInput","_defaultOptions","_addOnBlur","separatorKeyCodes","chipEnd","_chipList","registerInput","_emitChipEnd","addOnBlur","_isSeparatorKey","input","Set","_focus","_onInput","invalid","chipList","ɵ0","MatChipsModule","useValue","nativeKeys","Symbol","nativeObjectToString","symToStringTag","toStringTag","isOwn","tag","unmasked","baseClone","CLONE_DEEP_FLAG","array","offset","isObject","fromIndex","baseIsNative","getValue","stubFalse","isBuffer","copyObject","keysIn","UploadButtonDirective","el","filesSelected","files","uid","coreJsData","maskSrcKey","exec","IE_PROTO","LEFT_POSITION","offsetX","datatable","DatatableHeaderComponent","cd","overlayPanel","showSelectedActions","subscriptions","v","filterSub","filterPanelRef","changeSub","numberOfRowsSelected","s","offsetY","origin","filterButton","mobilePosition","filterPanelTemplate","maxWidth","getSymbolsIn","removeNullFromObject","baseGetAllKeys","baseIsEqual","hasIn","isStrictComparable","matchesStrictComparable","srcValue","objValue","COMPARE_PARTIAL_FLAG","memoizeCapped","rePropName","reEscapeChar","string","charCodeAt","replace","match","number","quote","subString","UploadsModule","getTag","getMapData","eq","equalArrays","mapToArray","setToArray","symbolProto","symbolValueOf","valueOf","other","bitmask","customizer","equalFunc","stack","byteOffset","message","convert","stacked","ChipInputComponent","emailsInput","selectMode","formControl","items$","suggestedValues$","suggestFn","bindToSearchControl","parseEmailsOnPaste","items","splice","propagateChange","propagate","matAutocomplete","isOpen","duplicate","findValueIndex","inputEl","setValue","findIndex","item","valueChanges","filtered","emails","clipboardData","getData","selection","getSelection","rangeCount","deleteFromDocument","email","addFromAutocomplete","TableHeaderCheckboxComponent","changeRef","allRowsSelected","toggleAllRows","nativeCreate","SkeletonComponent","theme","animation","variant","dark","isDarkMode","predicate","fromRight","freeGlobal","freeSelf","self","arrayIncludes","arrayIncludesWith","cacheHas","createSet","iteratee","comparator","includes","isCommon","seen","outer","computed","seenIndex","resIndex","getPrototypeOf","isFunction","baseAssignValue","arrayFilter","stubArray","nativeGetSymbols","getOwnPropertySymbols","symbol","isMasked","toSource","reIsHostCtor","reIsNative","RegExp","hasKey","val","getRawTag","objectToString","getNative","defineProperty","Stack","arrayEach","assignValue","baseAssign","baseAssignIn","cloneBuffer","copyArray","copySymbols","copySymbolsIn","getAllKeys","getAllKeysIn","initCloneArray","initCloneByTag","initCloneObject","isMap","cloneableTags","isFlat","isFull","isArr","isFunc","subValue","props","WeakMap","BlockedExtensionsValidation","nativeKeysIn","isProto","isKeyable","DataView","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","ctorString","baseFindIndex","baseIsNaN","strictIndexOf","UserColumnComponent","showEmail","n","TableSortHeaderComponent","datable","focusMonitor","arrowVisible","arrowDirection","disableSort","columnName","sortSub","onMouseLeave","getDirection","changeSort","getSymbols","PERSONAL_WORKSPACE","default","WorkspacesService","currentUser","cookie","notifications","toast","available$","activeId$","getIdFromCookie","activeWorkspace$","permission","member","is_owner","permissions","p","workspaceId","cookieName","workspace","w","workspaces","i","BASE_URI","delete","payload","post","pushAndSelect","put","inviteId","userId","roleId","memberId","member_id","model_type","clickedOnNotification$","notification","action","err","handleWorkspaceInviteClickError","deleteInvite","notif","status","Default","global","cloneArrayBuffer","dataView","mapTo","lift","MapToOperator","subscriber","Subscriber","destination","x","MatDrawerContainer_div_0_Template","_r3","_onBackdropClicked","_isShowingBackdrop","MatDrawerContainer_mat_drawer_content_3_Template","MatSidenavContainer_div_0_Template","MatSidenavContainer_mat_sidenav_content_3_Template","_c5","matDrawerAnimations","transformDrawer","MAT_DRAWER_DEFAULT_AUTOSIZE","MAT_DRAWER_CONTAINER","MatDrawerContent","_container","scrollDispatcher","ngZone","_contentMarginChanges","_contentMargins","left","right","MatDrawer","_focusTrapFactory","_platform","_doc","_elementFocusedBeforeDrawerWasOpened","_enableAnimations","_position","_mode","_disableClose","_opened","_animationStarted","Subject","_animationEnd","_animationState","openedChange","_openedStream","o","openedStart","fromState","toState","_closedStream","closedStart","onPositionChanged","_modeChanged","_takeFocus","_isFocusWithinDrawer","_restoreFocus","fromEvent","disableClose","takeUntil","distinctUntilChanged","y","_updateFocusTrapState","_autoFocus","mode","toggle","autoFocus","_focusTrap","focusInitialElementWhenReady","hasMovedFocus","_openedVia","blur","activeEl","isBrowser","destroy","openedVia","_setOpen","restoreFocus","take","offsetWidth","enabled","_animationStartListener","_animationDoneListener","MatDrawerContainer","viewportRuler","defaultAutosize","_drawers","backdropClick","_doCheckSubject","_validateDrawers","updateContentMargins","_autosize","_start","_end","_backdropOverride","_userContent","_content","_allDrawers","startWith","drawer","notifyOnChanges","_watchDrawerToggle","_watchDrawerPosition","_watchDrawerMode","_isDrawerOpen","_left","_getWidth","_right","_isPushed","_setContainerClass","onMicrotaskEmpty","merge","isAdd","_closeModalDrawersViaBackdrop","_canHaveBackdrop","_closeViaBackdropClick","autosize","hasBackdrop","MatSidenavContent","changeDetectorRef","container","MatSidenav","_fixedInViewport","_fixedTopGap","_fixedBottomGap","ɵMatSidenav_BaseFactory","fixedInViewport","fixedTopGap","fixedBottomGap","MatSidenavContainer","ɵMatSidenavContainer_BaseFactory","MatSidenavModule","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","webpackPolyfill","deprecate","paths","children","enumerable","l","baseIsMatch","getMatchData","matchData","pop","reFlags","regexp","lastIndex","baseTimes","isTypedArray","inherited","isArg","isBuff","isType","skipIndexes","DatatableHeaderSearchInputComponent","route","searchControl","hideIcon","addFilter","baseIsTypedArray","nodeIsTypedArray","typedArrayTags","noop","objectCreate","proto","baseToString","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","equalByTag","equalObjects","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","TableBodyCheckboxComponent","isRowSelected","toggleRow","arrayPush","keysFunc","symbolsFunc","stackClear","stackDelete","stackGet","stackHas","stackSet","defaultThrottleConfig","leading","trailing","throttleTime","duration","scheduler","ThrottleTimeOperator","_hasTrailingValue","_trailingValue","throttled","schedule","dispatchNext","arg","clearThrottle","queueId","canceled$","processing$","uploadedResponse$","ReplaySubject","progress$","percentage","error$","customData","uploadedFile","completed","finalize","setProgress","eta","DefaultUploadValidator","DEFAULT_MAX_FILE_SIZE_MB","showToast","validations","maxSize","getMaxFileSize","allowedExtensions","getAllowedExtensions","blockedExtensions","getBlockedExtensions","settings","convertToBytes","getJson","UploadQueueService","api","defaultValidator","uploads$","totalProgress$","uploadsAdded$","count$","pending","queueItem","fileEntry","progress","upload","c","asObservable","validator","uploadQueueItems","transformUploads","concat","transformed","updateCount","from","u","mergeMap","uploadQueueItem","catchError","errResponse","handleUploadFailure","bubbleError","throwError","handleUploadEvent","willProcessFiles","COMPLETED","body","queueItemId","speed","totalBytes","completedBytes","updateTotalProgress","addError","cancel","activeUpload","validate","failed","PROGRESS","updateProgress","completeUpload","msg","errors","showLearnMoreButton","DefaultUpload","isAdmin","errorUpload","onAction","inProgress","baseHasIn","hasPath","DELETE_RESOURCE_MESSAGE","title","ok","baseIndexOf","isNew","newValue","transform","MatFormFieldControl","MAT_FORM_FIELD","MatFormFieldModule","noCustomizer","SkeletonModule","baseKeysIn","freeProcess","process","require","types","binding","defaultValue","arraySome","isPartial","arrLength","othLength","arrStacked","othStacked","arrValue","othValue","compared","othIndex","baseIteratee","baseUniq","UploadProgressBarComponent","uploadQueue","hidden","totalProgress","DatatableFooterComponent","hidePerPage","perPageControl","to","totalRecords","havePrevious","haveNext","emitEvent","changePerPage","previousPage","nextPage","FaviconPipe","location","protocol","host","URL","objProps","objLength","objStacked","skipCtor","objCtor","othCtor","baseMatches","baseMatchesProperty","identity","property","LoadUserFolders","LoadUserSpaceUsage","BuildFolderTree","folders","OpenFolder","folder","OpenSearchPage","SelectEntries","SelectAllEntries","DeselectAllEntries","DeleteSelectedEntries","OpenUploadsPanel","CloseUploadsPanel","AddEntries","MoveEntries","OpenDialog","dialog","OpenConfirmDialog","confirmAction","SetViewMode","ToggleDetailsSidebar","ToggleSidebar","UploadFiles","RestoreTrashedEntries","DeleteTrashedEntriesForever","EmptyTrash","OpenFilePreview","DownloadEntries","link","password","AddStar","RemoveStar","RemoveEntries","LoadMoreEntries","loadMore","ReloadPageEntries","CopySelectedEntries","OpenUploadWindow","ShowLoadingToast","HideLoadingToast","ResetState","UpdateEntries","SetCurrentUser","user","SetWorkspace","UpdateEntryDescription","description","DrivePage","viewName","folderHash","hasActions","sortColumn","sortDirection","RECENT_PAGE","recentOnly","SEARCH_PAGE","SHARES_PAGE","sharedOnly","TRASH_PAGE","deletedOnly","WORKSPACE_INDEX_PAGE","STARRED_PAGE","starredOnly","FolderPage","hash","RecentEntriesPageOpened","FolderPageOpened","SharesFolderOpened","TrashPageOpened","WorkspacesIndexPageOpened","SearchPageOpened","StarredPageOpened","EntriesSelectedViaDrag","EntrySelectedViaContextMenu","EntryTapped","ctrlKey","EntryDoubleTapped","FileDeleteSuccess","deletedFiles","EntryContextMenuOpened","NewFolderCreated","EntryRenamed","newName","StartedDragging","StoppedDragging","MoveEntriesSuccess","oldLocation","MoveEntriesFailed","messages","TrashedEntriesDeleteSuccess","TrashedEntriesRestoreSuccess","NotEnoughSpaceError","UserSpaceUsageChanged","BreakpointChanged","DRIVE_STATE_MODEL_DEFAULTS","isMobile","activePage","folderTree","flatFolders","userFoldersLoaded","selectedEntries","dragging","loading","uploadsPanelOpen","viewMode","detailsVisible","sidebarOpen","activeWorkspace","spaceUsage","available","used","meta","lastPage","LoadingToastMessages","DRIVE_UPLOAD_INPUT_CONFIG","FOLDERS_API_ROUTES","FoldersApiService","GET_ALL","CREATE","DriveEntryApiService","entryId","emptyTrash","entryIds","DriveUrlsService","driveRoot","DriveUploadValidator","DriveState","foldersApi","entriesApi","driveUrls","uploads","store","localStore","uploadInputConfig","state","parent_id","f","rootFolder","every","tags","spaceUsed","spaceAvail","folderUser","users","owns_entry","entry_permissions","activeFolder","userHasPermission","edit","workspace_id","getAllForCurrentUser","patchState","dispatch","getState","tree","hashTable","len","treeHash","parent","oldState","newState","transformQueryParams","getEntriesForFolder","currentFolder","deleted_at","oldParams","selectSnapshot","alreadySelected","curr","entryDoubleTapped","selectedEntryIds","actions","selectedEntryParent","canMoveEntriesTo","moveEntries","currentEntries","newEntries","newSize","sum","file_size","enoughSpaceLeftToUpload","destinationId","start","httpParams","parentId","all_parents","newEntry","deleteForever","restoredEntries","restore","addStar","removeStar","removeTag","count","copyEntries","directory","getSpaceUsage","mainEntries","updatedEntry","mainIndex","selectedIndex","update","setState","folderId","movingEntries","startsWith","cancelUncompleted","selectedEntry","selectedEntryOrActiveFolder","userSpaceUsed","userSpaceAvailable","SUPPORTED_ENTRY_TYPES","FileIconComponent","mime","text","EntryDragPreviewComponent","DRIVE_ENTRY_FULL_PERMISSIONS","view","download","SharesApiService","SetInitialUsers","UpdateUserPermissions","RemoveUser","SetUsers","ShareEntries","ShareEntriesFailed","ShareDialogState","sharesApi","usersWithAccess","original","loadingUsers","all","uniqueUsers","varies","toggleUserLoading","changePermissions","updateUsers","detachUser","shareEntries","updateEntriesInDriveStore","errorResponse","isLoading","newUsers","updatedEntries","SharingPermissionsButtonComponent","compact","updateUserPermissions","newPermissions","selectPermission","EntriesAccessTableComponent","ShareDialogComponent","dialogRef","actions$","destroyed$","suggestUserEmails","getAll","resetModel","bindToShareError","bindToShareModel","shareModel","setErrorMessages","ShareableLinksApiService","linkId","LoadShareableLink","UpdateShareableLink","CreateShareableLink","DeleteShareableLink","ToggleOptionsPanel","LinkCopySuccess","ResetShareLinkState","defaultState","optionsPanelVisible","backendErrors","linkOptions","allowDownload","allowEdit","expiresAt","ShareLinkState","linksApi","entry_id","cachedLink","findByEntryId","autoCreate","LinkOptionsComponent","form","date","time","passwordVisible","expirationVisible","bindToLinkChange","getPayload","link$","hydrateExpirationForm","expires_at","patchValue","allow_edit","allow_download","parts","substr","Date","toJSON","saveChanges","toggleOptionsPanel","ShareLinkDialogComponent","shareableLink$","bindToOptionsPanelToggle","focusInput","getBaseUrl","sub","optionsVisible","network","image","base","href","innerWidth","top","innerHeight","getElementById","height","padding","opacity","overflow","CrupdateFolderDialogComponent","folderName","setErrors","confirm","FlatTreeControl","expansionModel","dataNode","_trackByValue","collapseDescendants","expandDescendants","toBeProcessed","getDescendants","trackBy","getLevel","isExpandable","results","dataNodes","node","CDK_TREE_NODE_OUTLET_NODE","CdkTreeNodeOutlet","viewContainer","_node","CdkTreeNodeOutletContext","$implicit","CdkTreeNodeDef","when","CdkTree","_differs","_onDestroy","_levels","viewChange","end","MAX_VALUE","_dataSource","dataSource","_switchDataSource","_dataDiffer","_nodeOutlet","disconnect","_dataSubscription","defaultNodeDefs","_nodeDefs","def","_defaultNodeDef","_observeRenderChanges","dataStream","connect","isObservable","renderNodeChanges","dataDiffer","parentData","diff","forEachOperation","adjustedPreviousIndex","currentIndex","previousIndex","insertNode","move","nodeData","_getNodeDef","context","level","treeControl","createEmbeddedView","mostRecentTreeNode","CdkTreeNode","_tree","_dataChanges","_data","_setRoleFromData","isExpanded","CdkNestedTreeNode","childrenNodes","getChildren","updateChildrenNodes","nodeOutlet","_clear","ngOnDestroy","outlet","_getNodeOutlet","_children","outlets","cssUnitPattern","CdkTreeNodePadding","_treeNode","_renderer","indentUnits","_indent","_setPadding","_level","_setLevelInput","indent","_setIndentInput","nodeLevel","forceChange","_paddingIndent","_currentPadding","paddingProp","resetProp","style","units","CdkTreeNodeToggle","_recursive","recursive","toggleDescendants","_toggle","CdkTreeModule","_MatTreeNodeMixinBase","MatTreeNode","MatTreeNodeDef","ɵMatTreeNodeDef_BaseFactory","MatNestedTreeNode","ngAfterContentInit","MatTreeNodePadding","ɵMatTreeNodePadding_BaseFactory","MatTreeNodeOutlet","MatTree","ɵMatTree_BaseFactory","MatTreeNodeToggle","ɵMatTreeNodeToggle_BaseFactory","MatTreeModule","transformFunction","resultNodes","parentMap","flatNode","_flattenChildren","child","childParentMap","_flattenNode","structuredData","nodes","currentExpand","expand","_treeControl","_treeFlattener","_flattenedData","_expandedData","flattenNodes","collectionViewer","changed","expandFlattenedNodes","FoldersTreeService","createTreeFlattener","createTreeControl","createTreeDataSource","flattener","transformer","control","expandable","AVAILABLE_CONTEXT_MENUS","ContextMenuRef","attachments","backdropElement","CONTEXT_MENU_DATA","ContextMenu","zone","injector","events","component","createOverlay","openContextMenu","portal","bindEventsToOverlay","removeLastOrigin","getMenuPositionStrategy","backdropClass","contextMenuElement","createOriginFromEvent","primary","lastOrigin","HTMLElement","EventTarget","clientY","clientX","ContextMenuDirective","contextMenu","_availableMenus","disableContextMenu","availableMenus","getMenuComponent","getMenuData","BaseDropTarget","subs","onDragStart","onDragEnd","enter","onDragEnter","leave","onDragLeave","classes","canDrop","active","removeDragOverClass","executeAction","FolderDropTargetDirective","FoldersTreeComponent","expanded","showRootNode","folderSelected","selectedFolderId$","sub1","userFolders","fs","sub2","MoveEntriesDialogComponent","destination$","canMove$","failure","success","RenameEntryDialogComponent","entryName","DriveContextActions","updateStatus","multipleEntriesSelected","allStarred","allSelectedEntriesStarred","onlyFoldersSelected","getSelectedFolder","getSelectedEntries","EntryActions","icon","showInCompact","execute","visible","hasPermission","separatorBefore","openUploadWindow","FolderActions","noopTrue","SharesActions","shares","TrashActions","bodyBold","TrashPageActions","DriveDomCacheService","SEARCH_FILE_TYPES","EMPTY_PAGINATION_RESPONSE","MainSearchbarComponent","driveApi","defaultResults","results$","displayFn","lastQuery","setDefaultResults","q","search","content","openSearchPage","resetForm","closePanelAndBlur","getCurrentUserEntries","entryType","trigger","SidebarActionButtonsComponent","openUploadsPanel","openNewFolderDialog","canUpload","SKELETON_ANIMATIONS","AvailableSpaceIndicatorComponent","spaceUsedPercent","WorkspaceSelectorComponent","vcr","withCount","m","WorkspaceModule","components","crupdateModal","viewContainerRef","manageMembers","menuTrigger","closeMenu","SidebarComponent","urls","openFolder","EntryDescriptionPanelComponent","editingDescription$","savingDescription$","textArea","queryList","FileThumbnailComponent","thumbnail","separator","DetailsPanelComponent","owner$","DetailsSidebarComponent","FilesGridItemComponent","driveEntry","FilesDragSelectService","initial","cacheClientRects","createSelectBox","bindScroll","gridElements","getGridElements","hammerToRelative","scrollCont","selectBox","lastPanEvent","resizeBox","removeSelectBox","dispatchSelectedAction","unbindScroll","newPos","getNewSelectorPosition","scrollAndRepositionSelector","selectIntersectingElements","tmp","x1","y1","x2","y2","bottom","area","rectToRelative","filesContRect","edge","reachedAreaEdge","scrollBy","scrollDiff","scrollValue","abs","scrollHeight","applyPosition","selectedBoxRect","gridItem","rect","center","dataset","filesCont","scrollContRect","querySelectorAll","scrollListener","DragEntryService","domCache","dragPreview","DriveHammerInteractionsDirective","dragSelect","dragEntry","bindToHammer","hammerManager","enable","createHammerManager","onPanStart","onPan","onPanEnd","onTap","onDoubleTap","Hammer","Manager","Tap","pan","Pan","doubleTap","taps","recognizeWith","on","gridElement","getEntryEl","panService","getEntryByEl","en","entryEl","srcEvent","metaKey","closest","ToggleSelectedClassDirective","els","readDirRecursive","readEntriesRecursive","reader","allEntries","readEntries","createReader","childEntry","isDirectory","transformFileEntry","fullPath","UploadDropzoneDirective","disableDropzoneClick","disableDropzone","uploadConfig","filesDropped","handleDragEnter","handleDragOver","handleDragLeave","handleDrop","clickButton","handleClick","removeClassesFromDropzone","emitUploadEvent","dropzoneDisabled","dataTransfer","dropEffect","newEl","elementFromPoint","kind","webkitGetAsEntry","hasFiles","InfiniteScroll","threshold","scrollSub","getScrollContainer","capture","passive","onScroll","canLoadMore","targetCanScroll","scrollY","documentElement","loadMoreItems","DriveInfiniteScrollDirective","canLoadMoreEntries","DriveContextMenuComponent","EntryBreadcrumbsComponent","breadcrumb","foldersLoaded","bindToActivePage","activePageSub","breadcrumbs","getRootBreadcrumb","folderPath","getBreadcrumbForFolder","allFolders","pathFolder","ROOT_FOLDER_PAGE","userOwnsActiveFolder","generateBreadCrumb","DriveToolbarComponent","AVAILABLE_SORTS","DEFAULT_VALUE","column","EntriesSortButtonComponent","btnDisabled","availableSorts","ContextActionsContainerComponent","hasMoreActions$","combined","setActions","moreActionsButton","getActions","setActionsForEntry","isOwner","userOwnsSelectedEntries","ToolbarActionsComponent","toggleViewMode","ToggleDetails","anythingSelected","detailsOpen","FileListHeaderComponent","sortFormControl","DriveComponent","breakpoints","setViewMode","cacheDemoElements","observeBreakpointChanges","bindToWorkspace","getModel","model$","filesContainer","scrollContainer","observe","matches","sub3","bindToNotificationClick","toggleSidebar","uploadFiles","Keycodes","Keybinds","bindings","keybind","callback","parseKeybindString","keybindString","executeBindings","bindingMatches","toUpperCase","ctrl","shiftKey","shift","parsed","part","FilesGridComponent","disableInteractions","FilesListComponent","NoRecentEntriesComponent","NoTrashedEntriesComponent","NoStarredEntriesComponent","NoSharedEntriesComponent","NoSearchEntriesComponent","UploadDropzoneComponent","NoFolderEntriesComponent","EntriesContainerComponent","keybinds","tabindex","keybindSub","listenOn","addWithPreventDefault","activePageName","entriesEmpty","CURRENT_PREVIEW_FILE","PREVIEW_URL_TRANSFORMER","BaseFilePreview","sanitizer","filePreviewWrapper","bypassSecurityTrustResourceUrl","getSrc","responseType","DefaultPreviewComponent","TextPreviewComponent","content$","fileTooLarge$","loadFileContents","getContents","AudioPreviewComponent","invalidMedia","canPlayVideo","src","player","play","canPlayType","playerEl","VideoPreviewComponent","ImagePreviewComponent","PdfPreviewComponent","GoogleDocsViewerComponent","showDefaultPreview$","showDefaultPreview","iframe","onload","clearTimeout","timeoutRef","stopLoading","getIframeSrc","catch","reject","previewUrl","preview_token","getFullPreviewUrl","encodeURIComponent","AVAILABLE_PREVIEWS","DefaultPreviews","video","audio","pdf","spreadsheet","powerPoint","word","PreviewFilesService","availablePreviews","previewUriTransformer","updateMeta","updatePortal","newPointer","oldPointer","pointer","getCurrent","createInjector","activeFile","injectionTokens","LinkPreviewPasswordPanelComponent","links","passwordControl","passwordError$","passwordValid","checkPassword","handlePasswordCheck","submitPassword","previewFiles","FilePreviewToolbarComponent","showLogo","disableDownload","showCloseButton","PreviewContainerComponent","downloadSub","comp","instance","FilePreviewOverlayComponent","bindToDownload","previewContainer","optionsButton","shareableLink","closeOverlay","FolderPreviewComponent","linkApi","breadcrumb$","pagination$","ngOnInit","loadChildren","generateBreadcrumb","setPagination","folderChildren","ent","activeEntry","hideMoreOptionsBtn","getEntry","openPreviewOverlay","makeLinkHash","subFolder","replaceChildren","order","findByHash","withEntries","onClick","LinkPreviewContainerComponent","passwordPanelVisible$","linkChanged","setBackgroundClass","togglePasswordPanel","showPreview","importEntry","dashboardRoutes","canActivate","WorkspaceWrapperModule","DriveRoutingModule","forChild","MatProgressSpinner__svg_circle_1_Template","_spinnerAnimationLabel","_getStrokeDashOffset","_getStrokeCircumference","_getCircleStrokeWidth","_getCircleRadius","MatProgressSpinner__svg_circle_2_Template","ctx_r1","MatSpinner__svg_circle_1_Template","MatSpinner__svg_circle_2_Template","MatProgressSpinnerBase","_MatProgressSpinnerMixinBase","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","diameter","MatProgressSpinner","_diameter","_fallbackAnimation","trackedDiameters","_diameters","_getSpinnerAnimationLabel","head","EDGE","TRIDENT","_noopAnimations","_forceAnimations","strokeWidth","_styleRoot","_attachStyleNode","_strokeWidth","max","viewBox","PI","styleRoot","currentDiameter","diameters","diametersForElement","styleTag","_getAnimationText","strokeCircumference","_getViewBox","MatSpinner","MatProgressSpinnerModule","DRIVE_CONTEXT_MENUS","UploadsPanelItemComponent","animationFrame","isEmpty","UploadsPanelComponent","activeUploads","minimized$","toggleMinimized","OverlayHandler","DownloadHandler","click","removeChild","getDownloadUrl","hashes","getEntryHashes","LoadingToastComponent","ToastHandler","entriesDeleted","entriesStarred","entriesUnstarred","entriesMoveFailed","folderCreated","entriesMoved","entriesDeletedForever","entriesRestoredFromTrash","entryRenamed","linkCopiedToClipboard","notEnoughSpace","loadingToast","oldName","toastRef","openComponent","dismiss","overlayConfig","UploadPanelHandler","closeUploadsPanel","uploadPanelRef","DialogHandler","openConfirmDialog","SharingModule","ResetScrollHandler","scrollTo","PageChangeHandler","PageLoadHandler","urlAfterRedirects","isLoggedIn","getPageLoadAction","getPageUriParams","pageName","firstChild","RemoveStarHandler","ContextMenuModule","FilePreviewModule","useClass","WorkspaceSelectorModule","STATE_HANDLERS","DriveModule","handler","ext","forFeature","baseIsEqualDeep","reIsUint","MatTab_ng_template_0_Template","MatTabBody_ng_template_2_Template","a0","animationDuration","a1","MatTabGroup_div_2_ng_template_2_ng_template_0_Template","MatTabGroup_div_2_ng_template_2_Template","tab_r4","templateLabel","MatTabGroup_div_2_ng_template_3_Template","textLabel","MatTabGroup_div_2_Template","_r12","i_r5","ctx_r11","_getTabLabelId","_getTabIndex","_tabs","_getTabContentId","MatTabGroup_mat_tab_body_5_Template","_r16","_removeTabBodyWrapperHeight","_setTabBodyWrapperHeight","tab_r13","i_r14","ctx_r3","_c6","_c7","_c8","_c9","_MAT_INK_BAR_POSITIONER","offsetLeft","MatInkBar","_inkBarPositioner","show","requestAnimationFrame","_setStyles","visibility","inkBar","MAT_TAB_CONTENT","MatTabContent","MAT_TAB_LABEL","MatTabLabel","ɵMatTabLabel_BaseFactory","MatTabBase","_MatTabMixinBase","MAT_TAB_GROUP","MatTab","_closestTabGroup","_contentPortal","_stateChanges","isActive","_templateLabel","_setTemplateLabelInput","_explicitContent","_implicitContent","matTabsAnimations","translateTab","minHeight","MatTabBodyPortal","componentFactoryResolver","_host","_centeringSub","_leavingSub","_beforeCentering","_isCenterPosition","isCentering","_afterLeavingCenter","MatTabBody","_MatTabBodyBase","_dirChangeSubscription","_translateTabComplete","_onCentering","_onCentered","_computePositionAnimationState","_positionIndex","_computePositionFromOrigin","clientHeight","_getLayoutDirection","_portalHost","_onTranslateTabStarted","MAT_TABS_CONFIG","nextId","MatTabChangeEvent","MatTabGroupMixinBase","_MatTabGroupMixinBase","_MatTabGroupBase","defaultConfig","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_dynamicHeight","_selectedIndex","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","disablePagination","_animationDuration","_backgroundColor","backgroundColor","indexToSelect","_clampTabIndex","isFirstRun","_createChangeEvent","tab","_subscribeToAllTabChanges","_subscribeToTabLabels","tabs","_allTabs","_tabHeader","_alignInkBarToSelectedTab","tabHeight","wrapper","_tabBodyWrapper","tabHeader","focusIndex","idx","dynamicHeight","MatTabGroup","_focusChanged","MatTabHeader","MatTabLabelWrapper","MatTabLabelWrapperBase","_MatTabLabelWrapperMixinBase","passiveEventListenerOptions","MatPaginatedTabHeader","_scrollDistance","_selectedIndexChanged","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_stopScrolling","selectFocusedIndex","indexFocused","_stopInterval","_previousPaginator","_handlePaginatorPress","_nextPaginator","dirChange","resize","realign","updatePagination","_items","newFocusIndex","_setTabFocus","_tabLabelCount","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","_itemSelected","_currentTextContent","_checkPaginationEnabled","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","_tabList","round","_scrollTo","_scrollHeader","labelIndex","selectedLabel","viewLength","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","_getMaxScrollDistance","selectedItem","selectedLabelWrapper","_inkBar","alignToElement","hide","mouseEvent","button","maxScrollDistance","distance","_MatTabHeaderBase","_disableRipple","_handlePaginatorClick","_onContentChanges","_MatTabNavBase","updateActiveLink","MatTabNav","MatTabLink","attrs","MatTabLinkMixinBase","_MatTabLinkMixinBase","_MatTabLinkBase","_tabNavBar","_isActive","exitDuration","tabNavBar","_tabLinkRipple","MatTabsModule","cloneDataView","cloneRegExp","cloneSymbol","cloneTypedArray","typedArray","baseIsMap","nodeIsMap","arrayMap","symbolToString"],"mappings":"gFAAA,IAAIA,EAAe,EAAQ,QAe3BC,EAAOC,QAJP,SAAsBC,GACpB,OAAOH,EAAaI,KAAKC,SAAUF,IAAQ,2BCZ7C,IAAIG,EAAa,EAAQ,QAezBL,EAAOC,QANP,SAA0BK,GACxB,IAAIC,EAAS,IAAID,EAAYE,YAAYF,EAAYG,YAErD,OADA,IAAIJ,EAAWE,GAAQG,IAAI,IAAIL,EAAWC,IACnCC,2BCZT,IAAII,EAAe,EAAQ,QACvBC,EAAmB,EAAQ,QAC3BC,EAAQ,EAAQ,QAChBC,EAAQ,EAAQ,QA4BpBd,EAAOC,QAJP,SAAkBc,GAChB,OAAOF,EAAME,GAAQJ,EAAaG,EAAMC,IAASH,EAAiBG,4BC5BpE,IAAIC,EAAa,EAAQ,QACrBC,EAAe,EAAQ,QACvBC,EAAc,EAAQ,QAe1BlB,EAAOC,QANP,SAAyBkB,GACvB,MAAqC,mBAAtBA,EAAOX,aAA8BU,EAAYC,GAE5D,GADAH,EAAWC,EAAaE,0CCbkCA,MAAMC,EAAM,CAAC,SACb,SAASC,EAAuCC,EAAIC,GAIlD,GAJkE,EAALD,IAC3D,EAAA,GAAsB,EAAG,MAAO,EAAG,GACnC,EAAA,GAAoB,GACpB,EAAA,MACO,EAALA,EAAQ,CACV,MAAME,EAAS,EAAA,KACf,EAAA,GAAkB,KAAMA,EAAOC,GAA/B,CAAmC,UAAWD,EAAOE,aAEzD,MAAMC,EAAM,CAAC,KACb,IAAIC,EAA+B,EAEnC,MAAMC,EACF,YAEAC,EAEAC,GACI5B,KAAK2B,OAASA,EACd3B,KAAK4B,OAASA,GAKtB,MAAMC,GAEN,MAAMC,EAA4B,OAAA,EAAA,EAAA,CAAmBD,GAE/CE,EAAmC,IAAI,EAAA,EAAe,mCAAoC,CAC5FC,WAAY,OACZC,QAGJ,WACI,MAAO,CAAEC,uBAAuB,wBAG9BC,UAA6BL,EAC/B,YAAYM,EAAoBC,EAAaC,GACzCC,QACAvC,KAAKoC,mBAAqBA,EAC1BpC,KAAKqC,YAAcA,EACnBrC,KAAKwC,qBAAuB,EAAA,EAAaC,MAEzCzC,KAAK0C,WAAY,EACjB1C,KAAK2C,SAAU,EAEf3C,KAAK4C,YAAc,KAEnB5C,KAAK6C,eAAiB,IAAI,EAAA,EAE1B7C,KAAK8C,OAAS,IAAI,EAAA,EAElB9C,KAAK+C,OAAS,IAAI,EAAA,EAElB/C,KAAKgD,gBAAkB,IAAI,EAAA,EAC3BhD,KAAKuB,WAAa,GAElBvB,KAAKsB,GAAK,oBAAoBG,IAC9BzB,KAAKiD,yBAA2BX,EAASJ,sBAG7C,aAAe,OAAOlC,KAAK2C,SAAW3C,KAAK0C,UAK3C,4BAA8B,OAAO1C,KAAKiD,uBAC1C,0BAA0BC,GACtBlD,KAAKiD,uBAAyB,OAAA,EAAA,EAAA,CAAsBC,GAMxD,cAAcA,GAENlD,KAAKuB,WADL2B,GAASA,EAAMC,OACGD,EAAME,MAAM,KAAKC,OAAO,CAACC,EAAWC,KAClDD,EAAUC,EAAUC,SAAU,EACvBF,GACR,IAGe,GAEtBtD,KAAKyD,sBAAsBzD,KAAKuB,YAChCvB,KAAKqC,YAAYqB,cAAcH,UAAY,GAE/C,qBACIvD,KAAK2D,YAAc,IAAI,EAAA,EAA2B3D,KAAK4D,SAASC,WAChE7D,KAAKwC,qBAAuBxC,KAAK2D,YAAYG,OAAOC,UAAUC,IAC1DhE,KAAKgD,gBAAgBiB,KAAK,CAAEtC,OAAQ3B,KAAM4B,OAAQ5B,KAAK4D,QAAQM,UAAUF,IAAU,SAGvFhE,KAAKmE,iBAET,cACInE,KAAKwC,qBAAqB4B,cAM9B,cAAcC,GACNrE,KAAKsE,QACLtE,KAAKsE,MAAMZ,cAAcW,UAAYA,GAI7C,gBACI,OAAOrE,KAAKsE,MAAQtE,KAAKsE,MAAMZ,cAAcW,UAAY,EAG7D,iBACIrE,KAAK0C,YAAc1C,KAAK4D,QAAQT,OAChCnD,KAAKyD,sBAAsBzD,KAAKuB,YAChCvB,KAAKoC,mBAAmBmC,eAG5B,iBAAiB3C,GACb,MAAM4C,EAAQ,IAAI9C,EAA6B1B,KAAM4B,GACrD5B,KAAK6C,eAAeoB,KAAKO,GAG7B,sBAAsBlB,GAClBA,EAAUtD,KAAKyE,eAAiBzE,KAAK0C,UACrCY,EAAUtD,KAAK0E,eAAiB1E,KAAK0C,kBAG7CP,EAAqBwC,UAAO,SAAsCC,GAAK,OAAO,IAAKA,GAAKzC,GAAsB,EAAA,GAAyB,EAAA,GAA2B,EAAA,GAAyB,EAAA,GAAoB,EAAA,GAAyBJ,KACxOI,EAAqB0C,UAAO,EAAA,GAAyB,CAAEC,KAAM3C,EAAsB4C,UAAW,SAAoC5D,EAAIC,GAI9H,IAAI4D,EAJ0I,EAAL7D,IACzI,EAAA,GAAyB,EAAA,GAAa,GACtC,EAAA,GAAmBF,GAAK,IACjB,EAALE,IAEF,EAAA,GAAsB6D,EAAK,EAAA,QAA0B5D,EAAI6D,SAAWD,EAAGE,OACvE,EAAA,GAAsBF,EAAK,EAAA,QAA0B5D,EAAIkD,MAAQU,EAAGE,SACnEC,OAAQ,CAAEvC,YAAa,cAAeV,sBAAuB,wBAAyBoB,UAAW,CAAC,QAAS,aAAc8B,WAAY,cAAgBC,QAAS,CAAExC,eAAgB,iBAAkBC,OAAQ,SAAUC,OAAQ,SAAUC,gBAAiB,mBAAqBsC,SAAU,CAAC,EAAA,0BA+C1RC,UAAwBpD,EAC1B,cACII,SAASiD,WACTxF,KAAKyE,cAAgB,2BACrBzE,KAAK0E,aAAe,kCAG5Ba,EAAgBZ,UAAO,SAAiCC,GAAK,OAAOa,EAA6Bb,GAAKW,IACtGA,EAAgBG,UAAO,EAAA,GAAyB,CAAEZ,KAAMS,EAAiBI,UAAW,CAAC,CAAC,qBAAsBC,eAAgB,SAAwCzE,EAAIC,EAAKyE,GAIrK,IAAIb,EAJsL,EAAL7D,IACrL,EAAA,GAAsB0E,EAAU,EAAA,GAAc,GAC9C,EAAA,GAAsBA,EAAU,EAAA,GAAW,IACpC,EAAL1E,IAEF,EAAA,GAAsB6D,EAAK,EAAA,QAA0B5D,EAAI0E,aAAed,GACxE,EAAA,GAAsBA,EAAK,EAAA,QAA0B5D,EAAIwC,QAAUoB,KAClEe,UAAW,CAAC,EAAG,oBAAqBZ,OAAQ,CAAEa,cAAe,iBAAmBC,SAAU,CAAC,mBAAoBX,SAAU,CAAC,EAAA,GAA0B,CACjJ,CAAEY,QAAS,EAAA,EAA6BC,YAAaZ,KACrD,EAAA,IAAoCa,mBAAoB5E,EAAK6E,MAAO,EAAGC,KAAM,EAAGC,OAAQ,CAAC,CAAC,OAAQ,UAAW,EAAG,yBAA0B,EAAG,KAAM,WAAY,CAAC,QAAS,KAAMtB,SAAU,SAAkC9D,EAAIC,GAAgB,EAALD,IAC9O,EAAA,KACA,EAAA,GAAkB,EAAGD,EAAwC,EAAG,EAAG,iBAClEsF,WAAY,CAAC,EAAA,GAAiBC,OAAQ,CAAC,goBAAioBC,cAAe,EAAGC,gBAAiB,UAKptB,MAAMlB,EAA6C,EAAA,GAA6BF,qBAkC1EqB,EACF,YAEAC,GACI7G,KAAK6G,WAAaA,UAG1BD,EAA2BjC,UAAO,SAA4CC,GAAK,OAAO,IAAKA,GAAKgC,GAA4B,EAAA,GAAyB,EAAA,KACzJA,EAA2B/B,UAAO,EAAA,GAAyB,CAAEC,KAAM8B,wBAW7DE,UAA8BF,UAEpCE,EAAsBnC,UAAO,SAAuCC,GAAK,OAAOmC,EAAmCnC,GAAKkC,IACxHA,EAAsBjC,UAAO,EAAA,GAAyB,CAAEC,KAAMgC,EAAuBnB,UAAW,CAAC,CAAC,GAAI,wBAAyB,KAAMM,SAAU,CAAC,yBAA0BX,SAAU,CAAC,EAAA,YACrL,MAAMyB,EAAmD,EAAA,GAA6BD,GAkChFE,EAAmC,IAAI,EAAA,EAAe,oCAMtDC,EAAoD,CACtDf,QAASc,EACTE,KAAM,CAAC,EAAA,GACPC,WAPJ,SAAkDC,GAC9C,MAAO,IAAMA,EAAQC,iBAAiBC,eAYpCC,EAAkC,CACpCrB,QAAS,EAAA,EACTC,YAAa,OAAA,EAAA,EAAA,CAAW,IAAMqB,GAC9BC,OAAO,qBAYLC,EACF,YAAYC,EAAUC,EAAUC,EAAmBC,EAAO1F,EAAoB2F,EAAgBC,EAAMC,EAAYC,EAAWC,GACvHnI,KAAK2H,SAAWA,EAChB3H,KAAK4H,SAAWA,EAChB5H,KAAK6H,kBAAoBA,EACzB7H,KAAK8H,MAAQA,EACb9H,KAAKoC,mBAAqBA,EAC1BpC,KAAKgI,KAAOA,EACZhI,KAAKiI,WAAaA,EAClBjI,KAAKkI,UAAYA,EACjBlI,KAAKmI,eAAiBA,EACtBnI,KAAKoI,qBAAsB,EAC3BpI,KAAKqI,uBAAwB,EAE7BrI,KAAKsI,wBAAyB,EAE9BtI,KAAKuI,sBAAwB,EAAA,EAAa9F,MAM1CzC,KAAKwI,qBAAsB,EAE3BxI,KAAKyI,qBAAuB,IAAI,EAAA,EAKhCzI,KAAK0I,mBAAqB,KAItB1I,KAAKwI,oBACDxI,KAAKkI,UAAUS,gBAAkB3I,KAAK2H,SAASjE,eAAiB1D,KAAK4I,WAG7E5I,KAAK6I,UAAY,OAEjB7I,KAAK8I,WAAa,OAQlB9I,KAAK+I,SAAW,OAKhB/I,KAAKgJ,sBAAwB,MAC7BhJ,KAAKiJ,kBAAmB,EAExBjJ,KAAKkJ,iBAAmB,OAAA,EAAA,EAAA,CAAM,IACtBlJ,KAAKmJ,cAAgBnJ,KAAKmJ,aAAavF,QAChC,OAAA,EAAA,EAAA,IAAS5D,KAAKmJ,aAAavF,QAAQwF,IAAIxH,GAAUA,EAAOyH,oBAI5DrJ,KAAK8H,MAAMwB,SACbC,KAAK,OAAA,EAAA,EAAA,CAAK,GAAI,OAAA,EAAA,EAAA,CAAU,IAAMvJ,KAAKkJ,oBAE5ClJ,KAAKwJ,gBAAkBzB,EAM3B,2BAA6B,OAAO/H,KAAKqI,sBACzC,yBAAyBnF,GACrBlD,KAAKqI,sBAAwB,OAAA,EAAA,EAAA,CAAsBnF,GAEvD,kBACI,MAAMuG,EAASzJ,KAAK0J,kBACE,IAAXD,GACPzJ,KAAK8H,MAAM6B,kBAAkB,IAAMF,EAAOG,iBAAiB,OAAQ5J,KAAK0I,qBAGhF,YAAYmB,GACJA,EAAkB,UAAK7J,KAAK8J,oBAC5B9J,KAAK+J,sBAAsB/J,KAAK8J,mBAC5B9J,KAAK4I,WACL5I,KAAKgK,YAAYC,kBAI7B,cACI,MAAMR,EAASzJ,KAAK0J,kBACE,IAAXD,GACPA,EAAOS,oBAAoB,OAAQlK,KAAK0I,oBAE5C1I,KAAKuI,sBAAsBnE,cAC3BpE,KAAKoI,qBAAsB,EAC3BpI,KAAKmK,gBACLnK,KAAKyI,qBAAqB2B,WAG9B,gBACI,OAAOpK,KAAKiJ,kBAAoBjJ,KAAKmJ,aAAazG,UAGtD,YACI1C,KAAKqK,iBACLrK,KAAKsK,cAGT,aACItK,KAAKuK,cACAvK,KAAKiJ,mBAGNjJ,KAAK4I,WAEL5I,KAAKmJ,aAAapG,OAAOkB,OAE7BjE,KAAKmJ,aAAaxG,QAAU3C,KAAKiJ,kBAAmB,EAChDjJ,KAAKgK,aAAehK,KAAKgK,YAAYQ,gBACrCxK,KAAKgK,YAAYS,SACjBzK,KAAK0K,4BAA4BtG,eAIhCpE,KAAKoI,qBAKNpI,KAAKoC,mBAAmBuI,iBAOhC,iBACQ3K,KAAKiJ,kBACLjJ,KAAKgK,YAAYC,iBAOzB,0BACI,OAAO,OAAA,EAAA,EAAA,CAAMjK,KAAKkJ,iBAAkBlJ,KAAKmJ,aAAaxF,YAAYiH,OAAOrB,KAAK,OAAA,EAAA,EAAA,CAAO,IAAMvJ,KAAKiJ,mBAAoBjJ,KAAKyI,qBAAsBzI,KAAK6K,yBAA0B7K,KAAKgK,YAC/KhK,KAAKgK,YAAYc,cAAcvB,KAAK,OAAA,EAAA,EAAA,CAAO,IAAMvJ,KAAKiJ,mBACtD,OAAA,EAAA,EAAA,IAAMM,KAEV,OAAA,EAAA,EAAA,CAAI/E,GAASA,aAAiB,EAAA,EAA2BA,EAAQ,OAGrE,mBACI,OAAIxE,KAAKmJ,cAAgBnJ,KAAKmJ,aAAaxF,YAChC3D,KAAKmJ,aAAaxF,YAAYoH,WAElC,KAGX,yBACI,OAAO,OAAA,EAAA,EAAA,CAAM,OAAA,EAAA,EAAA,CAAU/K,KAAKkI,UAAW,SAAU,OAAA,EAAA,EAAA,CAAUlI,KAAKkI,UAAW,aACtEqB,KAAK,OAAA,EAAA,EAAA,CAAO/E,IAGb,MAAMwG,EAAehL,KAAKiL,qBAAuBzG,EAAM0G,aAAe1G,EAAM0G,eAAe,GACvF1G,EAAM2G,OACJC,EAAYpL,KAAKiI,WAAajI,KAAKiI,WAAW5F,YAAYqB,cAAgB,KAC1E2H,EAAerL,KAAKsL,YAActL,KAAKsL,YAAYzE,WAAWnD,cAAgB,KACpF,OAAO1D,KAAKiJ,kBAAoB+B,IAAgBhL,KAAK2H,SAASjE,iBACxD0H,IAAcA,EAAUG,SAASP,OACjCK,IAAiBA,EAAaE,SAASP,OACtChL,KAAKgK,cAAgBhK,KAAKgK,YAAYwB,eAAeD,SAASP,MAI7E,WAAW9H,GACPuI,QAAQC,QAAQ,MAAMC,KAAK,IAAM3L,KAAK4L,iBAAiB1I,IAG3D,iBAAiB2I,GACb7L,KAAK6I,UAAYgD,EAGrB,kBAAkBA,GACd7L,KAAK8I,WAAa+C,EAGtB,iBAAiBC,GACb9L,KAAK2H,SAASjE,cAAcqI,SAAWD,EAE3C,eAAetH,GACX,MAAMwH,EAAUxH,EAAMwH,QAQtB,GAHIA,IAAY,EAAA,GACZxH,EAAMyH,iBAENjM,KAAKkM,cAAgBF,IAAY,EAAA,GAAShM,KAAK4I,UAC/C5I,KAAKkM,aAAaC,wBAClBnM,KAAKoM,mBACL5H,EAAMyH,sBAEL,GAAIjM,KAAKmJ,aAAc,CACxB,MAAMkD,EAAiBrM,KAAKmJ,aAAaxF,YAAYoH,WAC/CuB,EAAaN,IAAY,EAAA,GAAYA,IAAY,EAAA,EACnDhM,KAAK4I,WAAaoD,IAAY,EAAA,EAC9BhM,KAAKmJ,aAAaxF,YAAY4I,UAAU/H,GAEnC8H,GAActM,KAAKwM,YACxBxM,KAAKyM,aAELH,GAActM,KAAKmJ,aAAaxF,YAAYoH,aAAesB,IAC3DrM,KAAK0M,gBAAgB1M,KAAKmJ,aAAaxF,YAAYgJ,iBAAmB,IAIlF,aAAanI,GACT,IAAI2G,EAAS3G,EAAM2G,OACfjI,EAAQiI,EAAOjI,MAEC,WAAhBiI,EAAOrG,OACP5B,EAAiB,IAATA,EAAc,KAAO0J,WAAW1J,IAOxClD,KAAK6M,iBAAmB3J,IACxBlD,KAAK6M,eAAiB3J,EACtBlD,KAAK6I,UAAU3F,GACXlD,KAAKwM,YAAcxM,KAAKkI,UAAUS,gBAAkBnE,EAAM2G,QAC1DnL,KAAKyM,aAIjB,eACSzM,KAAKwI,oBAGDxI,KAAKwM,aACVxM,KAAK6M,eAAiB7M,KAAK2H,SAASjE,cAAcR,MAClDlD,KAAKqK,iBACLrK,KAAKsK,aAAY,IALjBtK,KAAKwI,qBAAsB,EAcnC,YAAYsE,GAAgB,GACpB9M,KAAKiI,YAA6C,SAA/BjI,KAAKiI,WAAW8E,aAC/BD,EACA9M,KAAKiI,WAAW+E,uBAGhBhN,KAAKiI,WAAW8E,WAAa,SAEjC/M,KAAKsI,wBAAyB,GAItC,cACQtI,KAAKsI,yBACLtI,KAAKiI,WAAW8E,WAAa,OAC7B/M,KAAKsI,wBAAyB,GAOtC,6BACI,MAAM2E,EAAcjN,KAAK8H,MAAMwB,SAASC,KAAK,OAAA,EAAA,EAAA,CAAK,IAC5C2D,EAAgBlN,KAAKmJ,aAAavF,QAAQiG,QAAQN,KAAK,OAAA,EAAA,EAAA,CAAI,IAAMvJ,KAAK8J,kBAAkBqD,uBAG9F,OAAA,EAAA,EAAA,CAAM,IAEN,OAAO,OAAA,EAAA,EAAA,CAAMF,EAAaC,GACrB3D,KAGL,OAAA,EAAA,EAAA,CAAU,KACN,MAAM6D,EAAUpN,KAAK4I,UAarB,OAZA5I,KAAKoM,mBACLpM,KAAKmJ,aAAahF,iBACdnE,KAAK4I,YACL5I,KAAKgK,YAAYC,iBAKbmD,IAAYpN,KAAK4I,WACjB5I,KAAKmJ,aAAarG,OAAOmB,QAG1BjE,KAAKqN,sBAGhB,OAAA,EAAA,EAAA,CAAK,IAEAtJ,UAAUS,GAASxE,KAAKsN,kBAAkB9I,IAGnD,gBACQxE,KAAKgK,cACLhK,KAAKuN,aACLvN,KAAKgK,YAAYwD,UACjBxN,KAAKgK,YAAc,MAG3B,iBAAiB9G,GACb,MAAMuK,EAAYzN,KAAKmJ,cAAgBnJ,KAAKmJ,aAAavG,YACrD5C,KAAKmJ,aAAavG,YAAYM,GAC9BA,EAGEwK,EAA0B,MAAbD,EAAoBA,EAAY,GAG/CzN,KAAKiI,WACLjI,KAAKiI,WAAW0F,SAASzK,MAAQwK,EAGjC1N,KAAK2H,SAASjE,cAAcR,MAAQwK,EAExC1N,KAAK6M,eAAiBa,EAO1B,kBAAkBlJ,GACVA,GAASA,EAAM7C,SACf3B,KAAK4N,6BAA6BpJ,EAAM7C,QACxC3B,KAAK4L,iBAAiBpH,EAAM7C,OAAOuB,OACnClD,KAAK6I,UAAUrE,EAAM7C,OAAOuB,OAC5BlD,KAAK2H,SAASjE,cAAcmK,QAC5B7N,KAAKmJ,aAAa2E,iBAAiBtJ,EAAM7C,SAE7C3B,KAAKuN,aAKT,6BAA6BQ,GACzB/N,KAAKmJ,aAAavF,QAAQoK,QAAQpM,IAC1BA,GAAUmM,GAAQnM,EAAOqM,UACzBrM,EAAOsM,aAInB,iBAMoC,MAA5BlO,KAAKiL,sBACLjL,KAAKiL,sBAAwB,OAAA,EAAA,EAAA,CAAejL,KAAK2H,SAASjE,gBAE9D,IAAIyK,EAAanO,KAAKgK,YACjBmE,GA0BDnO,KAAK8J,kBAAkBsE,UAAUpO,KAAKqO,wBACtCF,EAAWG,WAAW,CAAEC,MAAOvO,KAAKwO,qBA1BpCxO,KAAKyO,QAAU,IAAI,EAAA,EAAezO,KAAKmJ,aAAalE,SAAUjF,KAAK6H,mBACnEsG,EAAanO,KAAK4H,SAAS8G,OAAO1O,KAAK2O,qBACvC3O,KAAKgK,YAAcmE,EAGnBA,EAAWS,gBAAgB7K,UAAUS,KAG7BA,EAAMwH,UAAY,EAAA,GAAWxH,EAAMwH,UAAY,EAAA,GAAYxH,EAAMqK,UACjE7O,KAAKoM,mBACLpM,KAAKyI,qBAAqBqG,OAG1BtK,EAAMuK,kBACNvK,EAAMyH,oBAGdjM,KAAKuI,sBAAwBvI,KAAKmI,eAAerE,SAASC,UAAU,KAC5D/D,KAAK4I,WAAauF,GAClBA,EAAWG,WAAW,CAAEC,MAAOvO,KAAKwO,sBAS5CL,IAAeA,EAAW3D,gBAC1B2D,EAAWa,OAAOhP,KAAKyO,SACvBzO,KAAK0K,4BAA8B1K,KAAKiP,8BAE5C,MAAM7B,EAAUpN,KAAK4I,UACrB5I,KAAKmJ,aAAahF,iBAClBnE,KAAKmJ,aAAaxG,QAAU3C,KAAKiJ,kBAAmB,EAGhDjJ,KAAK4I,WAAawE,IAAYpN,KAAK4I,WACnC5I,KAAKmJ,aAAarG,OAAOmB,OAGjC,oBACI,OAAO,IAAI,EAAA,EAAc,CACrBiL,iBAAkBlP,KAAKmP,sBACvBpH,eAAgB/H,KAAKwJ,kBACrB+E,MAAOvO,KAAKwO,iBACZY,UAAWpP,KAAKgI,OAGxB,sBACI,MAAMqH,EAAWrP,KAAK4H,SAASmB,WAC1BuG,oBAAoBtP,KAAKqO,wBACzBkB,wBAAuB,GACvBC,UAAS,GAGd,OAFAxP,KAAK+J,sBAAsBsF,GAC3BrP,KAAK8J,kBAAoBuF,EAClBA,EAGX,sBAAsBH,GAGlB,MAAMO,EAAiB,CACnB,CAAEC,QAAS,QAASC,QAAS,SAAUC,SAAU,QAASC,SAAU,OACpE,CAAEH,QAAS,MAAOC,QAAS,SAAUC,SAAU,MAAOC,SAAU,QAK9DC,EAAa9P,KAAK+P,YAClBC,EAAiB,CACnB,CAAEN,QAAS,QAASC,QAAS,MAAOC,SAAU,QAASC,SAAU,SAAUC,WAAAA,GAC3E,CAAEJ,QAAS,MAAOC,QAAS,MAAOC,SAAU,MAAOC,SAAU,SAAUC,WAAAA,IAE3E,IAAIG,EAEAA,EADkB,UAAlBjQ,KAAK+I,SACOiH,EAEW,UAAlBhQ,KAAK+I,SACE0G,EAGA,IAAIA,KAAmBO,GAEvCd,EAAiBgB,cAAcD,GAEnC,uBACI,OAAIjQ,KAAKsL,YACEtL,KAAKsL,YAAYzE,WAErB7G,KAAKiI,WAAajI,KAAKiI,WAAWkI,4BAA8BnQ,KAAK2H,SAEhF,iBACI,OAAO3H,KAAKmJ,aAAa/D,YAAcpF,KAAKoQ,gBAGhD,gBACI,OAAOpQ,KAAKqO,uBAAuB3K,cAAc2M,wBAAwB9B,MAM7E,mBACIvO,KAAKmJ,aAAaxF,YAAY2M,cAActQ,KAAKmJ,aAAajH,sBAAwB,GAAK,GAG/F,WACI,MAAMqO,EAAUvQ,KAAK2H,SAASjE,cAC9B,OAAQ6M,EAAQC,WAAaD,EAAQxE,WAAa/L,KAAKqI,sBAG3D,aACI,IAAIoI,EACJ,OAAkC,QAAzBA,EAAKzQ,KAAKkI,iBAA8B,IAAPuI,OAAgB,EAASA,EAAGC,cAAgBjH,OAG1F,gBAAgBzF,GAQZ,MAAMmF,EAAenJ,KAAKmJ,aACpBwH,EAAa,OAAA,EAAA,EAAA,CAA8B3M,EAAOmF,EAAavF,QAASuF,EAAarD,cAC3F,GAAc,IAAV9B,GAA8B,IAAf2M,EAIfxH,EAAayH,cAAc,OAE1B,CACD,MAAMhP,EAASuH,EAAavF,QAAQM,UAAUF,GAC9C,GAAIpC,EAAQ,CACR,MAAM2O,EAAU3O,EAAOiP,kBACjBC,EAAoB,OAAA,EAAA,EAAA,CAAyBP,EAAQQ,UAAWR,EAAQS,aAAc7H,EAAa8H,gBAAiB9H,EAAa7E,MAAMZ,cAAcsN,cAC3J7H,EAAayH,cAAcE,aAK3CpJ,EAA4B/C,UAAO,SAA6CC,GAAK,OAAO,IAAKA,GAAK8C,GAA6B,EAAA,GAAyB,EAAA,GAAoB,EAAA,GAAyB,EAAA,GAAiB,EAAA,GAAyB,EAAA,GAA0B,EAAA,GAAyB,EAAA,GAAgB,EAAA,GAAyB,EAAA,GAA2B,EAAA,GAAyBV,GAAmC,EAAA,GAAyB,EAAA,EAAuB,GAAI,EAAA,GAAyB,EAAA,EAAgB,GAAI,EAAA,GAAyB,EAAA,EAAU,GAAI,EAAA,GAAyB,EAAA,KACvkBU,EAA4B7C,UAAO,EAAA,GAAyB,CAAEC,KAAM4C,EAA6BvC,OAAQ,CAAE4D,SAAU,CAAC,0BAA2B,YAAaC,sBAAuB,CAAC,eAAgB,yBAA0BkI,qBAAsB,CAAC,0BAA2B,wBAAyB/H,aAAc,CAAC,kBAAmB,gBAAiBmC,YAAa,CAAC,6BAA8B,gBAAkBhG,SAAU,CAAC,EAAA,0BAuDjakC,UAA+BE,EACjC,cACInF,SAASiD,WACTxF,KAAK+P,YAAc,uCAG3BvI,EAAuB7C,UAAO,SAAwCC,GAAK,OAAOuM,EAAoCvM,GAAK4C,IAC3HA,EAAuB3C,UAAO,EAAA,GAAyB,CAAEC,KAAM0C,EAAwB7B,UAAW,CAAC,CAAC,QAAS,kBAAmB,IAAK,CAAC,WAAY,kBAAmB,KAAMI,UAAW,CAAC,EAAG,4BAA6BqL,SAAU,EAAGC,aAAc,SAA6ClQ,EAAIC,GAAgB,EAALD,GACtS,EAAA,GAAkB,WAAA,WAA0E,OAAOC,EAAIkQ,iBAAvG,CAA0H,QAAA,WAAoE,OAAOlQ,EAAI0H,eAAzM,CAA0N,SAAA,SAAkEyI,GAAU,OAAOnQ,EAAIoQ,aAAaD,KAA9T,CAA0U,WAAA,SAAsEA,GAAU,OAAOnQ,EAAIqQ,eAAeF,MAC7a,EAALpQ,GACF,EAAA,GAAmB,eAAgBC,EAAI4H,sBAAvC,CAA8D,OAAQ5H,EAAI8P,qBAAuB,KAAO,WAAxG,CAAoH,oBAAqB9P,EAAI8P,qBAAuB,KAAO,OAA3K,CAAmL,wBAAyB9P,EAAIwH,WAAaxH,EAAI8K,aAAe9K,EAAI8K,aAAa5K,GAAK,KAAtQ,CAA4Q,gBAAiBF,EAAI8P,qBAAuB,KAAO9P,EAAIwH,UAAU8I,WAA7U,CAAyV,YAAatQ,EAAI8P,uBAAyB9P,EAAIwH,WAAuC,MAApBxH,EAAI+H,aAAX,KAAyC/H,EAAI+H,aAAa7H,GAA7c,CAAid,iBAAkBF,EAAI8P,uBACtejL,SAAU,CAAC,0BAA2BX,SAAU,CAAC,EAAA,GAA0B,CAACiC,IAAmC,EAAA,YACxH,MAAM4J,EAAoD,EAAA,GAA6B3J,qBAiCjFmK,UAENA,EAAsBC,UAAO,EAAA,GAAwB,CAAE9M,KAAM6M,IAC7DA,EAAsBE,UAAO,EAAA,GAAwB,CAAE5P,QAAS,SAAuC2C,GAAK,OAAO,IAAKA,GAAK+M,IAA6BG,UAAW,CAAC7K,GAAoD8K,QAAS,CAAC,CACxN,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,GACD,EAAA,EACH,EAAA,EACA,EAAA,mCC59BR,IAAIC,EAAa,EAAQ,QACrBC,EAAe,EAAQ,QA2B3BpS,EAAOC,QALP,SAAkBoD,GAChB,MAAuB,iBAATA,GACX+O,EAAa/O,IArBF,mBAqBY8O,EAAW9O,4BCzBvC,IAAIgP,EAAkB,EAAQ,QAC1BD,EAAe,EAAQ,QAGvBE,EAAcC,OAAOC,UAGrBC,EAAiBH,EAAYG,eAG7BC,EAAuBJ,EAAYI,qBAoBnCC,EAAcN,EAAgB,WAAa,OAAO1M,UAApB,IAAsC0M,EAAkB,SAAShP,GACjG,OAAO+O,EAAa/O,IAAUoP,EAAeG,KAAKvP,EAAO,YACtDqP,EAAqBE,KAAKvP,EAAO,WAGtCrD,EAAOC,QAAU0S,0BCnCjB,IAAIE,EAAY,EAAQ,QACpBC,EAAM,EAAQ,QACdC,EAAW,EAAQ,QA+BvB/S,EAAOC,QAhBP,SAAkBC,EAAKmD,GACrB,IAAI2P,EAAO7S,KAAKC,SAChB,GAAI4S,aAAgBH,EAAW,CAC7B,IAAII,EAAQD,EAAK5S,SACjB,IAAK0S,GAAQG,EAAM3P,OAAS4P,IAG1B,OAFAD,EAAME,KAAK,CAACjT,EAAKmD,IACjBlD,KAAKiT,OAASJ,EAAKI,KACZjT,KAET6S,EAAO7S,KAAKC,SAAW,IAAI2S,EAASE,GAItC,OAFAD,EAAKtS,IAAIR,EAAKmD,GACdlD,KAAKiT,KAAOJ,EAAKI,KACVjT,2CC7BT,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,KAAA,IAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QA6BO,IAAA,EAAA,YAAMkT,iCAAAA,wDAAAA,IAAW,QAAA,CAlBX,CACL,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EAEA,EAAA,EACA,EAAA,EACA,EAAA,SASD,yBCRPrT,EAAOC,QAJP,WACE,MAAO,4BCnBT,IAAIqT,EAAY,EAAQ,QACpBC,EAAY,EAAQ,QACpBC,EAAW,EAAQ,QAGnBC,EAAYD,GAAYA,EAASE,MAmBjCA,EAAQD,EAAYF,EAAUE,GAAaH,EAE/CtT,EAAOC,QAAUyT,uCCzBjB,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,KAAA,IAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QA4DO,IAAA,EAAA,YAAMC,iCAAAA,wDAAAA,IAAe,QAAA,CA5Bf,CACL,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EAGA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,GAIA,EAAA,QAWD,2BC7DP,IAAIZ,EAAW,EAAQ,QACnBa,EAAc,EAAQ,QACtBC,EAAc,EAAQ,QAU1B,SAASC,EAASC,GAChB,IAAI5P,GAAS,EACTb,EAAmB,MAAVyQ,EAAiB,EAAIA,EAAOzQ,OAGzC,IADAnD,KAAKC,SAAW,IAAI2S,IACX5O,EAAQb,GACfnD,KAAK6T,IAAID,EAAO5P,IAKpB2P,EAAStB,UAAUwB,IAAMF,EAAStB,UAAUW,KAAOS,EACnDE,EAAStB,UAAUyB,IAAMJ,EAEzB7T,EAAOC,QAAU6T,uCC1BjB,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,KAAA,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,KAAA,IAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAqBA,MAAM1S,EAAM,CAAC,kBACPO,EAAM,CAAC,aACPuS,EAAM,CAAC,SACPC,EAAM,WAAc,MAAO,CAAEC,cAAe,MAC5CC,EAAM,CAAC,KACPC,EAAmC,IAAI,EAAA,EAAe,mCAAoC,CAC5FnS,WAAY,OACZC,QAAS,KAAA,CAASmS,oBAAoB,MAW1C,IAAIC,EAAe,EAEnB,MAAMC,EAAkC,CACpCpO,QAAS,EAAA,EACTC,YAAa,OAAA,EAAA,EAAA,CAAW,IAAMoO,GAC9B9M,OAAO,GAGX,MAAM+M,EACF,YAEA7S,EAEA8S,GACIzU,KAAK2B,OAASA,EACd3B,KAAKyU,QAAUA,GAKvB,MAAMC,EACF,YAAYrS,GACRrC,KAAKqC,YAAcA,GAG3B,MAAMsS,EAA2B,OAAA,EAAA,EAAA,CAAc,OAAA,EAAA,EAAA,CAAW,OAAA,EAAA,EAAA,CAAmB,OAAA,EAAA,EAAA,CAAcD,IAAsB,6BAE3GH,UAAuBI,EACzB,YAAY9N,EAAY+N,EAAexS,EAAoByS,EAAUvS,EAAUwS,GAC3EvS,MAAMsE,GACN7G,KAAK4U,cAAgBA,EACrB5U,KAAKoC,mBAAqBA,EAC1BpC,KAAKsC,SAAWA,EAChBtC,KAAK8U,eAAiBA,EACtB9U,KAAK6I,UAAakM,MAClB/U,KAAK8I,WAAa,OAClB9I,KAAKgV,UAAY,uBAAsBX,EACvCrU,KAAKiV,WAAY,EACjBjV,KAAKkV,UAAW,EAEhBlV,KAAKmV,KAAO,KAEZnV,KAAKsB,GAAKtB,KAAKgV,UAEfhV,KAAKoV,cAAgB,QAErBpV,KAAKqV,UAAY,KAEjBrV,KAAKsV,eAAiB,KAEtBtV,KAAK8D,OAAS,IAAI,EAAA,EAMlB9D,KAAKuV,aAAe,IAAI,EAAA,EACxBvV,KAAK6U,SAAWW,SAASX,IAAa,EAG1C,eAAiB,OAAO7U,KAAKiV,UAC7B,aAAa/R,GAASlD,KAAKiV,UAAY,OAAA,EAAA,EAAA,CAAsB/R,GAE7D,cAAgB,OAAOlD,KAAKkV,SAC5B,YAAYhS,GACRlD,KAAKkV,SAAW,OAAA,EAAA,EAAA,CAAsBhS,GACtClD,KAAKoC,mBAAmBmC,eAG5B,cAAgB,OAAUvE,KAAKsB,IAAMtB,KAAKgV,WAAnB,SACvB,qBACIhV,KAAK4U,cACAa,QAAQzV,KAAKqC,aAAa,GAC1B0B,UAAU2R,IAKS,aAAhBA,GAA8C,YAAhBA,EAC9B1V,KAAK2V,cAAcjS,cAAcmK,QAE3B6H,GAMNjK,QAAQC,UAAUC,KAAK,IAAM3L,KAAK8I,gBAI9C,cACI9I,KAAK4U,cAAcgB,eAAe5V,KAAKqC,aAG3C,eAAemC,GAIXA,EAAMuK,kBACN/O,KAAKuV,aAAatR,OAIdjE,KAAKsC,SAAS8R,mBACdpU,KAAK2V,cAAcjS,cAAc+Q,QAAUzU,KAAKyU,SAIpDzU,KAAKyU,QAAUzU,KAAK2V,cAAcjS,cAAc+Q,QAGhDzU,KAAK6V,oBAGT,cAAcrR,GAQVA,EAAMuK,kBAGV,WAAW7L,GACPlD,KAAKyU,UAAYvR,EAGrB,iBAAiB2I,GACb7L,KAAK6I,UAAYgD,EAGrB,kBAAkBA,GACd7L,KAAK8I,WAAa+C,EAGtB,iBAAiBC,GACb9L,KAAK+L,SAAWD,EAChB9L,KAAKoC,mBAAmBmC,eAG5B,MAAMX,GACF5D,KAAK4U,cAAckB,SAAS9V,KAAK2V,cAAe,WAAY/R,GAGhE,SACI5D,KAAKyU,SAAWzU,KAAKyU,QACrBzU,KAAK6I,UAAU7I,KAAKyU,SAKxB,mBACIzU,KAAK6I,UAAU7I,KAAKyU,SACpBzU,KAAK8D,OAAOG,KAAK,IAAIuQ,EAAqBxU,KAAMA,KAAKyU,UAGzD,qBAMIzU,KAAKoC,mBAAmBuI,wBAGhC4J,EAAe5P,UAAO,SAAgCC,GAAK,OAAO,IAAKA,GAAK2P,GAAgB,EAAA,GAAyB,EAAA,GAAoB,EAAA,GAAyB,EAAA,GAAsB,EAAA,GAAyB,EAAA,GAA2B,EAAA,GAAyB,YAAa,EAAA,GAAyBJ,GAAmC,EAAA,GAAyB,EAAA,EAAuB,KAC9XI,EAAe7O,UAAO,EAAA,GAAyB,CAAEZ,KAAMyP,EAAgB5O,UAAW,CAAC,CAAC,qBAAsBZ,UAAW,SAA8B5D,EAAIC,GAK/I,IAAI4D,EAL2J,EAAL7D,IAC1J,EAAA,GAAmBF,GAAK,GACxB,EAAA,GAAmBO,GAAK,GACxB,EAAA,GAAmBuS,GAAK,IACjB,EAAL5S,IAEF,EAAA,GAAsB6D,EAAK,EAAA,QAA0B5D,EAAI2U,SAAW/Q,EAAGE,OACvE,EAAA,GAAsBF,EAAK,EAAA,QAA0B5D,EAAI4U,YAAchR,EAAGE,OAC1E,EAAA,GAAsBF,EAAK,EAAA,QAA0B5D,EAAIuU,cAAgB3Q,EAAGE,SAC3Ea,UAAW,CAAC,EAAG,oBAAqBqL,SAAU,GAAIC,aAAc,SAAqClQ,EAAIC,GAAgB,EAALD,IACrH,EAAA,GAAsB,KAAMC,EAAIE,IAChC,EAAA,GAAmB,WAAYF,EAAI2K,SAAW,MAAQ,EAAtD,CAAyD,aAAc,KAAvE,CAA6E,kBAAmB,MAChG,EAAA,GAAmB,cAAe3K,EAAIqT,QAAtC,CAA+C,eAAgBrT,EAAI2K,SAAnE,CAA6E,gCAAsD,UAArB3K,EAAIgU,cAAlH,CAA6I,0BAAkD,mBAAvBhU,EAAI0T,kBAC3K3P,OAAQ,CAAE4G,SAAU,WAAY/F,cAAe,gBAAiBiQ,MAAO,QAASpB,SAAU,WAAYM,KAAM,OAAQ7T,GAAI,KAAM8T,cAAe,gBAAiBC,UAAW,CAAC,aAAc,aAAcC,eAAgB,CAAC,kBAAmB,kBAAmBY,SAAU,WAAYzB,QAAS,WAAapP,QAAS,CAAEvB,OAAQ,SAAUyR,aAAc,gBAAkBtP,SAAU,CAAC,kBAAmBX,SAAU,CAAC,EAAA,GAA0B,CAACgP,IAAmC,EAAA,IAAoClO,mBAAoB8N,EAAK7N,MAAO,GAAIC,KAAM,GAAIC,OAAQ,CAAC,CAAC,EAAG,0BAA2B,CAAC,QAAS,IAAK,CAAC,EAAG,wBAAyB,CAAC,YAAa,IAAK,CAAC,OAAQ,WAAY,OAAQ,SAAU,EAAG,yBAA0B,sBAAuB,EAAG,KAAM,WAAY,WAAY,UAAW,WAAY,SAAU,SAAU,CAAC,QAAS,IAAK,CAAC,EAAG,oCAAqC,CAAC,iBAAkB,IAAK,CAAC,EAAG,0BAA2B,CAAC,aAAc,GAAI,EAAG,0BAA2B,sBAAuB,EAAG,mBAAoB,oBAAqB,oBAAqB,kBAAmB,sBAAuB,CAAC,EAAG,qBAAsB,sCAAuC,CAAC,EAAG,2BAA4B,EAAG,qBAAsB,CAAC,eAAgB,IAAK,CAAC,EAAG,UAAW,SAAUtB,SAAU,SAAiC9D,EAAIC,GAsB1yC,GAtB0zC,EAALD,IACnzC,EAAA,KACA,EAAA,GAAsB,EAAG,QAAS,EAAG,GACrC,EAAA,GAAsB,EAAG,MAAO,EAAG,GACnC,EAAA,GAAsB,EAAG,QAAS,EAAG,GACrC,EAAA,GAAkB,UAAA,SAAmEoQ,GAAU,OAAOnQ,EAAI+U,eAAe5E,KAAzH,CAAqI,SAAA,SAAiEA,GAAU,OAAOnQ,EAAIgV,cAAc7E,MACzO,EAAA,KACA,EAAA,GAAsB,EAAG,MAAO,EAAG,GACnC,EAAA,GAAiB,EAAG,MAAO,GAC3B,EAAA,GAAsB,EAAG,MAAO,GAChC,EAAA,GAAiB,GAAI,MAAO,IAC5B,EAAA,KACA,EAAA,KACA,EAAA,KACA,EAAA,GAAsB,GAAI,OAAQ,GAAI,IACtC,EAAA,GAAkB,qBAAA,WAA6F,OAAOnQ,EAAIiV,wBAC1H,EAAA,GAAsB,GAAI,OAAQ,IAClC,EAAA,GAAc,GAAI,QAClB,EAAA,KACA,EAAA,GAAoB,IACpB,EAAA,KACA,EAAA,MACO,EAALlV,EAAQ,CACV,MAAMmV,EAAM,EAAA,GAAmB,GACzBC,EAAM,EAAA,GAAmB,IAC/B,EAAA,GAAmB,MAAOnV,EAAIoV,SAC9B,EAAA,GAAiB,GACjB,EAAA,GAAmB,uCAAwCD,EAAIE,cAAgBF,EAAIE,YAAYjT,QAC/F,EAAA,GAAiB,GACjB,EAAA,GAAkB,KAAMpC,EAAIoV,QAA5B,CAAqC,WAAYpV,EAAI8U,SAArD,CAA+D,WAAY9U,EAAIyT,SAA/E,CAAyF,UAAWzT,EAAIqT,QAAxG,CAAiH,WAAYrT,EAAI2K,UACjI,EAAA,GAAmB,OAAQ3K,EAAI+T,KAA/B,CAAqC,eAAgB/T,EAAIqT,QAAQ/C,WAAjE,CAA6E,aAActQ,EAAIiU,UAA/F,CAA0G,kBAAmBjU,EAAIkU,gBACjI,EAAA,GAAiB,GACjB,EAAA,GAAkB,mBAAoBgB,EAAtC,CAA2C,oBAAqBlV,EAAI4E,eAAiB5E,EAAI2K,SAAzF,CAAmG,qBAAqB,EAAxH,CAA8H,kBAAmB,GAAjJ,CAAqJ,qBAAsB,EAAA,GAAuB,GAAIiI,MACrMxN,WAAY,CAAC,EAAA,EAAkB,EAAA,GAA2BC,OAAQ,CAAC,w7FAAy7FC,cAAe,EAAGC,gBAAiB,wBAmIliG+P,UAENA,EAAuC9E,UAAO,EAAA,GAAwB,CAAE9M,KAAM4R,IAC9EA,EAAuC7E,UAAO,EAAA,GAAwB,CAAE5P,QAAS,SAAwD2C,GAAK,OAAO,IAAKA,GAAK8R,0BASzJC,UAENA,EAAqB/E,UAAO,EAAA,GAAwB,CAAE9M,KAAM6R,IAC5DA,EAAqB9E,UAAO,EAAA,GAAwB,CAAE5P,QAAS,SAAsC2C,GAAK,OAAO,IAAKA,GAAK+R,IAA4B5E,QAAS,CAAC,CACrJ2E,EACA,EAAA,EACA,EAAA,EACA,EAAA,GACDA,EAAwC,EAAA,iCC1YnD7W,EAAOC,QAJP,SAAmBoD,GACjB,OAAOA,GAAUA,2BCRnB,IAAI0T,EAAO,EAAQ,QAKnB/W,EAAOC,QAFU8W,EAAK,yNCQf,IAAA,EAAA,YAAMC,EAmBT,YACYC,EACAC,EACAC,GAFA,KAAAF,OAAAA,EACA,KAAAC,KAAAA,EACA,KAAAC,aAAAA,EApBJ,KAAAC,QAAU,IAAIC,EAAA,EAAkC,IACjD,KAAAC,eAAiB,IAAID,EAAA,GAAyB,GAC9C,KAAAE,SAAW,IAAIF,EAAA,GAAgB,GAC/B,KAAAG,UAAY,IAAIH,EAAA,EAAyE,MACzF,KAAAI,uBAAwB,EACxB,KAAAC,gBAA0B,KAE1B,KAAAC,WAAaxX,KAAKqX,UAAU9N,KAAK,OAAAH,EAAA,EAAA,CAAIqO,GAAKzX,KAAKmX,eAAejU,OAAsC,IAA7BuU,EAAEC,WAAW7E,KAAK1P,SAEhG,aACI,OAAOnD,KAAKiX,QAAQ/T,MAGxB,0BACI,OAAuC,QAAvC,EAA2B,QAA3B,EAAOlD,KAAKqX,UAAUnU,aAAK,IAAA,OAAA,EAAA,EAAEwU,kBAAU,IAAA,OAAA,EAAA,EAAEC,aAStC,SAASC,EAAqB,GAAIC,EAAcC,GAEnD,MAAMC,EAAe/X,KAAKgY,aAA2C,GAA5BhY,KAAKiY,qBAK9CjY,KAAKiX,QAAQnI,KAAK,OAAD,OAAA,OAAA,OAAA,OAAA,OAAA,GAJQ9O,KAAKqX,UAAUnU,MAAQ,CAC5CgV,QAASlY,KAAKqX,UAAUnU,MAAMwU,WAAWS,SACzCC,KAAMpY,KAAKqX,UAAUnU,MAAMwU,WAAWC,cACtC,IACuCI,GAAgBH,IAEpD5X,KAAKgY,cACRhY,KAAKqY,KAAKR,EAAKC,GAIhB,WACH,MAAMQ,EAAUtY,KAAKqX,UAAUnU,MAAMwU,WAAWC,aAC1CY,EAAQvY,KAAKqX,UAAUnU,MAAMwU,WAAWa,MACxCzJ,EAAOwJ,EAAU,EACvBtY,KAAKwY,SAAS,OAAD,OAAA,OAAA,OAAA,GACNxY,KAAKiX,QAAQ/T,OAAK,CACrBkV,MAAOE,GAAWxJ,EAAOyJ,EAAQD,EAAUxJ,KAI5C,eACH,MAAMwJ,EAAUtY,KAAKqX,UAAUnU,MAAMwU,WAAWC,aAChD3X,KAAKwY,SAAS,OAAD,OAAA,OAAA,OAAA,GACNxY,KAAKiX,QAAQ/T,OAAK,CACrBkV,KAAOE,EAAU,GAAM,KAIxB,cAAcG,SACbA,KAAiC,QAAvB,EAAKzY,KAAKiX,QAAQ/T,aAAK,IAAA,OAAA,EAAA,EAAEgV,WAC/BlY,KAAKuX,iBACLvX,KAAKgX,aAAazW,IAAIP,KAAKuX,gBAAiBkB,GAEhDzY,KAAKwY,SAAS,OAAD,OAAA,OAAA,OAAA,GACNxY,KAAKiX,QAAQ/T,OAAK,CACrBgV,QAASO,MAKd,qBACH,OAAOzY,KAAK8W,OAAO4B,YAAY9B,KAAK+B,SAASZ,YAGzC,KAAKa,EAAad,GACtB9X,KAAKgY,aAAehY,KAAKiX,QAAQ1N,KAC7B,OAAAsP,EAAA,EAAA,CAAUC,IACN9Y,KAAKoX,SAAStI,MAAK,GACnB,MAAMiK,GAAmB/Y,KAAKmX,eAAejU,MAW7C,OAVI6V,GAAmB/Y,KAAKuX,iBAAmBvX,KAAKgX,aAAagC,IAAIhZ,KAAKuX,mBACtEuB,EAAS,OAAH,OAAA,CAAIZ,QAASlY,KAAKgX,aAAagC,IAAIhZ,KAAKuX,kBAAqBuB,KAKvDC,GAAmBjB,EAC/B,OAAAmB,EAAA,EAAA,CAAG,CAACvB,WAAYI,IAChB9X,KAAK+W,KAAKiC,IAAIJ,EAAKE,IAEyBvP,KAI5C,OAAA2P,EAAA,EAAA,CAAI,KACAlZ,KAAKmZ,kBAAkBL,GACvB9Y,KAAKoX,SAAStI,MAAK,GACnB9O,KAAKmX,eAAerI,MAAK,IAC1B,KACC9O,KAAKoX,SAAStI,MAAK,GACnB9O,KAAKmX,eAAerI,MAAK,SAIvC/K,UAAUqV,IACRpZ,KAAKqX,UAAUvI,KAAKsK,KAIpB,kBAAkBN,EAAS,IAC/B,IAAI9Y,KAAKsX,sBAAT,CACA,IAAK,MAAMvX,KAAO+Y,EACVO,MAAMC,QAAQR,EAAO/Y,MACrB+Y,EAAO/Y,GAAO+Y,EAAO/Y,GAAKwZ,KAAK,MAGvCvZ,KAAK8W,OAAO0C,SAAS,GAAI,CAACzB,YAAae,EAAQW,YAAY,KAGxD,0BACH,OAAOzZ,KAAKqX,UAAUnU,OAClBlD,KAAK0Z,aAA8C,QAAnC,EAAuB,QAAvB,EAAG1Z,KAAKqX,UAAUnU,aAAK,IAAA,OAAA,EAAA,EAAEwU,kBAAU,IAAA,OAAA,EAAA,EAAEiC,yDAvHpD9C,GAAS,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,8BAATA,EAAS,QAATA,EAAS,eAAf,uGC4CP,SAAS+C,EAAoB/G,EAAcgH,GACvC,MAAM3W,EAAQ,EAAA,KAAS2W,EAAchH,GAErC,GAAI,OAAA,EAAA,EAAA,CAAe3P,GAAQ,CACvB,MAAM4W,EAAcC,OAAO7W,GAI3B,OAAO4W,EA3DU,iBA2DuBA,EAAc5W,EAO1D,OAAOA,kBCtCJ,IAAA,EAAA,YAAM8W,EAaT,YACcC,EACAnD,EACAC,EACAC,GAHA,KAAAiD,MAAAA,EACA,KAAAnD,OAAAA,EACA,KAAAC,KAAAA,EACA,KAAAC,aAAAA,EAhBP,KAAAkD,MAAQ,IAAIhD,EAAA,EAA+B,IAC3C,KAAAiD,SAAW,IAAIjD,EAAA,EAAkC,IACjD,KAAAkD,cAAgB,IAAIlD,EAAA,EAAuC,IAC3D,KAAAmD,UAAY,IAAI,EAAara,KAAK8W,OAAQ9W,KAAK+W,KAAM/W,KAAKgX,cAGzD,KAAAsD,uBAAwB,EACxB,KAAAC,cAAgB,IAAIrD,EAAA,EAAqB,IAC1C,KAAAsD,MAAQ,IAAItD,EAAA,EAAqB,IACjC,KAAAuD,cAAgB,IAAIvD,EAAA,EAA0B,IAUrD,WACI,OAAOlX,KAAKwa,MAAMtX,MAGtB,SAAS2P,GACL,MAAM6H,EAAY,IAAI7H,GACtB7S,KAAKua,cAAczL,KAAK4L,GACxB1a,KAAKwa,MAAM1L,KAAK4L,GAGhB1a,KAAKsa,uBAAwB,EAC7Bta,KAAK2a,QAGF,KAAKC,EAA6B,IA4BrC,OA3BA5a,KAAK4a,OAASA,EACd5a,KAAKoa,cAActL,KAAK,OAAD,OAAA,OAAA,OAAA,GAAK9O,KAAKoa,cAAclX,OAAU0X,EAAOC,eAC5DD,EAAOhC,IACP5Y,KAAK8a,qBACEF,EAAO9C,cACd9X,KAAK6S,KAAO+H,EAAO9C,aAGvB9X,KAAK+a,QAAU,OAAAC,EAAA,EAAA,CAAc,CAAChb,KAAKka,MAAOla,KAAKma,SAAUna,KAAKoa,gBACzD7Q,KAAK,OAAA0R,EAAA,EAAA,CAAa,GAAI,OAAA7R,EAAA,EAAA,CAAI0P,GAAU1G,OAAO8I,OAAO,MAAOpC,KAAU/U,UAAW+U,IAC3E,GAAI9Y,KAAKsa,sBACL,OAAOta,KAAKsa,uBAAwB,EAExCxB,EAAS,OAAA,EAAA,EAAA,CAAqBA,GAC9B1G,OAAO+I,QAAQrC,GAAQ9K,QAAQ,EAAEjO,EAAKmD,MACb,iBAAVA,GAAsBA,EAAM5B,KACnCwX,EAAU/Y,EAAH,MAAcmD,EAAM5B,UACpBwX,EAAO/Y,MAGlBC,KAAK4a,OAAOhC,IACZ5Y,KAAKqa,UAAU7B,SAASM,EAAQ9Y,KAAK4a,OAAOhC,IAAK5Y,KAAK4a,OAAO9C,aACtD1F,OAAOgJ,KAAKtC,GAAQ3V,QAAUnD,KAAK6S,KAAK1P,QAC/CnD,KAAKqb,qBAAqBvC,KAI/B9Y,KAGH,qBACJA,KAAKsb,aAAetb,KAAKqa,UAAUhD,UAAU9N,KAAK,OAAAgS,EAAA,EAAA,IAAYxX,UAAU,EAAEyX,EAAMlD,YAI5E,MAAMzF,EAAO7S,KAAK4a,OAAOa,iBAAkC,QAAhB,EAAAD,MAAAA,OAAI,EAAJA,EAAM9D,kBAAU,IAAA,OAAA,EAAA,EAAEC,gBAAiBW,EAAQZ,WAAWC,aAC7F,IAAI3X,KAAKwa,MAAMtX,SAAUoV,EAAQZ,WAAW7E,MAC5CyF,EAAQZ,WAAW7E,KACvB7S,KAAKwa,MAAM1L,KAAK+D,KAIhB,qBAAqBiG,GACzB,IAAIjG,EAAO,IAAI7S,KAAKua,cAAcrX,OAC9B4V,EAAO4C,QACP7I,EC9GL,SAA8CA,EAAW8I,GAC5D,OAAO9I,EAAK8I,OAAOC,GAYvB,SAAyB/I,EAAc8I,GAEnC,MAAME,EAQH,SAASC,EAAYF,GACxB,OAAOxJ,OAAOgJ,KAAKQ,GAAKvY,OAAO,CAAC0Y,EAAqBhc,IAU1Cgc,GAHOH,EAAI7b,IAA4B,iBAAb6b,EAAI7b,GACjC+b,EAAYF,EAAI7b,IAChB6b,EAAI7b,IACoB,SAC7B,IAAIic,cAZJ,CARyBnJ,GAGtBoJ,EAAoBN,EAAOnY,OAAOwY,cAExC,OAA+C,IAAxCH,EAAQK,QAAQD,GAP3B,CAZ8CL,EAAKD,IAD5C,CD8GmC9I,EAAMiG,EAAO4C,QAE3C5C,EAAOqD,SAAWrD,EAAOsD,WACzBvJ,ED7GL,SAA4CA,EAAWsJ,EAAiBC,GAC3E,OAAOvJ,EAAKwJ,KAAK,CAACC,EAAGC,KACjB,IAAIC,EAAS5C,EAAoB0C,EAAGH,GAChCM,EAAS7C,EAAoB2C,EAAGJ,GAKpC,MAAMO,SAAoBF,EACpBG,SAAoBF,EAEtBC,IAAeC,IACI,WAAfD,IACAF,GAAU,IAEK,WAAfG,IACAF,GAAU,KAQlB,IAAIG,EAAmB,EAcvB,OAbc,MAAVJ,GAA4B,MAAVC,EAEdD,EAASC,EACTG,EAAmB,EACZJ,EAASC,IAChBG,GAAoB,GAEP,MAAVJ,EACPI,EAAmB,EACF,MAAVH,IACPG,GAAoB,GAGjBA,GAAiC,QAAbR,EAAqB,GAAK,KAtCtD,CC6GiCvJ,EAAMiG,EAAOqD,QAASrD,EAAOsD,WAE7Dpc,KAAKwa,MAAM1L,KAAK+D,GAGb,UAAU9S,EAA6BmD,GAC1ClD,KAAKma,SAASrL,KAAK,OAAD,OAAA,OAAA,OAAA,GACX9O,KAAKma,SAASjX,OAAK,CACtB,CAACnD,GAAMmD,KAIR,aAAanD,GAChB,MAAM8c,EAAU,OAAH,OAAA,GAAO7c,KAAKma,SAASjX,cAC3B2Z,EAAQ9c,GACfC,KAAKma,SAASrL,KAAK+N,GAGhB,MAAMhC,EAAsC,MAC/C7a,KAAKma,SAASrL,KAAK,IACnB9O,KAAKka,MAAMpL,KAAK,IAChB9O,KAAKya,cAAc3L,KAAK,IACpB+L,GACA7a,KAAKoa,cAActL,KAAK+L,GAIzB,0BAA0BiC,EAAyBjK,EAAe+H,GACrE,OAAO5a,KAAKia,MAAM8C,KAAKD,EAAKjK,EAAM+H,GAAQoC,eACrCzT,KACG,OAAAoS,EAAA,EAAA,CAAOsB,KAAsBA,GAC7B,OAAA/D,EAAA,EAAA,CAAI,IAAMlZ,KAAK2a,UAIpB,wBAAwBuC,GAC3B,MAAMrK,EAAO,OAAH,OAAA,OAAA,OAAA,GAAO,EAAA,GAAuB,CAAEsK,aAAc,CAACD,SAAAA,KACzD,OAAOld,KAAKia,MAAM8C,KAAK,EAAA,EAAuBlK,GAAMuK,cAC/C7T,KAAK,OAAAoS,EAAA,EAAA,CAAO0B,GAAaA,IAG3B,mBACH,OAAO,OAAP,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,GACOrd,KAAKka,MAAMhX,OACXlD,KAAKma,SAASjX,OACdlD,KAAKoa,cAAclX,OACnBlD,KAAKqa,UAAUvB,QAInB,kBACc,QAAjB,EAAA9Y,KAAKsb,oBAAY,IAAA,GAAA,EAAElX,cACP,QAAZ,EAAApE,KAAK+a,eAAO,IAAA,GAAA,EAAE3W,4DAvIT4V,GAAgB,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,8BAAhBA,EAAgB,QAAhBA,EAAgB,eAAtB,yBEnBPna,EAAOC,QAJP,SAAqBoD,GACnB,OAAOlD,KAAKC,SAAS6T,IAAI5Q,0BCT3B,IAGIoa,EAHYC,SAASlL,UAGIX,SAqB7B7R,EAAOC,QAZP,SAAkB0d,GAChB,GAAY,MAARA,EAAc,CAChB,IACE,OAAOF,EAAa7K,KAAK+K,GACzB,MAAOC,IACT,IACE,OAAQD,EAAO,GACf,MAAOC,KAEX,MAAO,4BCtBT,IAAIC,EAAU,EAAQ,QAetB7d,EAAOC,QANP,SAA0Bc,GACxB,OAAO,SAASI,GACd,OAAO0c,EAAQ1c,EAAQJ,6BCX3B,IAAIgS,EAAW,EAAQ,QAiDvB,SAAS+K,EAAQH,EAAMI,GACrB,GAAmB,mBAARJ,GAAmC,MAAZI,GAAuC,mBAAZA,EAC3D,MAAM,IAAIC,UAhDQ,uBAkDpB,IAAIC,EAAW,WACb,IAAIC,EAAOvY,UACPzF,EAAM6d,EAAWA,EAASI,MAAMhe,KAAM+d,GAAQA,EAAK,GACnDE,EAAQH,EAASG,MAErB,GAAIA,EAAMnK,IAAI/T,GACZ,OAAOke,EAAMjF,IAAIjZ,GAEnB,IAAIK,EAASod,EAAKQ,MAAMhe,KAAM+d,GAE9B,OADAD,EAASG,MAAQA,EAAM1d,IAAIR,EAAKK,IAAW6d,EACpC7d,GAGT,OADA0d,EAASG,MAAQ,IAAKN,EAAQO,OAAStL,GAChCkL,EAITH,EAAQO,MAAQtL,EAEhB/S,EAAOC,QAAU6d,0BCxEjB,IAAIQ,EAAY,EAAQ,QACpBC,EAAa,EAAQ,QACrBC,EAAU,EAAQ,QAClBC,EAAU,EAAQ,QAClBC,EAAU,EAAQ,QAStB,SAASC,EAAKrD,GACZ,IAAInX,GAAS,EACTb,EAAoB,MAAXgY,EAAkB,EAAIA,EAAQhY,OAG3C,IADAnD,KAAKye,UACIza,EAAQb,GAAQ,CACvB,IAAIub,EAAQvD,EAAQnX,GACpBhE,KAAKO,IAAIme,EAAM,GAAIA,EAAM,KAK7BF,EAAKnM,UAAUoM,MAAQN,EACvBK,EAAKnM,UAAkB,OAAI+L,EAC3BI,EAAKnM,UAAU2G,IAAMqF,EACrBG,EAAKnM,UAAUyB,IAAMwK,EACrBE,EAAKnM,UAAU9R,IAAMge,EAErB1e,EAAOC,QAAU0e,0BC/BjB,IAAIG,EAAW,EAAQ,QACnBnM,EAAc,EAAQ,QACtB8G,EAAU,EAAQ,QAClBsF,EAAU,EAAQ,QAClBC,EAAW,EAAQ,QACnBle,EAAQ,EAAQ,QAiCpBd,EAAOC,QAtBP,SAAiBkB,EAAQJ,EAAMke,GAO7B,IAJA,IAAI9a,GAAS,EACTb,GAHJvC,EAAO+d,EAAS/d,EAAMI,IAGJmC,OACd/C,GAAS,IAEJ4D,EAAQb,GAAQ,CACvB,IAAIpD,EAAMY,EAAMC,EAAKoD,IACrB,KAAM5D,EAAmB,MAAVY,GAAkB8d,EAAQ9d,EAAQjB,IAC/C,MAEFiB,EAASA,EAAOjB,GAElB,OAAIK,KAAY4D,GAASb,EAChB/C,KAET+C,EAAmB,MAAVnC,EAAiB,EAAIA,EAAOmC,SAClB0b,EAAS1b,IAAWyb,EAAQ7e,EAAKoD,KACjDmW,EAAQtY,IAAWwR,EAAYxR,6BCnCpC,IAAIsY,EAAU,EAAQ,QAClB5Y,EAAQ,EAAQ,QAChBqe,EAAe,EAAQ,QACvBrN,EAAW,EAAQ,QAiBvB7R,EAAOC,QAPP,SAAkBoD,EAAOlC,GACvB,OAAIsY,EAAQpW,GACHA,EAEFxC,EAAMwC,EAAOlC,GAAU,CAACkC,GAAS6b,EAAarN,EAASxO,uCCjBhE,GAAA,IAAA,EAAW,EAAQ,QAGf8b,EAA4Clf,IAAYA,EAAQmf,UAAYnf,EAG5Eof,EAAaF,GAAgC,iBAAVnf,GAAsBA,IAAWA,EAAOof,UAAYpf,EAMvFsf,EAHgBD,GAAcA,EAAWpf,UAAYkf,EAG5BpI,EAAKuI,YAASC,EACvCC,EAAcF,EAASA,EAAOE,iBAAcD,EAqBhDvf,EAAOC,QAXP,SAAqBwf,EAAQC,GAC3B,GAAIA,EACF,OAAOD,EAAOE,QAEhB,IAAIrc,EAASmc,EAAOnc,OAChB/C,EAASif,EAAcA,EAAYlc,GAAU,IAAImc,EAAOjf,YAAY8C,GAGxE,OADAmc,EAAOG,KAAKrf,GACLA,kEC9BT,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,KAAA,IAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,6BCKI,EAAA,GAAA,GDWG,IAAA,EAAA,YAAMsf,EAET,YACuC7M,EAC3B8M,GAD2B,KAAA9M,KAAAA,EAC3B,KAAA8M,gBAAAA,EAGL,QACH3f,KAAK2f,gBAAgBC,sDARhBF,GAA8B,EAAA,GAG3B,EAAA,GAAkB,EAAA,GAAA,EAAA,4BAHrBA,EAA8B,UAAA,CAAA,CAAA,4BAAA,SAAA,EAAA,aAAA,SAAA,EAAA,GAAA,EAAA,wPCjB3C,EAAA,GAAA,EAAA,UACI,EAAA,GAAA,EAAA,WAAA,GACA,EAAA,GAAA,EAAA,OAAA,GAAY,EAAA,GAAA,EAAA,WAAO,EAAA,KACvB,EAAA,KAEA,EAAA,GAAA,EAAA,OAAA,GAAmB,EAAA,GAAA,YAAA,WAAA,OAAY,EAAAE,WAC3B,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,eAAA,GACJ,EAAA,KAEA,EAAA,GAAA,EAAA,UACI,EAAA,GAAA,EAAA,SAAA,GAAQ,EAAA,GAAA,SAAA,WAAA,OAAS,EAAAA,WAAuD,EAAA,GAAA,EAAA,SAAK,EAAA,KACjF,EAAA,YALkB,EAAA,GAAA,GAAA,EAAA,GAAA,mBAAA,EAAA,KAAA,ssBDOF,CACR,EAAA,EAAoBC,kBACvB,gBAAA,OAEE,wCEhBP,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,KAAA,IAAA,EAAA,EAAA,QAGO,MAAMC,UAAoC,EAAA,EAC7C,YACchH,EACAiH,GAEVxd,QAHU,KAAAuW,OAAAA,EACA,KAAAiH,KAAAA,EAIV/f,KAAKggB,aAAehgB,KAAK+f,KAAKnb,EAC1B,iDACA,CAACqb,WAAYjgB,KAAK8Y,OAAOmH,WAAW1G,KAAK,QAI1C,MAAM2G,GACT,OAASlgB,KAAK8Y,OAAOmH,WAAWE,KAAKC,GAC1BA,EAAUpE,gBAAkBkE,EAAKE,UAAUpE,sDClB9D,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,KAAA,IAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAMO,IAAA,EAAA,YAAMqE,EACT,UAAUC,EAAgB,EAAGC,GACzB,OAAIC,MAAM5T,WAAW6T,OAAOH,OAAcI,SAASJ,GAAe,IAC3D,OAAA,EAAA,EAAA,CAAYA,EAAOC,iDAHrBF,qDAAAA,EAAqB,MAAA,OAA3B,yBCNP,IAAIlO,EAAcC,OAAOC,UAgBzBxS,EAAOC,QAPP,SAAqBoD,GACnB,IAAIyd,EAAOzd,GAASA,EAAM7C,YAG1B,OAAO6C,KAFqB,mBAARyd,GAAsBA,EAAKtO,WAAcF,0BCC/DtS,EAAOC,QANP,SAAsBC,GACpB,OAAO,SAASiB,GACd,OAAiB,MAAVA,OAAiBoe,EAAYpe,EAAOjB,6BCT/C,IAAI2S,EAAY,EAAQ,QAcxB7S,EAAOC,QALP,WACEE,KAAKC,SAAW,IAAIyS,EACpB1S,KAAKiT,KAAO,2BCXd,IAAI2N,EAAgB,EAAQ,QACxBC,EAAW,EAAQ,QACnBC,EAAc,EAAQ,QAkC1BjhB,EAAOC,QAJP,SAAckB,GACZ,OAAO8f,EAAY9f,GAAU4f,EAAc5f,GAAU6f,EAAS7f,0BCdhEnB,EAAOC,QAVP,SAAsBkB,GACpB,IAAIZ,EAAS,GACb,GAAc,MAAVY,EACF,IAAK,IAAIjB,KAAOqS,OAAOpR,GACrBZ,EAAO4S,KAAKjT,GAGhB,OAAOK,yBCCTP,EAAOC,QAVP,SAAoBsJ,GAClB,IAAIpF,GAAS,EACT5D,EAASiZ,MAAMjQ,EAAI6J,MAKvB,OAHA7J,EAAI4E,SAAAA,SAAiB9K,EAAOnD,GAC1BK,IAAS4D,GAAS,CAACjE,EAAKmD,MAEnB9C,wCCdT,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,KAMO,MAAM2gB,EAAmB,IANhC,EAAA,QAMoC,GAAgC,4CCNpE,IAAIC,EAAW,EAAQ,QAoBvBnhB,EAAOC,QARP,SAAeoD,GACb,GAAoB,iBAATA,GAAqB8d,EAAS9d,GACvC,OAAOA,EAET,IAAI9C,EAAU8C,EAAQ,GACtB,MAAkB,KAAV9C,GAAkB,EAAI8C,IAAU,EAAA,EAAa,KAAO9C,2BCjB9D,IAAIkZ,EAAU,EAAQ,QAClB0H,EAAW,EAAQ,QAGnBC,EAAe,mDACfC,EAAgB,QAuBpBrhB,EAAOC,QAbP,SAAeoD,EAAOlC,GACpB,GAAIsY,EAAQpW,GACV,OAAO,EAET,IAAI4B,SAAc5B,EAClB,QAAY,UAAR4B,GAA4B,UAARA,GAA4B,WAARA,GAC/B,MAAT5B,IAAiB8d,EAAS9d,KAGvBge,EAAcC,KAAKje,KAAW+d,EAAaE,KAAKje,IAC1C,MAAVlC,GAAkBkC,KAASkP,OAAOpR,uCCzBvC,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,KAAA,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,KAAA,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,KAAA,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,KAAA,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,KAAA,IAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QA6BA,MAAMC,EAAM,CAAC,KAmBPmgB,EAAkB,IAAI,EAAA,EAAe,iBAMrCC,EAAkB,IAAI,EAAA,EAAe,iBAMrCC,EAAyB,IAAI,EAAA,EAAe,uBAGlD,MAAMC,EACF,YAAYlf,GACRrC,KAAKqC,YAAcA,GAG3B,MAAMmf,EAAoB,OAAA,EAAA,EAAA,CAAc,OAAA,EAAA,EAAA,CAAW,OAAA,EAAA,EAAA,CAAmBD,GAAc,YAAa,qBAoC3FE,UAAgBD,EAClB,YAAYnf,EAAaqf,EAASC,EAAUC,EAE5CC,EAEAzf,EAAoByS,EAEpB3M,GACI3F,MAAMF,GACNrC,KAAKqC,YAAcA,EACnBrC,KAAK0hB,QAAUA,EACf1hB,KAAKoC,mBAAqBA,EAE1BpC,KAAK8hB,WAAY,EAEjB9hB,KAAK+hB,oBAAqB,EAE1B/hB,KAAKgiB,mBAAoB,EAEzBhiB,KAAKiiB,mBAAoB,EACzBjiB,KAAKkiB,WAAY,EACjBliB,KAAKmiB,aAAc,EACnBniB,KAAKoiB,WAAY,EACjBpiB,KAAKqiB,YAAa,EAElBriB,KAAKsiB,SAAW,IAAI,EAAA,EAEpBtiB,KAAKuiB,QAAU,IAAI,EAAA,EAEnBviB,KAAKwiB,gBAAkB,IAAI,EAAA,EAE3BxiB,KAAKyiB,UAAY,IAAI,EAAA,EAErBziB,KAAK0iB,QAAU,IAAI,EAAA,EACnB1iB,KAAK2iB,oBAIL3iB,KAAK4iB,mBAAqB1a,GAAa2a,UAAUC,cAAc,OAC/D9iB,KAAK4iB,kBAAkBtf,UAAUuQ,IAAI,mBACrC7T,KAAKqC,YAAYqB,cAAcqf,YAAY/iB,KAAK4iB,mBAChD5iB,KAAKgjB,YAAc,IAAI,EAAA,EAAehjB,KAAM0hB,EAAS1hB,KAAK4iB,kBAAmBjB,GAC7E3hB,KAAKgjB,YAAYC,mBAAmB5gB,GACpCrC,KAAKkjB,aAAetB,GAAuB,GAC3C5hB,KAAKmjB,oBAAwC,mBAAlBtB,EAC3B7hB,KAAK6U,SAAuB,MAAZA,GAAoBW,SAASX,KAAoB,EAMrE,qBACI,OAAO7U,KAAK+L,UAAY/L,KAAKgG,iBAAmBhG,KAAKkjB,aAAanX,SAGtE,eAAiB,OAAO/L,KAAKkiB,UAC7B,aAAahf,GACT,MAAMkgB,EAAe,OAAA,EAAA,EAAA,CAAsBlgB,GACvCkgB,IAAiBpjB,KAAKkiB,YACtBliB,KAAKkiB,UAAYkB,EACjBpjB,KAAKqjB,4BAIb,YACI,YAAuBjE,IAAhBpf,KAAKsjB,OACNtjB,KAAKsjB,OACLtjB,KAAKqC,YAAYqB,cAAc+S,YAEzC,UAAUvT,GAASlD,KAAKsjB,OAASpgB,EAOjC,iBAAmB,OAAOlD,KAAKmiB,aAAeniB,KAAK+hB,mBACnD,eAAe7e,GACXlD,KAAKmiB,YAAc,OAAA,EAAA,EAAA,CAAsBjf,GAG7C,eAAiB,OAAOlD,KAAKiiB,mBAAqBjiB,KAAKoiB,UACvD,aAAalf,GACTlD,KAAKoiB,UAAY,OAAA,EAAA,EAAA,CAAsBlf,GAK3C,gBAAkB,OAAOlD,KAAKqiB,WAC9B,cAAcnf,GACVlD,KAAKqiB,WAAa,OAAA,EAAA,EAAA,CAAsBnf,GAG5C,mBAGI,OAAOlD,KAAKujB,aAAevjB,KAAKgiB,mBAAqBhiB,KAAKiO,UACtDjO,KAAKiO,SAASyD,WAAa,KAEnC,oBACI,MACMnB,EAAUvQ,KAAKqC,YAAYqB,cAC7B6M,EAAQiT,aAFc,mBAAA,mBAGtBjT,EAAQkT,QAAQzH,cAChBzL,EAAQjN,UAAUuQ,IAJI,kBAQtBtD,EAAQjN,UAAUuQ,IAAI,qBAG9B,cACI7T,KAAKyiB,UAAUxe,KAAK,CAAEyf,KAAM1jB,OAC5BA,KAAKgjB,YAAYW,uBAGrB,SACS3jB,KAAKkiB,YACNliB,KAAKkiB,WAAY,EACjBliB,KAAKqjB,2BACLrjB,KAAK4jB,iBAIb,WACQ5jB,KAAKkiB,YACLliB,KAAKkiB,WAAY,EACjBliB,KAAKqjB,2BACLrjB,KAAK4jB,iBAIb,uBACS5jB,KAAKkiB,YACNliB,KAAKkiB,WAAY,EACjBliB,KAAKqjB,0BAAyB,GAC9BrjB,KAAK4jB,iBAIb,eAAeC,GAAc,GAIzB,OAHA7jB,KAAKkiB,WAAaliB,KAAKiO,SACvBjO,KAAKqjB,yBAAyBQ,GAC9B7jB,KAAK4jB,gBACE5jB,KAAKiO,SAGhB,QACSjO,KAAK8hB,YACN9hB,KAAKqC,YAAYqB,cAAcmK,QAC/B7N,KAAKsiB,SAASxT,KAAK,CAAE4U,KAAM1jB,QAE/BA,KAAK8hB,WAAY,EAQrB,SACQ9hB,KAAK8jB,WACL9jB,KAAK0iB,QAAQze,KAAK,CAAEyf,KAAM1jB,OAIlC,aAAawE,GACLxE,KAAK+L,SACLvH,EAAMyH,iBAGNzH,EAAMuK,kBAId,eAAevK,GACX,IAAIxE,KAAK+L,SAGT,OAAQvH,EAAMwH,SACV,KAAK,EAAA,EACL,KAAK,EAAA,EAEDhM,KAAK+jB,SAELvf,EAAMyH,iBACN,MACJ,KAAK,EAAA,EAEGjM,KAAKujB,YACLvjB,KAAKgkB,gBAAe,GAGxBxf,EAAMyH,kBAIlB,QAKIjM,KAAK0hB,QAAQpY,SACRC,KAAK,OAAA,EAAA,EAAA,CAAK,IACVxF,UAAU,KACX/D,KAAK0hB,QAAQuC,IAAI,KACbjkB,KAAK8hB,WAAY,EACjB9hB,KAAKuiB,QAAQzT,KAAK,CAAE4U,KAAM1jB,WAItC,yBAAyB6jB,GAAc,GACnC7jB,KAAKwiB,gBAAgBve,KAAK,CACtBtC,OAAQ3B,KACR6jB,YAAAA,EACA5V,SAAUjO,KAAKkiB,YAGvB,gBAEQliB,KAAKoC,oBACLpC,KAAKoC,mBAAmBmC,uBAIpCkd,EAAQ9c,UAAO,SAAyBC,GAAK,OAAO,IAAKA,GAAK6c,GAAS,EAAA,GAAyB,EAAA,GAAoB,EAAA,GAAyB,EAAA,GAAgB,EAAA,GAAyB,EAAA,GAAkB,EAAA,GAAyB,EAAA,EAA2B,GAAI,EAAA,GAAyB,EAAA,EAAuB,GAAI,EAAA,GAAyB,EAAA,GAA2B,EAAA,GAAyB,YAAa,EAAA,GAAyB,EAAA,EAAU,KACjbA,EAAQ5c,UAAO,EAAA,GAAyB,CAAEC,KAAM2c,EAAS9b,UAAW,CAAC,CAAC,kBAAmB,CAAC,GAAI,iBAAkB,IAAK,CAAC,YAAa,CAAC,GAAI,WAAY,KAAMC,eAAgB,SAAgCzE,EAAIC,EAAKyE,GAK3M,IAAIb,EAL4N,EAAL7D,IAC3N,EAAA,GAAsB0E,EAAUwb,GAAiB,GACjD,EAAA,GAAsBxb,EAAUyb,GAAwB,GACxD,EAAA,GAAsBzb,EAAUub,GAAiB,IAC1C,EAALjgB,IAEF,EAAA,GAAsB6D,EAAK,EAAA,QAA0B5D,EAAI8iB,OAASlf,EAAGE,OACrE,EAAA,GAAsBF,EAAK,EAAA,QAA0B5D,EAAI+iB,aAAenf,EAAGE,OAC3E,EAAA,GAAsBF,EAAK,EAAA,QAA0B5D,EAAIgjB,WAAapf,EAAGE,SACxEa,UAAW,CAAC,OAAQ,SAAU,EAAG,WAAY,uBAAwBqL,SAAU,GAAIC,aAAc,SAA8BlQ,EAAIC,GAAgB,EAALD,GAC/I,EAAA,GAAkB,SAAA,SAAmDoQ,GAAU,OAAOnQ,EAAIijB,aAAa9S,KAAvG,CAAmH,WAAA,SAAuDA,GAAU,OAAOnQ,EAAIqQ,eAAeF,KAA9M,CAA0N,SAAA,WAAuD,OAAOnQ,EAAIyM,UAA5R,CAAwS,QAAA,WAAqD,OAAOzM,EAAIkjB,WACjW,EAALnjB,IACF,EAAA,GAAmB,WAAYC,EAAI2K,SAAW,KAAO3K,EAAIyT,SAAzD,CAAmE,WAAYzT,EAAI2K,UAAY,KAA/F,CAAqG,gBAAiB3K,EAAI2K,SAAS2F,WAAnI,CAA+I,gBAAiBtQ,EAAImjB,cACpK,EAAA,GAAmB,oBAAqBnjB,EAAI6M,SAA5C,CAAsD,uBAAwB7M,EAAI8iB,OAAlF,CAA0F,8BAA+B9iB,EAAI+iB,cAAgB/iB,EAAIgjB,WAAjJ,CAA6J,oBAAqBhjB,EAAI2K,SAAtL,CAAgM,0BAA2B3K,EAAI+hB,uBAC9Nhe,OAAQ,CAAE8Q,MAAO,QAASjQ,cAAe,gBAAiB6O,SAAU,WAAY5G,SAAU,WAAY/K,MAAO,QAASqgB,WAAY,aAAcxX,SAAU,WAAY+X,UAAW,aAAeze,QAAS,CAAEmd,gBAAiB,kBAAmBC,UAAW,YAAaC,QAAS,WAAazc,SAAU,CAAC,WAAYX,SAAU,CAAC,EAAA,0BAyGlUkf,EACF,YAAYC,EAEZ5d,GACI7G,KAAKykB,YAAcA,EAEf5d,GAAoD,WAAtCA,EAAWnD,cAAcghB,UACvC7d,EAAWnD,cAAcihB,aAAa,OAAQ,UAItD,aAAangB,GACT,MAAMogB,EAAa5kB,KAAKykB,YACpBG,EAAWd,YAAcc,EAAW7Y,UACpC6Y,EAAWb,SAOfvf,EAAMuK,0BAGdyV,EAAc7f,UAAO,SAA+BC,GAAK,OAAO,IAAKA,GAAK4f,GAAe,EAAA,GAAyB/C,GAAU,EAAA,GAAyB,EAAA,KACrJ+C,EAAc3f,UAAO,EAAA,GAAyB,CAAEC,KAAM0f,EAAe7e,UAAW,CAAC,CAAC,GAAI,gBAAiB,KAAMI,UAAW,CAAC,EAAG,kBAAmB,0BAA2BsL,aAAc,SAAoClQ,EAAIC,GAAgB,EAALD,GACnO,EAAA,GAAkB,SAAA,SAAyDoQ,GAAU,OAAOnQ,EAAIijB,aAAa9S,OAC5GjM,SAAU,CAAC,EAAA,GAA0B,CAAC,CAAEY,QAASkb,EAAiBjb,YAAaqe,cAyBxF,MAAMK,EAA4B,IAAI,EAAA,EAAe,6BAWrD,MAAMC,EACF,YAAYC,EAA2BC,EAAaC,EAEpDC,GACIllB,KAAK+kB,0BAA4BA,EACjC/kB,KAAKglB,YAAcA,EACnBhlB,KAAKilB,iBAAmBA,EACxBjlB,KAAKklB,UAAYA,GAGzB,MAAMC,EAAwB,OAAA,EAAA,EAAA,CAAgBL,GAE9C,IAAIzQ,EAAe,EAEnB,MAAM+Q,EACF,YAEAzjB,EAEAuB,GACIlD,KAAK2B,OAASA,EACd3B,KAAKkD,MAAQA,qBAMfmiB,UAAoBF,EACtB,YAAY9iB,EAAaD,EAAoB4F,EAAMgd,EAAaC,EAAkBF,EAElFG,GACI3iB,MAAMwiB,EAA2BC,EAAaC,EAAkBC,GAChEllB,KAAKqC,YAAcA,EACnBrC,KAAKoC,mBAAqBA,EAC1BpC,KAAKgI,KAAOA,EACZhI,KAAKklB,UAAYA,EAKjBllB,KAAKslB,YAAc,gBAMnBtlB,KAAKulB,wBAA0B,KAE/BvlB,KAAKwlB,WAAa,IAAI,EAAA,EAEtBxlB,KAAKylB,KAAO,iBAAiBpR,IAE7BrU,KAAK0lB,UAAY,EAKjB1lB,KAAK2lB,cAAgB,KAErB3lB,KAAK8I,WAAa,OAElB9I,KAAK6I,UAAY,OACjB7I,KAAK4lB,WAAY,EACjB5lB,KAAK6lB,aAAe,CAACC,EAAIC,IAAOD,IAAOC,EACvC/lB,KAAKiV,WAAY,EACjBjV,KAAKoiB,WAAY,EAEjBpiB,KAAKgmB,gBAAkB,aACvBhmB,KAAKmiB,aAAc,EAEnBniB,KAAK8D,OAAS,IAAI,EAAA,EAMlB9D,KAAKimB,YAAc,IAAI,EAAA,EACnBjmB,KAAKklB,YACLllB,KAAKklB,UAAUgB,cAAgBlmB,MAIvC,eACI,OAAOA,KAAKmmB,SAAWnmB,KAAKomB,gBAAgBnY,SAAWjO,KAAKomB,gBAAgBnY,SAAS,GAGzF,WAAa,OAAOjO,KAAKqmB,MAAQ,KAAO,UAExC,eAAiB,OAAOrmB,KAAK4lB,UAC7B,aAAa1iB,GACTlD,KAAK4lB,UAAY,OAAA,EAAA,EAAA,CAAsB1iB,GACvClD,KAAKsmB,kBAOT,kBAAoB,OAAOtmB,KAAK6lB,aAChC,gBAAgBha,GACZ7L,KAAK6lB,aAAeha,EAChB7L,KAAKomB,iBAELpmB,KAAKumB,uBAOb,YAAc,OAAOvmB,KAAKsjB,OAC1B,UAAUpgB,GACNlD,KAAKwmB,WAAWtjB,GAChBlD,KAAKsjB,OAASpgB,EAMlB,SACI,OAAOlD,KAAKymB,WAAazmB,KAAKymB,WAAWnlB,GAAKtB,KAAKylB,KAMvD,eAAiB,OAAOzlB,KAAKiV,UAC7B,aAAa/R,GACTlD,KAAKiV,UAAY,OAAA,EAAA,EAAA,CAAsB/R,GACvClD,KAAK0mB,aAAa5X,OAMtB,kBACI,OAAO9O,KAAKymB,WAAazmB,KAAKymB,WAAWE,YAAc3mB,KAAK4mB,aAEhE,gBAAgB1jB,GACZlD,KAAK4mB,aAAe1jB,EACpBlD,KAAK0mB,aAAa5X,OAGtB,cACI,OAAQ9O,KAAKymB,YAAczmB,KAAKymB,WAAWI,SAAY7mB,KAAK8mB,kBAMhE,YACI,QAAS9mB,KAAKymB,YAAczmB,KAAKymB,WAAWJ,UAAYrmB,KAAK+mB,OAA+B,IAAtB/mB,KAAK+mB,MAAM5jB,QAMrF,uBAAyB,OAAQnD,KAAKqmB,OAASrmB,KAAK6mB,QAKpD,eAAiB,OAAO7mB,KAAKklB,YAAcllB,KAAKklB,UAAUnZ,SAAW/L,KAAKoiB,UAC1E,aAAalf,GACTlD,KAAKoiB,UAAY,OAAA,EAAA,EAAA,CAAsBlf,GACvClD,KAAKsmB,kBAMT,iBAAmB,OAAOtmB,KAAKmiB,YAC/B,eAAejf,GACXlD,KAAKmiB,YAAc,OAAA,EAAA,EAAA,CAAsBjf,GACrClD,KAAK+mB,OACL/mB,KAAK+mB,MAAM/Y,QAAQ0V,GAAQA,EAAK3B,mBAAqB/hB,KAAKmiB,aAGlE,aAAajf,GACTlD,KAAK2lB,cAAgBziB,EACrBlD,KAAK0lB,UAAYxiB,EAGrB,2BACI,OAAO,OAAA,EAAA,EAAA,IAASlD,KAAK+mB,MAAM3d,IAAIsa,GAAQA,EAAKlB,kBAGhD,uBACI,OAAO,OAAA,EAAA,EAAA,IAASxiB,KAAK+mB,MAAM3d,IAAIsa,GAAQA,EAAKpB,WAGhD,sBACI,OAAO,OAAA,EAAA,EAAA,IAAStiB,KAAK+mB,MAAM3d,IAAIsa,GAAQA,EAAKnB,UAGhD,wBACI,OAAO,OAAA,EAAA,EAAA,IAASviB,KAAK+mB,MAAM3d,IAAIsa,GAAQA,EAAKjB,YAEhD,qBACIziB,KAAK2D,YAAc,IAAI,EAAA,EAAgB3D,KAAK+mB,OACvCljB,WACAmjB,0BACAC,iBACAC,0BAA0BlnB,KAAKgI,KAAOhI,KAAKgI,KAAK9E,MAAQ,OACzDlD,KAAKgI,MACLhI,KAAKgI,KAAKlE,OACLyF,KAAK,OAAA,EAAA,EAAA,CAAUvJ,KAAKwlB,aACpBzhB,UAAUojB,GAAOnnB,KAAK2D,YAAYujB,0BAA0BC,IAErEnnB,KAAK2D,YAAYiH,OAAOrB,KAAK,OAAA,EAAA,EAAA,CAAUvJ,KAAKwlB,aAAazhB,UAAU,KAC/D/D,KAAKonB,sBAGTpnB,KAAK+mB,MAAMld,QAAQN,KAAK,OAAA,EAAA,EAAA,CAAU,MAAO,OAAA,EAAA,EAAA,CAAUvJ,KAAKwlB,aAAazhB,UAAU,KACvE/D,KAAK+L,UAGLN,QAAQC,UAAUC,KAAK,KACnB3L,KAAKsmB,oBAGbtmB,KAAKqnB,cAELrnB,KAAKumB,uBAELvmB,KAAKsnB,kBAELtnB,KAAKunB,gCACLvnB,KAAK0mB,aAAa5X,SAG1B,WACI9O,KAAKomB,gBAAkB,IAAI,EAAA,EAAepmB,KAAKmmB,cAAU/G,GAAW,GACpEpf,KAAK0mB,aAAa5X,OAEtB,YACQ9O,KAAKklB,YAILllB,KAAKwnB,mBACDxnB,KAAKklB,UAAUnZ,WAAa/L,KAAKoiB,YACjCpiB,KAAK+L,WAAa/L,KAAKklB,UAAUnZ,WAI7C,cACI/L,KAAKwlB,WAAW1W,OAChB9O,KAAKwlB,WAAWpb,WAChBpK,KAAK0mB,aAAatc,WAClBpK,KAAKynB,qBAGT,cAAcC,GACV1nB,KAAKymB,WAAaiB,EAGlB1nB,KAAKqC,YAAYqB,cAAcihB,aAAa,sBAAuB+C,EAAapmB,IAMpF,kBAAkBqmB,GAAO3nB,KAAK4nB,iBAAmBD,EAAIpO,KAAK,KAE1D,WAAWrW,GACHlD,KAAK+mB,OACL/mB,KAAK6nB,qBAAqB3kB,GAAO,GAIzC,iBAAiB2I,GACb7L,KAAK6I,UAAYgD,EAGrB,kBAAkBA,GACd7L,KAAK8I,WAAa+C,EAGtB,iBAAiBC,GACb9L,KAAK+L,SAAWD,EAChB9L,KAAK0mB,aAAa5X,OAMtB,iBAAiBtK,GACRxE,KAAK8nB,oBAAoBtjB,IAC1BxE,KAAK6N,QAOb,MAAMjK,GACE5D,KAAK+L,UAKL/L,KAAKymB,YAAczmB,KAAKymB,WAAWI,UAG9B7mB,KAAK+mB,MAAM5jB,OAAS,GACzBnD,KAAK2D,YAAYokB,qBACjB/nB,KAAK0mB,aAAa5X,SAGlB9O,KAAKgoB,YAAYpkB,GACjB5D,KAAK0mB,aAAa5X,SAI1B,YAAYlL,GACJ5D,KAAKymB,YACLzmB,KAAKymB,WAAW5Y,MAAMjK,GAM9B,SAASY,GACL,MAAM2G,EAAS3G,EAAM2G,OAEjB3G,EAAMwH,UAAY,EAAA,GAAahM,KAAKioB,cAAc9c,IAClDnL,KAAK2D,YAAYukB,oBACjB1jB,EAAMyH,kBAEDd,GAAUA,EAAO7H,UAAUiI,SAAS,cACzCvL,KAAK2D,YAAY4I,UAAU/H,GAC3BxE,KAAK0mB,aAAa5X,QAM1B,kBAEI9O,KAAK0lB,UAAY1lB,KAAK2lB,gBAAwC,IAAtB3lB,KAAK+mB,MAAM5jB,QAAgB,EAAI,GAM3E,gCAEI,GAAoC,MAAhCnD,KAAKulB,wBACL,GAAIvlB,KAAK+mB,MAAM5jB,OAAQ,CACnB,MAAMglB,EAAeC,KAAKC,IAAIroB,KAAKulB,wBAAyBvlB,KAAK+mB,MAAM5jB,OAAS,GAChFnD,KAAK2D,YAAY2M,cAAc6X,QAG/BnoB,KAAK6N,QAGb7N,KAAKulB,wBAA0B,KAQnC,cAAcvhB,GACV,OAAOA,GAAS,GAAKA,EAAQhE,KAAK+mB,MAAM5jB,OAE5C,cAAcoN,GACV,SAAIA,GAA8C,UAAnCA,EAAQmU,SAAS1I,eAChBzL,EACErN,OAItB,qBAAqBA,EAAO2gB,GAAc,GAGtC,GAFA7jB,KAAKsoB,kBACLtoB,KAAK+mB,MAAM/Y,QAAQ0V,GAAQA,EAAKxV,YAC5BmL,MAAMC,QAAQpW,GACdA,EAAM8K,QAAQua,GAAgBvoB,KAAKwoB,aAAaD,EAAc1E,IAC9D7jB,KAAKyoB,kBAEJ,CACD,MAAMC,EAAoB1oB,KAAKwoB,aAAatlB,EAAO2gB,GAG/C6E,GACI7E,GACA7jB,KAAK2D,YAAY2M,cAAcoY,IAS/C,aAAaxlB,EAAO2gB,GAAc,GAC9B,MAAM6E,EAAoB1oB,KAAK+mB,MAAM4B,KAAKjF,GACjB,MAAdA,EAAKxgB,OAAiBlD,KAAK6lB,aAAanC,EAAKxgB,MAAOA,IAM/D,OAJIwlB,IACA7E,EAAc6E,EAAkBE,uBAAyBF,EAAkBG,SAC3E7oB,KAAKomB,gBAAgByC,OAAOH,IAEzBA,EAEX,uBAGIjd,QAAQC,UAAUC,KAAK,MACf3L,KAAKklB,WAAallB,KAAKsjB,UACvBtjB,KAAK6nB,qBAAqB7nB,KAAKklB,UAAYllB,KAAKklB,UAAUhiB,MAAQlD,KAAKsjB,QAAQ,GAC/EtjB,KAAK0mB,aAAa5X,UAQ9B,gBAAgBf,GACZ/N,KAAKomB,gBAAgB3H,QACrBze,KAAK+mB,MAAM/Y,QAAQ0V,IACXA,IAAS3V,GACT2V,EAAKxV,aAGblO,KAAK0mB,aAAa5X,OAMtB,cACQ9O,KAAK4lB,YACL5lB,KAAKomB,gBAAgB3H,QACrBze,KAAK+mB,MAAM/Y,QAAQ0V,IACXA,EAAKzV,UACLjO,KAAKomB,gBAAgByC,OAAOnF,KAGpC1jB,KAAK0mB,aAAa5X,QAI1B,kBAAkBga,GACd,IAAIC,EAAc,KAEdA,EADA1P,MAAMC,QAAQtZ,KAAKiO,UACLjO,KAAKiO,SAAS7E,IAAIsa,GAAQA,EAAKxgB,OAG/BlD,KAAKiO,SAAWjO,KAAKiO,SAAS/K,MAAQ4lB,EAExD9oB,KAAKsjB,OAASyF,EACd/oB,KAAK8D,OAAOG,KAAK,IAAImhB,EAAkBplB,KAAM+oB,IAC7C/oB,KAAKimB,YAAYhiB,KAAK8kB,GACtB/oB,KAAK6I,UAAUkgB,GACf/oB,KAAKoC,mBAAmBmC,eAG5B,QACSvE,KAAK8mB,mBACN9mB,KAAK2D,YAAY2M,eAAe,GAE/BtQ,KAAK+L,WACF/L,KAAKymB,WAKLuC,WAAW,KACFhpB,KAAK6mB,SACN7mB,KAAKipB,mBAMbjpB,KAAKipB,kBAKjB,iBACIjpB,KAAK8I,aACL9I,KAAKoC,mBAAmBmC,eACxBvE,KAAK0mB,aAAa5X,OAOtB,qBAC4B,IAApB9O,KAAK0lB,YACL1lB,KAAK0lB,WAAa,EAClBsD,WAAW,KACPhpB,KAAK0lB,UAAY1lB,KAAK2lB,eAAiB,EACvC3lB,KAAKoC,mBAAmBmC,kBAIpC,cACIvE,KAAKynB,qBACLznB,KAAKkpB,sBACLlpB,KAAKmpB,0BACLnpB,KAAKopB,wBAET,qBACQppB,KAAKqpB,yBACLrpB,KAAKqpB,uBAAuBjlB,cAC5BpE,KAAKqpB,uBAAyB,MAE9BrpB,KAAKspB,wBACLtpB,KAAKspB,sBAAsBllB,cAC3BpE,KAAKspB,sBAAwB,MAE7BtpB,KAAKupB,6BACLvpB,KAAKupB,2BAA2BnlB,cAChCpE,KAAKupB,2BAA6B,MAElCvpB,KAAKwpB,0BACLxpB,KAAKwpB,wBAAwBplB,cAC7BpE,KAAKwpB,wBAA0B,MAIvC,0BACIxpB,KAAKupB,2BAA6BvpB,KAAKypB,qBAAqB1lB,UAAUS,IAClEA,EAAM7C,OAAOsM,SACPjO,KAAKomB,gBAAgByC,OAAOrkB,EAAM7C,QAClC3B,KAAKomB,gBAAgBlY,SAAS1J,EAAM7C,QAErC3B,KAAKmmB,UACNnmB,KAAK+mB,MAAM/Y,QAAQ0V,KACV1jB,KAAKomB,gBAAgBsD,WAAWhG,IAASA,EAAKzV,UAC/CyV,EAAKxV,aAIb1J,EAAMqf,aACN7jB,KAAK2pB,sBAKjB,sBACI3pB,KAAKqpB,uBAAyBrpB,KAAK4pB,iBAAiB7lB,UAAUS,IAC1D,IAAIqlB,EAAY7pB,KAAK+mB,MAAM7iB,UAAUgY,QAAQ1X,EAAMkf,MAC/C1jB,KAAK8pB,cAAcD,IACnB7pB,KAAK2D,YAAYomB,iBAAiBF,GAEtC7pB,KAAK0mB,aAAa5X,SAEtB9O,KAAKspB,sBAAwBtpB,KAAKgqB,gBAAgBjmB,UAAU,KACxD/D,KAAKskB,QACLtkB,KAAK0mB,aAAa5X,SAG1B,wBACI9O,KAAKwpB,wBAA0BxpB,KAAKiqB,kBAAkBlmB,UAAUS,IAC5D,MAAMkf,EAAOlf,EAAMkf,KACbmG,EAAY7pB,KAAK+mB,MAAM7iB,UAAUgY,QAAQ1X,EAAMkf,MAIjD1jB,KAAK8pB,cAAcD,IAAcnG,EAAK5B,YACtC9hB,KAAKulB,wBAA0BsE,KAK3C,oBAAoBrlB,GAChB,IAAI0lB,EAAiB1lB,EAAM2G,OAC3B,KAAO+e,GAAkBA,IAAmBlqB,KAAKqC,YAAYqB,eAAe,CACxE,GAAIwmB,EAAe5mB,UAAUiI,SAAS,YAClC,OAAO,EAEX2e,EAAiBA,EAAeC,cAEpC,OAAO,EAGX,kBACI,OAAOnqB,KAAK+mB,OAAS/mB,KAAK+mB,MAAM5G,KAAKuD,GAAQA,EAAK5B,WAGtD,kBACQ9hB,KAAK+mB,OACL/mB,KAAK+mB,MAAM/Y,QAAQ0V,IACfA,EAAKzB,kBAAoBjiB,KAAKoiB,UAC9BsB,EAAK1B,kBAAoBhiB,KAAKmmB,mBAK9Cd,EAAY1gB,UAAO,SAA6BC,GAAK,OAAO,IAAKA,GAAKygB,GAAa,EAAA,GAAyB,EAAA,GAAoB,EAAA,GAAyB,EAAA,GAA2B,EAAA,GAAyB,EAAA,EAAuB,GAAI,EAAA,GAAyB,EAAA,EAAe,GAAI,EAAA,GAAyB,EAAA,EAA2B,GAAI,EAAA,GAAyB,EAAA,GAA2B,EAAA,GAAyB,EAAA,EAAkB,MAC3aA,EAAY3f,UAAO,EAAA,GAAyB,CAAEZ,KAAMugB,EAAa1f,UAAW,CAAC,CAAC,kBAAmBC,eAAgB,SAAoCzE,EAAIC,EAAKyE,GAGtJ,IAAIb,EAHuK,EAAL7D,GACtK,EAAA,GAAsB0E,EAAU4b,GAAS,GAClC,EAALtgB,GAEF,EAAA,GAAsB6D,EAAK,EAAA,QAA0B5D,EAAI2lB,MAAQ/hB,IAChEe,UAAW,CAAC,EAAG,iBAAkBqL,SAAU,GAAIC,aAAc,SAAkClQ,EAAIC,GAAgB,EAALD,GAC/G,EAAA,GAAkB,SAAA,WAA2D,OAAOC,EAAIyM,UAAxF,CAAoG,QAAA,WAAyD,OAAOzM,EAAIkjB,UAAxK,CAAoL,WAAA,SAA2D/S,GAAU,OAAOnQ,EAAIgpB,SAAS7Y,MACtQ,EAALpQ,IACF,EAAA,GAAsB,KAAMC,EAAIqkB,MAChC,EAAA,GAAmB,WAAYrkB,EAAI2K,SAAW,KAAO3K,EAAIskB,UAAzD,CAAoE,mBAAoBtkB,EAAIwmB,kBAAoB,KAAhH,CAAsH,gBAAiBxmB,EAAIipB,KAAOjpB,EAAI8U,SAAW,KAAjK,CAAuK,gBAAiB9U,EAAI2K,SAAS2F,WAArM,CAAiN,eAAgBtQ,EAAIkpB,WAArO,CAAiP,uBAAwBlpB,EAAI+kB,SAA7Q,CAAuR,OAAQ/kB,EAAIipB,KAAnS,CAAyS,mBAAoBjpB,EAAI4kB,iBACjU,EAAA,GAAmB,yBAA0B5kB,EAAI2K,SAAjD,CAA2D,wBAAyB3K,EAAIkpB,WAAxF,CAAoG,yBAA0BlpB,EAAI8U,YACjI/Q,OAAQ,CAAE6gB,gBAAiB,CAAC,mBAAoB,mBAAoBG,SAAU,WAAYoE,YAAa,cAAernB,MAAO,QAASgT,SAAU,WAAYyQ,YAAa,cAAe5a,SAAU,WAAYwX,WAAY,aAAc1O,SAAU,WAAY2V,kBAAmB,qBAAuBnlB,QAAS,CAAEvB,OAAQ,SAAUmiB,YAAa,eAAiBhgB,SAAU,CAAC,eAAgBX,SAAU,CAAC,EAAA,GAA0B,CAAC,CAAEY,QAAS,EAAA,EAAqBC,YAAakf,KAAiB,EAAA,IAAoCjf,mBAAoBnF,EAAKoF,MAAO,EAAGC,KAAM,EAAGC,OAAQ,CAAC,CAAC,EAAG,0BAA2BtB,SAAU,SAA8B9D,EAAIC,GAAgB,EAALD,IAClpB,EAAA,KACA,EAAA,GAAsB,EAAG,MAAO,GAChC,EAAA,GAAoB,GACpB,EAAA,OACCsF,OAAQ,CAAC,6/FAAggGC,cAAe,EAAGC,gBAAiB,UA8GjjG8jB,EAAiB,gBAKfC,EACF,YAAYroB,EAAasoB,GACrB3qB,KAAKqC,YAAcA,EACnBrC,KAAK2qB,gBAAkBA,EAEvB3qB,KAAK6mB,SAAU,EACf7mB,KAAK4qB,YAAa,EAMlB5qB,KAAK6qB,kBAAoB7qB,KAAK2qB,gBAAgBE,kBAE9C7qB,KAAK8qB,QAAU,IAAI,EAAA,EAEnB9qB,KAAK2mB,YAAc,GAEnB3mB,KAAKsB,GAAK,uBAAuBmpB,IACjCzqB,KAAKoiB,WAAY,EACjBpiB,KAAK2V,cAAgB3V,KAAKqC,YAAYqB,cAG1C,aAAaR,GACLA,IACAlD,KAAK+qB,UAAY7nB,EACjBlD,KAAK+qB,UAAUC,cAAchrB,OAMrC,gBAAkB,OAAOA,KAAK4qB,WAC9B,cAAc1nB,GAASlD,KAAK4qB,WAAa,OAAA,EAAA,EAAA,CAAsB1nB,GAE/D,eAAiB,OAAOlD,KAAKoiB,WAAcpiB,KAAK+qB,WAAa/qB,KAAK+qB,UAAUhf,SAC5E,aAAa7I,GAASlD,KAAKoiB,UAAY,OAAA,EAAA,EAAA,CAAsBlf,GAE7D,YAAc,OAAQlD,KAAK2V,cAAczS,MACzC,cACIlD,KAAK+qB,UAAUrE,aAAa5X,OAGhC,SAAStK,GAGDA,GAASA,EAAMwH,UAAY,EAAA,IAAQ,OAAA,EAAA,EAAA,CAAexH,EAAO,aACzDxE,KAAK+qB,UAAU3D,oBAEnBpnB,KAAKirB,aAAazmB,GAGtB,QACQxE,KAAKkrB,WACLlrB,KAAKirB,eAETjrB,KAAK6mB,SAAU,EAEV7mB,KAAK+qB,UAAUlE,SAChB7mB,KAAK+qB,UAAUzG,QAEnBtkB,KAAK+qB,UAAUrE,aAAa5X,OAEhC,SACI9O,KAAK6mB,SAAU,EACf7mB,KAAK+qB,UAAUrE,aAAa5X,OAGhC,aAAatK,IACJxE,KAAK2V,cAAczS,OAAWsB,GAC/BxE,KAAK+qB,UAAUX,SAAS5lB,GAEvBA,IAASxE,KAAKmrB,gBAAgB3mB,KAC/BxE,KAAK8qB,QAAQ7mB,KAAK,CAAEmnB,MAAOprB,KAAK2V,cAAezS,MAAOlD,KAAK2V,cAAczS,QACrEsB,GACAA,EAAMyH,kBAIlB,WAEIjM,KAAK+qB,UAAUrE,aAAa5X,OAGhC,MAAMlL,GACF5D,KAAK2V,cAAc9H,MAAMjK,GAG7B,gBAAgBY,GACZ,OAAQ,OAAA,EAAA,EAAA,CAAeA,IAAU,IAAI6mB,IAAIrrB,KAAK6qB,mBAAmB/W,IAAItP,EAAMwH,iBAGnF0e,EAAa/lB,UAAO,SAA8BC,GAAK,OAAO,IAAKA,GAAK8lB,GAAc,EAAA,GAAyB,EAAA,GAAoB,EAAA,GAAyB7F,KAC5J6F,EAAa7lB,UAAO,EAAA,GAAyB,CAAEC,KAAM4lB,EAAc/kB,UAAW,CAAC,CAAC,QAAS,kBAAmB,KAAMI,UAAW,CAAC,EAAG,iBAAkB,qBAAsBqL,SAAU,EAAGC,aAAc,SAAmClQ,EAAIC,GAAgB,EAALD,GAC9O,EAAA,GAAkB,WAAA,SAA4DoQ,GAAU,OAAOnQ,EAAIgpB,SAAS7Y,KAA5G,CAAwH,QAAA,WAA0D,OAAOnQ,EAAIkjB,UAA7L,CAAyM,SAAA,WAA4D,OAAOljB,EAAIkqB,WAAhR,CAA6R,SAAA,WAA4D,OAAOlqB,EAAImqB,cAC7V,EAALpqB,IACF,EAAA,GAAsB,KAAMC,EAAIE,IAChC,EAAA,GAAmB,WAAYF,EAAI2K,UAAY,KAA/C,CAAqD,cAAe3K,EAAIulB,aAAe,KAAvF,CAA6F,eAAgBvlB,EAAI2pB,WAAa3pB,EAAI2pB,UAAU7F,UAAY9jB,EAAI2pB,UAAU7F,UAAUsG,QAAU,KAA1L,CAAgM,gBAAiBpqB,EAAI2pB,WAAa3pB,EAAI2pB,UAAU7U,UAAY,QAC3P/Q,OAAQ,CAAE0lB,kBAAmB,CAAC,gCAAiC,qBAAsBlE,YAAa,cAAerlB,GAAI,KAAMmqB,SAAU,CAAC,kBAAmB,YAAaP,UAAW,CAAC,wBAAyB,aAAcnf,SAAU,YAAc1G,QAAS,CAAEylB,QAAS,wBAA0B7kB,SAAU,CAAC,eAAgB,mBAAoBX,SAAU,CAAC,EAAA,YA8DlW,MAQMomB,EAAK,CACPb,kBAAmB,CAAC,EAAA,sBAElBc,UAENA,EAAe/Z,UAAO,EAAA,GAAwB,CAAE9M,KAAM6mB,IACtDA,EAAe9Z,UAAO,EAAA,GAAwB,CAAE5P,QAAS,SAAgC2C,GAAK,OAAO,IAAKA,GAAK+mB,IAAsB7Z,UAAW,CACxI,EAAA,EACA,CACI5L,QAAS2e,EACT+G,SAAUF,kCC34CtB,IAAI3qB,EAAc,EAAQ,QACtB8qB,EAAa,EAAQ,QAMrBvZ,EAHcF,OAAOC,UAGQC,eAsBjCzS,EAAOC,QAbP,SAAkBkB,GAChB,IAAKD,EAAYC,GACf,OAAO6qB,EAAW7qB,GAEpB,IAAIZ,EAAS,GACb,IAAK,IAAIL,KAAOqS,OAAOpR,GACjBsR,EAAeG,KAAKzR,EAAQjB,IAAe,eAAPA,GACtCK,EAAO4S,KAAKjT,GAGhB,OAAOK,yBC1BT,IAAI0rB,EAAS,EAAQ,QAGjB3Z,EAAcC,OAAOC,UAGrBC,EAAiBH,EAAYG,eAO7ByZ,EAAuB5Z,EAAYT,SAGnCsa,EAAiBF,EAASA,EAAOG,iBAAc7M,EA6BnDvf,EAAOC,QApBP,SAAmBoD,GACjB,IAAIgpB,EAAQ5Z,EAAeG,KAAKvP,EAAO8oB,GACnCG,EAAMjpB,EAAM8oB,GAEhB,IACE9oB,EAAM8oB,QAAkB5M,EACxB,IAAIgN,GAAW,EACf,MAAO3O,IAET,IAAIrd,EAAS2rB,EAAqBtZ,KAAKvP,GAQvC,OAPIkpB,IACEF,EACFhpB,EAAM8oB,GAAkBG,SAEjBjpB,EAAM8oB,IAGV5rB,uBCzBTP,EAAOC,QAJP,WACE,OAAO,yBCdT,IAAIusB,EAAY,EAAQ,QA4BxBxsB,EAAOC,QAJP,SAAmBoD,GACjB,OAAOmpB,EAAUnpB,EAAOopB,wBCN1BzsB,EAAOC,QAXP,SAAmBysB,EAAO3Y,GAKxB,IAJA,IAAI5P,GAAS,EACTb,EAASyQ,EAAOzQ,OAChBqpB,EAASD,EAAMppB,SAEVa,EAAQb,GACfopB,EAAMC,EAASxoB,GAAS4P,EAAO5P,GAEjC,OAAOuoB,yBChBT,IAAIE,EAAW,EAAQ,QAcvB5sB,EAAOC,QAJP,SAA4BoD,GAC1B,OAAOA,GAAUA,IAAUupB,EAASvpB,wBCWtCrD,EAAOC,QAZP,SAAuBysB,EAAOrpB,EAAOwpB,GAInC,IAHA,IAAI1oB,EAAQ0oB,EAAY,EACpBvpB,EAASopB,EAAMppB,SAEVa,EAAQb,GACf,GAAIopB,EAAMvoB,KAAWd,EACnB,OAAOc,EAGX,OAAQ,yBCnBV,IAAI2oB,EAAe,EAAQ,QACvBC,EAAW,EAAQ,QAevB/sB,EAAOC,QALP,SAAmBkB,EAAQjB,GACzB,IAAImD,EAAQ0pB,EAAS5rB,EAAQjB,GAC7B,OAAO4sB,EAAazpB,GAASA,OAAQkc,mCCbvC,GAAA,IAAA,EAAW,EAAQ,QACfyN,EAAY,EAAQ,QAGpB7N,EAA4Clf,IAAYA,EAAQmf,UAAYnf,EAG5Eof,EAAaF,GAAgC,iBAAVnf,GAAsBA,IAAWA,EAAOof,UAAYpf,EAMvFsf,EAHgBD,GAAcA,EAAWpf,UAAYkf,EAG5BpI,EAAKuI,YAASC,EAwB3Cvf,EAAOC,SArBcqf,EAASA,EAAO2N,cAAW1N,IAmBfyN,oDCnCjC,IAAIE,EAAa,EAAQ,QACrBC,EAAS,EAAQ,QAerBntB,EAAOC,QAJP,SAAsBkB,EAAQW,GAC5B,OAAOX,GAAU+rB,EAAWprB,EAAQqrB,EAAOrrB,GAASX,uCCbtD,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,KAAA,IAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAQO,IAAA,EAAA,YAAMisB,EAIT,YAAoBC,GAAA,KAAAA,GAAAA,EAHG,KAAAtS,OAA4B,GACzC,KAAAuS,cAAgB,IAAI,EAAA,EAI9B,WACIntB,KAAKktB,GAAGxpB,cAAckG,iBAAiB,QAAS6T,IAC5CA,EAAExR,iBACFwR,EAAE1O,kBAEF,OAAA,EAAA,EAAA,CAAiB/O,KAAK4a,QAAQjP,KAAKyhB,IAC3BA,GAASA,EAAMjqB,QACfnD,KAAKmtB,cAAclpB,KAAKmpB,qDAb/BH,GAAqB,EAAA,GAAA,EAAA,4BAArBA,EAAqB,UAAA,CAAA,CAAA,GAAA,eAAA,KAAA,OAAA,CAAA,OAAA,CAAA,eAAA,WAAA,QAAA,CAAA,cAAA,sBAA3B,yBCRP,IAIMI,EAJFC,EAAa,EAAQ,QAGrBC,GACEF,EAAM,SAASG,KAAKF,GAAcA,EAAWlS,MAAQkS,EAAWlS,KAAKqS,UAAY,KACvE,iBAAmBJ,EAAO,GAc1CxtB,EAAOC,QAJP,SAAkB0d,GAChB,QAAS+P,GAAeA,KAAc/P,wFCdjC,MAAMkQ,EAAqC,CAC9C,CAAChe,QAAS,QAASC,QAAS,SAAUC,SAAU,MAAOC,SAAU,SAAU8d,QAAS,IACpF,CAACje,QAAS,MAAOC,QAAS,SAAUC,SAAU,QAASC,SAAU,SAAU8d,QAAS,0NCJxF,EAAA,GAAA,EAAA,mBAAA,yBAEI,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,GACJ,EAAA,iFACA,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,mBACJ,EAAA,0BADI,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,EAAA,4BAAA,EAAA,GAAA,EAAA,EAAA,EAAA,qBAAA,EAAA,qBAAA,6CAOQ,EAAA,GAAA,EAAA,WAAA,IAAqG,EAAA,GAAA,WAAA,WAAA,EAAA,GAAA,GAAA,MAAA,EAAA,EAAA,UAAA,OAAA,EAAA,GAAA,GAAWC,UAAA,aAAA,EAAA,QAC5G,EAAA,GAAA,mBACA,EAAA,GAAA,EAAA,WAAA,IACJ,EAAA,2CAH6D,EAAA,GAAA,aAAA,EAAA,CAAkB,cAAA,GAC3E,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,KAAA,EAAA,QAAA,EAAA,OAAA,EAAA,MAAA,MAAA,EAAA,MAAA,aAAA,EAAA,MAAA,6CAHZ,EAAA,GAAA,GACI,EAAA,GAAA,EAAA,gBAAA,IACI,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,WAAA,uCAIJ,EAAA,KACA,EAAA,GAAA,EAAA,SAAA,GAAA,IAAQ,EAAA,GAAA,SAAA,WAAA,OAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,sBACJ,EAAA,GAAA,EAAA,WAAA,IACJ,EAAA,KACJ,EAAA,6BARkB,EAAA,GAAA,GAAA,EAAA,GAAA,UAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,YAK6C,EAAA,GAAA,GAAA,EAAA,GAAA,SAAA,EAAA,0CARnE,EAAA,GAAA,EAAA,MAAA,IACI,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,eAAA,IAWA,EAAA,GAAA,EAAA,gCAAA,IACJ,EAAA,0BAZkB,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,qBAWiB,EAAA,GAAA,GAAA,EAAA,GAAA,cAAA,UAAA,EAAA,mBAAA,2BAEnC,EAAA,GAAA,EAAA,MAAA,IACI,EAAA,GAAA,EAAA,GACJ,EAAA,sGCIG,IAAA,EAAA,YAAMC,EAgBT,YACWD,EACCE,EACAC,GAFD,KAAAH,UAAAA,EACC,KAAAE,GAAAA,EACA,KAAAC,aAAAA,EAdH,KAAAC,qBAAsB,EACvB,KAAAC,cAAgC,GAGjC,KAAA9T,SAAWna,KAAK4tB,UAAUzT,SAC5B5Q,KAAK,OAAAH,EAAA,EAAA,CAAI8kB,IACN,MAAMrR,EAAU,OAAA,EAAA,EAAA,CAAqBqR,GAErC,cADOrR,EAAQnB,MACRmB,KASf,WAEI,MAAMsR,EAAYnuB,KAAK4tB,UAAUzT,SAASpW,UAAU,KAChD/D,KAAKouB,gBAAkBpuB,KAAKouB,eAAexO,UAEzCyO,EAAYruB,KAAK4tB,UAAUnT,cAAc1W,UAAUb,IACrDlD,KAAKsuB,qBAAuBprB,EAAMC,OAClCnD,KAAK8tB,GAAGvpB,iBAEZvE,KAAKiuB,cAAgB,CAACE,EAAWE,GAGrC,cACIruB,KAAKiuB,cAAcjgB,QAAQugB,GAAKA,EAAEnqB,eAG/B,mBACH,GAAIpE,KAAKouB,eACLpuB,KAAKouB,eAAexO,YACjB,CACH,MAAM7W,EAAW2kB,EAAclO,QAC/BzW,EAAS,GAAGylB,QAAU,GACtBzlB,EAAS,GAAGylB,QAAU,GACtBxuB,KAAKouB,eAAiBpuB,KAAK+tB,aAAahR,KAAK,EAAA,EAAgC,CACzE0R,OAAQzuB,KAAK0uB,aACb3lB,SAAAA,EACA4lB,eAAgB,SAChB9b,KAAM,CAACgK,QAAS7c,KAAK4uB,qBACrBC,SAAU,QAEd7uB,KAAK0uB,aAAahrB,cAAcJ,UAAUuQ,IAAI,UAC9C7T,KAAKouB,eAAehR,cAAcrZ,UAAU,KACxC/D,KAAKouB,eAAiB,KACtBpuB,KAAK0uB,aAAahrB,cAAcJ,UAAUygB,OAAO,aAKtD,QAAQ7gB,GACX,MAAwB,iBAAVA,GAAsBA,EAAM5B,iDA7DrCusB,GAAwB,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,4BAAxBA,EAAwB,UAAA,CAAA,CAAA,qBAAA,eAAA,SAAA,EAAA,EAAA,SAAA,EAAA,mHAGE,EAAA,2iCDjCvC,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,mBAAA,mBACA,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,GAGA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,GAGJ,EAAA,KACA,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,GAcA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,GAGJ,EAAA,YA3BsD,EAAA,GAAA,OAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,WAAA,EAAA,UAAA,UAAA,WAEhB,EAAA,GAAA,GAAA,EAAA,GAAA,QAAA,EAAA,sBAAA,EAAA,sBAGY,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,qBAAA,EAAA,sBAKX,EAAA,GAAA,GAAA,EAAA,GAAA,QAAA,EAAA,sBAAA,EAAA,sBAcC,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,qBAAA,EAAA,44BCMjC,yBC9BP,IAAId,EAAa,EAAQ,QACrB+B,EAAe,EAAQ,QAc3BjvB,EAAOC,QAJP,SAAuB6B,EAAQX,GAC7B,OAAO+rB,EAAWprB,EAAQmtB,EAAantB,GAASX,wBCElDnB,EAAOC,QAPP,SAAmBoD,GACjB,IAAI4B,SAAc5B,EAClB,MAAgB,UAAR4B,GAA4B,UAARA,GAA4B,UAARA,GAA4B,WAARA,EACrD,cAAV5B,EACU,OAAVA,uBCiBPrD,EAAOC,QAJP,SAAsBoD,GACpB,OAAgB,MAATA,GAAiC,iBAATA,sCCzB1B,SAAS6rB,EAAwBnT,GACpC,MAAM6D,EAAO,OAAH,OAAA,GAAO7D,GAEjB,OADAxJ,OAAOgJ,KAAKqE,GAAMzR,QAAQjO,IAAqB,MAAb0f,EAAK1f,IAA8B,KAAd0f,EAAK1f,YAAuB0f,EAAK1f,IACjF0f,EAHX,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,2BCAA,IAAIuP,EAAiB,EAAQ,QACzBF,EAAe,EAAQ,QACvB9B,EAAS,EAAQ,QAcrBntB,EAAOC,QAJP,SAAsBkB,GACpB,OAAOguB,EAAehuB,EAAQgsB,EAAQ8B,0BCbxC,IAAIG,EAAc,EAAQ,QACtBjW,EAAM,EAAQ,QACdkW,EAAQ,EAAQ,QAChBxuB,EAAQ,EAAQ,QAChByuB,EAAqB,EAAQ,QAC7BC,EAA0B,EAAQ,QAClCzuB,EAAQ,EAAQ,QA0BpBd,EAAOC,QAZP,SAA6Bc,EAAMyuB,GACjC,OAAI3uB,EAAME,IAASuuB,EAAmBE,GAC7BD,EAAwBzuB,EAAMC,GAAOyuB,GAEvC,SAASruB,GACd,IAAIsuB,EAAWtW,EAAIhY,EAAQJ,GAC3B,YAAqBwe,IAAbkQ,GAA0BA,IAAaD,EAC3CH,EAAMluB,EAAQJ,GACdquB,EAAYI,EAAUC,EAAUC,2BC5BxC,IAAIC,EAAgB,EAAQ,QAGxBC,EAAa,mGAGbC,EAAe,WASf3Q,EAAeyQ,GAAAA,SAAuBG,GACxC,IAAIvvB,EAAS,GAOb,OAN6B,KAAzBuvB,EAAOC,WAAW,IACpBxvB,EAAO4S,KAAK,IAEd2c,EAAOE,QAAQJ,GAAAA,SAAqBK,EAAOC,EAAQC,EAAOC,GACxD7vB,EAAO4S,KAAKgd,EAAQC,EAAUJ,QAAQH,EAAc,MAASK,GAAUD,MAElE1vB,KAGTP,EAAOC,QAAUif,qCCzBjB,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,KAAA,IAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QA4BO,IAAA,EAAA,YAAMmR,iCAAAA,wDAAAA,IAAa,QAAA,CAnBb,CACL,EAAA,EAGA,EAAA,EACA,EAAA,EACA,EAAA,SAaD,yBC7BP,IAAIC,EAAS,EAAQ,QACjBle,EAAe,EAAQ,QAgB3BpS,EAAOC,QAJP,SAAmBoD,GACjB,OAAO+O,EAAa/O,IAVT,gBAUmBitB,EAAOjtB,wBCgBvCrD,EAAOC,QALP,SAAkBoD,GAChB,IAAI4B,SAAc5B,EAClB,OAAgB,MAATA,IAA0B,UAAR4B,GAA4B,YAARA,0BC3B/C,IAAIsrB,EAAa,EAAQ,QAqBzBvwB,EAAOC,QATP,SAAqBC,EAAKmD,GACxB,IAAI2P,EAAOud,EAAWpwB,KAAMD,GACxBkT,EAAOJ,EAAKI,KAIhB,OAFAJ,EAAKtS,IAAIR,EAAKmD,GACdlD,KAAKiT,MAAQJ,EAAKI,MAAQA,EAAO,EAAI,EAC9BjT,4BClBT,IAAI8rB,EAAS,EAAQ,QACjB5rB,EAAa,EAAQ,QACrBmwB,EAAK,EAAQ,QACbC,EAAc,EAAQ,QACtBC,EAAa,EAAQ,QACrBC,EAAa,EAAQ,QAqBrBC,EAAc3E,EAASA,EAAOzZ,eAAY+M,EAC1CsR,EAAgBD,EAAcA,EAAYE,aAAUvR,EAoFxDvf,EAAOC,QAjEP,SAAoBkB,EAAQ4vB,EAAOzE,EAAK0E,EAASC,EAAYC,EAAWC,GACtE,OAAQ7E,GACN,IAzBc,oBA0BZ,GAAKnrB,EAAOV,YAAcswB,EAAMtwB,YAC3BU,EAAOiwB,YAAcL,EAAMK,WAC9B,OAAO,EAETjwB,EAASA,EAAOse,OAChBsR,EAAQA,EAAMtR,OAEhB,IAlCiB,uBAmCf,QAAKte,EAAOV,YAAcswB,EAAMtwB,aAC3BywB,EAAU,IAAI7wB,EAAWc,GAAS,IAAId,EAAW0wB,KAKxD,IAnDU,mBAoDV,IAnDU,gBAoDV,IAjDY,kBAoDV,OAAOP,GAAIrvB,GAAS4vB,GAEtB,IAxDW,iBAyDT,OAAO5vB,EAAOmU,MAAQyb,EAAMzb,MAAQnU,EAAOkwB,SAAWN,EAAMM,QAE9D,IAxDY,kBAyDZ,IAvDY,kBA2DV,OAAOlwB,GAAW4vB,EAAQ,GAE5B,IAjES,eAkEP,IAAIO,EAAUZ,EAEhB,IAjES,eAqEP,GAFAY,IAAYA,EAAUX,GAElBxvB,EAAOiS,MAAQ2d,EAAM3d,QA/EJ,EA4EL4d,GAId,OAAO,EAGT,IAAIO,EAAUJ,EAAMhY,IAAIhY,GACxB,GAAIowB,EACF,OAAOA,GAAWR,EAEpBC,GAtFuB,EAyFvBG,EAAMzwB,IAAIS,EAAQ4vB,GAClB,IAAIxwB,EAASkwB,EAAYa,EAAQnwB,GAASmwB,EAAQP,GAAQC,EAASC,EAAYC,EAAWC,GAE1F,OADAA,EAAc,OAAEhwB,GACTZ,EAET,IAnFY,kBAoFV,GAAIswB,EACF,OAAOA,EAAcje,KAAKzR,IAAW0vB,EAAcje,KAAKme,GAG9D,OAAO,yBC5GT,IAIInlB,EAJY,EAAQ,OAAR,CACL,EAAQ,QAGW,WAE9B5L,EAAOC,QAAU2L,sBCUjB5L,EAAOC,QANP,SAAoBC,GAClB,IAAIK,EAASJ,KAAK8T,IAAI/T,WAAeC,KAAKC,SAASF,GAEnD,OADAC,KAAKiT,MAAQ7S,EAAS,EAAI,EACnBA,yBCbT,IAAIud,EAAU,EAAQ,QAyBtB9d,EAAOC,QAZP,SAAuB0d,GACrB,IAAIpd,EAASud,EAAQH,GAAAA,SAAezd,GAIlC,OAfmB,MAYfke,EAAMhL,MACRgL,EAAMQ,QAED1e,KAGLke,EAAQ7d,EAAO6d,MACnB,OAAO7d,sCCnBT,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,KAAA,IAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,uGCFI,EAAA,GAAA,EAAA,WAAA,GAII,EAAA,GAAA,WAAA,WAAA,EAAA,GAAA,GAAA,MAAA,EAAA,EAAA,MAAA,OAAA,EAAA,KAAA,OAAA,MAEA,EAAA,GAAA,GACA,EAAA,GAAA,EAAA,WAAA,GACJ,EAAA,0CANI,EAAA,GAAA,cAAA,EAAA,CAAoB,aAAA,EAAA,YAIpB,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,EAAA,iBAAA,GAAA,uFAGJ,EAAA,GAAA,EAAA,QAAA,GAAA,IAUO,EAAA,GAAA,wBAAA,SAAA,GAAA,OAAA,EAAA,GAAA,GAAA,EAAA,KAAA,iBAAA,EAAA,0BAVP,EAAA,gDAAO,EAAA,GAAA,cAAA,EAAA,GAAA,EAAA,EAAA,EAAA,aAAA,CAAmC,OAAA,EAAA,KAAnC,CAAmC,kBAAA,EAAnC,CAAmC,yBAAA,EAAnC,CAAmC,kBAAA,EAAnC,CAAmC,6BAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAAnC,CAAmC,cAAA,EAAA,uCAc1C,EAAA,GAAA,EAAA,aAAA,IAA2E,EAAA,GAAA,GAA2B,EAAA,wCAA3C,EAAA,GAAA,QAAA,GAAgB,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,iBAAA,8BAI3E,EAAA,GAAA,EAAA,aAAA,IAA8D,EAAA,GAAA,GAA2B,EAAA,yCAA3C,EAAA,GAAA,QAAA,GAAgB,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,iBAAA,0BAA9D,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,aAAA,QAAY,EAAA,GAAA,yBDLT,IAAA,EAAA,YAAMixB,EAmBT,YACWnE,GAAA,KAAAA,GAAAA,EAlBF,KAAApoB,KAAO,OACP,KAAAwsB,aAAc,EAEoB,KAAAC,YAAa,EAKjD,KAAAC,YAAc,IAAI,EAAA,EAGlB,KAAAC,OAAS,IAAI,EAAA,EAA6B,IAC1C,KAAAC,iBAAmB,IAAI,EAAA,EAA6B,IAC3D,oBAA6B9d,GACzB5T,KAAK0xB,iBAAiB5iB,KAAK8E,GAO/B,WACQ5T,KAAK2xB,WACL3xB,KAAK4xB,sBAOb,kBACQ5xB,KAAKsxB,aACLtxB,KAAK6xB,qBAIN,OAAO7tB,GACV,MAAM8tB,EAAQ,IAAI9xB,KAAKyxB,OAAOvuB,OAC9B4uB,EAAMC,OAAO/tB,EAAO,GACpBhE,KAAKyxB,OAAO3iB,KAAKgjB,GACjB9xB,KAAKgyB,gBAAgBhyB,KAAKyxB,OAAOvuB,OAG9B,iBAAiBA,EAAkB+uB,GAAY,IAC9C/uB,GAAUlD,KAAKkyB,gBAAgBC,QAAWnyB,KAAKuxB,YAC/CvxB,KAAK6T,IAAI3Q,EAAO+uB,GAIjB,oBAAoB/uB,EAAkB+uB,GAAY,GACrDjyB,KAAK6T,IAAI3Q,EAAO+uB,GAGZ,IAAI/uB,EAAkB+uB,GAAY,GACtC/uB,EAA0B,iBAAVA,EAAqBA,EAAMM,OAASN,EACpD,MAAMkvB,EAAYpyB,KAAKqyB,eAAenvB,IAAU,EAC5CA,IAAUkvB,IACVpyB,KAAKyxB,OAAO3iB,KAAK,IAAI9O,KAAKyxB,OAAOvuB,MAAOA,IACpC+uB,GACAjyB,KAAKgyB,gBAAgBhyB,KAAKyxB,OAAOvuB,QAGrClD,KAAKsyB,UACLtyB,KAAKsyB,QAAQ5uB,cAAcR,MAAQ,IAEvClD,KAAKwxB,YAAYe,SAAS,MAC1BvyB,KAAK0xB,iBAAiB5iB,KAAK,IAGvB,eAAe5L,GACnB,MAAqB,iBAAVA,EACAlD,KAAKyxB,OAAOvuB,MAAMgZ,QAAQhZ,GAE1BlD,KAAKyxB,OAAOvuB,MAAMsvB,UAAUtE,GAAMA,EAAY5sB,KAAO4B,EAAM5B,IAInE,WAAW4B,EAAqB,IACnC,GAAIA,GAASA,EAAMC,OACfD,EAAM8K,QAAQykB,GAAQzyB,KAAK6T,IAAI4e,GAAM,SAClC,GAAIzyB,KAAKyxB,OAAOvuB,MAAMC,OACzB,KAAoC,IAA7BnD,KAAKyxB,OAAOvuB,MAAMC,QACrBnD,KAAK+jB,OAAO,GAKjB,iBAAiBlY,GACpB7L,KAAKgyB,gBAAkBnmB,EAGpB,qBAEC,sBACJ7L,KAAKwxB,YAAYkB,aAAanpB,KAC1B,OAAA,EAAA,EAAA,CAAa,KACb,OAAA,EAAA,EAAA,GACA,OAAA,EAAA,EAAA,CAAUmS,GAASA,EAAQ1b,KAAK2xB,UAAUjW,GAAS,OAAA,EAAA,EAAA,CAAG,KACtD,OAAA,EAAA,EAAA,CAAW,IAAM,OAAA,EAAA,EAAA,CAAG,MACtB3X,UAAU6P,IACR,MAAM+e,EAAW/e,EAAO+H,OAAOuS,IAAiC,IAA5BluB,KAAKqyB,eAAenE,IACxDluB,KAAK0xB,iBAAiB5iB,KAAK6jB,KAI5B,iBAAiBzvB,GACpB,MAAwB,iBAAVA,EAAqBA,EAAMiS,KAAOjS,EAG5C,qBACJlD,KAAKsyB,QAAQ5uB,cAAckG,iBAAiB,QAAS6T,IACjD,MACMmV,GADSnV,EAAEoV,eAAiBppB,OAAsB,eAAGqpB,QAAQ,QAC9ChD,MAAM,wDAC3B,GAAI8C,EAAQ,CACRnV,EAAExR,iBACF,MAAM8mB,EAAYtpB,OAAOupB,eACrBD,EAAUE,aACVF,EAAUG,qBACVN,EAAO5kB,QAAQmlB,GAASnzB,KAAK6T,IAAIsf,sDAxHxC9B,GAAkB,EAAA,GAAA,EAAA,4BAAlBA,EAAkB,UAAA,CAAA,CAAA,eAAA,UAAA,SAAA,EAAA,SAAA,EAAA,kaANhB,CAAC,CACRnrB,QAAS,EAAA,EACTC,YAAakrB,EACb5pB,OAAO,MACT,MAAA,GAAA,KAAA,EAAA,OAAA,CAAA,CAAA,EAAA,cAAA,CAAA,WAAA,IAAA,CAAA,EAAA,aAAA,YAAA,UAAA,EAAA,QAAA,WAAA,CAAA,QAAA,mCAAA,EAAA,cAAA,OAAA,kBAAA,wBAAA,kBAAA,6BAAA,cAAA,uBAAA,EAAA,QAAA,CAAA,EAAA,gCAAA,EAAA,wBAAA,kBAAA,CAAA,OAAA,mBAAA,CAAA,EAAA,QAAA,EAAA,QAAA,WAAA,CAAA,qBAAA,IAAA,CAAA,EAAA,aAAA,YAAA,WAAA,CAAA,gBAAA,GAAA,UAAA,UAAA,CAAA,EAAA,iBAAA,oBAAA,EAAA,cAAA,OAAA,kBAAA,wBAAA,kBAAA,6BAAA,cAAA,wBAAA,CAAA,UAAA,IAAA,CAAA,EAAA,UAAA,SAAA,SAAA,EAAA,GAAA,EAAA,ICrBN,EAAA,GAAA,EAAA,gBAAA,EAAA,GACI,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,WAAA,mBASA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,QAAA,GAWJ,EAAA,KAEA,EAAA,GAAA,EAAA,mBAAA,EAAA,GAAgF,EAAA,GAAA,kBAAA,SAAA,GAAA,OAAkB,EAAA2rB,oBAAA,EAAA,OAAA,UAC9F,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,aAAA,mBACJ,EAAA,KAEA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,cAAA,KAAA,EAAA,EAAA,WA3ByB,EAAA,GAAA,cAAA,GAEjB,EAAA,GAAA,GAAA,EAAA,GAAA,UAAA,EAAA,GAAA,EAAA,EAAA,EAAA,SASG,EAAA,GAAA,GAAA,EAAA,GAAA,QAAA,EAAA,YAYiI,EAAA,GAAA,GAAA,EAAA,GAAA,yBAAA,GAC5H,EAAA,GAAA,GAAA,EAAA,GAAA,UAAA,EAAA,GAAA,EAAA,EAAA,EAAA,g3BDDT,uBEJPvzB,EAAOC,QAVP,SAAiCC,EAAKsvB,GACpC,OAAO,SAASruB,GACd,OAAc,MAAVA,GAGGA,EAAOjB,KAASsvB,SACPjQ,IAAbiQ,GAA2BtvB,KAAOqS,OAAOpR,wJCEzC,IAAA,EAAA,YAAMqyB,EAET,YACWzF,EACCE,GADD,KAAAF,UAAAA,EACC,KAAAE,GAAAA,EAGZ,WACI9tB,KAAKszB,UAAYtzB,KAAK4tB,UAAUnT,cAAc1W,UAAU,KACpD/D,KAAK8tB,GAAGvpB,iBAIhB,cACIvE,KAAKszB,UAAUlvB,cAGZ,kBACH,QAASpE,KAAK4tB,UAAUnT,cAAcvX,MAAMC,OAGzC,wBACH,OAAOnD,KAAK4tB,UAAUnT,cAAcvX,MAAMC,QACtCnD,KAAK4tB,UAAUnT,cAAcvX,MAAMC,UAAqC,QAA/B,EAAKnD,KAAK4tB,UAAUpT,MAAMtX,aAAK,IAAA,OAAA,EAAA,EAAEC,QAG3E,gBACCnD,KAAKuzB,kBACLvzB,KAAK4tB,UAAUnT,cAAc3L,KAAK,IAElC9O,KAAK4tB,UAAUnT,cAAc3L,KACzB9O,KAAK4tB,UAAUpT,MAAMtX,MAAMkG,IAAI8kB,GAAKA,EAAE5sB,mDA/BzC+xB,GAA4B,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,4BAA5BA,EAA4B,UAAA,CAAA,CAAA,GAAA,wBAAA,KAAA,UAAA,CAAA,EAAA,kBAAA,MAAA,EAAA,MAAA,EAAA,KAAA,EAAA,OAAA,CAAA,CAAA,EAAA,UAAA,gBAAA,WAAA,SAAA,SAAA,EAAA,GAAA,EAAA,IATjC,EAAA,GAAA,EAAA,eAAA,GACI,EAAA,GAAA,UAAA,SAAA,GAAA,OAAA,EAAmB,EAAAG,gBAAkB,QAGzC,EAAA,WAFI,EAAA,GAAA,UAAA,EAAA,kBAAA,CAA6B,gBAAA,EAAA,oBAAA,EAAA,4EAOlC,yBCjBP,IAAI5c,EAAO,EAAQ,QAKnB/W,EAAOC,QAFU8W,EAAK1W,iCCHtB,IAAIkwB,EAAa,EAAQ,QAezBvwB,EAAOC,QAJP,SAAqBC,GACnB,OAAOqwB,EAAWpwB,KAAMD,GAAKiZ,IAAIjZ,0BCZnC,IAAI0zB,EAAe,EAAQ,QAsB3B5zB,EAAOC,QAPP,SAAiBC,EAAKmD,GACpB,IAAI2P,EAAO7S,KAAKC,SAGhB,OAFAD,KAAKiT,MAAQjT,KAAK8T,IAAI/T,GAAO,EAAI,EACjC8S,EAAK9S,GAAQ0zB,QAA0BrU,IAAVlc,EAfV,4BAekDA,EAC9DlD,4BCnBT,IAAIgS,EAAa,EAAQ,QACrBC,EAAe,EAAQ,QAgB3BpS,EAAOC,QAJP,SAAyBoD,GACvB,OAAO+O,EAAa/O,IAVR,sBAUkB8O,EAAW9O,wBCF3CrD,EAAOC,QAJP,SAAmBkB,EAAQjB,GACzB,OAAiB,MAAViB,GAAkBjB,KAAOqS,OAAOpR,qGCOlC,IAAA,EAAA,YAAM0yB,EAyBT,YAAoBC,GAAA,KAAAA,MAAAA,EAxBX,KAAAC,UAAgC,OAChC,KAAAC,QAAsC,OACpB,KAAAC,KAAO9zB,KAAK2zB,MAAMI,aAE7C,cACI,MAA0B,YAAnB/zB,KAAK4zB,UAGhB,WACI,MAA0B,SAAnB5zB,KAAK4zB,UAGhB,aACI,MAAwB,WAAjB5zB,KAAK6zB,QAGhB,WACI,MAAwB,SAAjB7zB,KAAK6zB,QAGhB,WACI,MAAwB,SAAjB7zB,KAAK6zB,sDAtBPH,GAAiB,EAAA,GAAA,EAAA,4BAAjBA,EAAiB,UAAA,CAAA,CAAA,aAAA,UAAA,CAAA,YAAA,OAAA,gBAAA,IAAA,gBAAA,MAAA,iBAAA,aAAA,OAAA,eAAA,SAAA,GAAA,aAAA,SAAA,EAAA,GAAA,EAAA,8+CAAvB,uBCJP7zB,EAAOC,QALP,WACEE,KAAKC,SAAW,GAChBD,KAAKiT,KAAO,uBCRd,IAOI8Y,EAPc3Z,OAAOC,UAOcX,SAavC7R,EAAOC,QAJP,SAAwBoD,GACtB,OAAO6oB,EAAqBtZ,KAAKvP,wBCKnCrD,EAAOC,QAZP,SAAuBysB,EAAOyH,EAAWtH,EAAWuH,GAIlD,IAHA,IAAI9wB,EAASopB,EAAMppB,OACfa,EAAQ0oB,GAAauH,EAAY,GAAK,GAElCA,EAAYjwB,MAAYA,EAAQb,GACtC,GAAI6wB,EAAUzH,EAAMvoB,GAAQA,EAAOuoB,GACjC,OAAOvoB,EAGX,OAAQ,yBCpBV,IAAIkwB,EAAa,EAAQ,QAGrBC,EAA0B,iBAARC,MAAoBA,MAAQA,KAAKhiB,SAAWA,QAAUgiB,KAGxExd,EAAOsd,GAAcC,GAAY5W,SAAS,cAATA,GAErC1d,EAAOC,QAAU8W,sBCSjB/W,EAAOC,QARP,SAAqBC,GACnB,IAAI8S,EAAO7S,KAAKC,SACZG,EAASyS,EAAa,OAAE9S,GAG5B,OADAC,KAAKiT,KAAOJ,EAAKI,KACV7S,yBCdT,IAAIuT,EAAW,EAAQ,QACnB0gB,EAAgB,EAAQ,QACxBC,EAAoB,EAAQ,QAC5BC,EAAW,EAAQ,QACnBC,EAAY,EAAQ,QACpBhE,EAAa,EAAQ,QAkEzB3wB,EAAOC,QApDP,SAAkBysB,EAAOkI,EAAUC,GACjC,IAAI1wB,GAAS,EACT2wB,EAAWN,EACXlxB,EAASopB,EAAMppB,OACfyxB,GAAW,EACXx0B,EAAS,GACTy0B,EAAOz0B,EAEX,GAAIs0B,EACFE,GAAW,EACXD,EAAWL,OAER,GAAInxB,GAvBY,IAuBgB,CACnC,IAAI5C,EAAMk0B,EAAW,KAAOD,EAAUjI,GACtC,GAAIhsB,EACF,OAAOiwB,EAAWjwB,GAEpBq0B,GAAW,EACXD,EAAWJ,EACXM,EAAO,IAAIlhB,OAGXkhB,EAAOJ,EAAW,GAAKr0B,EAEzB00B,EACA,OAAS9wB,EAAQb,GAAQ,CACvB,IAAID,EAAQqpB,EAAMvoB,GACd+wB,EAAWN,EAAWA,EAASvxB,GAASA,EAG5C,GADAA,EAASwxB,GAAwB,IAAVxxB,EAAeA,EAAQ,EAC1C0xB,GAAYG,GAAaA,EAAU,CAErC,IADA,IAAIC,EAAYH,EAAK1xB,OACd6xB,KACL,GAAIH,EAAKG,KAAeD,EACtB,SAASD,EAGTL,GACFI,EAAK7hB,KAAK+hB,GAEZ30B,EAAO4S,KAAK9P,QAEJyxB,EAASE,EAAME,EAAUL,KAC7BG,IAASz0B,GACXy0B,EAAK7hB,KAAK+hB,GAEZ30B,EAAO4S,KAAK9P,IAGhB,OAAO9C,uBC5CTP,EAAOC,QAfP,SAAqBysB,EAAOyH,GAM1B,IALA,IAAIhwB,GAAS,EACTb,EAAkB,MAATopB,EAAgB,EAAIA,EAAMppB,OACnC8xB,EAAW,EACX70B,EAAS,KAEJ4D,EAAQb,GAAQ,CACvB,IAAID,EAAQqpB,EAAMvoB,GACdgwB,EAAU9wB,EAAOc,EAAOuoB,KAC1BnsB,EAAO60B,KAAc/xB,GAGzB,OAAO9C,yBCrBT,IAGIU,EAHU,EAAQ,OAAR,CAGasR,OAAO8iB,eAAgB9iB,QAElDvS,EAAOC,QAAUgB,wBCLjB,IAAIq0B,EAAa,EAAQ,QACrBtW,EAAW,EAAQ,QA+BvBhf,EAAOC,QAJP,SAAqBoD,GACnB,OAAgB,MAATA,GAAiB2b,EAAS3b,EAAMC,UAAYgyB,EAAWjyB,0BC7BhE,IAAIkyB,EAAkB,EAAQ,QAC1B/E,EAAK,EAAQ,QAMb/d,EAHcF,OAAOC,UAGQC,eAoBjCzS,EAAOC,QARP,SAAqBkB,EAAQjB,EAAKmD,GAChC,IAAIosB,EAAWtuB,EAAOjB,GAChBuS,EAAeG,KAAKzR,EAAQjB,IAAQswB,EAAGf,EAAUpsB,UACxCkc,IAAVlc,GAAyBnD,KAAOiB,IACnCo0B,EAAgBp0B,EAAQjB,EAAKmD,0BCvBjC,IAAImyB,EAAc,EAAQ,QACtBC,EAAY,EAAQ,QAMpB/iB,EAHcH,OAAOC,UAGcE,qBAGnCgjB,EAAmBnjB,OAAOojB,sBAmB9B31B,EAAOC,QAVWy1B,EAA+B,SAASv0B,GACxD,OAAc,MAAVA,EACK,IAETA,EAASoR,OAAOpR,GACTq0B,EAAYE,EAAiBv0B,IAAAA,SAAkBy0B,GACpD,OAAOljB,EAAqBE,KAAKzR,EAAQy0B,QANRH,wBCnBrC,IAAIH,EAAa,EAAQ,QACrBO,EAAW,EAAQ,QACnBjJ,EAAW,EAAQ,QACnBkJ,EAAW,EAAQ,QASnBC,EAAe,8BAafC,EAAaC,OAAO,IAVRvY,SAASlL,UAIIX,SAOde,KAVGL,OAAOC,UAMQC,gBAIGud,QAjBjB,sBAiBuC,QACvDA,QAAQ,yDAA0D,SAAW,KAmBhFhwB,EAAOC,QARP,SAAsBoD,GACpB,SAAKupB,EAASvpB,IAAUwyB,EAASxyB,MAGnBiyB,EAAWjyB,GAAS2yB,EAAaD,GAChCzU,KAAKwU,EAASzyB,0CC3CxB,SAAS6yB,EAAyBh2B,EAAQi2B,GAC7C,OAAOj2B,KAAOi2B,EADlB,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,yBCYAn2B,EAAOC,QAJP,SAAkBkB,EAAQjB,GACxB,OAAiB,MAAViB,OAAiBoe,EAAYpe,EAAOjB,0BCT7C,IAAI+rB,EAAS,EAAQ,QACjBmK,EAAY,EAAQ,QACpBC,EAAiB,EAAQ,QAOzBlK,EAAiBF,EAASA,EAAOG,iBAAc7M,EAkBnDvf,EAAOC,QATP,SAAoBoD,GAClB,OAAa,MAATA,OACekc,IAAVlc,EAdQ,qBADL,gBAiBJ8oB,GAAkBA,KAAkB5Z,OAAOlP,GAC/C+yB,EAAU/yB,GACVgzB,EAAehzB,0BCxBrB,IAAIizB,EAAY,EAAQ,QAEpBC,EAAkB,WACpB,IACE,IAAI5Y,EAAO2Y,EAAU/jB,OAAQ,kBAE7B,OADAoL,EAAK,GAAI,GAAI,IACNA,EACP,MAAOC,KALW,GAQtB5d,EAAOC,QAAUs2B,wBCVjB,IAAIjH,EAAqB,EAAQ,QAC7B/T,EAAO,EAAQ,QAsBnBvb,EAAOC,QAbP,SAAsBkB,GAIpB,IAHA,IAAIZ,EAASgb,EAAKpa,GACdmC,EAAS/C,EAAO+C,OAEbA,KAAU,CACf,IAAIpD,EAAMK,EAAO+C,GACbD,EAAQlC,EAAOjB,GAEnBK,EAAO+C,GAAU,CAACpD,EAAKmD,EAAOisB,EAAmBjsB,IAEnD,OAAO9C,yBCpBT,IAAIi2B,EAAQ,EAAQ,QAChBC,EAAY,EAAQ,QACpBC,EAAc,EAAQ,QACtBC,EAAa,EAAQ,QACrBC,EAAe,EAAQ,QACvBC,EAAc,EAAQ,QACtBC,EAAY,EAAQ,QACpBC,EAAc,EAAQ,QACtBC,EAAgB,EAAQ,QACxBC,EAAa,EAAQ,QACrBC,EAAe,EAAQ,QACvB5G,EAAS,EAAQ,QACjB6G,EAAiB,EAAQ,QACzBC,EAAiB,EAAQ,QACzBC,EAAkB,EAAQ,QAC1B5d,EAAU,EAAQ,QAClBwT,EAAW,EAAQ,QACnBqK,EAAQ,EAAQ,QAChB1K,EAAW,EAAQ,QACnBlZ,EAAQ,EAAQ,QAChB6H,EAAO,EAAQ,QACf4R,EAAS,EAAQ,QAqCjBoK,EAAgB,GACpBA,EA9Bc,sBA8BWA,EA7BV,kBA8BfA,EAfqB,wBAeWA,EAdd,qBAelBA,EA9Bc,oBA8BWA,EA7BX,iBA8BdA,EAfiB,yBAeWA,EAdX,yBAejBA,EAdc,sBAcWA,EAbV,uBAcfA,EAbe,uBAaWA,EA5Bb,gBA6BbA,EA5BgB,mBA4BWA,EA3BX,mBA4BhBA,EA3BgB,mBA2BWA,EA1Bd,gBA2BbA,EA1BgB,mBA0BWA,EAzBX,mBA0BhBA,EAhBe,uBAgBWA,EAfJ,8BAgBtBA,EAfgB,wBAeWA,EAdX,yBAcsC,EACtDA,EArCe,kBAqCWA,EApCZ,qBAqCdA,EA5BiB,qBA4BW,EA8F5Bv3B,EAAOC,QA5EP,SAASusB,EAAUnpB,EAAO2tB,EAASC,EAAY/wB,EAAKiB,EAAQgwB,GAC1D,IAAI5wB,EACAmf,EAnEgB,EAmEPsR,EACTwG,EAnEgB,EAmEPxG,EACTyG,EAnEmB,EAmEVzG,EAKb,GAHIC,IACF1wB,EAASY,EAAS8vB,EAAW5tB,EAAOnD,EAAKiB,EAAQgwB,GAASF,EAAW5tB,SAExDkc,IAAXhf,EACF,OAAOA,EAET,IAAKqsB,EAASvpB,GACZ,OAAOA,EAET,IAAIq0B,EAAQje,EAAQpW,GACpB,GAAIq0B,EAAAA,CAEF,GADAn3B,EAAS42B,EAAe9zB,IACnBqc,EACH,OAAOoX,EAAUzzB,EAAO9C,OAErB,CACL,IAAI+rB,EAAMgE,EAAOjtB,GACbs0B,EA9EM,qBA8EGrL,GA7EJ,8BA6EsBA,EAE/B,GAAIW,EAAS5pB,GACX,OAAOwzB,EAAYxzB,EAAOqc,GAE5B,GA/EY,mBA+ER4M,GAxFM,sBAwFcA,GAAmBqL,IAAWx2B,EAAAA,CAEpD,GADAZ,EAAUi3B,GAAUG,EAAU,GAAKN,EAAgBh0B,IAC9Cqc,EACH,OAAO8X,EACHR,EAAc3zB,EAAOuzB,EAAar2B,EAAQ8C,IAC1C0zB,EAAY1zB,EAAOszB,EAAWp2B,EAAQ8C,QAEvC,CACL,IAAKk0B,EAAcjL,GACjB,OAAOnrB,EAASkC,EAAQ,GAE1B9C,EAAS62B,EAAe/zB,EAAOipB,EAAK5M,IAIxCyR,IAAUA,EAAQ,IAAIqF,GACtB,IAAIjF,EAAUJ,EAAMhY,IAAI9V,GACxB,GAAIkuB,EACF,OAAOA,EAETJ,EAAMzwB,IAAI2C,EAAO9C,GAEbmT,EAAMrQ,GACRA,EAAM8K,SAAAA,SAAiBypB,GACrBr3B,EAAOyT,IAAIwY,EAAUoL,EAAU5G,EAASC,EAAY2G,EAAUv0B,EAAO8tB,OAE9DmG,EAAMj0B,IACfA,EAAM8K,SAAAA,SAAiBypB,EAAU13B,GAC/BK,EAAOG,IAAIR,EAAKssB,EAAUoL,EAAU5G,EAASC,EAAY/wB,EAAKmD,EAAO8tB,OAIzE,IAII0G,EAAQH,OAAQnY,GAJLkY,EACVD,EAASN,EAAeD,EACxBO,EAASrK,EAAS5R,GAEkBlY,GASzC,OARAozB,EAAUoB,GAASx0B,GAAAA,SAAgBu0B,EAAU13B,GACvC23B,IAEFD,EAAWv0B,EADXnD,EAAM03B,IAIRlB,EAAYn2B,EAAQL,EAAKssB,EAAUoL,EAAU5G,EAASC,EAAY/wB,EAAKmD,EAAO8tB,OAEzE5wB,2BClKT,IAIIu3B,EAJY,EAAQ,OAAR,CACL,EAAQ,QAGW,WAE9B93B,EAAOC,QAAU63B,qCCLjB,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,KAAA,IAAA,EAAA,EAAA,QAGO,MAAMC,UAAoC,EAAA,EAC7C,YACc9e,EACAiH,GAEVxd,QAHU,KAAAuW,OAAAA,EACA,KAAAiH,KAAAA,EAIV/f,KAAKggB,aAAehgB,KAAK+f,KAAKnb,EAC1B,gDACA,CAACqb,WAAYjgB,KAAK8Y,OAAOmH,WAAW1G,KAAK,QAI1C,MAAM2G,GACT,OAAOlgB,KAAK8Y,OAAOmH,WAAWE,KAAKC,GACxBA,IAAcF,EAAKE,iCCAtCvgB,EAAOC,QAXP,SAAmB6B,EAAQ4qB,GACzB,IAAIvoB,GAAS,EACTb,EAASxB,EAAOwB,OAGpB,IADAopB,IAAUA,EAAQlT,MAAMlW,MACfa,EAAQb,GACfopB,EAAMvoB,GAASrC,EAAOqC,GAExB,OAAOuoB,yBChBT,IAAIE,EAAW,EAAQ,QACnB1rB,EAAc,EAAQ,QACtB82B,EAAe,EAAQ,QAMvBvlB,EAHcF,OAAOC,UAGQC,eAwBjCzS,EAAOC,QAfP,SAAoBkB,GAClB,IAAKyrB,EAASzrB,GACZ,OAAO62B,EAAa72B,GAEtB,IAAI82B,EAAU/2B,EAAYC,GACtBZ,EAAS,GAEb,IAAK,IAAIL,KAAOiB,GACD,eAAPjB,IAAyB+3B,GAAYxlB,EAAeG,KAAKzR,EAAQjB,KACrEK,EAAO4S,KAAKjT,GAGhB,OAAOK,yBC7BT,IAAI23B,EAAY,EAAQ,QAiBxBl4B,EAAOC,QAPP,SAAoBsJ,EAAKrJ,GACvB,IAAI8S,EAAOzJ,EAAInJ,SACf,OAAO83B,EAAUh4B,GACb8S,EAAmB,iBAAP9S,EAAkB,SAAW,QACzC8S,EAAKzJ,yBCQXvJ,EAAOC,QAZP,SAAmBysB,EAAOyH,GAIxB,IAHA,IAAIhwB,GAAS,EACTb,EAAkB,MAATopB,EAAgB,EAAIA,EAAMppB,SAE9Ba,EAAQb,GACf,GAAI6wB,EAAUzH,EAAMvoB,GAAQA,EAAOuoB,GACjC,OAAO,EAGX,OAAO,yBCnBT,IAAIyL,EAAW,EAAQ,QACnBrlB,EAAM,EAAQ,QACdlH,EAAU,EAAQ,QAClB4f,EAAM,EAAQ,QACdsM,EAAU,EAAQ,QAClB3lB,EAAa,EAAQ,QACrB2jB,EAAW,EAAQ,QAYnBsC,EAAqBtC,EAASqC,GAC9BE,EAAgBvC,EAAShjB,GACzBwlB,EAAoBxC,EAASlqB,GAC7B2sB,EAAgBzC,EAAStK,GACzBgN,EAAoB1C,EAASgC,GAS7BxH,EAASne,GAGRgmB,GAnBa,qBAmBD7H,EAAO,IAAI6H,EAAS,IAAIM,YAAY,MAChD3lB,GA1BQ,gBA0BDwd,EAAO,IAAIxd,IAClBlH,GAzBY,oBAyBD0kB,EAAO1kB,EAAQC,YAC1B2f,GAzBQ,gBAyBD8E,EAAO,IAAI9E,IAClBsM,GAzBY,oBAyBDxH,EAAO,IAAIwH,MACzBxH,EAAS,SAASjtB,GAChB,IAAI9C,EAAS4R,EAAW9O,GACpByd,EA/BQ,mBA+BDvgB,EAAsB8C,EAAM7C,iBAAc+e,EACjDmZ,EAAa5X,EAAOgV,EAAShV,GAAQ,GAEzC,GAAI4X,EACF,OAAQA,GACN,KAAKN,EAAoB,MA/Bf,oBAgCV,KAAKC,EAAe,MAtCf,eAuCL,KAAKC,EAAmB,MArCf,mBAsCT,KAAKC,EAAe,MArCf,eAsCL,KAAKC,EAAmB,MArCf,mBAwCb,OAAOj4B,IAIXP,EAAOC,QAAUqwB,0BCzDjB,IAAIqI,EAAgB,EAAQ,QACxBC,EAAY,EAAQ,QACpBC,EAAgB,EAAQ,QAiB5B74B,EAAOC,QANP,SAAqBysB,EAAOrpB,EAAOwpB,GACjC,OAAOxpB,GAAUA,EACbw1B,EAAcnM,EAAOrpB,EAAOwpB,GAC5B8L,EAAcjM,EAAOkM,EAAW/L,0BChBtC,IAAI+G,EAAe,EAAQ,QAc3B5zB,EAAOC,QALP,WACEE,KAAKC,SAAWwzB,EAAeA,EAAa,MAAQ,GACpDzzB,KAAKiT,KAAO,6HCXd,EAAA,GAAA,GACI,EAAA,GAAA,EAAA,MAAA,GACA,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,OAAK,EAAA,GAAA,GAAqB,EAAA,KAC1B,EAAA,GAAA,EAAA,MAAA,GAA6B,EAAA,GAAA,GAAc,EAAA,KAC/C,EAAA,KACJ,EAAA,0BALS,EAAA,GAAA,GAAA,EAAA,GAAA,MAAA,EAAA,KAAA,OAAA,EAAA,IAEI,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,KAAA,cACwB,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,KAAA,QCM9B,IAAA,EAAA,YAAM0lB,EAPb,cASa,KAAAC,WAAY,gDAFZD,2BAAAA,EAAmB,UAAA,CAAA,CAAA,gBAAA,UAAA,CAAA,EAAA,qBAAA,OAAA,CAAA,KAAA,OAAA,UAAA,aAAA,MAAA,EAAA,KAAA,EAAA,OAAA,CAAA,CAAA,EAAA,QAAA,CAAA,MAAA,GAAA,EAAA,OAAA,CAAA,EAAA,WAAA,CAAA,EAAA,QAAA,cAAA,SAAA,SAAA,EAAA,GAAA,EAAA,GDVhC,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,eAAA,QAAc,EAAA,GAAA,OAAA,EAAA,2DCUP,yBCSP94B,EAAOC,QAVP,SAAmB+4B,EAAGpE,GAIpB,IAHA,IAAIzwB,GAAS,EACT5D,EAASiZ,MAAMwf,KAEV70B,EAAQ60B,GACfz4B,EAAO4D,GAASywB,EAASzwB,GAE3B,OAAO5D,sCCAT,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,KAAA,IAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,kEAiBO,IAAA,EAAA,YAAM04B,EAeT,YACWC,EACCjL,EACAkL,EACA9L,GAHD,KAAA6L,QAAAA,EACC,KAAAjL,GAAAA,EACA,KAAAkL,aAAAA,EACA,KAAA9L,GAAAA,EAdL,KAAA9Q,SAA8B,KAO9B,KAAA6c,cAAe,EACf,KAAAC,eAA8B,OANrC,yBACI,OAA0B,QAA1B,EAAOl5B,KAAK+4B,QAAQne,cAAM,IAAA,OAAA,EAAA,EAAEue,YAchC,WAEWn5B,KAAKmc,UACRnc,KAAKmc,QAAU,OAAA,EAAA,EAAA,CAAcnc,KAAKo5B,WAAW11B,cAAc+S,YAAa,MAI5EzW,KAAKq5B,QAAUr5B,KAAK+4B,QAAQ7e,MACvB3Q,KAAK,OAAA,EAAA,EAAA,CAAO8S,GAASA,EAAKF,UAAYnc,KAAKmc,UAC3CpY,UAAU,KACP/D,KAAKoc,SAAW,KAChBpc,KAAKs5B,eACLt5B,KAAK8tB,GAAGvpB,iBAIpB,kBAEIvE,KAAKg5B,aAAavjB,QAAQzV,KAAKktB,IAAInpB,YAGvC,cACI/D,KAAKq5B,QAAQj1B,cACbpE,KAAKg5B,aAAapjB,eAAe5V,KAAKktB,IAGnC,aACHltB,KAAK+4B,QAAQ7e,MAAMpL,KAAK,CACpBqN,QAASnc,KAAKmc,QACdC,SAAUpc,KAAKu5B,aAAav5B,KAAKoc,YAIjC,aAAa9D,GACjB,OAAQA,GACJ,IAAK,MAED,OADAtY,KAAKi5B,cAAe,EACbj5B,KAAKoc,SAAW,KAC3B,IAAK,OAGD,OAFApc,KAAKi5B,cAAe,EACpBj5B,KAAKk5B,eAAiB,KACfl5B,KAAKoc,SAAW,MAC3B,QAGI,OAFApc,KAAKi5B,cAAe,EACpBj5B,KAAKk5B,eAAiB,OACfl5B,KAAKoc,SAAW,QAI5B,sBACuB,QAArB,EAAEpc,KAAK+4B,QAAQne,cAAM,IAAA,OAAA,EAAA,EAAEue,eACxBn5B,KAAKi5B,cAAe,GAIrB,eACHj5B,KAAKi5B,cAAe,EACbj5B,KAAKoc,WACRpc,KAAKk5B,eAAiB,QAIvB,qBACuB,QAArB,EAAEl5B,KAAK+4B,QAAQne,cAAM,IAAA,OAAA,EAAA,EAAEue,cACxBn5B,KAAKw5B,aAIN,cAAc/b,UACQ,QAApB,EAACzd,KAAK+4B,QAAQne,cAAM,IAAA,OAAA,EAAA,EAAEue,cAAgB1b,EAAEzR,UAAY,EAAA,GAASyR,EAAEzR,UAAY,EAAA,IAC5EyR,EAAExR,iBACFjM,KAAKw5B,4DA7FJV,GAAwB,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,4BAAxBA,EAAwB,UAAA,CAAA,CAAA,GAAA,oBAAA,KAAA,UAAA,SAAA,EAAA,SAAA,EAAA,iKAAxB,EAAA,iBAAa,WAAA,SAAA,GAAA,OAAb,EAAA,cAAA,MAAqB,cAAA,WAAA,OAArB,EAAA,kBAAc,cAAA,WAAA,OAAd,EAAA,mUCjCb,EAAA,GAAA,EAAA,OAAA,EAAA,GACI,EAAA,GAAA,GACJ,EAAA,KACA,EAAA,GAAA,EAAA,OAAA,GACI,EAAA,GAAA,EAAA,WAAA,GACJ,EAAA,YAF2B,EAAA,GAAA,GAAA,EAAA,GAAA,UAAA,EAAA,gBAC8B,EAAA,GAAA,GAAA,EAAA,GAAA,eAAA,EAAA,m2BD6BlD,yBEjCP,IAGIjN,EAHU,EAAQ,OAAR,CAGWzZ,OAAOgJ,KAAMhJ,QAEtCvS,EAAOC,QAAU+rB,wBCLjB,IAAIkB,EAAa,EAAQ,QACrB0M,EAAa,EAAQ,QAczB55B,EAAOC,QAJP,SAAqB6B,EAAQX,GAC3B,OAAO+rB,EAAWprB,EAAQ83B,EAAW93B,GAASX,wBCChDnB,EAAOC,QAJP,SAAkBC,GAChB,OAAOC,KAAKC,SAAS6T,IAAI/T,iNCW3B,MAAM25B,EAAqB,CAACvkB,KAAM,UAAWwkB,SAAS,EAAMr4B,GAAI,MAKzD,IAAA,EAAA,YAAMs4B,EAMT,YACY7iB,EACA8iB,EACAC,EACAC,EACAC,GAJA,KAAAjjB,KAAAA,EACA,KAAA8iB,YAAAA,EACA,KAAAC,OAAAA,EACA,KAAAC,cAAAA,EACA,KAAAC,MAAAA,EATL,KAAAC,WAAa,IAAI/iB,EAAA,EAA6B,CAACwiB,IAC/C,KAAAQ,UAAY,IAAIhjB,EAAA,EAAwBlX,KAAKm6B,mBAC7C,KAAAC,iBAAmB,IAAIljB,EAAA,EAA2BlX,KAAKm6B,kBAAoB,KAAOT,GAUlF,eAAeW,SAClB,MAAMC,EAAoC,QAA9B,EAAGt6B,KAAKo6B,iBAAiBl3B,aAAK,IAAA,OAAA,EAAA,EAAE22B,YAC5C,OAAOS,IAAWA,EAAOC,UAAYD,EAAOE,YAAYhI,UAAUiI,GAAKA,EAAEtlB,OAASklB,IAAe,GAG9F,OAAOK,GACNA,IAAgB16B,KAAKk6B,UAAUh3B,QAC/BlD,KAAK85B,OAAOv5B,IAAIP,KAAK26B,aAAcD,GACnC16B,KAAKk6B,UAAUprB,KAAK4rB,IAExB,MAAME,EAAY56B,KAAKi6B,WAAW/2B,MAAMylB,KAAKkS,GAAKA,EAAEv5B,KAAOtB,KAAKk6B,UAAUh3B,OAC1ElD,KAAKo6B,iBAAiBtrB,KAAK8rB,GAAa56B,KAAKi6B,WAAW/2B,MAAM,IAG3D,cAAc03B,GACjB56B,KAAKi6B,WAAWnrB,KAAK,IAAI9O,KAAKi6B,WAAW/2B,MAAO03B,IAChD56B,KAAK6oB,OAAO+R,EAAUt5B,IAGnB,QAAQs5B,GACX,MAAME,EAAa,IAAI96B,KAAKi6B,WAAW/2B,OACjC63B,EAAID,EAAWtI,UAAUqI,GAAKA,EAAEv5B,KAAOs5B,EAAUt5B,IACnDy5B,IACAD,EAAWC,GAAKH,GAEpB56B,KAAKi6B,WAAWnrB,KAAKgsB,GAGlB,OAAOnT,GACV,MAAMmT,EAAa,IAAI96B,KAAKi6B,WAAW/2B,OACvCykB,EAAI3Z,QAAQ1M,IACR,MAAMy5B,EAAID,EAAWtI,UAAUqI,GAAKA,EAAEv5B,KAAOA,GACzCy5B,GACAD,EAAW/I,OAAOgJ,EAAG,KAG7B/6B,KAAKi6B,WAAWnrB,KAAKgsB,GACjBnT,EAAIgN,SAAS30B,KAAKk6B,UAAUh3B,QAC5BlD,KAAK6oB,OAAO,MAIb,MAAM/P,GACT,OAAO9Y,KAAK+W,KAAKiC,IAAiD,GAAG4gB,EAAkBoB,SAAYliB,GAC9FvP,KAAK,OAAA2P,EAAA,EAAA,CAAIE,IACNpZ,KAAKi6B,WAAWnrB,KAAK,IAAI9O,KAAKi6B,WAAW/2B,SAAUkW,EAAS1B,WAAW7E,OACvE7S,KAAK6oB,OAAO7oB,KAAKk6B,UAAUh3B,UAIhC,IAAIw3B,GACP,OAAO16B,KAAK+W,KAAKiC,IAAI,GAAG4gB,EAAkBoB,YAAYN,KAGnD,OAAO/S,GACV,OAAO3nB,KAAK+W,KAAKkkB,OAAO,GAAGrB,EAAkBoB,YAAYrT,KACpDpe,KAAK,OAAA2P,EAAA,EAAA,CAAI,KACNlZ,KAAK+jB,OAAO4D,MAIjB,OAAOuT,GACV,OAAOl7B,KAAK+W,KAAKokB,KAA6B,GAAGvB,EAAkBoB,SAAYE,GAC1E3xB,KAAK,OAAA2P,EAAA,EAAA,CAAIE,GAAYpZ,KAAKo7B,cAAchiB,EAASwhB,aAGnD,OAAOt5B,EAAY45B,GACtB,OAAOl7B,KAAK+W,KAAKskB,IAA4B,GAAGzB,EAAkBoB,YAAY15B,IAAM45B,GAC/E3xB,KAAK,OAAA2P,EAAA,EAAA,CAAIE,GAAYpZ,KAAK6vB,QAAQzW,EAASwhB,aAG7C,aAAaF,EAAqB5hB,GACrC,OAAO9Y,KAAK+W,KAAKokB,KAAK,GAAGvB,EAAkBoB,YAAYN,WAAsB5hB,GAG1E,aAAa4hB,EAAqBY,GACrC,OAAOt7B,KAAK+W,KAAKokB,KAAK,GAAGvB,EAAkBoB,YAAYN,KAAeY,YAGnE,aAAaZ,EAAqBa,GACrC,OAAOv7B,KAAK+W,KAAKkkB,OAAO,GAAGrB,EAAkBoB,YAAYN,YAAsBa,KAC1EhyB,KAAK,OAAA2P,EAAA,EAAA,CAAI,KACFqiB,IAAWv7B,KAAK65B,YAAY7gB,IAAI,OAChChZ,KAAK+jB,OAAO,CAAC2W,OAKtB,aAAaY,GAChB,OAAOt7B,KAAK+W,KAAKkkB,OAAO,GAAGrB,EAAkBoB,mBAAmBM,KAG7D,WAAWZ,EAAqBJ,EAAyCkB,GAC5E,MAAMC,EAAW,OAAA,EAAA,EAAA,CAAO,YAAanB,GAAUA,EAAOoB,UAAYpB,EAAOh5B,GACzE,OAAOtB,KAAK+W,KAAKokB,KAAK,GAAGvB,EAAkBoB,YAAYN,KAAeJ,EAAOqB,cAAcF,gBAAwB,CAACD,OAAAA,IAGjH,KAAKF,GACR,OAAOt7B,KAAK+W,KAAKiC,IAAI,kBAAkBsiB,GAGpC,0BACH,OAAOt7B,KAAK+5B,cAAc6B,uBACrBryB,KAAK,OAAAoS,EAAA,EAAA,CAAO9I,GC7IkB,2DD6IVA,EAAKgpB,aAAa/2B,OACtCf,UAAU8O,IACP,MAAMyoB,EAAYzoB,EAAKgpB,aAAsChpB,KAAKyoB,SACvC,SAAvBzoB,EAAKipB,OAAOA,OACZ97B,KAAKuZ,KAAK+hB,GAAUv3B,UAAUqV,IAC1BpZ,KAAK+5B,cAAckB,OAAO,CAACpoB,EAAKgpB,eAAe93B,YAC/C/D,KAAKo7B,cAAchiB,EAASwhB,WAC5B56B,KAAKg6B,MAAMjd,KAAK,sBAChBgf,IACA/7B,KAAKg8B,gCAAgCD,EAAKlpB,EAAKgpB,gBAErB,YAAvBhpB,EAAKipB,OAAOA,QACnB97B,KAAKi8B,aAAaX,GAAUv3B,UAAU,KAClC/D,KAAK+5B,cAAckB,OAAO,CAACpoB,EAAKgpB,eAAe93B,YAC/C/D,KAAKg6B,MAAMjd,KAAK,+BAChBgf,IACA/7B,KAAKg8B,gCAAgCD,EAAKlpB,EAAKgpB,kBAM3D,gCAAgCE,EAA2BG,GAC5C,MAAfH,EAAII,QACJn8B,KAAK+5B,cAAckB,OAAO,CAACiB,IAAQn4B,YACnC/D,KAAKg6B,MAAMjd,KAAK,oCAEhB/c,KAAKg6B,MAAMjd,KAAK,EAAA,EAAWqf,SAI3B,kBACJ,MAAM1B,EAAc16B,KAAK85B,OAAO9gB,IAAIhZ,KAAK26B,cACzC,MAA8B,iBAAhBD,EAA2BllB,SAASklB,GAAeA,EAG7D,aACJ,OAAU16B,KAAK65B,YAAY7gB,IAAI,MAAxB,2BAzJJ,EAAAgiB,SAAW,kDADTpB,GAAiB,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,8BAAjBA,EAAiB,QAAjBA,EAAiB,UAAA,WAFd,YAET,uBEzBP,IAAI1F,EAA8B,iBAAVmI,QAAsBA,QAAUA,OAAOjqB,SAAWA,QAAUiqB,OAEpFx8B,EAAOC,QAAUo0B,wBCHjB,IAAInH,EAAa,EAAQ,QACrB3R,EAAO,EAAQ,QAenBvb,EAAOC,QAJP,SAAoBkB,EAAQW,GAC1B,OAAOX,GAAU+rB,EAAWprB,EAAQyZ,EAAKzZ,GAASX,0BCbpD,IAAIs7B,EAAmB,EAAQ,QAe/Bz8B,EAAOC,QALP,SAAuBy8B,EAAUhd,GAC/B,IAAID,EAASC,EAAS+c,EAAiBC,EAASjd,QAAUid,EAASjd,OACnE,OAAO,IAAIid,EAASl8B,YAAYif,EAAQid,EAAStL,WAAYsL,EAASj8B,8bCXjE,SAASk8B,EAAMt5B,GAClB,OAAQvB,GAAWA,EAAO86B,KAAK,IAAIC,EAAcx5B,IAErD,MAAMw5B,EACF,YAAYx5B,GACRlD,KAAKkD,MAAQA,EAEjB,KAAKy5B,EAAYh7B,GACb,OAAOA,EAAOoC,UAAU,IAAI,EAAgB44B,EAAY38B,KAAKkD,SAGrE,MAAM,UAAwB05B,EAAA,EAC1B,YAAYC,EAAa35B,GACrBX,MAAMs6B,GACN78B,KAAKkD,MAAQA,EAEjB,MAAM45B,GACF98B,KAAK68B,YAAY/tB,KAAK9O,KAAKkD,wHCcnC,MAAMjC,EAAM,CAAC,KACb,SAAS87B,EAAkC57B,EAAIC,GAAO,GAAS,EAALD,EAAQ,CAC9D,MAAM67B,EAAM,EAAA,KACZ,EAAA,GAAsB,EAAG,MAAO,GAChC,EAAA,GAAkB,SAAA,WAA+I,OAAlE,EAAA,GAAqBA,GAAqB,EAAA,KAAsCC,wBAC/K,EAAA,KACF,GAAS,EAAL97B,EAAQ,CACV,MAAME,EAAS,EAAA,KACf,EAAA,GAAmB,mBAAoBA,EAAO67B,uBAElD,SAASC,EAAiDh8B,EAAIC,GAAgB,EAALD,IACrE,EAAA,GAAsB,EAAG,sBACzB,EAAA,GAAoB,EAAG,GACvB,EAAA,MAEJ,MAAMK,EAAM,CAAC,CAAC,CAAC,eAAgB,CAAC,CAAC,uBAAwB,KACnDuS,EAAM,CAAC,aAAc,qBAAsB,KACjD,SAASqpB,EAAmCj8B,EAAIC,GAAO,GAAS,EAALD,EAAQ,CAC/D,MAAM67B,EAAM,EAAA,KACZ,EAAA,GAAsB,EAAG,MAAO,GAChC,EAAA,GAAkB,SAAA,WAAgJ,OAAlE,EAAA,GAAqBA,GAAqB,EAAA,KAAsCC,wBAChL,EAAA,KACF,GAAS,EAAL97B,EAAQ,CACV,MAAME,EAAS,EAAA,KACf,EAAA,GAAmB,mBAAoBA,EAAO67B,uBAElD,SAASG,EAAmDl8B,EAAIC,GAAgB,EAALD,IACvE,EAAA,GAAsB,EAAG,sBAAuB,GAChD,EAAA,GAAoB,EAAG,GACvB,EAAA,MAEJ,MAAM6S,EAAM,CAAC,CAAC,CAAC,gBAAiB,CAAC,CAAC,wBAAyB,KACrDE,EAAM,CAAC,cAAe,sBAAuB,KAC7CopB,EAAM,8oEACNC,EAAsB,CAExBC,gBAAiB,OAAA,EAAA,EAAA,CAAQ,YAAa,CAKlC,OAAA,EAAA,EAAA,CAAM,qBAAsB,OAAA,EAAA,EAAA,CAAM,CAC9B,UAAa,OACb,WAAc,aAElB,OAAA,EAAA,EAAA,CAAM,OAAQ,OAAA,EAAA,EAAA,CAAM,CAEhB,aAAc,OACd,WAAc,YAElB,OAAA,EAAA,EAAA,CAAW,uBAAwB,OAAA,EAAA,EAAA,CAAQ,QAC3C,OAAA,EAAA,EAAA,CAAW,sCAAuC,OAAA,EAAA,EAAA,CAAQ,8CAY5DC,EAA8B,IAAI,EAAA,EAAe,8BAA+B,CAClFz7B,WAAY,OACZC,QAQJ,WACI,OAAO,KAHLy7B,EAAuB,IAAI,EAAA,EAAe,0CAK1CC,UAAyB,EAAA,EAC3B,YAAYv7B,EAAoBw7B,EAAY/2B,EAAYg3B,EAAkBC,GACtEv7B,MAAMsE,EAAYg3B,EAAkBC,GACpC99B,KAAKoC,mBAAqBA,EAC1BpC,KAAK49B,WAAaA,EAEtB,qBACI59B,KAAK49B,WAAWG,sBAAsBh6B,UAAU,KAC5C/D,KAAKoC,mBAAmBmC,yBAIpCo5B,EAAiBh5B,UAAO,SAAkCC,GAAK,OAAO,IAAKA,GAAK+4B,GAAkB,EAAA,GAAyB,EAAA,GAA2B,EAAA,GAAyB,OAAA,EAAA,EAAA,CAAW,IAAM,IAAsB,EAAA,GAAyB,EAAA,GAAoB,EAAA,GAAyB,EAAA,GAA0B,EAAA,GAAyB,EAAA,KAC/UA,EAAiBj4B,UAAO,EAAA,GAAyB,CAAEZ,KAAM64B,EAAkBh4B,UAAW,CAAC,CAAC,uBAAwBI,UAAW,CAAC,EAAG,sBAAuBqL,SAAU,EAAGC,aAAc,SAAuClQ,EAAIC,GAAgB,EAALD,GAC/N,EAAA,GAAmB,cAAeC,EAAIw8B,WAAWI,gBAAgBC,KAAM,KAAvE,CAA6E,eAAgB78B,EAAIw8B,WAAWI,gBAAgBE,MAAO,OAClI54B,SAAU,CAAC,EAAA,IAAoCc,mBAAoBnF,EAAKoF,MAAO,EAAGC,KAAM,EAAGrB,SAAU,SAAmC9D,EAAIC,GAAgB,EAALD,IACxJ,EAAA,KACA,EAAA,GAAoB,KACnBuF,cAAe,EAAGC,gBAAiB,wBA4BtCw3B,EACF,YAAY97B,EAAa+7B,EAAmBxpB,EAAeypB,EAAW3c,EAAS4c,EAAMV,GACjF59B,KAAKqC,YAAcA,EACnBrC,KAAKo+B,kBAAoBA,EACzBp+B,KAAK4U,cAAgBA,EACrB5U,KAAKq+B,UAAYA,EACjBr+B,KAAK0hB,QAAUA,EACf1hB,KAAKs+B,KAAOA,EACZt+B,KAAK49B,WAAaA,EAClB59B,KAAKu+B,qCAAuC,KAE5Cv+B,KAAKw+B,mBAAoB,EACzBx+B,KAAKy+B,UAAY,QACjBz+B,KAAK0+B,MAAQ,OACb1+B,KAAK2+B,eAAgB,EACrB3+B,KAAK4+B,SAAU,EAEf5+B,KAAK6+B,kBAAoB,IAAIC,EAAA,EAE7B9+B,KAAK++B,cAAgB,IAAID,EAAA,EAMzB9+B,KAAKg/B,gBAAkB,OAEvBh/B,KAAKi/B,aAEL,IAAI,EAAA,GAA2B,GAE/Bj/B,KAAKk/B,cAAgBl/B,KAAKi/B,aAAa11B,KAAK,OAAAoS,EAAA,EAAA,CAAOwjB,GAAKA,GAAI,OAAA/1B,EAAA,EAAA,CAAI,SAEhEpJ,KAAKo/B,YAAcp/B,KAAK6+B,kBAAkBt1B,KAAK,OAAAoS,EAAA,EAAA,CAAO8B,GAAKA,EAAE4hB,YAAc5hB,EAAE6hB,SAAyC,IAA9B7hB,EAAE6hB,QAAQpjB,QAAQ,SAAgBsgB,OAAMpd,IAEhIpf,KAAKu/B,cAAgBv/B,KAAKi/B,aAAa11B,KAAK,OAAAoS,EAAA,EAAA,CAAOwjB,IAAMA,GAAI,OAAA/1B,EAAA,EAAA,CAAI,SAEjEpJ,KAAKw/B,YAAcx/B,KAAK6+B,kBAAkBt1B,KAAK,OAAAoS,EAAA,EAAA,CAAO8B,GAAKA,EAAE4hB,YAAc5hB,EAAE6hB,SAAyB,SAAd7hB,EAAE6hB,SAAqB9C,OAAMpd,IAErHpf,KAAKwlB,WAAa,IAAIsZ,EAAA,EAGtB9+B,KAAKy/B,kBAAoB,IAAI,EAAA,EAK7Bz/B,KAAK0/B,aAAe,IAAIZ,EAAA,EACxB9+B,KAAKi/B,aAAal7B,UAAWjB,IACrBA,GACI9C,KAAKs+B,OACLt+B,KAAKu+B,qCAAuCv+B,KAAKs+B,KAAK31B,eAE1D3I,KAAK2/B,cAEA3/B,KAAK4/B,wBACV5/B,KAAK6/B,kBAQb7/B,KAAK0hB,QAAQ/X,kBAAkB,KAC3B,OAAAm2B,EAAA,EAAA,CAAU9/B,KAAKqC,YAAYqB,cAAe,WAAW6F,KAAK,OAAAoS,EAAA,EAAA,CAAOnX,GACtDA,EAAMwH,UAAY,EAAA,IAAWhM,KAAK+/B,eAAiB,OAAA,EAAA,EAAA,CAAev7B,IACzE,OAAAw7B,EAAA,EAAA,CAAUhgC,KAAKwlB,aAAazhB,UAAUS,GAASxE,KAAK0hB,QAAQuC,IAAI,KAChEjkB,KAAK4f,QACLpb,EAAMuK,kBACNvK,EAAMyH,sBAKdjM,KAAK++B,cAAcx1B,KAAK,OAAA02B,EAAA,EAAA,CAAqB,CAACnD,EAAGoD,IACtCpD,EAAEuC,YAAca,EAAEb,WAAavC,EAAEwC,UAAYY,EAAEZ,UACtDv7B,UAAWS,IACX,MAAM,UAAE66B,EAAS,QAAEC,GAAY96B,GACE,IAA5B86B,EAAQpjB,QAAQ,SAA+B,SAAdmjB,GACrB,SAAZC,GAAoD,IAA9BD,EAAUnjB,QAAQ,UACzClc,KAAKi/B,aAAah7B,KAAKjE,KAAK4+B,WAKxC,eAAiB,OAAO5+B,KAAKy+B,UAC7B,aAAav7B,IAETA,EAAkB,QAAVA,EAAkB,MAAQ,UACrBlD,KAAKy+B,YACdz+B,KAAKy+B,UAAYv7B,EACjBlD,KAAKy/B,kBAAkBx7B,QAI/B,WAAa,OAAOjE,KAAK0+B,MACzB,SAASx7B,GACLlD,KAAK0+B,MAAQx7B,EACblD,KAAKmgC,wBACLngC,KAAK0/B,aAAa5wB,OAGtB,mBAAqB,OAAO9O,KAAK2+B,cACjC,iBAAiBz7B,GAASlD,KAAK2+B,cAAgB,OAAA,EAAA,EAAA,CAAsBz7B,GAMrE,gBACI,MAAMA,EAAQlD,KAAKogC,WAInB,OAAgB,MAATl9B,EAA8B,SAAdlD,KAAKqgC,KAAkBn9B,EAElD,cAAcA,GAASlD,KAAKogC,WAAa,OAAA,EAAA,EAAA,CAAsBl9B,GAK/D,aAAe,OAAOlD,KAAK4+B,QAC3B,WAAW17B,GAASlD,KAAKsgC,OAAO,OAAA,EAAA,EAAA,CAAsBp9B,IAKtD,aACSlD,KAAKugC,WAAcvgC,KAAKwgC,YAG7BxgC,KAAKwgC,WAAWC,+BAA+B90B,KAAK+0B,IAG3CA,GAAiE,mBAAzC1gC,KAAKqC,YAAYqB,cAAcmK,OACxD7N,KAAKqC,YAAYqB,cAAcmK,UAQ3C,gBACS7N,KAAKugC,YAINvgC,KAAKu+B,qCACLv+B,KAAK4U,cAAckB,SAAS9V,KAAKu+B,qCAAsCv+B,KAAK2gC,YAG5E3gC,KAAKqC,YAAYqB,cAAck9B,OAEnC5gC,KAAKu+B,qCAAuC,KAC5Cv+B,KAAK2gC,WAAa,MAGtB,uBACI,IAAIlwB,EACJ,MAAMowB,EAAgC,QAApBpwB,EAAKzQ,KAAKs+B,YAAyB,IAAP7tB,OAAgB,EAASA,EAAG9H,cAC1E,QAASk4B,GAAY7gC,KAAKqC,YAAYqB,cAAc6H,SAASs1B,GAEjE,qBACI7gC,KAAKwgC,WAAaxgC,KAAKo+B,kBAAkB1vB,OAAO1O,KAAKqC,YAAYqB,eACjE1D,KAAKmgC,wBAET,wBAKQngC,KAAKq+B,UAAUyC,YACf9gC,KAAKw+B,mBAAoB,GAGjC,cACQx+B,KAAKwgC,YACLxgC,KAAKwgC,WAAWO,UAEpB/gC,KAAK6+B,kBAAkBz0B,WACvBpK,KAAK++B,cAAc30B,WACnBpK,KAAK0/B,aAAat1B,WAClBpK,KAAKwlB,WAAW1W,OAChB9O,KAAKwlB,WAAWpb,WAOpB,KAAK42B,GACD,OAAOhhC,KAAKsgC,QAAO,EAAMU,GAG7B,QACI,OAAOhhC,KAAKsgC,QAAO,GAGvB,yBAII,OAAOtgC,KAAKihC,UAAsB,GAA0B,GAQhE,OAAO9O,GAAUnyB,KAAK8C,OAAQk+B,GAG1B,OAAOhhC,KAAKihC,SAAS9O,GAA4BA,GAAUnyB,KAAK4/B,uBAAwBoB,GAS5F,SAAS7O,EAAQ+O,EAAcF,EAAY,WAavC,OAZAhhC,KAAK4+B,QAAUzM,EACXA,GACAnyB,KAAKg/B,gBAAkBh/B,KAAKw+B,kBAAoB,OAAS,eACzDx+B,KAAK2gC,WAAaK,IAGlBhhC,KAAKg/B,gBAAkB,OACnBkC,GACAlhC,KAAK6/B,iBAGb7/B,KAAKmgC,wBACE,IAAI10B,QAAQC,IACf1L,KAAKi/B,aAAa11B,KAAK,OAAA43B,EAAA,EAAA,CAAK,IAAIp9B,UAAUgZ,GAAQrR,EAAQqR,EAAO,OAAS,YAGlF,YACI,OAAO/c,KAAKqC,YAAYqB,eAAiB1D,KAAKqC,YAAYqB,cAAc09B,aAAoB,EAGhG,wBACQphC,KAAKwgC,aAELxgC,KAAKwgC,WAAWa,QAAUrhC,KAAK8C,QAAwB,SAAd9C,KAAKqgC,MAQtD,wBAAwB77B,GACpBxE,KAAK6+B,kBAAkB/vB,KAAKtK,GAOhC,uBAAuBA,GACnBxE,KAAK++B,cAAcjwB,KAAKtK,WAGhC25B,EAAUx5B,UAAO,SAA2BC,GAAK,OAAO,IAAKA,GAAKu5B,GAAW,EAAA,GAAyB,EAAA,GAAoB,EAAA,GAAyB,EAAA,GAA0B,EAAA,GAAyB,EAAA,GAAsB,EAAA,GAAyB,EAAA,GAAkB,EAAA,GAAyB,EAAA,GAAgB,EAAA,GAAyB,EAAA,EAAU,GAAI,EAAA,GAAyBT,EAAsB,KACtYS,EAAUz4B,UAAO,EAAA,GAAyB,CAAEZ,KAAMq5B,EAAWx4B,UAAW,CAAC,CAAC,eAAgBI,UAAW,CAAC,WAAY,KAAM,EAAG,cAAeqL,SAAU,GAAIC,aAAc,SAAgClQ,EAAIC,GAAgB,EAALD,GAC7M,EAAA,GAA+B,oBAAA,SAAoFoQ,GAAU,OAAOnQ,EAAIkgC,wBAAwB/vB,KAAhK,CAA4K,mBAAA,SAAkFA,GAAU,OAAOnQ,EAAImgC,uBAAuBhwB,MACnS,EAALpQ,IACF,EAAA,GAAmB,QAAS,MAC5B,EAAA,GAA+B,aAAcC,EAAI49B,iBACjD,EAAA,GAAmB,iBAAmC,QAAjB59B,EAAI2H,SAAzC,CAA6D,kBAAgC,SAAb3H,EAAIi/B,KAApF,CAAqG,kBAAgC,SAAbj/B,EAAIi/B,KAA5H,CAA6I,kBAAgC,SAAbj/B,EAAIi/B,KAApK,CAAqL,oBAAqBj/B,EAAI0B,UAC7MqC,OAAQ,CAAE4D,SAAU,WAAYs3B,KAAM,OAAQN,aAAc,eAAgBQ,UAAW,YAAaz9B,OAAQ,UAAYuC,QAAS,CAAE45B,aAAc,eAAgBC,cAAe,SAAUE,YAAa,cAAeG,cAAe,SAAUC,YAAa,cAAeC,kBAAmB,mBAAqBx5B,SAAU,CAAC,aAAcG,mBAAoBnF,EAAKoF,MAAO,EAAGC,KAAM,EAAGC,OAAQ,CAAC,CAAC,EAAG,+BAAgCtB,SAAU,SAA4B9D,EAAIC,GAAgB,EAALD,IAC3d,EAAA,KACA,EAAA,GAAsB,EAAG,MAAO,GAChC,EAAA,GAAoB,GACpB,EAAA,OACCuF,cAAe,EAAGmM,KAAM,CAAE+gB,UAAW,CAAC2J,EAAoBC,kBAAoB72B,gBAAiB,wBA8GlG66B,EACF,YAAYx5B,EAAML,EAAU+Z,EAAStf,EAAoBq/B,EAAeC,GAAkB,EAAO5sB,GAC7F9U,KAAKgI,KAAOA,EACZhI,KAAK2H,SAAWA,EAChB3H,KAAK0hB,QAAUA,EACf1hB,KAAKoC,mBAAqBA,EAC1BpC,KAAK8U,eAAiBA,EAEtB9U,KAAK2hC,SAAW,IAAI,EAAA,EAEpB3hC,KAAK4hC,cAAgB,IAAI,EAAA,EAEzB5hC,KAAKwlB,WAAa,IAAIsZ,EAAA,EAEtB9+B,KAAK6hC,gBAAkB,IAAI/C,EAAA,EAM3B9+B,KAAKg+B,gBAAkB,CAAEC,KAAM,KAAMC,MAAO,MAC5Cl+B,KAAK+9B,sBAAwB,IAAIe,EAAA,EAG7B92B,GACAA,EAAKlE,OAAOyF,KAAK,OAAAy2B,EAAA,EAAA,CAAUhgC,KAAKwlB,aAAazhB,UAAU,KACnD/D,KAAK8hC,mBACL9hC,KAAK+hC,yBAKbN,EAAc39B,SACTyF,KAAK,OAAAy2B,EAAA,EAAA,CAAUhgC,KAAKwlB,aACpBzhB,UAAU,IAAM/D,KAAK+hC,wBAC1B/hC,KAAKgiC,UAAYN,EAGrB,YAAc,OAAO1hC,KAAKiiC,OAE1B,UAAY,OAAOjiC,KAAKkiC,KASxB,eAAiB,OAAOliC,KAAKgiC,UAC7B,aAAa9+B,GAASlD,KAAKgiC,UAAY,OAAA,EAAA,EAAA,CAAsB9+B,GAM7D,kBACI,OAA8B,MAA1BlD,KAAKmiC,mBACGniC,KAAKiiC,QAA+B,SAArBjiC,KAAKiiC,OAAO5B,OAAoBrgC,KAAKkiC,MAA2B,SAAnBliC,KAAKkiC,KAAK7B,KAE3ErgC,KAAKmiC,kBAEhB,gBAAgBj/B,GACZlD,KAAKmiC,kBAA6B,MAATj/B,EAAgB,KAAO,OAAA,EAAA,EAAA,CAAsBA,GAG1E,iBACI,OAAOlD,KAAKoiC,cAAgBpiC,KAAKqiC,SAErC,qBACIriC,KAAKsiC,YAAYz4B,QACZN,KAAK,OAAAg5B,EAAA,EAAA,CAAUviC,KAAKsiC,aAAc,OAAAtC,EAAA,EAAA,CAAUhgC,KAAKwlB,aACjDzhB,UAAWy+B,IACZxiC,KAAK2hC,SAAShnB,MAAM6nB,EAAO7mB,OAAO8W,IAASA,EAAKmL,YAAcnL,EAAKmL,aAAe59B,OAClFA,KAAK2hC,SAASc,oBAElBziC,KAAK2hC,SAAS93B,QAAQN,KAAK,OAAAg5B,EAAA,EAAA,CAAU,OAAOx+B,UAAU,KAClD/D,KAAK8hC,mBACL9hC,KAAK2hC,SAAS3zB,QAASw0B,IACnBxiC,KAAK0iC,mBAAmBF,GACxBxiC,KAAK2iC,qBAAqBH,GAC1BxiC,KAAK4iC,iBAAiBJ,OAErBxiC,KAAK2hC,SAASx+B,QACfnD,KAAK6iC,cAAc7iC,KAAKiiC,SACxBjiC,KAAK6iC,cAAc7iC,KAAKkiC,QACxBliC,KAAK+hC,uBAET/hC,KAAKoC,mBAAmBmC,iBAG5BvE,KAAK0hB,QAAQ/X,kBAAkB,KAC3B3J,KAAK6hC,gBAAgBt4B,KAAK,OAAA0R,EAAA,EAAA,CAAa,IACvC,OAAA+kB,EAAA,EAAA,CAAUhgC,KAAKwlB,aAAazhB,UAAU,IAAM/D,KAAK+hC,0BAGzD,cACI/hC,KAAK+9B,sBAAsB3zB,WAC3BpK,KAAK6hC,gBAAgBz3B,WACrBpK,KAAK2hC,SAASZ,UACd/gC,KAAKwlB,WAAW1W,OAChB9O,KAAKwlB,WAAWpb,WAGpB,OACIpK,KAAK2hC,SAAS3zB,QAAQw0B,GAAUA,EAAOzlB,QAG3C,QACI/c,KAAK2hC,SAAS3zB,QAAQw0B,GAAUA,EAAO5iB,SAM3C,uBAOI,IAAIqe,EAAO,EACPC,EAAQ,EACZ,GAAIl+B,KAAK8iC,OAAS9iC,KAAK8iC,MAAMhgC,OACzB,GAAuB,QAAnB9C,KAAK8iC,MAAMzC,KACXpC,GAAQj+B,KAAK8iC,MAAMC,iBAElB,GAAuB,QAAnB/iC,KAAK8iC,MAAMzC,KAAgB,CAChC,MAAM9xB,EAAQvO,KAAK8iC,MAAMC,YACzB9E,GAAQ1vB,EACR2vB,GAAS3vB,EAGjB,GAAIvO,KAAKgjC,QAAUhjC,KAAKgjC,OAAOlgC,OAC3B,GAAwB,QAApB9C,KAAKgjC,OAAO3C,KACZnC,GAASl+B,KAAKgjC,OAAOD,iBAEpB,GAAwB,QAApB/iC,KAAKgjC,OAAO3C,KAAgB,CACjC,MAAM9xB,EAAQvO,KAAKgjC,OAAOD,YAC1B7E,GAAS3vB,EACT0vB,GAAQ1vB,EAOhB0vB,EAAOA,GAAQ,KACfC,EAAQA,GAAS,KACbD,IAASj+B,KAAKg+B,gBAAgBC,MAAQC,IAAUl+B,KAAKg+B,gBAAgBE,QACrEl+B,KAAKg+B,gBAAkB,CAAEC,KAAAA,EAAMC,MAAAA,GAG/Bl+B,KAAK0hB,QAAQuC,IAAI,IAAMjkB,KAAK+9B,sBAAsBjvB,KAAK9O,KAAKg+B,mBAGpE,YAEQh+B,KAAKgiC,WAAahiC,KAAKijC,aAEvBjjC,KAAK0hB,QAAQ/X,kBAAkB,IAAM3J,KAAK6hC,gBAAgB/yB,QAQlE,mBAAmB0zB,GACfA,EAAO3D,kBAAkBt1B,KAAK,OAAAoS,EAAA,EAAA,CAAQnX,GAAUA,EAAM66B,YAAc76B,EAAM86B,SAAU,OAAAU,EAAA,EAAA,CAAUhgC,KAAK2hC,SAAS93B,UACvG9F,UAAWS,IAGU,iBAAlBA,EAAM86B,SAAsD,mBAAxBt/B,KAAK8U,gBACzC9U,KAAK2H,SAASjE,cAAcJ,UAAUuQ,IAAI,yBAE9C7T,KAAK+hC,uBACL/hC,KAAKoC,mBAAmBmC,iBAER,SAAhBi+B,EAAOnC,MACPmC,EAAOvD,aAAa11B,KAAK,OAAAy2B,EAAA,EAAA,CAAUhgC,KAAK2hC,SAAS93B,UAAU9F,UAAU,IAAM/D,KAAKkjC,mBAAmBV,EAAO1/B,SAOlH,qBAAqB0/B,GACZA,GAKLA,EAAO/C,kBAAkBl2B,KAAK,OAAAy2B,EAAA,EAAA,CAAUhgC,KAAK2hC,SAAS93B,UAAU9F,UAAU,KACtE/D,KAAK0hB,QAAQyhB,iBAAiB55B,KAAK,OAAA43B,EAAA,EAAA,CAAK,IAAIp9B,UAAU,KAClD/D,KAAK8hC,uBAKjB,iBAAiBU,GACTA,GACAA,EAAO9C,aAAan2B,KAAK,OAAAy2B,EAAA,EAAA,CAAU,OAAAoD,EAAA,EAAA,CAAMpjC,KAAK2hC,SAAS93B,QAAS7J,KAAKwlB,cAChEzhB,UAAU,KACX/D,KAAK+hC,uBACL/hC,KAAKoC,mBAAmBmC,iBAKpC,mBAAmB8+B,GACf,MAAM//B,EAAYtD,KAAK2H,SAASjE,cAAcJ,UACxCC,EAAY,gCACd8/B,EACA//B,EAAUuQ,IAAItQ,GAGdD,EAAUygB,OAAOxgB,GAIzB,mBACIvD,KAAKiiC,OAASjiC,KAAKkiC,KAAO,KAE1BliC,KAAK2hC,SAAS3zB,QAAQw0B,IACK,OAAnBA,EAAOz5B,SAIP/I,KAAKkiC,KAAOM,EAMZxiC,KAAKiiC,OAASO,IAGtBxiC,KAAKgjC,OAAShjC,KAAK8iC,MAAQ,KAEvB9iC,KAAKgI,MAA4B,QAApBhI,KAAKgI,KAAK9E,OACvBlD,KAAK8iC,MAAQ9iC,KAAKkiC,KAClBliC,KAAKgjC,OAAShjC,KAAKiiC,SAGnBjiC,KAAK8iC,MAAQ9iC,KAAKiiC,OAClBjiC,KAAKgjC,OAAShjC,KAAKkiC,MAI3B,YACI,OAAQliC,KAAK6iC,cAAc7iC,KAAKiiC,SAA+B,QAApBjiC,KAAKiiC,OAAO5B,MAClDrgC,KAAK6iC,cAAc7iC,KAAKkiC,OAA2B,QAAlBliC,KAAKkiC,KAAK7B,KAEpD,qBACIrgC,KAAK4hC,cAAc39B,OACnBjE,KAAKsjC,gCAET,gCAEI,CAACtjC,KAAKiiC,OAAQjiC,KAAKkiC,MACdvmB,OAAO6mB,GAAUA,IAAWA,EAAOzC,cAAgB//B,KAAKujC,iBAAiBf,IACzEx0B,QAAQw0B,GAAUA,EAAOgB,0BAElC,qBACI,OAAQxjC,KAAK6iC,cAAc7iC,KAAKiiC,SAAWjiC,KAAKujC,iBAAiBvjC,KAAKiiC,SACjEjiC,KAAK6iC,cAAc7iC,KAAKkiC,OAASliC,KAAKujC,iBAAiBvjC,KAAKkiC,MAErE,iBAAiBM,GACb,MAAuB,SAAhBA,EAAOnC,QAAqBrgC,KAAKmiC,kBAE5C,cAAcK,GACV,OAAiB,MAAVA,GAAkBA,EAAO1/B,eAGxC0+B,EAAmB78B,UAAO,SAAoCC,GAAK,OAAO,IAAKA,GAAK48B,GAAoB,EAAA,GAAyB,EAAA,EAAuB,GAAI,EAAA,GAAyB,EAAA,GAAoB,EAAA,GAAyB,EAAA,GAAgB,EAAA,GAAyB,EAAA,GAA2B,EAAA,GAAyB,EAAA,GAAuB,EAAA,GAAyB/D,GAA8B,EAAA,GAAyB,EAAA,EAAuB,KAC7b+D,EAAmB97B,UAAO,EAAA,GAAyB,CAAEZ,KAAM08B,EAAoB77B,UAAW,CAAC,CAAC,yBAA0BC,eAAgB,SAA2CzE,EAAIC,EAAKyE,GAIlL,IAAIb,EAJmM,EAAL7D,IAClM,EAAA,GAAsB0E,EAAU,GAAkB,GAClD,EAAA,GAAsBA,EAAU,GAAW,IACpC,EAAL1E,IAEF,EAAA,GAAsB6D,EAAK,EAAA,QAA0B5D,EAAIihC,SAAWr9B,EAAGE,OACvE,EAAA,GAAsBF,EAAK,EAAA,QAA0B5D,EAAIkhC,YAAct9B,KACtED,UAAW,SAAkC5D,EAAIC,GAGlD,IAAI4D,EAH8D,EAAL7D,GAC7D,EAAA,GAAmB,GAAkB,GAC9B,EAALA,GAEF,EAAA,GAAsB6D,EAAK,EAAA,QAA0B5D,EAAIghC,aAAep9B,EAAGE,QAC1Ea,UAAW,CAAC,EAAG,wBAAyBqL,SAAU,EAAGC,aAAc,SAAyClQ,EAAIC,GAAgB,EAALD,GAC5H,EAAA,GAAmB,yCAA0CC,EAAI+gC,oBAChEh9B,OAAQ,CAAEs+B,SAAU,WAAYC,YAAa,eAAiBr+B,QAAS,CAAEu8B,cAAe,iBAAmB37B,SAAU,CAAC,sBAAuBX,SAAU,CAAC,EAAA,GAA0B,CAAC,CAC5KY,QAASw3B,EACTv3B,YAAaq7B,MACXp7B,mBAAoB2N,EAAK1N,MAAO,EAAGC,KAAM,EAAGC,OAAQ,CAAC,CAAC,QAAS,sBAAuB,EAAG,mBAAoB,QAAS,EAAG,QAAS,CAAC,EAAG,QAAS,CAAC,EAAG,sBAAuB,EAAG,UAAWtB,SAAU,SAAqC9D,EAAIC,GAAgB,EAALD,IAChQ,EAAA,GAAuBK,GACvB,EAAA,GAAkB,EAAGu7B,EAAmC,EAAG,EAAG,MAAO,GACrE,EAAA,GAAoB,GACpB,EAAA,GAAoB,EAAG,GACvB,EAAA,GAAkB,EAAGI,EAAkD,EAAG,EAAG,qBAAsB,IAC5F,EAALh8B,IACF,EAAA,GAAkB,OAAQC,EAAIsiC,aAC9B,EAAA,GAAiB,GACjB,EAAA,GAAkB,QAAStiC,EAAIihC,YAC9B77B,WAAY,CAAC,EAAA,EAAa,GAAmBC,OAAQ,CAAC62B,GAAM52B,cAAe,EAAGC,gBAAiB,wBA8ElGg9B,UAA0B,EAC5B,YAAYC,EAAmBC,EAAWh9B,EAAYg3B,EAAkBC,GACpEv7B,MAAMqhC,EAAmBC,EAAWh9B,EAAYg3B,EAAkBC,WAG1E6F,EAAkBh/B,UAAO,SAAmCC,GAAK,OAAO,IAAKA,GAAK++B,GAAmB,EAAA,GAAyB,EAAA,GAA2B,EAAA,GAAyB,OAAA,EAAA,EAAA,CAAW,IAAM,IAAuB,EAAA,GAAyB,EAAA,GAAoB,EAAA,GAAyB,EAAA,GAA0B,EAAA,GAAyB,EAAA,KACnVA,EAAkBj+B,UAAO,EAAA,GAAyB,CAAEZ,KAAM6+B,EAAmBh+B,UAAW,CAAC,CAAC,wBAAyBI,UAAW,CAAC,EAAG,qBAAsB,uBAAwBqL,SAAU,EAAGC,aAAc,SAAwClQ,EAAIC,GAAgB,EAALD,GAC1P,EAAA,GAAmB,cAAeC,EAAIw8B,WAAWI,gBAAgBC,KAAM,KAAvE,CAA6E,eAAgB78B,EAAIw8B,WAAWI,gBAAgBE,MAAO,OAClI54B,SAAU,CAAC,EAAA,IAAoCc,mBAAoBnF,EAAKoF,MAAO,EAAGC,KAAM,EAAGrB,SAAU,SAAoC9D,EAAIC,GAAgB,EAALD,IACzJ,EAAA,KACA,EAAA,GAAoB,KACnBuF,cAAe,EAAGC,gBAAiB,wBAyBtCm9B,UAAmB,EACrB,cACIvhC,SAASiD,WACTxF,KAAK+jC,kBAAmB,EACxB/jC,KAAKgkC,aAAe,EACpBhkC,KAAKikC,gBAAkB,EAG3B,sBAAwB,OAAOjkC,KAAK+jC,iBACpC,oBAAoB7gC,GAASlD,KAAK+jC,iBAAmB,OAAA,EAAA,EAAA,CAAsB7gC,GAK3E,kBAAoB,OAAOlD,KAAKgkC,aAChC,gBAAgB9gC,GAASlD,KAAKgkC,aAAe,OAAA,EAAA,EAAA,CAAqB9gC,GAKlE,qBAAuB,OAAOlD,KAAKikC,gBACnC,mBAAmB/gC,GAASlD,KAAKikC,gBAAkB,OAAA,EAAA,EAAA,CAAqB/gC,WAE5E4gC,EAAWn/B,UAAO,SAA4BC,GAAK,OAAOs/B,EAAwBt/B,GAAKk/B,IACvFA,EAAWp+B,UAAO,EAAA,GAAyB,CAAEZ,KAAMg/B,EAAYn+B,UAAW,CAAC,CAAC,gBAAiBI,UAAW,CAAC,WAAY,KAAM,EAAG,aAAc,eAAgBqL,SAAU,GAAIC,aAAc,SAAiClQ,EAAIC,GAAgB,EAALD,IAChO,EAAA,GAAmB,QAAS,MAC5B,EAAA,GAAmB,MAAOC,EAAI+iC,gBAAkB/iC,EAAIgjC,YAAc,KAAM,KAAxE,CAA8E,SAAUhjC,EAAI+iC,gBAAkB/iC,EAAIijC,eAAiB,KAAM,MACzI,EAAA,GAAmB,iBAAmC,QAAjBjjC,EAAI2H,SAAzC,CAA6D,kBAAgC,SAAb3H,EAAIi/B,KAApF,CAAqG,kBAAgC,SAAbj/B,EAAIi/B,KAA5H,CAA6I,kBAAgC,SAAbj/B,EAAIi/B,KAApK,CAAqL,oBAAqBj/B,EAAI0B,OAA9M,CAAsN,oBAAqB1B,EAAI+iC,mBAC9Oh/B,OAAQ,CAAEg/B,gBAAiB,kBAAmBC,YAAa,cAAeC,eAAgB,kBAAoBp+B,SAAU,CAAC,cAAeX,SAAU,CAAC,EAAA,IAAoCc,mBAAoBnF,EAAKoF,MAAO,EAAGC,KAAM,EAAGC,OAAQ,CAAC,CAAC,EAAG,+BAAgCtB,SAAU,SAA6B9D,EAAIC,GAAgB,EAALD,IACvU,EAAA,KACA,EAAA,GAAsB,EAAG,MAAO,GAChC,EAAA,GAAoB,GACpB,EAAA,OACCuF,cAAe,EAAGmM,KAAM,CAAE+gB,UAAW,CAAC2J,EAAoBC,kBAAoB72B,gBAAiB,UAMxG,MAAMu9B,EAAwC,EAAA,GAA6B,qBAgCrEI,UAA4B,UAElCA,EAAoB3/B,UAAO,SAAqCC,GAAK,OAAO2/B,EAAiC3/B,GAAK0/B,IAClHA,EAAoB5+B,UAAO,EAAA,GAAyB,CAAEZ,KAAMw/B,EAAqB3+B,UAAW,CAAC,CAAC,0BAA2BC,eAAgB,SAA4CzE,EAAIC,EAAKyE,GAItL,IAAIb,EAJuM,EAAL7D,IACtM,EAAA,GAAsB0E,EAAU,GAAmB,GACnD,EAAA,GAAsBA,EAAU,GAAY,IACrC,EAAL1E,IAEF,EAAA,GAAsB6D,EAAK,EAAA,QAA0B5D,EAAIihC,SAAWr9B,EAAGE,OACvE,EAAA,GAAsBF,EAAK,EAAA,QAA0B5D,EAAIkhC,YAAct9B,KACtEe,UAAW,CAAC,EAAG,uBAAwB,yBAA0BqL,SAAU,EAAGC,aAAc,SAA0ClQ,EAAIC,GAAgB,EAALD,GACtJ,EAAA,GAAmB,yCAA0CC,EAAI+gC,oBAChEl8B,SAAU,CAAC,uBAAwBX,SAAU,CAAC,EAAA,GAA0B,CAAC,CAClEY,QAASw3B,EACTv3B,YAAam+B,KACZ,EAAA,IAAoCl+B,mBAAoB8N,EAAK7N,MAAO,EAAGC,KAAM,EAAGC,OAAQ,CAAC,CAAC,QAAS,sBAAuB,EAAG,mBAAoB,QAAS,EAAG,QAAS,CAAC,gBAAiB,GAAI,EAAG,QAAS,CAAC,EAAG,sBAAuB,EAAG,SAAU,CAAC,gBAAiB,KAAMtB,SAAU,SAAsC9D,EAAIC,GAAgB,EAALD,IAChV,EAAA,GAAuB6S,GACvB,EAAA,GAAkB,EAAGopB,EAAoC,EAAG,EAAG,MAAO,GACtE,EAAA,GAAoB,GACpB,EAAA,GAAoB,EAAG,GACvB,EAAA,GAAkB,EAAGC,EAAoD,EAAG,EAAG,sBAAuB,IAC/F,EAALl8B,IACF,EAAA,GAAkB,OAAQC,EAAIsiC,aAC9B,EAAA,GAAiB,GACjB,EAAA,GAAkB,QAAStiC,EAAIihC,YAC9B77B,WAAY,CAAC,EAAA,EAAa,EAAmB,EAAA,GAAuBC,OAAQ,CAAC62B,GAAM52B,cAAe,EAAGC,gBAAiB,UAS/H,MAAM49B,EAAiD,EAAA,GAA6B,qBAsC9EC,UAENA,EAAiB5yB,UAAO,EAAA,GAAwB,CAAE9M,KAAM0/B,IACxDA,EAAiB3yB,UAAO,EAAA,GAAwB,CAAE5P,QAAS,SAAkC2C,GAAK,OAAO,IAAKA,GAAK4/B,IAAwBzyB,QAAS,CAAC,CACzI,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,GACD,EAAA,EACH,EAAA,iCC1lCR,IAAI0yB,EAAiB,EAAQ,QACzBC,EAAkB,EAAQ,QAC1BC,EAAe,EAAQ,QACvBC,EAAe,EAAQ,QACvBC,EAAe,EAAQ,QAS3B,SAASnyB,EAAUyI,GACjB,IAAInX,GAAS,EACTb,EAAoB,MAAXgY,EAAkB,EAAIA,EAAQhY,OAG3C,IADAnD,KAAKye,UACIza,EAAQb,GAAQ,CACvB,IAAIub,EAAQvD,EAAQnX,GACpBhE,KAAKO,IAAIme,EAAM,GAAIA,EAAM,KAK7BhM,EAAUL,UAAUoM,MAAQgmB,EAC5B/xB,EAAUL,UAAkB,OAAIqyB,EAChChyB,EAAUL,UAAU2G,IAAM2rB,EAC1BjyB,EAAUL,UAAUyB,IAAM8wB,EAC1BlyB,EAAUL,UAAU9R,IAAMskC,EAE1BhlC,EAAOC,QAAU4S,wBCVjB7S,EAAOC,QAZP,SAA2BysB,EAAOrpB,EAAOwxB,GAIvC,IAHA,IAAI1wB,GAAS,EACTb,EAAkB,MAATopB,EAAgB,EAAIA,EAAMppB,SAE9Ba,EAAQb,GACf,GAAIuxB,EAAWxxB,EAAOqpB,EAAMvoB,IAC1B,OAAO,EAGX,OAAO,2BClBT,IAAIirB,EAAc,EAAQ,QAkC1BpvB,EAAOC,QAJP,SAAiBoD,EAAO0tB,GACtB,OAAO3B,EAAY/rB,EAAO0tB,0BC/B5B,IAGI6C,EAHY,EAAQ,OAAR,CAGarhB,OAAQ,UAErCvS,EAAOC,QAAU2zB,sBCLjB5zB,EAAOC,QAAU,SAASD,GAoBzB,OAnBKA,EAAOilC,kBACXjlC,EAAOklC,UAAY,aACnBllC,EAAOmlC,MAAQ,GAEVnlC,EAAOolC,WAAUplC,EAAOolC,SAAW,IACxC7yB,OAAOgkB,eAAev2B,EAAQ,SAAU,CACvCqlC,YAAY,EACZlsB,IAAK,WACJ,OAAOnZ,EAAOslC,KAGhB/yB,OAAOgkB,eAAev2B,EAAQ,KAAM,CACnCqlC,YAAY,EACZlsB,IAAK,WACJ,OAAOnZ,EAAOk7B,KAGhBl7B,EAAOilC,gBAAkB,GAEnBjlC,uBCKRA,EAAOC,QAFOuZ,MAAMC,8BCvBpB,IAAI1Z,EAAe,EAAQ,QAyB3BC,EAAOC,QAbP,SAAsBC,EAAKmD,GACzB,IAAI2P,EAAO7S,KAAKC,SACZ+D,EAAQpE,EAAaiT,EAAM9S,GAQ/B,OANIiE,EAAQ,KACRhE,KAAKiT,KACPJ,EAAKG,KAAK,CAACjT,EAAKmD,KAEhB2P,EAAK7O,GAAO,GAAKd,EAEZlD,4BCtBT,IAAIolC,EAAc,EAAQ,QACtBC,EAAe,EAAQ,QACvBjW,EAA0B,EAAQ,QAmBtCvvB,EAAOC,QAVP,SAAqB6B,GACnB,IAAI2jC,EAAYD,EAAa1jC,GAC7B,OAAwB,GAApB2jC,EAAUniC,QAAemiC,EAAU,GAAG,GACjClW,EAAwBkW,EAAU,GAAG,GAAIA,EAAU,GAAG,IAExD,SAAStkC,GACd,OAAOA,IAAWW,GAAUyjC,EAAYpkC,EAAQW,EAAQ2jC,2BCjB5D,IAAI3mB,EAAW,EAAQ,QACnBhe,EAAQ,EAAQ,QAsBpBd,EAAOC,QAZP,SAAiBkB,EAAQJ,GAMvB,IAHA,IAAIoD,EAAQ,EACRb,GAHJvC,EAAO+d,EAAS/d,EAAMI,IAGJmC,OAED,MAAVnC,GAAkBgD,EAAQb,GAC/BnC,EAASA,EAAOL,EAAMC,EAAKoD,OAE7B,OAAQA,GAASA,GAASb,EAAUnC,OAASoe,yBCpB/C,IAAIxf,EAAe,EAAQ,QAMvBmyB,EAHa1Y,MAAMhH,UAGC0f,OA4BxBlyB,EAAOC,QAjBP,SAAyBC,GACvB,IAAI8S,EAAO7S,KAAKC,SACZ+D,EAAQpE,EAAaiT,EAAM9S,GAE/B,QAAIiE,EAAQ,IAIRA,GADY6O,EAAK1P,OAAS,EAE5B0P,EAAK0yB,MAELxT,EAAOtf,KAAKI,EAAM7O,EAAO,KAEzBhE,KAAKiT,KACA,yBC9BT,IAAIuyB,EAAU,OAed3lC,EAAOC,QANP,SAAqB2lC,GACnB,IAAIrlC,EAAS,IAAIqlC,EAAOplC,YAAYolC,EAAO9jC,OAAQ6jC,EAAQhY,KAAKiY,IAEhE,OADArlC,EAAOslC,UAAYD,EAAOC,UACnBtlC,yBCbT,IAAIulC,EAAY,EAAQ,QACpBnzB,EAAc,EAAQ,QACtB8G,EAAU,EAAQ,QAClBwT,EAAW,EAAQ,QACnBlO,EAAU,EAAQ,QAClBgnB,EAAe,EAAQ,QAMvBtzB,EAHcF,OAAOC,UAGQC,eAqCjCzS,EAAOC,QA3BP,SAAuBoD,EAAO2iC,GAC5B,IAAItO,EAAQje,EAAQpW,GAChB4iC,GAASvO,GAAS/kB,EAAYtP,GAC9B6iC,GAAUxO,IAAUuO,GAAShZ,EAAS5pB,GACtC8iC,GAAUzO,IAAUuO,IAAUC,GAAUH,EAAa1iC,GACrD+iC,EAAc1O,GAASuO,GAASC,GAAUC,EAC1C5lC,EAAS6lC,EAAcN,EAAUziC,EAAMC,OAAQsd,QAAU,GACzDtd,EAAS/C,EAAO+C,OAEpB,IAAK,IAAIpD,KAAOmD,GACT2iC,IAAavzB,EAAeG,KAAKvP,EAAOnD,IACvCkmC,IAEQ,UAAPlmC,GAECgmC,IAAkB,UAAPhmC,GAA0B,UAAPA,IAE9BimC,IAAkB,UAAPjmC,GAA0B,cAAPA,GAA8B,cAAPA,IAEtD6e,EAAQ7e,EAAKoD,KAElB/C,EAAO4S,KAAKjT,GAGhB,OAAOK,sCC5CT,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,KAAA,IAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,6BCCI,EAAA,GAAA,EAAA,WAAA,GDWG,IAAA,EAAA,YAAM8lC,EAKT,YACWtY,EACCuY,GADD,KAAAvY,UAAAA,EACC,KAAAuY,MAAAA,EANL,KAAAC,cAAgB,IAAI,EAAA,EAAYpmC,KAAKmmC,MAAMxtB,SAASZ,YAAY2D,OAE9D,KAAA2qB,UAAW,EAOpB,WACIrmC,KAAKomC,cAAc1T,aACdnpB,KAAK,OAAA,EAAA,EAAA,CAAa,KAAM,OAAA,EAAA,EAAA,IACxBxF,UAAU2X,IACP1b,KAAK4tB,UAAU0Y,UAAU,QAAS5qB,mDAdrCwqB,GAAmC,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,4BAAnCA,EAAmC,UAAA,CAAA,CAAA,kCAAA,OAAA,CAAA,YAAA,cAAA,SAAA,YAAA,MAAA,EAAA,KAAA,EAAA,OAAA,CAAA,CAAA,EAAA,kBAAA,0BAAA,CAAA,OAAA,OAAA,EAAA,eAAA,EAAA,cAAA,eAAA,CAAA,UAAA,SAAA,EAAA,QAAA,CAAA,UAAA,WAAA,SAAA,SAAA,EAAA,GAAA,EAAA,ICbhD,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,QAAA,mBACA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,WAAA,GACJ,EAAA,YAF4C,EAAA,GAAA,GAAA,EAAA,GAAA,cAAA,EAAA,GAAA,EAAA,EAAA,EAAA,aAAA,CAAmC,cAAA,EAAA,eAChD,EAAA,GAAA,GAAA,EAAA,GAAA,QAAA,EAAA,6cDWxB,yBEbP,IAAIK,EAAmB,EAAQ,QAC3BnzB,EAAY,EAAQ,QACpBC,EAAW,EAAQ,QAGnBmzB,EAAmBnzB,GAAYA,EAASuyB,aAmBxCA,EAAeY,EAAmBpzB,EAAUozB,GAAoBD,EAEpE1mC,EAAOC,QAAU8lC,wBC1BjB,IAAI5zB,EAAa,EAAQ,QACrB6M,EAAW,EAAQ,QACnB5M,EAAe,EAAQ,QA8BvBw0B,EAAiB,GACrBA,EAZiB,yBAYYA,EAXZ,yBAYjBA,EAXc,sBAWYA,EAVX,uBAWfA,EAVe,uBAUYA,EATZ,uBAUfA,EATsB,8BASYA,EARlB,wBAShBA,EARgB,yBAQY,EAC5BA,EAjCc,sBAiCYA,EAhCX,kBAiCfA,EApBqB,wBAoBYA,EAhCnB,oBAiCdA,EApBkB,qBAoBYA,EAhChB,iBAiCdA,EAhCe,kBAgCYA,EA/Bb,qBAgCdA,EA/Ba,gBA+BYA,EA9BT,mBA+BhBA,EA9BgB,mBA8BYA,EA7BZ,mBA8BhBA,EA7Ba,gBA6BYA,EA5BT,mBA6BhBA,EA5BiB,qBA4BY,EAc7B5mC,EAAOC,QALP,SAA0BoD,GACxB,OAAO+O,EAAa/O,IAClB2b,EAAS3b,EAAMC,WAAasjC,EAAez0B,EAAW9O,2BCxD1D,IAAImoB,EAAM,EAAQ,QACdqb,EAAO,EAAQ,QACflW,EAAa,EAAQ,QAYrBgE,EAAcnJ,GAAQ,EAAImF,EAAW,IAAInF,EAAI,CAAC,EAAE,KAAK,IAT1C,EAAA,EASoE,SAASzX,GAC1F,OAAO,IAAIyX,EAAIzX,IAD2D8yB,EAI5E7mC,EAAOC,QAAU00B,wBClBjB,IAAI/H,EAAW,EAAQ,QAGnBka,EAAev0B,OAAO1D,OAUtB7N,EAAc,WAChB,SAASG,KACT,OAAO,SAAS4lC,GACd,IAAKna,EAASma,GACZ,MAAO,GAET,GAAID,EACF,OAAOA,EAAaC,GAEtB5lC,EAAOqR,UAAYu0B,EACnB,IAAIxmC,EAAS,IAAIY,EAEjB,OADAA,EAAOqR,eAAY+M,EACZhf,GAZO,GAgBlBP,EAAOC,QAAUe,wBC7BjB,IAAIgmC,EAAe,EAAQ,QA2B3BhnC,EAAOC,QAJP,SAAkBoD,GAChB,OAAgB,MAATA,EAAgB,GAAK2jC,EAAa3jC,0BCxB3C,IAAI4jC,EAAgB,EAAQ,QACxBC,EAAiB,EAAQ,QACzBC,EAAc,EAAQ,QACtBC,EAAc,EAAQ,QACtBC,EAAc,EAAQ,QAS1B,SAASt0B,EAASuI,GAChB,IAAInX,GAAS,EACTb,EAAoB,MAAXgY,EAAkB,EAAIA,EAAQhY,OAG3C,IADAnD,KAAKye,UACIza,EAAQb,GAAQ,CACvB,IAAIub,EAAQvD,EAAQnX,GACpBhE,KAAKO,IAAIme,EAAM,GAAIA,EAAM,KAK7B9L,EAASP,UAAUoM,MAAQqoB,EAC3Bl0B,EAASP,UAAkB,OAAI00B,EAC/Bn0B,EAASP,UAAU2G,IAAMguB,EACzBp0B,EAASP,UAAUyB,IAAMmzB,EACzBr0B,EAASP,UAAU9R,IAAM2mC,EAEzBrnC,EAAOC,QAAU8S,wBC/BjB,IAAIyjB,EAAQ,EAAQ,QAChB/F,EAAc,EAAQ,QACtB6W,EAAa,EAAQ,QACrBC,EAAe,EAAQ,QACvBjX,EAAS,EAAQ,QACjB7W,EAAU,EAAQ,QAClBwT,EAAW,EAAQ,QACnB8Y,EAAe,EAAQ,QAQvByB,EAAY,kBAMZ/0B,EAHcF,OAAOC,UAGQC,eA6DjCzS,EAAOC,QA7CP,SAAyBkB,EAAQ4vB,EAAOC,EAASC,EAAYC,EAAWC,GACtE,IAAIsW,EAAWhuB,EAAQtY,GACnBumC,EAAWjuB,EAAQsX,GACnB4W,EAASF,EA1BA,iBA0BsBnX,EAAOnvB,GACtCymC,EAASF,EA3BA,iBA2BsBpX,EAAOS,GAKtC8W,GAHJF,EA9BY,sBA8BHA,EAAoBH,EAAYG,IAGhBH,EACrBM,GAHJF,EA/BY,sBA+BHA,EAAoBJ,EAAYI,IAGhBJ,EACrBO,EAAYJ,GAAUC,EAE1B,GAAIG,GAAa9a,EAAS9rB,GAAS,CACjC,IAAK8rB,EAAS8D,GACZ,OAAO,EAET0W,GAAW,EACXI,GAAW,EAEb,GAAIE,IAAcF,EAEhB,OADA1W,IAAUA,EAAQ,IAAIqF,GACdiR,GAAY1B,EAAa5kC,GAC7BsvB,EAAYtvB,EAAQ4vB,EAAOC,EAASC,EAAYC,EAAWC,GAC3DmW,EAAWnmC,EAAQ4vB,EAAO4W,EAAQ3W,EAASC,EAAYC,EAAWC,GAExE,KArDyB,EAqDnBH,GAAiC,CACrC,IAAIgX,EAAeH,GAAYp1B,EAAeG,KAAKzR,EAAQ,eACvD8mC,EAAeH,GAAYr1B,EAAeG,KAAKme,EAAO,eAE1D,GAAIiX,GAAgBC,EAAc,CAChC,IAAIC,EAAeF,EAAe7mC,EAAOkC,QAAUlC,EAC/CgnC,EAAeF,EAAelX,EAAM1tB,QAAU0tB,EAGlD,OADAI,IAAUA,EAAQ,IAAIqF,GACftF,EAAUgX,EAAcC,EAAcnX,EAASC,EAAYE,IAGtE,QAAK4W,IAGL5W,IAAUA,EAAQ,IAAIqF,GACf+Q,EAAapmC,EAAQ4vB,EAAOC,EAASC,EAAYC,EAAWC,uJC/D9D,IAAA,EAAA,YAAMiX,EAIT,YACWra,EACCE,GADD,KAAAF,UAAAA,EACC,KAAAE,GAAAA,EAGZ,WACI9tB,KAAKszB,UAAYtzB,KAAK4tB,UAAUnT,cAAc1W,UAAUb,IACpDlD,KAAK8tB,GAAGvpB,iBAIhB,cACIvE,KAAKszB,UAAUlvB,cAGZ,cAAc9C,GACjB,OAAOtB,KAAK4tB,UAAUnT,cAAcvX,MAAMgZ,QAAQ5a,IAAO,EAGtD,UAAUA,GACb,GAAItB,KAAKkoC,cAAc5mC,GAAK,CACxB,MAAMirB,EAAQvsB,KAAK4tB,UAAUnT,cAAcvX,MAAMsc,QAC3Cub,EAAI/6B,KAAK4tB,UAAUnT,cAAcvX,MAAMgZ,QAAQ5a,GACrDirB,EAAMwF,OAAOgJ,EAAG,GAChB/6B,KAAK4tB,UAAUnT,cAAc3L,KAAKyd,QAElCvsB,KAAK4tB,UAAUnT,cAAc3L,KACzB,IAAI9O,KAAK4tB,UAAUnT,cAAcvX,MAAO5B,kDA/B3C2mC,GAA0B,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,4BAA1BA,EAA0B,UAAA,CAAA,CAAA,GAAA,sBAAA,KAAA,UAAA,CAAA,EAAA,kBAAA,OAAA,CAAA,MAAA,CAAA,sBAAA,UAAA,MAAA,EAAA,MAAA,EAAA,KAAA,EAAA,OAAA,CAAA,CAAA,EAAA,UAAA,QAAA,WAAA,SAAA,SAAA,EAAA,GAAA,EAAA,IAR/B,EAAA,GAAA,EAAA,eAAA,GAAc,EAAA,GAAA,SAAA,SAAA,GAAA,OAAS12B,EAAOxC,oBAAhB,CAAkC,UAAA,SAAA,GAAA,OAAA,EACf,EAAAo5B,UAAA,EAAA,OAAmB,QAEpD,EAAA,WADc,EAAA,GAAA,UAAA,EAAA,cAAA,EAAA,iEAMf,uBCIPtoC,EAAOC,QAXP,SAAkBysB,EAAOkI,GAKvB,IAJA,IAAIzwB,GAAS,EACTb,EAAkB,MAATopB,EAAgB,EAAIA,EAAMppB,OACnC/C,EAASiZ,MAAMlW,KAEVa,EAAQb,GACf/C,EAAO4D,GAASywB,EAASlI,EAAMvoB,GAAQA,EAAOuoB,GAEhD,OAAOnsB,yBCjBT,IAIIuS,EAJY,EAAQ,OAAR,CACL,EAAQ,QAGO,OAE1B9S,EAAOC,QAAU6S,wBCNjB,IAAI8gB,EAAe,EAAQ,QAMvBnhB,EAHcF,OAAOC,UAGQC,eAgBjCzS,EAAOC,QALP,SAAiBC,GACf,IAAI8S,EAAO7S,KAAKC,SAChB,OAAOwzB,OAA8BrU,IAAdvM,EAAK9S,GAAsBuS,EAAeG,KAAKI,EAAM9S,0BCnB9E,IAAIye,EAAO,EAAQ,QACf9L,EAAY,EAAQ,QACpBC,EAAM,EAAQ,QAkBlB9S,EAAOC,QATP,WACEE,KAAKiT,KAAO,EACZjT,KAAKC,SAAW,CACd,KAAQ,IAAIue,EACZ,IAAO,IAAK7L,GAAOD,GACnB,OAAU,IAAI8L,4BChBlB,IAAI4pB,EAAY,EAAQ,QACpB9uB,EAAU,EAAQ,QAkBtBzZ,EAAOC,QALP,SAAwBkB,EAAQqnC,EAAUC,GACxC,IAAIloC,EAASioC,EAASrnC,GACtB,OAAOsY,EAAQtY,GAAUZ,EAASgoC,EAAUhoC,EAAQkoC,EAAYtnC,2BChBlE,IAAI0R,EAAY,EAAQ,QACpB61B,EAAa,EAAQ,QACrBC,EAAc,EAAQ,QACtBC,EAAW,EAAQ,QACnBC,EAAW,EAAQ,QACnBC,EAAW,EAAQ,QASvB,SAAStS,EAAMlb,GACb,IAAItI,EAAO7S,KAAKC,SAAW,IAAIyS,EAAUyI,GACzCnb,KAAKiT,KAAOJ,EAAKI,KAInBojB,EAAMhkB,UAAUoM,MAAQ8pB,EACxBlS,EAAMhkB,UAAkB,OAAIm2B,EAC5BnS,EAAMhkB,UAAU2G,IAAMyvB,EACtBpS,EAAMhkB,UAAUyB,IAAM40B,EACtBrS,EAAMhkB,UAAU9R,IAAMooC,EAEtB9oC,EAAOC,QAAUu2B,sBCRjBx2B,EAAOC,QALP,SAAqBoD,GAEnB,OADAlD,KAAKC,SAASM,IAAI2C,EAbC,6BAcZlD,0BCFTH,EAAOC,QAJP,SAAkBC,GAChB,OAAOC,KAAKC,SAAS+Y,IAAIjZ,wBCW3BF,EAAOC,QAZP,SAAmBysB,EAAOkI,GAIxB,IAHA,IAAIzwB,GAAS,EACTb,EAAkB,MAATopB,EAAgB,EAAIA,EAAMppB,SAE9Ba,EAAQb,IAC8B,IAAzCsxB,EAASlI,EAAMvoB,GAAQA,EAAOuoB,KAIpC,OAAOA,8GCjBF,MAAMqc,EAAwB,CACjCC,SAAS,EACTC,UAAU,GCAP,SAASC,EAAaC,EAAUC,EAAY,EAAA,EAAOruB,EAASguB,GAC/D,OAAQjnC,GAAWA,EAAO86B,KAAK,IAAIyM,EAAqBF,EAAUC,EAAWruB,EAAOiuB,QAASjuB,EAAOkuB,WAExG,MAAMI,EACF,YAAYF,EAAUC,EAAWJ,EAASC,GACtC9oC,KAAKgpC,SAAWA,EAChBhpC,KAAKipC,UAAYA,EACjBjpC,KAAK6oC,QAAUA,EACf7oC,KAAK8oC,SAAWA,EAEpB,KAAKnM,EAAYh7B,GACb,OAAOA,EAAOoC,UAAU,IAAI,EAAuB44B,EAAY38B,KAAKgpC,SAAUhpC,KAAKipC,UAAWjpC,KAAK6oC,QAAS7oC,KAAK8oC,YAGzH,MAAM,UAA+BlM,EAAA,EACjC,YAAYC,EAAamM,EAAUC,EAAWJ,EAASC,GACnDvmC,MAAMs6B,GACN78B,KAAKgpC,SAAWA,EAChBhpC,KAAKipC,UAAYA,EACjBjpC,KAAK6oC,QAAUA,EACf7oC,KAAK8oC,SAAWA,EAChB9oC,KAAKmpC,mBAAoB,EACzBnpC,KAAKopC,eAAiB,KAE1B,MAAMlmC,GACElD,KAAKqpC,UACDrpC,KAAK8oC,WACL9oC,KAAKopC,eAAiBlmC,EACtBlD,KAAKmpC,mBAAoB,IAI7BnpC,KAAK6T,IAAI7T,KAAKqpC,UAAYrpC,KAAKipC,UAAUK,SAASC,EAAcvpC,KAAKgpC,SAAU,CAAErM,WAAY38B,QACzFA,KAAK6oC,QACL7oC,KAAK68B,YAAY/tB,KAAK5L,GAEjBlD,KAAK8oC,WACV9oC,KAAKopC,eAAiBlmC,EACtBlD,KAAKmpC,mBAAoB,IAIrC,YACQnpC,KAAKmpC,mBACLnpC,KAAK68B,YAAY/tB,KAAK9O,KAAKopC,gBAC3BppC,KAAK68B,YAAYzyB,YAGjBpK,KAAK68B,YAAYzyB,WAGzB,gBACI,MAAMi/B,EAAYrpC,KAAKqpC,UACnBA,IACIrpC,KAAK8oC,UAAY9oC,KAAKmpC,oBACtBnpC,KAAK68B,YAAY/tB,KAAK9O,KAAKopC,gBAC3BppC,KAAKopC,eAAiB,KACtBppC,KAAKmpC,mBAAoB,GAE7BE,EAAUjlC,cACVpE,KAAK+jB,OAAOslB,GACZrpC,KAAKqpC,UAAY,OAI7B,SAASE,EAAaC,GAClB,MAAM,WAAE7M,GAAe6M,EACvB7M,EAAW8M,0ICxDR,MAAM,EA8BT,YAAYvpB,EAAoBwpB,GA5BhC,KAAAC,UAA8B,IAAI7K,EAAA,EAClC,KAAA8K,YAAc,IAAI1yB,EAAA,GAAyB,GAM3C,KAAA2yB,kBAAoB,IAAIC,EAAA,EAAkC,GAM1D,KAAAC,UAAY,IAAI7yB,EAAA,EAAyC,CAAC8yB,WAAY,IAEtE,KAAAC,OAAS,IAAI/yB,EAAA,EAAwB,MAG9B,KAAAgzB,WAAqB,GAWxBlqC,KAAKmqC,aAAejqB,EACpBlgB,KAAKsB,GAAKooC,GAAW,OAAA,EAAA,EAAA,GAVzB,gBACI,OAAQ1pC,KAAK4pC,YAAY1mC,OAA6C,MAApClD,KAAK+pC,UAAU7mC,MAAM8mC,WAG3D,iBACI,OAAQhqC,KAAKiqC,OAAO/mC,QAAUlD,KAAKoqC,UAQhC,SAEHpqC,KAAK2pC,UAAU76B,MAAK,GACpB9O,KAAKqqC,WAGF,WACHrqC,KAAKsqC,YAAY,CAACN,WAAY,IAAKO,IAAK,OACxCvqC,KAAKqqC,WAGF,WACHrqC,KAAK6pC,kBAAkBz/B,WACvBpK,KAAK2pC,UAAUv/B,WACfpK,KAAK+pC,UAAU3/B,WAGZ,mBACHpK,KAAK4pC,YAAY96B,MAAK,GACtB9O,KAAK4pC,YAAYx/B,WAGd,SAAS8mB,GACZlxB,KAAKiqC,OAAOn7B,KAAKoiB,GAGd,YAAYre,GACf7S,KAAK+pC,UAAUj7B,KAAK,OAAD,OAAA,OAAA,OAAA,GACZ9O,KAAK+pC,UAAU7mC,OACf2P,qNCpER,IAAA,EAAA,YAAM23B,UAA+B,EAAA,EAH5C,kCAIuB,KAAAC,yBAA2B,EACvC,KAAAC,WAAY,EAET,kBACN1qC,KAAK2qC,YAAY33B,KACb,IAAI,EAAA,EACA,CAAC43B,QAAS5qC,KAAK6qC,kBACf7qC,KAAK+f,OAIb,MAAM+qB,EAAoB9qC,KAAK+qC,uBAC3BC,EAAoBhrC,KAAKirC,uBAEzBH,GAAqBA,EAAkB3nC,QACvCnD,KAAK2qC,YAAY33B,KAAK,IAAI,EAAA,EACtB,CAACiN,WAAY6qB,GAAoB9qC,KAAK+f,OAI1CirB,GAAqBA,EAAkB7nC,QACvCnD,KAAK2qC,YAAY33B,KAAK,IAAI,EAAA,EACtB,CAACiN,WAAY+qB,GAAoBhrC,KAAK+f,OAKxC,iBACN,OAAO/f,KAAKkrC,SAASlyB,IACjB,mBACA,OAAAmyB,EAAA,EAAA,CAAenrC,KAAKyqC,yBAA0B,OAI5C,uBACN,OAAOzqC,KAAKkrC,SAASE,QAAQ,8BAGvB,uBACN,OAAOprC,KAAKkrC,SAASE,QAAQ,0EAxCxBZ,6BAAAA,EAAsB,QAAtBA,EAAsB,UAAA,WAFnB,YAET,gBAAM,2CCWN,IAAA,EAAA,YAAMa,EAMT,YACYC,EACAC,EACAvR,EACAH,EACAqR,GAJA,KAAAI,IAAAA,EACA,KAAAC,iBAAAA,EACA,KAAAvR,MAAAA,EACA,KAAAH,YAAAA,EACA,KAAAqR,SAAAA,EAVL,KAAAM,SAAW,IAAIt0B,EAAA,EAAmC,IAClD,KAAAu0B,eAAiB,IAAI3B,EAAA,EAAsB,GAC3C,KAAA4B,cAAgB,IAAI5M,EAAA,EACpB,KAAA6M,OAAS,IAAIz0B,EAAA,EAAsD,CAAC00B,QAAS,EAAGxB,UAAW,IAU3F,UACH,OAAQpqC,KAAKwrC,SAAStoC,MAAMC,OAGzB,kBACH,OAAOnD,KAAKwrC,SAAStoC,MAChByY,OAAOkwB,GAAaA,EAAUzB,WAC9BhhC,IAAIyiC,GAAaA,EAAUC,WAG7B,sBACH,MAAMC,EAAW/rC,KAAKwrC,SAAStoC,MAAMkG,IAAI4iC,GAAUA,EAAOjC,UAAU7mC,MAAM8mC,YAAc,GACxFhqC,KAAKyrC,eAAe38B,KAAKi9B,EAAS1oC,OAAO,CAACo3B,EAAGwR,IAAMxR,EAAIwR,EAAG,GAAKF,EAAS5oC,QAGrE,gBACH,OAAOnD,KAAKyrC,eAAeS,eAGxB,MAAM9e,EAAqDxS,EAA0B,IACxF,MAAMuxB,EAAYvxB,EAAOuxB,WAAansC,KAAKurC,iBAC3C,IAAIa,EAAmB,GAGvB,GAAI/yB,MAAMC,QAAQ8T,GACdgf,EAAmBpsC,KAAKqsC,iBAAiBjf,EAAO+e,GAChDnsC,KAAKwrC,SAAS18B,KAAK9O,KAAKwrC,SAAStoC,MAAMopC,OAAOF,IAC9CpsC,KAAK0rC,cAAc58B,KAAKs9B,OAGrB,CACH,MAAMjvB,EAAend,KAAKwrC,SAAStoC,MAAMkG,IAAIyiC,IACzC,GAAIze,EAAMye,EAAUvqC,IAAK,CACrB,MAAMirC,EAAcvsC,KAAKqsC,iBAAiB,CAACjf,EAAMye,EAAUvqC,KAAM6qC,EAAWN,EAAUvqC,IAAI,GAE1F,OADA8qC,EAAiBp5B,KAAKu5B,GACfA,EAEP,OAAOV,IAGf7rC,KAAKwrC,SAAS18B,KAAKqO,GAKvB,OAFAnd,KAAKwsC,cAEE,OAAAC,EAAA,EAAA,CAAKL,EAAiBzwB,OAAO+wB,IAAMA,EAAEzC,OAAO/mC,QAC9CqG,KACG,OAAAojC,EAAA,EAAA,CAASC,GACE5sC,KAAKsrC,IAAIU,OAAOY,EAAgBzC,aAAcvvB,GAAQrR,KACzD,OAAAsjC,EAAA,EAAA,CAAYC,IACR9sC,KAAK+sC,oBAAoBD,EAAaF,EAAiBT,GAGhDvxB,EAAOoyB,YAAc,OAAAC,EAAA,EAAA,CAAWH,GAAe,EAAA,IAE1D,OAAA9M,EAAA,EAAA,CAAU4M,EAAgBjD,WAC1B,OAAAvgC,EAAA,EAAA,CAAIgQ,IACApZ,KAAKktC,kBAAkB9zB,EAAUwzB,EAAiBhyB,EAAOuyB,kBAGrD/zB,EAASjE,OAAS,EAAA,EAAiBi4B,YACnCh0B,EAASi0B,KAAKC,YAAcV,EAAgBtrC,IAEzC8X,KAGhB,GACH,OAAAuC,EAAA,EAAA,CAAO8B,GAAKA,EAAEtI,OAAS,EAAA,EAAiBi4B,WACxC,OAAAhkC,EAAA,EAAA,CAAKqU,GAA4BA,EAAE4vB,OAIxC,eAAe/rC,EAAYmc,GAC9B,MAAMouB,EAAY7rC,KAAK2oB,KAAKrnB,GACrBuqC,IAEPA,EAAUvB,YAAY,CAClBC,IAAK9sB,EAAE8sB,IACPgD,MAAO9vB,EAAE8vB,MACTvD,WAAYvsB,EAAEsuB,SACdyB,WAAY/vB,EAAE+vB,WACdC,eAAgBhwB,EAAEgwB,iBAGtBztC,KAAK0tC,uBAGF,eAAepsC,EAAY8X,GAC9B,MAAMyyB,EAAY7rC,KAAK2oB,KAAKrnB,GACrBuqC,IAEPA,EAAUhC,kBAAkB/6B,KAAKsK,GACjCyyB,EAAUC,UAAY1yB,EAAS0yB,UAC/BD,EAAUzhC,WACVpK,KAAK0tC,uBAGF,YAAYpsC,EAAY4vB,GAC3BlxB,KAAK2oB,KAAKrnB,GAAIqsC,SAASzc,GAGpB,QACHlxB,KAAKwrC,SAAStoC,MAAM8K,QAAQ0+B,GAAKA,EAAEkB,UACnC5tC,KAAKwrC,SAAS18B,KAAK,IAGhB,OAAOxN,GACV,MAAMy5B,EAAI/6B,KAAKwrC,SAAStoC,MAAMsvB,UAAUka,GAAKA,EAAEprC,KAAOA,GAClD0qC,EAAShsC,KAAKwrC,SAAStoC,MAAM63B,GACjCiR,EAAO5B,UAAY4B,EAAO3B,WAAa2B,EAAO4B,SAC9C5tC,KAAKwrC,SAAStoC,MAAM6uB,OAAOgJ,EAAG,GAC9B/6B,KAAKwrC,SAAS18B,KAAK9O,KAAKwrC,SAAStoC,OAG9B,KAAK5B,GACR,OAAOtB,KAAKwrC,SAAStoC,MAAMylB,KAAK+jB,GAAKA,EAAEprC,KAAOA,GAMxC,iBAAiB8rB,EAAuB+e,EAA4BzC,GAC1E,OAAOtc,EAAMhkB,IAAI8W,IACb,MAAM2tB,EAAe,IAAI,EAAgB3tB,EAAMwpB,GAG/C,GAAIyC,EAAW,CACX,MAAM/rC,EAAS+rC,EAAU2B,SAAS5tB,GAC9B9f,EAAO2tC,QAAQF,EAAaF,SAASvtC,EAAO4f,cAGpD,OAAO6tB,IAIL,kBAAkBrpC,EAAoBwnC,EAAyBmB,GAAmB,GACpF3oC,EAAM2Q,OAAS,EAAA,EAAiB64B,UAKT,MAAnBxpC,EAAMunC,WAENvnC,EAAQ,OAAH,OAAA,OAAA,OAAA,GAAOA,GAAK,CAAEunC,SAAU,KACzBoB,GACAnB,EAAOpC,YAAY96B,MAAK,IAGhC9O,KAAKiuC,eAAejC,EAAO1qC,GAAIkD,IACxBA,EAAM2Q,OAAS,EAAA,EAAiBi4B,YACvCptC,KAAKkuC,eAAelC,EAAO1qC,GAAIkD,EAAM6oC,MACrCrtC,KAAKwsC,eAIH,oBAAoBpzB,EAAgC4yB,EAAyBG,SACnF,IAAIgC,EAAsB,QAAnB,EAAG/0B,MAAAA,OAAQ,EAARA,EAAUg1B,cAAM,IAAA,OAAA,EAAA,EAAEluB,KACxBmuB,EAAsB,KACnBF,IACHA,EAAM,EAAA,EAAWG,cACjBD,EAAsBruC,KAAK65B,YAAY0U,YAAcvuC,KAAKkrC,SAASlyB,IAAI,2BAG3EhZ,KAAKwuC,YAAYxC,EAAO1qC,GAAI6sC,GAC5BnuC,KAAKwsC,cACLxsC,KAAK0tC,sBAEDvB,EAAUzB,WACV1qC,KAAKg6B,MAAMjd,KAAKoxB,EAAK,CAACrS,OAAQuS,EAAsB,aAAe,OAC9DI,WACA1qC,UAAU,KACP0F,OAAOsT,KAAK,EAAA,KAKpB,cACJ,MAAM6uB,EAAU5rC,KAAKwrC,SAAStoC,MAAMyY,OAAO+wB,GAAKA,EAAEgC,YAAYvrC,OAC9DnD,KAAK2rC,OAAO78B,KAAK,CAAC88B,QAAAA,EAASxB,UAAWpqC,KAAKwrC,SAAStoC,MAAMC,OAASyoC,kDAhM9DP,GAAkB,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,8BAAlBA,EAAkB,QAAlBA,EAAkB,UAAA,WAFf,YAET,yBCrBP,IAAIsD,EAAY,EAAQ,QACpBC,EAAU,EAAQ,QAgCtB/uC,EAAOC,QAJP,SAAekB,EAAQJ,GACrB,OAAiB,MAAVI,GAAkB4tC,EAAQ5tC,EAAQJ,EAAM+tC,0BC9BjD,IAAIvY,EAAiB,EAAQ,QAwB7Bv2B,EAAOC,QAbP,SAAyBkB,EAAQjB,EAAKmD,GACzB,aAAPnD,GAAsBq2B,EACxBA,EAAep1B,EAAQjB,EAAK,CAC1B,cAAgB,EAChB,YAAc,EACd,MAASmD,EACT,UAAY,IAGdlC,EAAOjB,GAAOmD,sCClBlB,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,KAAO,MAAM2rC,EAA4C,CACrDC,MAAO,mBACPzB,KAAO,sDACP0B,GAAO,kCCLX,IAAIC,EAAc,EAAQ,QAgB1BnvC,EAAOC,QALP,SAAuBysB,EAAOrpB,GAE5B,QADsB,MAATqpB,IAAoBA,EAAMppB,SACpB6rC,EAAYziB,EAAOrpB,EAAO,IAAM,yBCbrD,IAAIqzB,EAAc,EAAQ,QACtBnB,EAAkB,EAAQ,QAsC9Bv1B,EAAOC,QA1BP,SAAoB6B,EAAQ+1B,EAAO12B,EAAQ8vB,GACzC,IAAIme,GAASjuC,EACbA,IAAWA,EAAS,IAKpB,IAHA,IAAIgD,GAAS,EACTb,EAASu0B,EAAMv0B,SAEVa,EAAQb,GAAQ,CACvB,IAAIpD,EAAM23B,EAAM1zB,GAEZkrC,EAAWpe,EACXA,EAAW9vB,EAAOjB,GAAM4B,EAAO5B,GAAMA,EAAKiB,EAAQW,QAClDyd,OAEaA,IAAb8vB,IACFA,EAAWvtC,EAAO5B,IAEhBkvC,EACF7Z,EAAgBp0B,EAAQjB,EAAKmvC,GAE7B3Y,EAAYv1B,EAAQjB,EAAKmvC,GAG7B,OAAOluC,2BCpCT,IAAIovB,EAAa,EAAQ,QAiBzBvwB,EAAOC,QANP,SAAwBC,GACtB,IAAIK,EAASgwB,EAAWpwB,KAAMD,GAAa,OAAEA,GAE7C,OADAC,KAAKiT,MAAQ7S,EAAS,EAAI,EACnBA,uBCATP,EAAOC,QANP,SAAiB0d,EAAM2xB,GACrB,OAAO,SAAS3F,GACd,OAAOhsB,EAAK2xB,EAAU3F,yCCV1B,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,KAAA,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,KAAA,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,KAAA,IAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,0BAyMM4F,UAENA,EAAoBzqC,UAAO,SAAqCC,GAAK,OAAO,IAAKA,GAAKwqC,IACtFA,EAAoBvqC,UAAO,EAAA,GAAyB,CAAEC,KAAMsqC,UAqM5D,MAWMC,EAAiB,IAAI,EAAA,EAAe,kCA8kBpCC,UAENA,EAAmB19B,UAAO,EAAA,GAAwB,CAAE9M,KAAMwqC,IAC1DA,EAAmBz9B,UAAO,EAAA,GAAwB,CAAE5P,QAAS,SAAoC2C,GAAK,OAAO,IAAKA,GAAK0qC,IAA0Bv9B,QAAS,CAAC,CAC/I,EAAA,EACA,EAAA,EACA,EAAA,GACD,EAAA,iCCj/BX,IAAIC,EAAa,EAAQ,QACrBya,EAAW,EAAQ,QAmCvB5sB,EAAOC,QAVP,SAAoBoD,GAClB,IAAKupB,EAASvpB,GACZ,OAAO,EAIT,IAAIipB,EAAMna,EAAW9O,GACrB,MA5BY,qBA4BLipB,GA3BI,8BA2BcA,GA7BZ,0BA6B6BA,GA1B7B,kBA0BgDA,uBCG/DtsB,EAAOC,QAJP,SAAYoD,EAAO0tB,GACjB,OAAO1tB,IAAU0tB,GAAU1tB,GAAUA,GAAS0tB,GAAUA,2BCjC1D,IAAIyF,EAAQ,EAAQ,QAChBpH,EAAc,EAAQ,QA4D1BpvB,EAAOC,QA5CP,SAAqBkB,EAAQW,EAAQ2jC,EAAWxU,GAC9C,IAAI9sB,EAAQshC,EAAUniC,OAClBA,EAASa,EACTurC,GAAgBze,EAEpB,GAAc,MAAV9vB,EACF,OAAQmC,EAGV,IADAnC,EAASoR,OAAOpR,GACTgD,KAAS,CACd,IAAI6O,EAAOyyB,EAAUthC,GACrB,GAAKurC,GAAgB18B,EAAK,GAClBA,EAAK,KAAO7R,EAAO6R,EAAK,MACtBA,EAAK,KAAM7R,GAEnB,OAAO,EAGX,OAASgD,EAAQb,GAAQ,CAEvB,IAAIpD,GADJ8S,EAAOyyB,EAAUthC,IACF,GACXsrB,EAAWtuB,EAAOjB,GAClBsvB,EAAWxc,EAAK,GAEpB,GAAI08B,GAAgB18B,EAAK,GAAA,CACvB,QAAiBuM,IAAbkQ,KAA4BvvB,KAAOiB,GACrC,OAAO,MAEJ,CACL,IAAIgwB,EAAQ,IAAIqF,EAChB,GAAIvF,EACF,IAAI1wB,EAAS0wB,EAAWxB,EAAUD,EAAUtvB,EAAKiB,EAAQW,EAAQqvB,GAEnE,UAAiB5R,IAAXhf,EACE6uB,EAAYI,EAAUC,EAAUC,EAA+CuB,EAAYE,GAC3F5wB,GAEN,OAAO,GAIb,OAAO,sCCzDT,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,KAAA,IAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAcO,IAAA,EAAA,YAAMovC,iCAAAA,wDAAAA,IAAc,QAAA,CAPd,CACL,EAAA,SAMD,yBCfP,IAAI5uB,EAAgB,EAAQ,QACxB6uB,EAAa,EAAQ,QACrB3uB,EAAc,EAAQ,QA6B1BjhB,EAAOC,QAJP,SAAgBkB,GACd,OAAO8f,EAAY9f,GAAU4f,EAAc5f,GAAQ,GAAQyuC,EAAWzuC,oCC5BxE,GAAA,IAAA,EAAiB,EAAQ,QAGrBge,EAA4Clf,IAAYA,EAAQmf,UAAYnf,EAG5Eof,EAAaF,GAAgC,iBAAVnf,GAAsBA,IAAWA,EAAOof,UAAYpf,EAMvF6vC,EAHgBxwB,GAAcA,EAAWpf,UAAYkf,GAGtBkV,EAAWyb,QAG1Ct8B,EAAY,WACd,IAIE,OAFY6L,GAAcA,EAAW0wB,SAAW1wB,EAAW0wB,QAAQ,QAAQC,OAOpEH,GAAeA,EAAYI,SAAWJ,EAAYI,QAAQ,QACjE,MAAOryB,KAXK,GAchB5d,EAAOC,QAAUuT,kDC7BjB,IAAIqK,EAAU,EAAQ,QAgCtB7d,EAAOC,QALP,SAAakB,EAAQJ,EAAMmvC,GACzB,IAAI3vC,EAAmB,MAAVY,OAAiBoe,EAAY1B,EAAQ1c,EAAQJ,GAC1D,YAAkBwe,IAAXhf,EAAuB2vC,EAAe3vC,yBC7B/C,IAAIwW,EAAO,EAAQ,QAKnB/W,EAAOC,QAFM8W,EAAKkV,+BCHlB,IAAIsc,EAAY,EAAQ,QACpBtnC,EAAe,EAAQ,QACvB24B,EAAa,EAAQ,QACrBnE,EAAY,EAAQ,QAqBxBz1B,EAAOC,QAlBgBsS,OAAOojB,sBASqB,SAASx0B,GAE1D,IADA,IAAIZ,EAAS,GACNY,GACLonC,EAAUhoC,EAAQq5B,EAAWz4B,IAC7BA,EAASF,EAAaE,GAExB,OAAOZ,GAN8Bk1B,wBCfvC,IAAI3hB,EAAW,EAAQ,QACnBq8B,EAAY,EAAQ,QACpBzb,EAAW,EAAQ,QAiFvB10B,EAAOC,QA9DP,SAAqBysB,EAAOqE,EAAOC,EAASC,EAAYC,EAAWC,GACjE,IAAIif,EAjBqB,EAiBTpf,EACZqf,EAAY3jB,EAAMppB,OAClBgtC,EAAYvf,EAAMztB,OAEtB,GAAI+sC,GAAaC,KAAeF,GAAaE,EAAYD,GACvD,OAAO,EAGT,IAAIE,EAAapf,EAAMhY,IAAIuT,GACvB8jB,EAAarf,EAAMhY,IAAI4X,GAC3B,GAAIwf,GAAcC,EAChB,OAAOD,GAAcxf,GAASyf,GAAc9jB,EAE9C,IAAIvoB,GAAS,EACT5D,GAAS,EACTy0B,EA/BuB,EA+BfhE,EAAoC,IAAIld,OAAWyL,EAM/D,IAJA4R,EAAMzwB,IAAIgsB,EAAOqE,GACjBI,EAAMzwB,IAAIqwB,EAAOrE,KAGRvoB,EAAQksC,GAAW,CAC1B,IAAII,EAAW/jB,EAAMvoB,GACjBusC,EAAW3f,EAAM5sB,GAErB,GAAI8sB,EACF,IAAI0f,EAAWP,EACXnf,EAAWyf,EAAUD,EAAUtsC,EAAO4sB,EAAOrE,EAAOyE,GACpDF,EAAWwf,EAAUC,EAAUvsC,EAAOuoB,EAAOqE,EAAOI,GAE1D,QAAiB5R,IAAboxB,EAAwB,CAC1B,GAAIA,EACF,SAEFpwC,GAAS,EACT,MAGF,GAAIy0B,EAAAA,CACF,IAAKmb,EAAUpf,GAAAA,SAAgB2f,EAAUE,GACnC,IAAKlc,EAASM,EAAM4b,KACfH,IAAaC,GAAYxf,EAAUuf,EAAUC,EAAU1f,EAASC,EAAYE,IAC/E,OAAO6D,EAAK7hB,KAAKy9B,MAEjB,CACNrwC,GAAS,EACT,YAEG,GACDkwC,IAAaC,IACXxf,EAAUuf,EAAUC,EAAU1f,EAASC,EAAYE,GACpD,CACL5wB,GAAS,EACT,OAKJ,OAFA4wB,EAAc,OAAEzE,GAChByE,EAAc,OAAEJ,GACTxwB,2BChFT,IAAI0rB,EAAS,EAAQ,QAGjB2E,EAAc3E,EAASA,EAAOzZ,eAAY+M,EAC1CsR,EAAgBD,EAAcA,EAAYE,aAAUvR,EAaxDvf,EAAOC,QAJP,SAAqB21B,GACnB,OAAO/E,EAAgBte,OAAOse,EAAcje,KAAKgjB,IAAW,0BCd9D,IAAIrF,EAAa,EAAQ,QAezBvwB,EAAOC,QAJP,SAAqBC,GACnB,OAAOqwB,EAAWpwB,KAAMD,GAAK+T,IAAI/T,0BCZnC,IAAI2wC,EAAe,EAAQ,QACvBC,EAAW,EAAQ,QA6BvB9wC,EAAOC,QAJP,SAAgBysB,EAAOkI,GACrB,OAAQlI,GAASA,EAAMppB,OAAUwtC,EAASpkB,EAAOmkB,EAAajc,EAAU,IAAM,0BC3BhF,IAAIzF,EAAiB,EAAQ,QACzByK,EAAa,EAAQ,QACrBre,EAAO,EAAQ,QAanBvb,EAAOC,QAJP,SAAoBkB,GAClB,OAAOguB,EAAehuB,EAAQoa,EAAMqe,wBCKtC55B,EAAOC,QAVP,SAAoBS,GAClB,IAAIyD,GAAS,EACT5D,EAASiZ,MAAM9Y,EAAI0S,MAKvB,OAHA1S,EAAIyN,SAAAA,SAAiB9K,GACnB9C,IAAS4D,GAASd,KAEb9C,sCCZT,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,KAAA,IAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QASO,IAAA,EAAA,YAAMwwC,EAKT,YACY1jB,EACD2jB,EACC/iB,GAFA,KAAAZ,GAAAA,EACD,KAAA2jB,YAAAA,EACC,KAAA/iB,GAAAA,EAPiB,KAAAgjB,QAAS,EASlC9wC,KAAKgY,aAAehY,KAAK6wC,YAAYE,gBAEhCxnC,KAAK,OAAA,EAAA,EAAA,CAAa,IAAK,EAAA,EAAyB,CAACs/B,SAAS,EAAMC,UAAU,KAC1E/kC,UAAUgoC,IACP/rC,KAAK+rC,SAAWA,EAChB/rC,KAAK8wC,OAAsB,MAAb/E,GAA8D,IAA1C/rC,KAAK6wC,YAAYlF,OAAOzoC,MAAM0oC,QAChE5rC,KAAK8tB,GAAGvpB,iBAIpB,cACIvE,KAAKgY,aAAa5T,4DArBbwsC,GAA0B,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,4BAA1BA,EAA0B,UAAA,CAAA,CAAA,wBAAA,SAAA,EAAA,aAAA,SAAA,EAAA,GAAA,EAAA,kICXvC,EAAA,GAAA,EAAA,mBAAA,QAAqC,EAAA,GAAA,QAAA,EAAA,8FDW9B,sCEVP,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,KAAA,IAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,iCCDA,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,MAAA,GAAmC,EAAA,GAAA,EAAA,kBAAc,EAAA,KACjD,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,SAAA,GACI,EAAA,GAAA,EAAA,SAAA,IAAuB,EAAA,GAAA,EAAA,MAAE,EAAA,KACzB,EAAA,GAAA,EAAA,SAAA,IAAuB,EAAA,GAAA,EAAA,MAAE,EAAA,KACzB,EAAA,GAAA,EAAA,SAAA,IAAuB,EAAA,GAAA,GAAA,MAAE,EAAA,KACzB,EAAA,GAAA,GAAA,SAAA,IAAuB,EAAA,GAAA,GAAA,MAAE,EAAA,KACzB,EAAA,GAAA,GAAA,SAAA,IAAwB,EAAA,GAAA,GAAA,OAAG,EAAA,KAC/B,EAAA,KACJ,EAAA,KACJ,EAAA,0BARwC,EAAA,GAAA,GAAA,EAAA,GAAA,cAAA,EAAA,gBACpB,EAAA,GAAA,GAAA,EAAA,GAAA,UAAA,IACA,EAAA,GAAA,GAAA,EAAA,GAAA,UAAA,IACA,EAAA,GAAA,GAAA,EAAA,GAAA,UAAA,IACA,EAAA,GAAA,GAAA,EAAA,GAAA,UAAA,IACA,EAAA,GAAA,GAAA,EAAA,GAAA,UAAA,+BAKhB,EAAA,GAAA,EAAA,MAAA,IACI,EAAA,GAAA,mBACJ,EAAA,0BADI,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,EAAA,KAAA,MAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,EAAA,MAAA,IAAA,EAAA,aAAA,MDFD,IAAA,EAAA,YAAMI,EAUT,YACWjY,EACCjL,GADD,KAAAiL,QAAAA,EACC,KAAAjL,GAAAA,EAXH,KAAAmjB,aAAc,EAChB,KAAAC,eAAiB,IAAI,EAAA,EAAY,IAaxC,WACIlxC,KAAKszB,UAAYtzB,KAAK+4B,QAAQ1e,UAAUhD,UACnC9N,KAAK,OAAA,EAAA,EAAA,CAAOkO,MAAOA,MAAAA,OAAC,EAADA,EAAGC,aAAa,OAAA,EAAA,EAAA,CAAID,GAAKA,EAAEC,aAC9C3T,UAAU2T,IACP1X,KAAKmxC,GAAKz5B,EAAWS,SAAWT,EAAWC,aAC3C3X,KAAKysC,KAAQzsC,KAAKmxC,GAAKz5B,EAAWS,UAAa,EAC/CnY,KAAKoxC,aAAe15B,EAAWa,MAC/BvY,KAAKqxC,aAAe35B,EAAWC,aAAe,EAC9C3X,KAAKsxC,SAAW55B,EAAWC,aAAeD,EAAWiC,UACrD3Z,KAAKkxC,eAAe3e,SAAS/c,SAAS,GAAKkC,EAAWS,UAAW,CAACo5B,WAAW,IAC7EvxC,KAAK8tB,GAAGvpB,iBAGhBvE,KAAKkxC,eAAexe,aACf3uB,UAAUmU,IACPlY,KAAK+4B,QAAQ1e,UAAUm3B,cAAct5B,KAIjD,cACIlY,KAAKszB,UAAUlvB,cACfpE,KAAK+4B,QAAQgI,UAGV,eACH/gC,KAAK+4B,QAAQ1e,UAAUo3B,eAGpB,WACHzxC,KAAK+4B,QAAQ1e,UAAUq3B,yDA5ClBV,GAAwB,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,4BAAxBA,EAAwB,UAAA,CAAA,CAAA,qBAAA,OAAA,CAAA,YAAA,eAAA,MAAA,EAAA,KAAA,EAAA,OAAA,CAAA,CAAA,QAAA,YAAA,EAAA,QAAA,CAAA,EAAA,iBAAA,CAAA,QAAA,cAAA,EAAA,QAAA,CAAA,OAAA,SAAA,kBAAA,GAAA,EAAA,eAAA,EAAA,WAAA,SAAA,CAAA,UAAA,gBAAA,CAAA,UAAA,iBAAA,CAAA,EAAA,aAAA,CAAA,QAAA,GAAA,EAAA,mBAAA,CAAA,EAAA,mBAAA,CAAA,EAAA,kBAAA,EAAA,eAAA,CAAA,EAAA,WAAA,CAAA,EAAA,gBAAA,SAAA,SAAA,EAAA,GAAA,EAAA,ICZrC,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,MAAA,GAYA,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,GAGA,EAAA,GAAA,EAAA,SAAA,GAA8G,EAAA,GAAA,SAAA,WAAA,OAAS,EAAAS,kCACnH,EAAA,GAAA,EAAA,WAAA,GACJ,EAAA,KACA,EAAA,GAAA,EAAA,SAAA,GAA0G,EAAA,GAAA,SAAA,WAAA,OAAS,EAAAC,8BAC/G,EAAA,GAAA,EAAA,WAAA,GACJ,EAAA,KACJ,EAAA,YAtBuB,EAAA,GAAA,QAAA,EAAA,aAaM,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,MAAA,EAAA,IAAA,EAAA,cAGH,EAAA,GAAA,GAAA,EAAA,GAAA,YAAA,EAAA,cAAA,EAAA,GAAA,EAAA,EAAA,EAAA,QAAA,UAAA,WAGA,EAAA,GAAA,GAAA,EAAA,GAAA,YAAA,EAAA,UAAA,EAAA,GAAA,EAAA,EAAA,EAAA,QAAA,UAAA,24BDPnB,uBECP7xC,EAAOC,QANP,SAAmB0d,GACjB,OAAO,SAASta,GACd,OAAOsa,EAAKta,sGCHT,IAAA,EAAA,YAAMyuC,EACT,UAAU95B,GACN,OAAKA,EAGDA,EAAI8c,SAAS,WACN,6DCVZ,SAA2B9c,GAC9B,OAAOA,GAIA,OAAA,EAAA,EAAA,CAAcA,KACjBA,EAAMpO,OAAOmoC,SAASC,SAAW,KAAOpoC,OAAOmoC,SAASE,MAGrD,6CADQ,IAAIC,IAAIl6B,GAAK4W,QANjB,KAFR,CDY8B5W,GALlB,mDAHN85B,2CAAAA,EAAW,MAAA,OAAjB,yBENP,IAAI7a,EAAa,EAAQ,QASrBxkB,EAHcF,OAAOC,UAGQC,eAgFjCzS,EAAOC,QAjEP,SAAsBkB,EAAQ4vB,EAAOC,EAASC,EAAYC,EAAWC,GACnE,IAAIif,EAtBqB,EAsBTpf,EACZmhB,EAAWlb,EAAW91B,GACtBixC,EAAYD,EAAS7uC,OAIzB,GAAI8uC,GAHWnb,EAAWlG,GACDztB,SAEM8sC,EAC7B,OAAO,EAGT,IADA,IAAIjsC,EAAQiuC,EACLjuC,KAAS,CACd,IAAIjE,EAAMiyC,EAAShuC,GACnB,KAAMisC,EAAYlwC,KAAO6wB,EAAQte,EAAeG,KAAKme,EAAO7wB,IAC1D,OAAO,EAIX,IAAImyC,EAAalhB,EAAMhY,IAAIhY,GACvBqvC,EAAarf,EAAMhY,IAAI4X,GAC3B,GAAIshB,GAAc7B,EAChB,OAAO6B,GAActhB,GAASyf,GAAcrvC,EAE9C,IAAIZ,GAAS,EACb4wB,EAAMzwB,IAAIS,EAAQ4vB,GAClBI,EAAMzwB,IAAIqwB,EAAO5vB,GAGjB,IADA,IAAImxC,EAAWlC,IACNjsC,EAAQiuC,GAAW,CAE1B,IAAI3iB,EAAWtuB,EADfjB,EAAMiyC,EAAShuC,IAEXusC,EAAW3f,EAAM7wB,GAErB,GAAI+wB,EACF,IAAI0f,EAAWP,EACXnf,EAAWyf,EAAUjhB,EAAUvvB,EAAK6wB,EAAO5vB,EAAQgwB,GACnDF,EAAWxB,EAAUihB,EAAUxwC,EAAKiB,EAAQ4vB,EAAOI,GAGzD,UAAmB5R,IAAboxB,EACGlhB,IAAaihB,GAAYxf,EAAUzB,EAAUihB,EAAU1f,EAASC,EAAYE,GAC7Ewf,GACD,CACLpwC,GAAS,EACT,MAEF+xC,IAAaA,EAAkB,eAAPpyC,GAE1B,GAAIK,IAAW+xC,EAAU,CACvB,IAAIC,EAAUpxC,EAAOX,YACjBgyC,EAAUzhB,EAAMvwB,YAGhB+xC,GAAWC,KACV,gBAAiBrxC,MAAU,gBAAiB4vB,IACzB,mBAAXwhB,GAAyBA,aAAmBA,GACjC,mBAAXC,GAAyBA,aAAmBA,IACvDjyC,GAAS,GAKb,OAFA4wB,EAAc,OAAEhwB,GAChBgwB,EAAc,OAAEJ,GACTxwB,uBCpDTP,EAAOC,QALP,SAAkBoD,GAChB,MAAuB,iBAATA,GACZA,GAAS,GAAKA,EAAQ,GAAK,GAAKA,GA9Bb,wCCDvB,IAAItD,EAAe,EAAQ,QAkB3BC,EAAOC,QAPP,SAAsBC,GACpB,IAAI8S,EAAO7S,KAAKC,SACZ+D,EAAQpE,EAAaiT,EAAM9S,GAE/B,OAAOiE,EAAQ,OAAIob,EAAYvM,EAAK7O,GAAO,0BCf7C,IAIIg0B,EAJY,EAAQ,OAAR,CACL,EAAQ,QAGY,YAE/Bn4B,EAAOC,QAAUk4B,wBCNjB,IAAIvE,EAAe,EAAQ,QASvBnhB,EAHcF,OAAOC,UAGQC,eAoBjCzS,EAAOC,QATP,SAAiBC,GACf,IAAI8S,EAAO7S,KAAKC,SAChB,GAAIwzB,EAAc,CAChB,IAAIrzB,EAASyS,EAAK9S,GAClB,MArBiB,8BAqBVK,OAA4Bgf,EAAYhf,EAEjD,OAAOkS,EAAeG,KAAKI,EAAM9S,GAAO8S,EAAK9S,QAAOqf,2BC1BtD,IAAIkzB,EAAc,EAAQ,QACtBC,EAAsB,EAAQ,QAC9BC,EAAW,EAAQ,QACnBl5B,EAAU,EAAQ,QAClBm5B,EAAW,EAAQ,QA0BvB5yC,EAAOC,QAjBP,SAAsBoD,GAGpB,MAAoB,mBAATA,EACFA,EAEI,MAATA,EACKsvC,EAEW,iBAATtvC,EACFoW,EAAQpW,GACXqvC,EAAoBrvC,EAAM,GAAIA,EAAM,IACpCovC,EAAYpvC,GAEXuvC,EAASvvC,0BCXlBrD,EAAOC,QAJP,6QCGO,IAAA,EAAA,YAAM4yC,UACO,EAAA5tC,KAAO,+BADpB,GAIA,EAAA,YAAM6tC,UACO,EAAA7tC,KAAO,mCADpB,GAIA,EAAA,YAAM8tC,EAET,YAAmBC,GAAA,KAAAA,QAAAA,UADH,EAAA/tC,KAAO,+BADpB,GAKA,EAAA,YAAMguC,EAET,YAAmBC,GAAA,KAAAA,OAAAA,UADH,EAAAjuC,KAAO,yBADpB,GAKA,EAAA,YAAMkuC,EAET,YAAmBj7B,GAAA,KAAAA,YAAAA,UADH,EAAAjT,KAAO,8BADpB,GAQA,EAAA,YAAMmuC,EAET,YAAmB93B,GAAA,KAAAA,QAAAA,UADH,EAAArW,KAAO,4BADpB,GAKA,EAAA,YAAMouC,UACO,EAAApuC,KAAO,gCADpB,GAIA,EAAA,YAAMquC,UACO,EAAAruC,KAAO,kCADpB,GAIA,EAAA,YAAMsuC,UACO,EAAAtuC,KAAO,qCADpB,GAIA,EAAA,YAAMuuC,UACO,EAAAvuC,KAAO,0CADpB,GAIA,EAAA,YAAMwuC,UACO,EAAAxuC,KAAO,2CADpB,GAIA,EAAA,YAAMyuC,EAET,YAAmBp4B,GAAA,KAAAA,QAAAA,UADH,EAAArW,KAAO,yBADpB,GAKA,EAAA,YAAM0uC,EAET,YAAmB3W,EAAiC1hB,GAAjC,KAAA0hB,YAAAA,EAAiC,KAAA1hB,QAAAA,UADpC,EAAArW,KAAO,8BADpB,GAKA,EAAA,YAAM2uC,EAET,YAAmBC,EAAmC7gC,EAAsB+H,GAAzD,KAAA84B,OAAAA,EAAmC,KAAA7gC,KAAAA,EAAsB,KAAA+H,OAAAA,UAD5D,EAAA9V,KAAO,yBADpB,GAKA,EAAA,YAAM6uC,EAET,YAAmB9gC,EAA+B+gC,GAA/B,KAAA/gC,KAAAA,EAA+B,KAAA+gC,cAAAA,UADlC,EAAA9uC,KAAO,iCADpB,GAKA,EAAA,YAAM+uC,EAET,YAAmBxT,GAAA,KAAAA,KAAAA,UADH,EAAAv7B,KAAO,2BADpB,GAKA,EAAA,YAAMgvC,UACO,EAAAhvC,KAAO,4BADpB,GAIA,EAAA,YAAMivC,UACO,EAAAjvC,KAAO,4BADpB,GAIA,EAAA,YAAMkvC,EAET,YAAmB5mB,GAAA,KAAAA,MAAAA,UADH,EAAAtoB,KAAO,0BADpB,GAKA,EAAA,YAAMmvC,EAET,YAAmB94B,GAAA,KAAAA,QAAAA,UADH,EAAArW,KAAO,qCADpB,GAKA,EAAA,YAAMovC,UACO,EAAApvC,KAAO,4CADpB,GAIA,EAAA,YAAMqvC,UACO,EAAArvC,KAAO,yBADpB,GAIA,EAAA,YAAMsvC,EAET,YAAmBj5B,GAAA,KAAAA,QAAAA,UADH,EAAArW,KAAO,uCADpB,GAKA,EAAA,YAAMuvC,EAET,YAAmBl5B,EAA8Bm5B,EAA6BC,GAA3D,KAAAp5B,QAAAA,EAA8B,KAAAm5B,KAAAA,EAA6B,KAAAC,SAAAA,UAD9D,EAAAzvC,KAAO,4BADpB,GAKA,EAAA,YAAM0vC,EAET,YAAmBr5B,GAAA,KAAAA,QAAAA,UADH,EAAArW,KAAO,wBADpB,GAKA,EAAA,YAAM2vC,EAET,YAAmBt5B,GAAA,KAAAA,QAAAA,UADH,EAAArW,KAAO,yBADpB,GAKA,EAAA,YAAM4vC,EAET,YAAmBv5B,GAAA,KAAAA,QAAAA,UADH,EAAArW,KAAO,4BADpB,GAUA,EAAA,YAAM6vC,EAGT,YAAmB58B,EAAmC,IAAnC,KAAAA,YAAAA,EADZ,KAAA68B,UAAW,UADF,EAAA9vC,KAAO,+CADpB,GAMA,EAAA,YAAM+vC,EAET,YAAmB98B,EAAmC,GAAWK,GAA9C,KAAAL,YAAAA,EAA8C,KAAAK,KAAAA,UADjD,EAAAtT,KAAO,iCADpB,GAKA,EAAA,YAAMgwC,UACO,EAAAhwC,KAAO,mCADpB,GAIA,EAAA,YAAMiwC,EAET,YAAmBjwC,GAAA,KAAAA,KAAAA,UADH,EAAAA,KAAO,gCADpB,GAKA,EAAA,YAAMkwC,EAET,YAAmB9jB,GAAA,KAAAA,QAAAA,UADH,EAAApsB,KAAO,gCADpB,GAKA,EAAA,YAAMmwC,UACO,EAAAnwC,KAAO,gCADpB,GAIA,EAAA,YAAMowC,UACO,EAAApwC,KAAO,yBADpB,GAIA,EAAA,YAAMqwC,EAET,YAAmBh6B,GAAA,KAAAA,QAAAA,UADH,EAAArW,KAAO,4BADpB,GAKA,EAAA,YAAMswC,EAET,YAAmBC,GAAA,KAAAA,KAAAA,UADH,EAAAvwC,KAAO,8BADpB,GAKA,EAAA,YAAMwwC,EAET,YAAmB1a,GAAA,KAAAA,UAAAA,UADH,EAAA91B,KAAO,2BADpB,GAKA,EAAA,YAAMywC,EAET,YAAmB72B,EAAyB82B,GAAzB,KAAA92B,MAAAA,EAAyB,KAAA82B,YAAAA,UAD5B,EAAA1wC,KAAO,sCADpB,GCzKA,MAAM2wC,EAUT,YAAY38B,GATZ,KAAA3D,KAAO,KACP,KAAAugC,SAAW,KACX,KAAA3C,OAAS,KACT,KAAA4C,WAAa,KACb,KAAAC,YAAa,EACb,KAAAC,WAAa,aACb,KAAAC,cAAgB,OAChB,KAAA/9B,YAAc,GAGV3F,OAAOgJ,KAAKtC,GAAQ9K,QAAQjO,IACxBC,KAAKD,GAAO+Y,EAAO/Y,MAKxB,MAAMg2C,EAAc,IAAIN,EAAU,CACrCtgC,KAtCQ,SAuCRugC,SAAU,SACVvc,aAAa,EACb0c,WAAY,aACZC,cAAe,OACf/9B,YAAa,CACTi+B,YAAY,KAIPC,EAAc,IAAIR,EAAU,CACrCtgC,KA7CQ,SA8CRugC,SAAU,mBAGDQ,GAAc,IAAIT,EAAU,CACrCtgC,KApDQ,SAqDRugC,SAAU,SACV39B,YAAa,CACTo+B,YAAY,KAIPC,GAAa,IAAIX,EAAU,CACpCtgC,KA7DO,QA8DPugC,SAAU,QACVE,YAAY,EACZ79B,YAAa,CACTs+B,aAAa,KAIRC,GAAuB,IAAIb,EAAU,CAC9CtgC,KAlEY,aAmEZugC,SAAU,eAGDa,GAAe,IAAId,EAAU,CACtCtgC,KAzES,UA0ETugC,SAAU,UACV39B,YAAa,CACTy+B,aAAa,KAId,MAAMC,WAAmBhB,EAC5B,YAAY1C,GACRxwC,MAAM,CACF4S,KAvFA,SAwFAugC,SAAU3C,MAAAA,OAAM,EAANA,EAAQ59B,KAClB49B,OAAAA,EACA4C,WAAY5C,MAAAA,OAAM,EAANA,EAAQ2D,KACpBd,YAAY,KC1EjB,IAAA,GAAA,YAAMe,EAAb,cAEW,KAAAv+B,KAAO29B,EACP,KAAAh+B,YAAc,CAACoE,QAAS,aAA4B65B,YAAY,WAFvD,EAAAlxC,KAAO,wCADpB,GAMA,GAAA,YAAM8xC,EAIT,YAAYjB,GADL,KAAA59B,YAAc,GAEjB/X,KAAKoY,KAAO,IAAIq+B,GAAW,CAACC,KAAMf,YAJtB,EAAA7wC,KAAO,gCADpB,GASA,GAAA,YAAM+xC,EAAb,cAEW,KAAAz+B,KAAO89B,GACP,KAAAn+B,YAAc,CAACo+B,YAAY,WAFlB,EAAArxC,KAAO,kCADpB,GAMA,GAAA,YAAMgyC,EAAb,cAEW,KAAA1+B,KAAOg+B,GACP,KAAAr+B,YAAc,CAACs+B,aAAa,WAFnB,EAAAvxC,KAAO,+BADpB,GAMA,GAAA,YAAMiyC,EAAb,cAEW,KAAA3+B,KAAOk+B,WADE,EAAAxxC,KAAO,0CADpB,GAKA,GAAA,YAAMkyC,EAGT,YAAmBj/B,EAGf,IAHe,KAAAA,YAAAA,EADZ,KAAAK,KAAO69B,UADE,EAAAnxC,KAAO,gCADpB,GASA,GAAA,YAAMmyC,EAAb,cAEW,KAAA7+B,KAAOm+B,GACP,KAAAx+B,YAAc,CAACy+B,aAAa,WAFnB,EAAA1xC,KAAO,yCADpB,GAMA,GAAA,YAAMoyC,EAET,YAAmB/7B,GAAA,KAAAA,QAAAA,UADH,EAAArW,KAAO,uCADpB,GAKA,GAAA,YAAMqyC,EAET,YAAmBh8B,GAAA,KAAAA,QAAAA,UADH,EAAArW,KAAO,2CADpB,GAKA,GAAA,YAAMsyC,EAET,YAAmB14B,EAA0B24B,GAAU,GAApC,KAAA34B,MAAAA,EAA0B,KAAA24B,QAAAA,UAD7B,EAAAvyC,KAAO,8BADpB,GAKA,GAAA,YAAMwyC,EAET,YAAmB54B,GAAA,KAAAA,MAAAA,UADH,EAAA5Z,KAAO,sCADpB,GAKA,GAAA,YAAMyyC,EAET,YAAmBC,GAAA,KAAAA,aAAAA,UADH,EAAA1yC,KAAO,wCADpB,GAKA,GAAA,YAAM2yC,EAET,YAAmB/4B,GAAA,KAAAA,MAAAA,UADH,EAAA5Z,KAAO,uCADpB,GAKA,GAAA,YAAM4yC,EAET,YAAmB3E,GAAA,KAAAA,OAAAA,UADH,EAAAjuC,KAAO,gCADpB,GAKA,GAAA,YAAM6yC,EAET,YAAmBj5B,EAA0Bk5B,GAA1B,KAAAl5B,MAAAA,EAA0B,KAAAk5B,QAAAA,UAD7B,EAAA9yC,KAAO,2BADpB,GAKA,GAAA,YAAM+yC,UACO,EAAA/yC,KAAO,8BADpB,GAIA,GAAA,YAAMgzC,UACO,EAAAhzC,KAAO,8BADpB,GAIA,GAAA,YAAMizC,EAET,YACWlb,EACAmb,EACA78B,GAFA,KAAA0hB,YAAAA,EACA,KAAAmb,YAAAA,EACA,KAAA78B,QAAAA,UAJK,EAAArW,KAAO,sCADpB,GASA,GAAA,YAAMmzC,EAET,YAAmBC,GAAA,KAAAA,SAAAA,UADH,EAAApzC,KAAO,qCADpB,GAKA,GAAA,YAAMqzC,EAET,YAAmBh9B,GAAA,KAAAA,QAAAA,UADH,EAAArW,KAAO,wDADpB,GAKA,GAAA,YAAMszC,EAET,YAAmBj9B,GAAA,KAAAA,QAAAA,UADH,EAAArW,KAAO,iDADpB,GAKA,GAAA,YAAMuzC,UACO,EAAAvzC,KAAO,oCADpB,GAIA,GAAA,YAAMwzC,UACO,EAAAxzC,KAAO,sCADpB,GAIA,GAAA,YAAMyzC,EAET,YAAmBpc,GAAA,KAAAA,OAAAA,UADH,EAAAr3B,KAAO,+BADpB,GCjHA,MClCM0zC,GAA8C,CACvDC,UAAU,EACVC,WAAY,KACZC,WAAY,GACZC,YAAa,GACbC,mBAAmB,EACnB19B,QAAS,GACT29B,gBAAiB,GACjBC,UAAU,EACVC,SAAS,EACTC,kBAAkB,EAClBC,SAAU,OACVC,gBAAgB,EAChBC,aAAa,EACbvf,YAAa,KACbwf,gBAAiB,KACjBC,WAAY,CACRC,UAAW,KACXC,KAAM,MAEVC,KAAM,CACF5D,WAAY,aACZC,cAAe,OACfp8B,YAAa,EACbggC,SAAU,qBC1BNC,GAAZ,SAAYA,UACR,EAAA,YAAA,mBACA,EAAA,WAAA,oBACA,EAAA,YAAA,kBAHQA,EAAZ,CAIC,ICDM,MAAMC,GAA4B,IAAI,EAAA,EAAkC,8CCHnEC,GAAZ,SAAYA,UACR,EAAA,QAAA,gBACA,EAAA,OAAA,gBAFQA,EAAZ,CAGC,8BCQM,IAAA,GAAA,YAAMC,EAET,YACY/iC,EACA8iB,GADA,KAAA9iB,KAAAA,EACA,KAAA8iB,YAAAA,EAGL,OAAO/gB,GACV,OAAO9Y,KAAK+W,KAAKiC,IAAI6gC,GAAmBE,QAASjhC,GAG9C,uBACH,OAAO9Y,KAAK+W,KAAKiC,IAAI,eAAiBhZ,KAAK65B,YAAY7gB,IAAI,MAAQ,YAGhE,OAAOF,GACV,OAAO9Y,KAAK+W,KAAKokB,KAAK0e,GAAmBG,OAAQlhC,GAG9C,UAAU49B,GACb,OAAO12C,KAAK+W,KAAKiC,IAAI,qBAAsB,CAAC09B,KAAAA,kDApBvCoD,GAAiB,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,8BAAjBA,EAAiB,QAAjBA,EAAiB,UAAA,WAFd,YAET,GCuBA,GAAA,YAAMG,EACT,YAAoBljC,EAA6B8iB,GAA7B,KAAA9iB,KAAAA,EAA6B,KAAA8iB,YAAAA,EAE1C,oBAAoB/gB,EAA8B,IACrD,OAAO9Y,KAAK+W,KAAKiC,IAAI,gBAAiBF,GAGnC,sBAAsBA,GAEzB,OADAA,EAAOyiB,OAASv7B,KAAK65B,YAAY7gB,IAAI,MAC9BhZ,KAAK+W,KAAKiC,IAAI,gBAAiBF,GAGnC,OAAOohC,EAAiBphC,GAC3B,OAAO9Y,KAAK+W,KAAKskB,IAAI,WAAa6e,EAASphC,GAGxC,OAAOA,GACV,OAAO9Y,KAAK+W,KAAKkkB,OAAO,gBAAiBniB,GAGtC,KAAKA,GACR,OAAO9Y,KAAK+W,KAAKokB,KAAK,qBAAsBriB,GAGzC,QAAQA,GACX,OAAO9Y,KAAK+W,KAAKokB,KAAK,wBAAyBriB,GAG5C,aACH,OAAO9Y,KAAKi7B,OAAO,CAACkf,YAAY,IAG7B,YAAYrhC,GACf,OAAO9Y,KAAK+W,KAAKokB,KAAK,qBAAsBriB,GAGzC,QAAQshC,GACX,OAAOp6C,KAAK+W,KAAKokB,KAAK,qBAAsB,CAACif,SAAAA,IAG1C,WAAWA,GACd,OAAOp6C,KAAK+W,KAAKokB,KAAK,uBAAwB,CAACif,SAAAA,IAG5C,gBACH,OAAOp6C,KAAK+W,KAAKiC,IAAI,wEA7ChBihC,GAAoB,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,8BAApBA,EAAoB,QAApBA,EAAoB,UAAA,WAFjB,YAET,GC5BA,GAAA,YAAMI,EACF,YACH,MAAO,SAGJ,OAAOtH,GACV,OAAOA,MAAAA,OAAM,EAANA,EAAQzxC,IAGJ,kBAAmByxC,EAAuB2D,KAF1C12C,KAAKs6C,0DAPXD,6BAAAA,EAAgB,QAAhBA,EAAgB,UAAA,WAFb,YAET,kGCIA,IAAA,GAAA,YAAME,UAA6B,GAAA,EAH1C,kCAIuB,KAAA9P,yBAA2B,EAEpC,kBACNzqC,KAAK2qC,YAAY33B,KACb,IAAI,GAAA,EACA,CAAC43B,QAAS5qC,KAAK6qC,kBACf7qC,KAAK+f,OAIb,MAAM+qB,EAAoB9qC,KAAK+qC,uBAC3BC,EAAoBhrC,KAAKirC,uBAEzBH,GAAqBA,EAAkB3nC,QACvCnD,KAAK2qC,YAAY33B,KAAK,IAAI,GAAA,EACtB,CAACiN,WAAY6qB,GAAoB9qC,KAAK+f,OAI1CirB,GAAqBA,EAAkB7nC,QACvCnD,KAAK2qC,YAAY33B,KAAK,IAAI,GAAA,EACtB,CAACiN,WAAY+qB,GAAoBhrC,KAAK+f,OAKxC,iBACN,OAAO/f,KAAKkrC,SAASlyB,IACjB,mBACA,OAAAmyB,GAAA,EAAA,CAAenrC,KAAKyqC,yBAA0B,OAI5C,uBACN,OAAOzqC,KAAKkrC,SAASE,QAAQ,8BAGvB,uBACN,OAAOprC,KAAKkrC,SAASE,QAAQ,2EAvCxBmP,6BAAAA,EAAoB,QAApBA,EAAoB,UAAA,WAFjB,YAET,iBAAM,sDC4FAC,EAAU,GAAA,MACnB,YACYC,EACAC,EACA5jC,EACA6jC,EACAC,EACAC,EACAC,EACA3O,EACArR,EACAd,EACmC+gB,GAVnC,KAAAN,WAAAA,EACA,KAAAC,WAAAA,EACA,KAAA5jC,OAAAA,EACA,KAAA6jC,UAAAA,EACA,KAAAC,QAAAA,EACA,KAAAC,MAAAA,EACA,KAAAC,WAAAA,EACA,KAAA3O,UAAAA,EACA,KAAArR,WAAAA,EACA,KAAAd,MAAAA,EACmC,KAAA+gB,kBAAAA,EAI/C,mBAAmBC,GACf,OAAOA,EAAMpC,YAIjB,yBAAyBoC,GACrB,OAAOA,EAAMnC,kBAIjB,kBAAkBmC,GACd,OAAOA,EAAMtC,WAIjB,sBAAsBsC,GAClB,OAAOA,EAAMtC,WAAWvjC,KAI5B,mBAAmB6lC,GACf,OAAOA,EAAMrC,WAIjB,uBAAuBqC,GACnB,OAAOA,EAAMlC,gBAIjB,wBAAwBkC,EAAwBlC,GAC5C,OAAOA,EAAgB1vC,IAAIsV,GAASA,EAAMpd,IAI9C,qBAAqB05C,EAAwB/sC,GACzC,OAAOA,EAAWA,EAASA,EAAS9K,OAAS,GAAK,KAItD,mCAAmC63C,EAAwB/sC,GACvD,OAAOA,GAAY+sC,EAAMtC,WAAW3F,OAIxC,2BAA2BiI,EAAwB/sC,EAAuB4kC,GACtE,OAAO5kC,GAAc4kC,GAAa5kC,EAASgtC,UAGpCpI,EAAQlqB,KAAKuyB,GAAKA,EAAE55C,KAAO2M,EAASgtC,WAFhCD,EAAMG,WAMrB,wBAAwBH,EAAwBlC,GAC5C,OAAOA,EAAgB31C,OAAS,EAIpC,iCAAiC63C,EAAwBlC,GACrD,OAAOA,EAAgBsC,MAAM18B,KAAWA,EAAM28B,KAAK1yB,KAAKwD,GAAoB,YAAbA,EAAIhX,OAIvE,2BAA2B6lC,EAAwBlC,GAC/C,OAAOA,EAAgBsC,MAAM18B,GAAwB,WAAfA,EAAM5Z,MAIhD,eAAek2C,GACX,OAAOA,EAAM7/B,QAIjB,oBAAoB6/B,GAEhB,OAAOA,EAAMvB,KAAK//B,cAAiBshC,EAAMhC,SAAoC,IAAzBgC,EAAM7/B,QAAQhY,OAItE,+BAA+B63C,EAAwBlC,GACnD,OAAOA,EAAgB31C,OAAS,EAIpC,oBAAoB63C,GAChB,OAAOA,EAAMtC,WAAW3F,OAI5B,kBAAkBiI,GACd,OAAOA,EAAMG,WAIjB,YAAYH,GACR,OAAOA,EAAMvB,KAIjB,gBAAgBuB,GACZ,OAAOA,EAAMjC,SAIjB,eAAeiC,GACX,OAAOA,EAAMhC,QAIjB,mBAAmBgC,GACf,OAAOA,EAAMvB,KAAK//B,YAItB,gBAAgBshC,GACZ,OAAOA,EAAM9B,SAIjB,mBAAmB8B,GACf,OAAOA,EAAM7B,eAIjB,mBAAmB6B,GACf,OAAOA,EAAM5B,YAIjB,kBAAkB4B,GACd,OAAOA,EAAMvB,KAAK5D,WAItB,qBAAqBmF,GACjB,OAAOA,EAAMvB,KAAK3D,cAItB,0BAA0BkF,GACtB,OAAOA,EAAMvB,KAAK//B,YAAcshC,EAAMvB,KAAKC,SAI/C,qBAAqBsB,GACjB,OAAOA,EAAM1B,WAAWE,KAI5B,0BAA0BwB,GACtB,OAAOA,EAAM1B,WAAWC,UAI5B,wBAAwByB,EAAwBM,EAAmBC,GAE/D,OAAsB,OAAfA,EAAsB,EAAkB,IAAZD,EAAmBC,EAI1D,gBAAgBP,GACZ,OAAOA,EAAMvC,SAGjB,yBAAyBpe,EAA4B0Y,EAAoBsC,GAErE,IAAOtC,IAAYsC,EAAM,OAAO,EAGhC,MAAMmG,EAAczI,EAAsB0I,MAAM9yB,KAAK+jB,GAAKA,EAAEprC,KAAO+zC,EAAK/zC,IACxE,SAAIk6C,EAAWE,aAAcF,EAAWG,kBAAkBthB,UAA1D,EAMJ,mBAAmB2gB,GACf,OAAOA,EAAMnhB,YAIjB,uBAAuBmhB,GACnB,OAAOA,EAAM3B,gBAIjB,4BAA4B2B,EAAwBY,EAA0B/hB,GAC3E,OAAO,GAAWgiB,kBAAkB,QAASD,EAAc/hB,GAI9D,+BAA+BmhB,EAAwBlC,EAA+Bjf,GAClF,OAAOif,EAAgBsC,MAAM18B,GAClB,GAAWm9B,kBAAkB,QAASn9B,EAAOmb,IAK5D,kCAAkCmhB,EAAwB7/B,EAAuB0e,GAC7E,OAAO1e,EAAQigC,MAAM18B,IACjB,MAAM22B,EAAO32B,EAAM+8B,MAAM9yB,KAAK+jB,GAAKA,EAAEprC,KAAOu4B,EAAYv4B,IACxD,OAAO+zC,IAASA,EAAKqG,YAAcrG,EAAKsG,kBAAkBG,QAKlE,iBAAiBd,EAAwB5iC,EAAiByhB,EAAmBe,GACzE,IAAKxiB,EAAK26B,SAAWlZ,IAAgBe,EACjC,OAAO,EAIX,IAAIA,MAAAA,OAAS,EAATA,EAAWt5B,KAAM8W,EAAK26B,OAAOgJ,eAAiBnhB,EAAUt5B,GAAI,CAC5D,MAAMg5B,EAASM,EAAUf,YACzB,OAAOS,IAAWA,EAAOC,UAAYD,EAAOE,YAAYhI,UAAUiI,GAAgB,iBAAXA,EAAEtlB,OAA4B,GAIrG,OAAO,GAAW0mC,kBAAkB,OAAQzjC,EAAK26B,OAAQlZ,GAKjE,gBAAgBz4B,GACZ,OAAOpB,KAAKy6C,WAAWuB,uBAAuBzyC,KAAK,OAAA2P,EAAA,EAAA,CAAIE,IACnDhY,EAAI66C,WAAW,CAACd,WAAY/hC,EAAS+hC,aAC9B/5C,EAAI86C,SAAS,IAAItJ,EAAgBx5B,EAASy5B,aAKzD,gBAAgBzxC,EAAoC06B,GAChD,MAAM8c,EAAc9c,EAAO+W,SAAWzxC,EAAI+6C,WAAWvD,YAC/CwD,EC7VP,SAAyBvJ,GAC5B,MAAMwJ,EAAY,GAAUD,EAAO,GAEnC,IAAK,IAAIrhB,EAAI,EAAGuhB,EAAMzJ,EAAQ1vC,OAAQ43B,EAAIuhB,EAAKvhB,IAAK,CAChD,MAAMgY,EAASF,EAAQ9X,GAEvBgY,EAAO9N,SAAW,GAClBoX,EAAUtJ,EAAOzxC,IAAMyxC,EAG3B,IAAK,MAAMwJ,KAAYF,EAAW,CAC9B,IAAOA,EAAU/pC,eAAeiqC,GAAW,SAC3C,MAAMxJ,EAASsJ,EAAUE,GACzB,GAAIxJ,EAAOkI,UAAW,CAClB,MAAMuB,EAASH,EAAUtJ,EAAOkI,WAC5BuB,GACAA,EAAOvX,SAASjyB,KAAK+/B,QAGzBqJ,EAAKppC,KAAK+/B,GAIlB,OAAOqJ,EAvBJ,CD6V8BxD,GAC7Bx3C,EAAI66C,WAAW,CACXtD,WAAYyD,EACZxD,YAAAA,EACAC,mBAAmB,IAK3B,0BAA0Bz3C,EAAoC06B,GAC1D16B,EAAI66C,WAAW,CAACvD,WAAY5c,EAAO1jB,OAWvC,iBAAiBhX,EAAoC06B,GACjD,MAAM2gB,EAAWr7C,EAAI+6C,WACfO,EAAW,CAAC1D,SAAS,EAAMS,KAAM,OAAF,OAAA,GAAMgD,EAAShD,OAIpDiD,EAAShE,WAAa5c,EAAO1jB,KAAO0jB,EAAO1jB,KAAOqkC,EAAS/D,WAG3DgE,EAASjD,KAAK5D,WAAa/Z,EAAO/jB,YAAYoE,SAAWsgC,EAAShD,KAAK5D,YAAc6G,EAAShE,WAAW7C,WACzG6G,EAASjD,KAAK3D,cAAgBha,EAAO/jB,YAAYqE,UAAYqgC,EAAShD,KAAK3D,eAAiB4G,EAAShE,WAAW5C,cAG/E,WAA7B4G,EAAShE,WAAWvjC,OACpBunC,EAASjD,KAAK/9B,MAAQ,KACtBghC,EAASjD,KAAK30C,KAAO,MAGzB43C,EAASjD,KAAK/9B,MAAQogB,EAAO/jB,YAAY2D,OAASghC,EAASjD,KAAK/9B,MAChEghC,EAASjD,KAAK30C,KAAOg3B,EAAO/jB,YAAYjT,MAAQ43C,EAASjD,KAAK30C,KAE9D1D,EAAI66C,WAAWS,GACf,MAAM5jC,EAAS9Y,KAAK28C,qBAAqB,OAAD,OAAA,OAAA,OAAA,GACjC7gB,EAAO/jB,aACP2kC,EAAShE,WAAW3gC,cAG3B,OAAO/X,KAAK06C,WAAWkC,oBAAoB9jC,GAAQvP,KAAK,OAAA2P,EAAA,EAAA,CAAIE,IACxD,MAEM4hC,EAAQ,CACV7/B,SAHY2gB,EAAO8Y,SAAW6H,EAASthC,QAAU,IAGhCmxB,OAAOlzB,EAASvG,MACjC4mC,KAAM,OAAF,OAAA,OAAA,OAAA,GACGiD,EAASjD,MAAI,CAChBC,SAAUtgC,EAASO,UACnBD,YAAaN,EAASzB,eAE1BqhC,SAAS,GAQb,OALAgC,EAAMtC,WAAa,OAAH,OAAA,OAAA,OAAA,GACTgE,EAAShE,YAAU,CACtB3F,OAAQ35B,EAAS25B,SAGd3xC,EAAI66C,WAAWjB,IACvB,IACQ55C,EAAI66C,WAAW,CAACjD,SAAS,MAKxC,WAAW53C,EAAoC06B,GAC3C,MAAM+gB,EAAgBz7C,EAAI+6C,WAAWzD,WAAW3F,OAChD,IAAI8J,GAAiB/gB,EAAOiX,OAAOzxC,KAAOu7C,EAAcv7C,GAExD,OAAIw6B,EAAOiX,QAAUjX,EAAOiX,OAAO+J,WACxB17C,EAAI86C,SAAS,IAAIvI,EAAkB,CACtC7E,MAAO,qBACPzB,KAAM,qDACN0B,GAAI,WACL,IAAIkF,EAAsB,CAACnY,EAAOiX,YAErC3xC,EAAI66C,WAAW,CAACjD,SAAS,IAClBh5C,KAAK8W,OAAO0C,SAAS,CAACxZ,KAAK26C,UAAU5H,OAAOjX,EAAOiX,WAKlE,eAAe3xC,EAAoC06B,GAC/C,MAAMihB,EAAY/8C,KAAK66C,MAAMmC,eAAe,EAAA,EAAYhC,OAAOpkC,KAAKmB,YACpE,IAAI,GAAA,CAAQglC,EAAWjhB,EAAO/jB,aAE9B,OADA3W,EAAI66C,WAAW,CAACjD,SAAS,IAClBh5C,KAAK8W,OAAO0C,SAAS,CAAC,iBAAkB,CAACzB,YAAa+jB,EAAO/jB,cAMxE,cAAc3W,EAAoC06B,GAC9C16B,EAAI66C,WAAW,CAACnD,gBAAiBhd,EAAO3gB,UAI5C,mBAAmB/Z,GACRA,EAAI+6C,WAAWrD,gBAAgB31C,QACtC/B,EAAI66C,WAAW,CAACnD,gBAAiB,KAIrC,iBAAiB13C,GACbA,EAAI66C,WAAW,CAACnD,gBAAiB13C,EAAI+6C,WAAWhhC,QAAQqE,UAI5D,YAAYpe,EAAoC06B,GAC5C,MAAMxjB,EAAUlX,EAAI+6C,WAAWrD,gBAAgBt5B,QAC/C,IAAIy9B,GAAkB,EAGtB,MAAMliB,EAAIziB,EAAQka,UAAU0qB,GAAQA,EAAK57C,KAAOw6B,EAAOpd,MAAMpd,IACzDy5B,GAAK,IACLziB,EAAQyZ,OAAOgJ,EAAG,GAClBkiB,GAAkB,GAKd77C,EAAI66C,WAFRngB,EAAOub,QACH4F,EACe,CAACnE,gBAAiBxgC,GAElB,CAACwgC,gBAAiB,IAAIxgC,EAASwjB,EAAOpd,QAG1C,CAACo6B,gBAAiB,CAAChd,EAAOpd,SAGzCtd,EAAI+6C,WAAW1D,UACfz4C,KAAKm9C,kBAAkB/7C,EAAK06B,GAKpC,kBAAkB16B,EAAoC06B,GAClD,OACW16B,EAAI86C,SADW,WAAtBpgB,EAAOpd,MAAM5Z,KACO,IAAIguC,EAAWhX,EAAOpd,OAEtB,IAAI01B,EAAgB,CAACtY,EAAOpd,SAKxD,sBAAsBtd,GAClB,MAAM+Z,EAAUnb,KAAK66C,MAAMmC,eAAe,GAAWlE,iBACjDsB,EAAWp6C,KAAK66C,MAAMmC,eAAe,GAAWI,kBAChDxE,EAAc54C,KAAK66C,MAAMmC,eAAe,GAAWpE,aACnDF,EAAat3C,EAAI+6C,WAAWzD,WAEhC,OAAO14C,KAAK06C,WAAWzf,OAAO,CAACmf,SAAAA,IAAW7wC,KAAK,OAAA2P,EAAA,EAAA,CAAI,KAE/C,MAGMwjC,EAAW,CAACvhC,QAHC/Z,EAAI+6C,WAAWhhC,QAC7BQ,OAAO+C,IAAyC,IAAhC07B,EAASl+B,QAAQwC,EAAMpd,MAGxC+7C,EAAU,CAAC,IAAI9F,GAAkBp8B,IAGrCuhC,EAAS5D,gBAAkB,GAGvBJ,EAAW3F,QAAUqH,EAASl+B,QAAQw8B,EAAW3F,OAAOzxC,KAAO,GAC/DtB,KAAK66C,MAAMqB,SAAS,IAAIpJ,EAAW9yC,KAAK66C,MAAMmC,eAAe,GAAWM,uBAI5E,MAAMzK,EAAU13B,EAAQQ,OAAO+C,GAAwB,WAAfA,EAAM5Z,MAQ9C,OAPI+tC,EAAQ1vC,SACR0vC,EAAQ7kC,QAAQ+kC,UAAiB6F,EAAY7F,EAAOzxC,KACpDo7C,EAAS9D,YAAcA,EACvByE,EAAQrqC,KAAK,IAAI4/B,IAGrBxxC,EAAI66C,WAAWS,GACRt7C,EAAI86C,SAASmB,MAK5B,sBAAsBj8C,EAAoC06B,SACtD,GAAoB,QAAf,EAAEA,MAAAA,OAAM,EAANA,EAAQpd,aAAK,IAAA,OAAA,EAAA,EAAEpd,GAKtB,OAH4BF,EAAI+6C,WAAWrD,gBACtCnwB,KAAKjK,GAASA,EAAMpd,KAAOw6B,EAAOpd,MAAMpd,SAE7C,EACWF,EAAI86C,SAAS,IAAI/E,GAA4B,CAACrb,EAAOpd,SAKpE,iBAAiBtd,EAAoC06B,GACjD,MAAMkf,EAAQ55C,EAAI+6C,WAIZO,EAAqC,CACvC9D,YAAa,IAAIoC,EAAMpC,YAAa9c,EAAOiX,SAW/C,OAfuBjX,EAAOiX,OAAOkI,YAQdD,EAAMtC,WAAW3F,OAAOzxC,KAC3Co7C,EAASvhC,QAAU,CAAC2gB,EAAOiX,UAAWiI,EAAM7/B,UAGhD/Z,EAAI66C,WAAWS,GAGRt7C,EAAI86C,SAAS,IAAItJ,GAI5B,aAAaxxC,EAAoC06B,GAC7C,MAAMkf,EAAQ55C,EAAI+6C,WACdO,EAAW,CAACvhC,QAAS6/B,EAAM7/B,QAAQqE,SACnCub,EAAI2hB,EAASvhC,QAAQqX,UAAU0qB,GAAQA,EAAK57C,KAAOw6B,EAAOpd,MAAMpd,IAgBpE,GAbIy5B,GAAK,IACL2hB,EAASvhC,QAAQ4f,GAAK,OAAH,OAAA,OAAA,OAAA,GAAO2hB,EAASvhC,QAAQ4f,IAAE,CAAE5lB,KAAM2mB,EAAO8b,WAIhE8E,EAAS5D,gBAAkB,CAAC,OAAD,OAAA,OAAA,OAAA,GAAKkC,EAAMlC,gBAAgB,IAAE,CAAE3jC,KAAM2mB,EAAO8b,WAGnEoD,EAAMtC,WAAW3F,QAAUiI,EAAMtC,WAAW3F,OAAOzxC,KAAOw6B,EAAOpd,MAAMpd,KACvEo7C,EAAShE,WAAa,OAAH,OAAA,OAAA,OAAA,GAAOsC,EAAMtC,YAAU,CAAE3F,OAAQjX,EAAOpd,SAIrC,WAAtBod,EAAOpd,MAAM5Z,KAAmB,CAChC,MAAM8zC,EAAc,OAAH,OAAA,GAAOoC,EAAMpC,aAC9BA,EAAY9c,EAAOpd,MAAMpd,IAAM,OAAH,OAAA,OAAA,OAAA,GAAOs3C,EAAY9c,EAAOpd,MAAMpd,KAAG,CAAE6T,KAAM2mB,EAAO8b,UAC9E8E,EAAS9D,YAAcA,EACvBx3C,EAAI86C,SAAS,IAAItJ,GAGrBxxC,EAAI66C,WAAWS,GAInB,gBAAgBt7C,GACZA,EAAI66C,WAAW,CAAClD,UAAU,IAI9B,gBAAgB33C,GACZA,EAAI66C,WAAW,CAAClD,UAAU,IAI9B,aAAa33C,EAAoC06B,SAC7C,MAAM3gB,EAAU2gB,EAAO3gB,SAAW/Z,EAAI+6C,WAAWrD,gBAEjD,IAAO,GAAWyE,iBAAiBpiC,EAAS2gB,EAAOe,aAAc,OAEjEz7B,EAAI86C,SAAS,IAAIlH,EAAiB2E,GAAqB6D,cAEvD,MAAMxF,EAAc78B,EAAQ,GAAG8/B,UAE/B,OAAOj7C,KAAK06C,WAAW8C,YAAY,CAACpD,SAAUj/B,EAAQ/R,IAAIsV,GAASA,EAAMpd,IAAKu7B,YAA+B,QAApB,EAAEf,EAAOe,mBAAW,IAAA,OAAA,EAAA,EAAEv7B,KAAKiI,KAChH,OAAA8gC,EAAA,EAAA,CAAS,IAAMjpC,EAAI86C,SAAS,IAAIjH,IAChC,OAAA/7B,EAAA,EAAA,CAAIE,UACA,OAAOhY,EAAI86C,SAAS,IAAInE,GAAqC,QAAnB,EAACjc,EAAOe,mBAAW,IAAA,OAAA,EAAA,EAAEv7B,GAAI02C,EAAa5+B,EAAS+B,WACzF2xB,GACO1rC,EAAI86C,SAAS,IAAIjE,GAAkBnL,EAAYsB,WAMlE,mBAAmBhtC,EAAoC06B,GACnD,MAAMkf,EAAQ55C,EAAI+6C,WACd/B,EAAWte,EAAO3gB,QAAQ/R,IAAIsV,GAASA,EAAMpd,IAC7CuxC,EAAU/W,EAAO3gB,QAAQQ,OAAO+C,GAAwB,WAAfA,EAAM5Z,MAG7C43C,EAAW,CACb5D,gBAAiB,GACjB39B,QAAS6/B,EAAM7/B,QAAQQ,OAAO+C,IAAyC,IAAhC07B,EAASl+B,QAAQwC,EAAMpd,MAYlE,GARIuxC,EAAQ1vC,SACRu5C,EAAS9D,YAAc,OAAH,OAAA,GAAOoC,EAAMpC,aACjC9c,EAAO3gB,QACFQ,OAAO+C,GAAwB,WAAfA,EAAM5Z,MACtBkJ,QAAQ0Q,GAASg+B,EAAS9D,YAAYl6B,EAAMpd,IAAMod,IAIvDs8B,EAAMtC,WAAW3F,OAAQ,CACzB,MAAMA,EAASjX,EAAO3gB,QAAQwN,KAAKjK,GAASs8B,EAAMtC,WAAW3F,OAAOzxC,KAAOod,EAAMpd,IAC7EyxC,IAAQ2J,EAAShE,WAAa,OAAH,OAAA,OAAA,OAAA,GAAOsC,EAAMtC,YAAU,CAAE3F,OAAAA,KAI5D,OADA3xC,EAAI66C,WAAWS,GACRt7C,EAAI86C,SAAS,IAAItJ,GAI5B,YAAYxxC,EAAoC06B,GAC5C97B,KAAK86C,WAAWv6C,ITnnBK,mBSmnBcu7B,EAAOuE,MAC1Cj/B,EAAI66C,WAAW,CAAC/C,SAAUpd,EAAOuE,OAIrC,qBAAqBj/B,GACjBA,EAAI66C,WAAW,CACX9C,gBAAiB/3C,EAAI+6C,WAAWhD,iBAKxC,cAAc/3C,GACVA,EAAI66C,WAAW,CACX7C,aAAch4C,EAAI+6C,WAAW/C,cAKrC,WAAWh4C,EAAoC06B,GAC3C,MAAM2hB,EAAiBr8C,EAAI+6C,WAAWhhC,QAClCm+B,EAAal4C,EAAI+6C,WAAW7C,WAE1BoE,EAAa5hB,EAAO3gB,QACrBQ,OAAO+C,IAAU++B,EAAe90B,KAAKu0B,GAAQA,EAAK57C,KAAOod,EAAMpd,KAE9Dq8C,EAAUD,EAAW/hC,OAAO+C,GAAwB,WAAfA,EAAM5Z,MAC5CzB,OAAO,CAACu6C,EAAKl/B,IAAUk/B,EAAMl/B,EAAMm/B,UAAW,GAEnDz8C,EAAI66C,WAAW,CACX9gC,QAAS,IAAIuiC,KAAeD,GAC5BnE,WAAY,OAAF,OAAA,OAAA,OAAA,GAAMA,GAAU,CAAEE,KAAMF,EAAWE,KAAOmE,MAK5D,YAAYv8C,EAAoC06B,GAC5C,IAAO97B,KAAK89C,wBAAwB18C,EAAI+6C,WAAW7C,WAAYxd,EAAO1O,OAClE,OAAOhsB,EAAI86C,SAAS,IAAI7D,IAG5B,IAAOvc,EAAO1O,MAAMjqB,OAAQ,OAE5B/B,EAAI86C,SAAS,IAAI7I,GAEjB,MAEM0K,EAFQ38C,EAAI+6C,WACYzD,WACQ3F,OAAOzxC,IAAM,KAOnD,OAAOtB,KAAK46C,QAAQoD,MAAMliB,EAAO1O,MALlB,CACX6wB,WAAY,CAACC,SAAUH,GACvB5R,UAAWnsC,KAAKmsC,YAG4B5iC,KAC5C,OAAA2P,EAAA,EAAA,CAAIE,IAEA,MAAM+B,EAAU,IAAI/B,EAAS0yB,UAAUqS,YAAa/kC,EAAS0yB,WAGvD4R,EAAaviC,EAAQQ,OAAOyiC,GAAYA,GAAYA,EAASnD,YAAc8C,GAC3ErkC,EAActY,EAAI+6C,WAAWzD,WAG/Bh/B,EAAYq5B,QAAUr5B,EAAYq5B,OAAOzxC,KAAOy8C,GAChD38C,EAAI86C,SAAS,IAAI3I,EAAWmK,IAIhC,MAAM7K,EAAU13B,EAAQQ,OAAO+C,GAASA,GAAwB,WAAfA,EAAM5Z,MACvD,GAAI+tC,EAAQ1vC,OAAQ,CAChB,MAAMy1C,EAAc,IAAIx3C,EAAI+6C,WAAWvD,eAAgB/F,GACvDzxC,EAAI66C,WAAW,CAACrD,YAAAA,IAChBx3C,EAAI86C,SAAS,IAAItJ,OAOjC,4BAA4BxxC,GACxB,MAAM03C,EAAkB94C,KAAK66C,MAAMmC,eAAe,GAAWlE,iBACzDsB,EAAWtB,EAAgB1vC,IAAIsV,GAASA,EAAMpd,IAE5Co8C,EAAat8C,EAAI+6C,WAAWhhC,QACzBQ,OAAO+C,IAAyC,IAAhC07B,EAASl+B,QAAQwC,EAAMpd,KAEhD,OAAOtB,KAAK06C,WAAWzf,OAAO,CAACmf,SAAAA,EAAUiE,eAAe,IAAO90C,KAAK,OAAA2P,EAAA,EAAA,CAAI,KACpE9X,EAAI66C,WAAW,CACX9gC,QAASuiC,EACT5E,gBAAiB,KAGd13C,EAAI86C,SAAS,CAChB,IAAI/D,GAA4BW,GAChC,IAAIR,QAMhB,sBAAsBl3C,EAAoC06B,GACtD,MAAM4c,EAAa14C,KAAK66C,MAAMmC,eAAe,GAAWtE,YAClD4F,EAAkBxiB,EAAO3gB,SAAWnb,KAAK66C,MAAMmC,eAAe,GAAWlE,iBACzEsB,EAAWkE,EAAgBl1C,IAAIsV,GAASA,EAAMpd,IACpD,IAAIo8C,EASJ,OANIA,EADAhF,EAAWvjC,OAASihC,GAAWjhC,KAClB/T,EAAI+6C,WAAWhhC,QACvBQ,OAAO+C,IAAyC,IAAhC07B,EAASl+B,QAAQwC,EAAMpd,KAE/B,IAAIF,EAAI+6C,WAAWhhC,WAAY2gB,EAAO3gB,SAGhDnb,KAAK06C,WAAW6D,QAAQ,CAACnE,SAAAA,IAAW7wC,KAAK,OAAA2P,EAAA,EAAA,CAAI,KAChD9X,EAAI66C,WAAW,CACX9gC,QAASuiC,EACT5E,gBAAiB,KAGd13C,EAAI86C,SAAS,IAAI9D,GAA6BkG,OAK7D,WAAWl9C,GAGP,OAFAA,EAAI86C,SAAS,IAAIlH,EAAiB2E,GAAqBQ,aAEhDn6C,KAAK06C,WAAWP,aAAa5wC,KAChC,OAAA8gC,EAAA,EAAA,CAAS,IAAMjpC,EAAI86C,SAAS,IAAIjH,IAChC,OAAA/7B,EAAA,EAAA,CAAI,KACA9X,EAAI66C,WAAW,CACX9gC,QAAS,GACT29B,gBAAiB,KAGd13C,EAAI86C,SAAS,IAAI5D,OAMpC,QAAQl3C,EAAoC06B,GACxC,MAAMkf,EAAQ55C,EAAI+6C,WACdx0B,EAAMmU,EAAO3gB,QAAQ/R,IAAIsV,GAASA,EAAMpd,IAE5C,OAAOtB,KAAK06C,WAAW8D,QAAQ72B,GAAKpe,KAAK,OAAA2P,EAAA,EAAA,CAAIE,IACzC,MAAMskC,EAAa1C,EAAM7/B,QAAQ/R,IAAIsV,IAC7BiJ,EAAIzL,QAAQwC,EAAMpd,KAAO,IAClBod,EAAM28B,OAAM38B,EAAM28B,KAAO,IAChC38B,EAAM28B,KAAKroC,KAAKoG,EAAS+S,MAEtBzN,IAGLo6B,EAAkBkC,EAAMlC,gBAAgB1vC,IAAIsV,IAC9CA,EAAM28B,KAAKroC,KAAKoG,EAAS+S,KAClBzN,IAGXtd,EAAI66C,WAAW,CACX9gC,QAASuiC,EACT5E,gBAAiBA,OAM7B,WAAW13C,EAAoC06B,GAC3C,MAAMkf,EAAQ55C,EAAI+6C,WACdx0B,EAAMmU,EAAO3gB,QAAQ/R,IAAIsV,GAASA,EAAMpd,IAE5C,OAAOtB,KAAK06C,WAAW+D,WAAW92B,GAAKpe,KAAK,OAAA2P,EAAA,EAAA,CAAIE,IAC5C,MAAMskC,EAAa1C,EAAM7/B,QAAQ/R,IAAIsV,IAC7BiJ,EAAIzL,QAAQwC,EAAMpd,KAAO,GAAGtB,KAAK0+C,UAAUhgC,EAAOtF,EAAS+S,KACxDzN,IAGLo6B,EAAkBkC,EAAMlC,gBACzB1vC,IAAIsV,GAAS1e,KAAK0+C,UAAUhgC,EAAOtF,EAAS+S,MAEjD/qB,EAAI66C,WAAW,CACX9gC,QAASuiC,EACT5E,gBAAiBA,OAM7B,cAAc13C,EAAoC06B,GAC9C,MAAMnU,EAAMmU,EAAO3gB,QAAQ/R,IAAIsV,GAASA,EAAMpd,IACxCo8C,EAAat8C,EAAI+6C,WAAWhhC,QAC7BQ,OAAO+C,IAAoC,IAA3BiJ,EAAIzL,QAAQwC,EAAMpd,KACvCF,EAAI66C,WAAW,CACX9gC,QAASuiC,IAEb19C,KAAKg6B,MAAMjd,KAAK,CAACmU,QAAS,wBAAyB/T,aAAc,CAACwhC,MAAOh3B,EAAIxkB,UAIjF,oBAAoB/B,GAChB,MAAM+Z,EAAUnb,KAAK66C,MAAMmC,eAAe,GAAWlE,iBACjDsB,EAAWj/B,EAAQ/R,IAAIsV,GAASA,EAAMpd,IACtCuxC,EAAU13B,EAAQQ,OAAO+C,GAAwB,WAAfA,EAAM5Z,MACxC23C,EAAWr7C,EAAI+6C,WAEnB,OAAOn8C,KAAK89C,wBAAwB18C,EAAI+6C,WAAW7C,WAAYn+B,IAI/D/Z,EAAI86C,SAAS,IAAIlH,EAAiB2E,GAAqBiF,cAEhD5+C,KAAK06C,WAAWj7B,KAAK,CAAC26B,SAAAA,IAAW7wC,KACpC,OAAA8gC,EAAA,EAAA,CAAS,IAAMjpC,EAAI86C,SAAS,IAAIjH,IAChC,OAAA/7B,EAAA,EAAA,CAAIE,IACA,MAAMsjC,EAAW,GAGbt7C,EAAI+6C,WAAWzD,WAAW3F,SAC1B2J,EAASvhC,QAAUshC,EAASthC,QAAQmxB,OAAOlzB,EAAS+B,UAIpD03B,EAAQ1vC,SACRu5C,EAAS9D,YAAc,OAAH,OAAA,GAAO6D,EAAS7D,aACpCx/B,EAAS+B,QACJQ,OAAOo3B,GAA0B,WAAhBA,EAAOjuC,MACxBkJ,QAAQ+kC,GAAU2J,EAAS9D,YAAY5lC,KAAK+/B,KAGrD3xC,EAAI66C,WAAWS,GAGft7C,EAAI86C,SAAS,IAAI5D,IAGbzF,EAAQ1vC,QAAQ/B,EAAI86C,SAAS,IAAItJ,GAErC,MAAM8F,EAAa14C,KAAK66C,MAAMmC,eAAe,GAAWtE,YAExD14C,KAAKg6B,MAAMjd,KAAK,CAACmU,QAAS,wCAAyC/T,aAAc,CAACwhC,MAAOvE,EAASj3C,OAAQyuC,SX/3B9G,WW83BqB8G,EAAWvjC,KAAsCnV,KAAK86B,WAAWV,iBAAiBl3B,MAAMiS,KAA1C,aAA6DujC,EAAW3F,OAAO59B,YAhC3I/T,EAAI86C,SAAS,IAAI7D,IAuChC,iBAAiBj3C,EAAoC06B,GACjD,MAAMlhB,EAAS,OAAH,OAAA,OAAA,OAAA,GACL5a,KAAK+6C,mBAAiB,CACzB8D,UAA2B,cAAhB/iB,EAAOh3B,OAGtB,OAAA,GAAA,EAAA,CAAiB8V,GAAQjP,KAAKyhB,IACnBA,GAAWA,EAAMjqB,QACxB/B,EAAI86C,SAAS,IAAIlI,EAAY5mB,MAMrC,mBAAmBhsB,GACf,OAAOpB,KAAK06C,WAAWoE,gBAAgBv1C,KAAK,OAAA2P,EAAA,EAAA,CAAIogC,IAC5Cl4C,EAAI66C,WAAW,CAAC3C,WAAY,CAACE,KAAMF,EAAWE,KAAMD,UAAWD,EAAWC,gBAKlF,cAAcn4C,EAAoC06B,GAC9C,MAAMijB,EAAc39C,EAAI+6C,WAAWhhC,QAAQqE,QACvCs5B,EAAkB13C,EAAI+6C,WAAWrD,gBAAgBt5B,QAErDsc,EAAO3gB,QAAQnN,QAAQgxC,IAEnB,MAAMC,EAAYF,EAAYvsB,UAAU9T,GAASsgC,EAAa19C,KAAOod,EAAMpd,IAC3Ey9C,EAAYE,GAAa,OAAH,OAAA,OAAA,OAAA,GAAOF,EAAYE,IAAeD,GAGxD,MAAME,EAAgBpG,EAAgBtmB,UAAU9T,GAASsgC,EAAa19C,KAAOod,EAAMpd,IAC/E49C,GAAiB,IACjBpG,EAAgBoG,GAAiB,OAAH,OAAA,OAAA,OAAA,GAAOpG,EAAgBoG,IAAmBF,MAIhF59C,EAAI66C,WAAW,CAAC9gC,QAAS4jC,EAAajG,gBAAAA,IAI1C,uBAAuB13C,GAAoC,MAACsd,EAAK,YAAE82B,IAC/D,OAAOx1C,KAAK06C,WAAWyE,OAAOzgC,EAAMpd,GAAI,CAACk0C,YAAAA,IACpCjsC,KAAK,OAAA2P,EAAA,EAAA,CAAIE,IACNhY,EAAI86C,SAAS,IAAI/G,EAAc,CAAC/7B,EAAS0yB,gBAKrD,kBAAkB1qC,EAAoC06B,GAClD16B,EAAI66C,WAAW,CACXxD,SAAU3c,EAAOK,OAAOsc,SACxBW,aAActd,EAAOK,OAAOsc,SAC5BU,gBAAiBrd,EAAOK,OAAOsc,WAKvC,eAAer3C,EAAoC06B,GAC/C16B,EAAI66C,WAAW,CAACpiB,YAAaiC,EAAOuZ,OAIxC,aAAaj0C,EAAoC06B,GAC7C16B,EAAI66C,WAAW,CAAC5C,gBAAiBvd,EAAOlB,YAI5C,WAAWx5B,GACPA,EAAIg+C,SAAS,OAAD,OAAA,OAAA,OAAA,GAAK5G,IAA0B,CAAEU,SAAU93C,EAAI+6C,WAAWjD,YAGlE,qBAAqBpgC,GACzB,MAAMV,EAAOpY,KAAK66C,MAAMmC,eAAe,GAAWtE,YAC9Ce,EAAOz5C,KAAK66C,MAAMmC,eAAe,GAAWvD,MAE1C1hC,EAAc,OAAH,OAAA,CACboE,QAASs9B,EAAK5D,WACdz5B,SAAUq9B,EAAK3D,eACZh9B,GASP,MXh+BI,WW09BAV,EAAKjD,OACL4C,EAAYsnC,SAAWjnC,EAAKu9B,YAE5B8D,EAAK/9B,QAAO3D,EAAY2D,MAAQ+9B,EAAK/9B,OACrC+9B,EAAK30C,OAAMiT,EAAYjT,KAAO20C,EAAK30C,MAEhCiT,EAMH,wBAAwBuhC,EAA4BlsB,GAOxD,OANgBA,EAAM/pB,OAAO,CAACu6C,EAAK19B,IAExB09B,GADM,OAAA,GAAA,EAAA,CAAO,OAAQ19B,GAAQA,EAAKjN,KAAOiN,EAAK29B,WAEtD,GACoBvE,EAAWE,KACXF,EAAWC,UAI9B,UAAU76B,EAAmByN,GAEjC,OADAzN,EAAM28B,KAAO38B,EAAM28B,KAAK1/B,OAAO/W,GAAKA,EAAEtD,KAAO6qB,EAAI7qB,IAC1Cod,EAGX,wBAAwB4gC,EAA6BziB,GACjD,QAAIA,GAAoC,WAArBA,EAAY/3B,OAIxBw6C,EAAclE,MAAM18B,MAEnBme,MAAAA,OAAW,EAAXA,EAAav7B,MAAOod,EAAMu8B,WAG1Bpe,GAAeA,EAAYj8B,KAAK2+C,WAAW7gC,EAAM9d,uDA95BpD45C,GAAU,EAAA,GAAA,IAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,IAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAYPZ,+BAZHY,EAAU,QAAVA,EAAU,YA+OnB,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAO9H,wCASR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOE,wCAYR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAO,mDAaR,OAAA,EAAA,EAAA,CAAA,CARC,OAAA,EAAA,EAAA,CAAO,IACP,OAAA,EAAA,EAAA,CAAO,IACP,OAAA,EAAA,EAAA,CAAO,IACP,OAAA,EAAA,EAAA,CAAO,IACP,OAAA,EAAA,EAAA,CAAO,IACP,OAAA,EAAA,EAAA,CAAO,IACP,OAAA,EAAA,EAAA,CAAOiC,GACP,OAAA,EAAA,EAAA,CAAOF,yCAqDR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAO7B,EAAY,CAAC0M,mBAAmB,oCAkBxC,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOxM,EAAgB,CAACwM,mBAAmB,wCAW5C,OAAA,EAAA,EAAA,CAAA,CAHC,OAAA,EAAA,EAAA,CAAOtI,IACP,OAAA,EAAA,EAAA,CAAOC,IACP,OAAA,EAAA,EAAA,CAAOlE,sCAMR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOE,2CAOR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOD,yCAMR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOkE,qCA4BR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOE,2CAUR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOlE,8CAqCR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOqE,+CAaR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOC,0CAsBR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOC,sCA+BR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOE,yCAMR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOC,yCAMR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOtE,qCAqBR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOuE,4CA+BR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOlE,oCAOR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOC,6CAQR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOC,sCAQR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOR,mCAkBR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOS,oCA6CR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOE,oDAsBR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOD,8CAyBR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOE,EAAY,CAACqL,mBAAmB,oCAkBxC,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOhL,EAAS,CAACgL,mBAAmB,iCA2BrC,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAO/K,EAAY,CAAC+K,mBAAmB,oCAsBxC,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAO9K,sCAYR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOI,4CA+CR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOC,yCAeR,OAAA,EAAA,EAAA,CAAA,CAFC,OAAA,EAAA,EAAA,CAAOpC,GACP,OAAA,EAAA,EAAA,CAAO2F,4CAQR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOnD,sCAqBR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOI,+CASR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOgD,2CAUR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOnD,uCAMR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOE,qCAMR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOJ,mCA11BR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,0BAMD,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,gCAMD,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,yBAMD,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,6BAMD,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,0BAMD,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,8BAMD,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAS,CAAC,GAAW4D,8CAMtB,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAS,CAAC,GAAWA,2CAMtB,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAS,CAAC,GAAW2G,uDAMtB,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAS,CAAC,GAAWC,4BAA6B,GAAW9G,6CAS9D,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAS,CAAC,GAAWE,8CAMtB,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAS,CAAC,GAAWA,uDAMtB,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAS,CAAC,GAAWA,iDAMtB,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,sBAMD,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,2BAOD,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAS,CAAC,GAAWA,qDAMtB,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,2BAMD,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,yBAMD,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,mBAMD,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,uBAMD,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,sBAMD,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,0BAMD,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,uBAMD,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,0BAMD,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,0BAMD,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,yBAMD,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,4BAMD,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,iCAMD,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,4BAMD,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,iCAMD,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAS,CAAC,GAAW6G,cAAe,GAAWC,iDAOhD,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,uBAiBD,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,0BAMD,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,8BAMD,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAS,CAAC,GAAWhE,aAAc,GAAW/hB,8CAM/C,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAS,CAAC,GAAWif,gBAAiB,GAAWjf,iDAQlD,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAS,CAAC,GAAWif,gBAAiB,GAAWjf,oDASlD,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAS,CAAC,GAAW6e,WAAY,GAAW7e,YAAa,GAAWwf,uCA7N5DmB,EAAU,GAAA,OAAA,EAAA,EAAA,CAAA,CALtB,OAAA,EAAA,EAAA,CAAuB,CACpBrlC,KAAM,QACN7S,SAAUk2C,MAGDgC,SEtGN,MAAMqF,GAAwB,CACjC,QACA,QACA,OACA,MACA,UACA,SACA,gBACA,QACA,aACA,OACA,6CCAG,IAAA,GAAA,YAAMC,EAIT,eACW9/C,KAAK8E,MAAQ9E,KAAK+/C,OACrB//C,KAAK8E,KAAO9E,KAAK+/C,KAAK38C,MAAM,KAAK,IAE9By8C,GAAsBlrB,SAAS30B,KAAK8E,QACvC9E,KAAK8E,KAAO,WAIb,UACH,OCvBkBk7C,EDuBDhgD,KAAK8E,KCtBnB,OAAA,GAAA,EAAA,CAAUk7C,GAAMnwB,QAAQ,IAAK,KADjC,IAAmBmwB,gDDSbF,2BAAAA,EAAiB,UAAA,CAAA,CAAA,cAAA,OAAA,CAAA,KAAA,OAAA,KAAA,QAAA,SAAA,CAAA,EAAA,IAAA,MAAA,EAAA,KAAA,EAAA,OAAA,CAAA,CAAA,EAAA,aAAA,EAAA,UAAA,YAAA,SAAA,SAAA,EAAA,GAAA,EAAA,GEX9B,EAAA,GAAA,EAAA,WAAA,QACQ,EAAA,GAAA,UAAA,EAAA,UAAA,eAAA,CAAsC,UAAA,EAAA,UAAA,kMFUvC,6BGPC,EAAA,GAAA,EAAA,MAAA,GAAqE,EAAA,GAAA,GAA0B,EAAA,gCAA1B,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,mCAHzE,EAAA,GAAA,GACI,EAAA,GAAA,EAAA,YAAA,GACA,EAAA,GAAA,EAAA,MAAA,GAAkB,EAAA,GAAA,GAA2B,EAAA,KAC7C,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,MAAA,GACJ,EAAA,+BAHe,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,GAAA,MACO,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,MACgB,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,OAAA,8BAJ1C,EAAA,GAAA,GACI,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,eAAA,GAKJ,EAAA,0BALkB,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,KCYX,IAAA,GAAA,YAAMG,EAOT,YAAoBpF,GAAA,KAAAA,MAAAA,EALE,KAAAt3C,UAAY,yBAClC,eACI,OAAQvD,KAAK66C,MAAMmC,eAAe,GAAWjE,wDAJxCkH,GAAyB,EAAA,GAAA,EAAA,4BAAzBA,EAAyB,UAAA,CAAA,CAAA,uBAAA,SAAA,EAAA,aAAA,SAAA,EAAA,GAAA,EAAA,6MDbtC,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,eAAA,yBAAc,EAAA,GAAA,OAAA,EAAA,GAAA,EAAA,EAAA,EAAA,srBCc0B,OAAA,EAAA,EAAA,CAAA,CAAnC,OAAA,EAAA,EAAA,CAAO,GAAWnH,mDADhB,2DCPA,MAAMoH,GAA+B,CACxCpE,MAAM,EACNqE,MAAM,EACNC,UAAU,uDCOP,IAAA,GAAA,YAAMC,EACT,YAAoBtpC,GAAA,KAAAA,KAAAA,EAEb,kBAAkBwkB,EAAgB6e,EAAoB5f,GACzD,OAAOx6B,KAAK+W,KAAKskB,IAAI,mCAAmCE,EAAU,CAACf,YAAAA,EAAa4f,SAAAA,IAM7E,aAAathC,GAChB,OAAO9Y,KAAK+W,KAAKokB,KAAK,yBAA0B,OAAF,OAAA,OAAA,OAAA,GACvCriB,GAAM,CACTshC,SAAUthC,EAAOqC,QAAQ/R,IAAIsV,GAASA,EAAMpd,OAO7C,WAAWi6B,EAAgB6e,GAC9B,OAAOp6C,KAAK+W,KAAKokB,KAAK,4BAA8BI,EAAQ,CAAC6e,SAAAA,kDArBxDiG,GAAgB,EAAA,GAAA,GAAA,8BAAhBA,EAAgB,QAAhBA,EAAgB,UAAA,WAFb,YAET,GCAA,GAAA,YAAMC,UACO,EAAAx7C,KAAO,qCADpB,GAIA,GAAA,YAAMy7C,EAET,YAAmBlL,EAA6B7a,GAA7B,KAAA6a,KAAAA,EAA6B,KAAA7a,YAAAA,UADhC,EAAA11B,KAAO,2CADpB,GAKA,GAAA,YAAM07C,EAET,YAAmBnL,GAAA,KAAAA,KAAAA,UADH,EAAAvwC,KAAO,+BADpB,GAKA,GAAA,YAAM27C,EAET,YAAmBhF,GAAA,KAAAA,MAAAA,UADH,EAAA32C,KAAO,6BADpB,GAKA,GAAA,YAAMowC,UACO,EAAApwC,KAAO,yBADpB,GAIA,GAAA,YAAM47C,EAET,YAAmBxlB,GAAA,KAAAA,QAAAA,UADH,EAAAp2B,KAAO,iCADpB,GAKA,GAAA,YAAM67C,EAET,YAAmBzI,GAAA,KAAAA,SAAAA,UADH,EAAApzC,KAAO,wCADpB,gBA2BM87C,EAAgB,MACzB,YACY/F,EACAgG,GADA,KAAAhG,MAAAA,EACA,KAAAgG,UAAAA,EAIZ,uBAAuB7F,GACnB,OAAOA,EAAM8F,gBAIjB,aAAa9F,GACT,OAAQ,GAAA,CAAQA,EAAM+F,SAAU/F,EAAM8F,iBAI1C,eAAe9F,GACX,OAAOA,EAAMhC,QAIjB,oBAAoBgC,GAChB,OAAOA,EAAMgG,aAIjB,gBAAgB5/C,GACZ,MAAM+Z,EAAUnb,KAAK66C,MAAMmC,eAAe,GAAWlE,iBAErD,IAAI2C,EAAQtgC,EACP/R,IAAIsV,GAASA,EAAM+8B,OACnBp4C,OAAO,CAAC49C,EAAK/D,IAAS+D,EAAI3U,OAAO4Q,GAAO,IAG7CzB,EAAQ,IAAA,CAAUA,GAClBA,EAAQA,EAAM9/B,OAAO05B,KAAUA,GAG/B,MAAM6L,EAAc,IAAA,CAAOzF,EAAOpG,GAAQA,EAAK/zC,IAI3C6Z,EAAQhY,OAAS,GACjB+9C,EAAYlzC,QAAQqnC,IAChB,MAAM7a,EAAcrf,EACf/R,IAAIsV,GAASA,EAAM+8B,MAAM9yB,KAAK+jB,GAAKA,EAAEprC,KAAO+zC,EAAK/zC,KACjDqa,OAAO+wB,KAAOA,GACdtjC,IAAIsjC,GAAKt6B,OAAO8I,OAAO,GAAIwxB,EAAEiP,qBAE9BxgC,EAAQhY,SAAWq3B,EAAYr3B,QAAUq3B,EAAYra,KAAKsa,IAAM,GAAA,CAAQA,EAAGD,EAAY,QACvF6a,EAAKsG,kBAAoB,CAACwF,QAAQ,MAK9C//C,EAAI66C,WAAW,CACX6E,gBAAiB,IAAA,CAAUI,GAC3BH,SAAUG,IAKlB,SAAS9/C,EAA0C06B,GAC/C16B,EAAI66C,WAAW,CACX6E,gBAAiBhlB,EAAO2f,MACxBsF,SAAU,IAAA,CAAUjlB,EAAO2f,SAKnC,sBAAsBr6C,EAA0C06B,GAC5D97B,KAAKohD,kBAAkBhgD,EAAK06B,EAAOuZ,KAAK/zC,IAAI,GAC5C,MAAM84C,EAAWp6C,KAAK66C,MAAMmC,eAAe,GAAWlE,iBAAiB1vC,IAAIqU,GAAKA,EAAEnc,IAElF,OAAOtB,KAAK6gD,UAAUQ,kBADPvlB,EAAOuZ,KAAK/zC,GACqB84C,EAAUte,EAAOtB,aAAajxB,KAC1E,OAAA8gC,EAAA,EAAA,CAAS,IAAMrqC,KAAKohD,kBAAkBhgD,EAAK06B,EAAOuZ,KAAK/zC,IAAI,IAC3D,OAAA4X,EAAA,EAAA,CAAIE,GAAYpZ,KAAKshD,YAAYlgD,EAAKgY,EAASqiC,SAKvD,WAAWr6C,EAA0C06B,GAEjD,OADA97B,KAAKohD,kBAAkBhgD,EAAK06B,EAAOuZ,KAAK/zC,IAAI,GACrCtB,KAAK6gD,UAAUU,WAClBzlB,EAAOuZ,KAAK/zC,GACZtB,KAAK66C,MAAMmC,eAAe,GAAWlE,iBAAiB1vC,IAAIqU,GAAKA,EAAEnc,KACnEiI,KACE,OAAA8gC,EAAA,EAAA,CAAS,IAAMrqC,KAAKohD,kBAAkBhgD,EAAK06B,EAAOuZ,KAAK/zC,IAAI,IAC3D,OAAA4X,EAAA,EAAA,CAAIE,GAAYpZ,KAAKshD,YAAYlgD,EAAKgY,EAASqiC,SAKvD,WAAWr6C,GACRA,EAAIg+C,SAAS,CACTpG,SAAS,EACT8H,gBAAiB,GACjBC,SAAU,GACVC,aAAc,KAKrB,aAAa5/C,EAA0C06B,GACnD16B,EAAI66C,WAAW,CAACjD,SAAS,IAEzB,MAAM9d,EAAU,OAAH,OAAA,OAAA,OAAA,GACNY,EAAOZ,SAAO,CACjB/f,QAASnb,KAAK66C,MAAMmC,eAAe,GAAWlE,mBAGlD,OAAO94C,KAAK6gD,UAAUW,aAAatmB,GAC9B3xB,KACG,OAAA8gC,EAAA,EAAA,CAAS,IAAMjpC,EAAI66C,WAAW,CAACjD,SAAS,KACxC,OAAA9/B,EAAA,EAAA,CAAIE,IACAhY,EAAI86C,SAAS,IAAIuE,GAASrnC,EAASqiC,QACnCz7C,KAAKyhD,0BAA0BroC,EAASqiC,QACxCiG,IACAtgD,EAAI86C,SAAS,IAAIyE,GAAmBe,EAActT,YAK1D,kBAAkBhtC,EAA0Cm6B,EAAgBomB,GAE5EvgD,EAAI66C,WADJ0F,EACe,CAACX,aAAc,IAAI5/C,EAAI+6C,WAAW6E,aAAczlB,IAEhD,CAACylB,aAAc5/C,EAAI+6C,WAAW6E,aAAarlC,OAAO+wB,GAAKA,IAAMnR,KAI5E,YAAYn6B,EAAKwgD,GACrBxgD,EAAI66C,WAAW,CACX6E,gBAAiBc,EACjBb,SAAU,IAAA,CAAUa,KAExB5hD,KAAKyhD,0BAA0BG,GAG3B,0BAA0BA,GAC9B,MAIMC,EAJU7hD,KAAK66C,MAAMmC,eAAe,GAAWlE,iBAItB1vC,IAAIsV,IAC/BA,EAAM+8B,MAAQmG,EACPljC,IAGX1e,KAAK66C,MAAMqB,SAAS,IAAI/G,EAAc0M,mDAtJjCjB,GAAgB,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,+BAAhBA,EAAgB,QAAhBA,EAAgB,YA2BzB,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAON,yCAqCR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOG,kCASR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOF,+CAYR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOC,oCAaR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAO,oCAWR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOE,GAAc,CAAClB,mBAAmB,sCAhG1C,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,8BAMD,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,oBAMD,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,sBAMD,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,2BArBQoB,EAAgB,OAAA,EAAA,EAAA,CAAA,CAV5B,OAAA,EAAA,EAAA,CAA6B,CAC1BzrC,KAAM,cACN7S,SAAU,CACNw+C,gBAAiB,GACjBC,SAAU,GACV/H,SAAS,EACTgI,aAAc,OAITJ,sKCtET,EAAA,GAAA,GACI,EAAA,GAAA,EAAA,WAAA,GACA,EAAA,GAAA,EAAA,OAAA,IAAgC,EAAA,GAAA,EAAA,UAAM,EAAA,KAC1C,EAAA,6BAEA,EAAA,GAAA,GACI,EAAA,GAAA,EAAA,WAAA,IACA,EAAA,GAAA,EAAA,OAAA,IAAgC,EAAA,GAAA,EAAA,YAAQ,EAAA,KAC5C,EAAA,6BAEA,EAAA,GAAA,GACI,EAAA,GAAA,EAAA,WAAA,IACA,EAAA,GAAA,EAAA,OAAA,IAAgC,EAAA,GAAA,EAAA,YAAQ,EAAA,KAC5C,EAAA,6BAEA,EAAA,GAAA,GACI,EAAA,GAAA,EAAA,WAAA,IACA,EAAA,GAAA,EAAA,OAAA,IAAgC,EAAA,GAAA,EAAA,gBAAY,EAAA,KAChD,EAAA,MCSG,IAAA,GAAA,YAAMkB,EAOT,YACYjH,EACAvP,EACAtR,GAFA,KAAA6gB,MAAAA,EACA,KAAAvP,IAAAA,EACA,KAAAtR,MAAAA,EATH,KAAAQ,YAA2C0lB,GAE1C,KAAAp8C,OAA8C,IAAI,EAAA,EACrB,KAAAi+C,SAAU,EAS1C,oBACH,OAAI/hD,KAAKw6B,YAAY2mB,OACV,SACAnhD,KAAKw6B,YAAYshB,KACjB,OACA97C,KAAKw6B,YAAY4lB,SACjB,WAEA,OAIR,iBAAiB/lB,GAEhBr6B,KAAKw6B,YADU,SAAfH,EACmB,OAAH,OAAA,GAAO6lB,IAEJ,OAAH,OAAA,OAAA,OAAA,GAAOA,IADD,aAAf7lB,EAC4C,CAAEyhB,MAAM,GAER,CAAEA,MAAM,EAAOsE,UAAU,IAG5EpgD,KAAKq1C,KACLr1C,KAAKgiD,sBAAsBhiD,KAAKw6B,aAEhCx6B,KAAK8D,OAAOG,KAAKjE,KAAKw6B,aAIvB,sBAAsBynB,GACzBjiD,KAAK66C,MAAMqB,SAAS,IAAIqE,GAAsBvgD,KAAKq1C,KAAM4M,IACpDl+C,UAAU,KACP/D,KAAKg6B,MAAMjd,KAAK,wEA5CnB+kC,GAAiC,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,IAAA,EAAA,GAAA,GAAA,4BAAjCA,EAAiC,UAAA,CAAA,CAAA,+BAAA,SAAA,EAAA,aAAA,SAAA,EAAA,GAAA,EAAA,sqBD5B9C,EAAA,GAAA,EAAA,SAAA,mBACI,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,eAAA,GAKA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,eAAA,GAKA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,eAAA,GAKA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,eAAA,GAKA,EAAA,GAAA,EAAA,WAAA,GACJ,EAAA,KAEA,EAAA,GAAA,EAAA,WAAA,EAAA,GACI,EAAA,GAAA,EAAA,MAAA,GAAmB,EAAA,GAAA,SAAA,WAAA,OAAS,EAAAI,iBAAiB,WACzC,EAAA,GAAA,GAAA,WAAA,GACA,EAAA,GAAA,GAAA,OACI,EAAA,GAAA,GAAA,MAAA,GAAW,EAAA,GAAA,GAAA,YAAQ,EAAA,KACnB,EAAA,GAAA,GAAA,MAAA,GAA+B,EAAA,GAAA,GAAA,iEAA6D,EAAA,KAChG,EAAA,KACJ,EAAA,KACA,EAAA,GAAA,GAAA,MAAA,GAAmB,EAAA,GAAA,SAAA,WAAA,OAAS,EAAAA,iBAAiB,eACzC,EAAA,GAAA,GAAA,WAAA,GACA,EAAA,GAAA,GAAA,OACI,EAAA,GAAA,GAAA,MAAA,GAAW,EAAA,GAAA,GAAA,gBAAY,EAAA,KACvB,EAAA,GAAA,GAAA,MAAA,GAA+B,EAAA,GAAA,GAAA,0CAAsC,EAAA,KACzE,EAAA,KACJ,EAAA,KAEA,EAAA,GAAA,GAAA,MAAA,GAAmB,EAAA,GAAA,SAAA,WAAA,OAAS,EAAAA,iBAAiB,WACzC,EAAA,GAAA,GAAA,WAAA,GACA,EAAA,GAAA,GAAA,OACI,EAAA,GAAA,GAAA,MAAA,GAAW,EAAA,GAAA,GAAA,YAAQ,EAAA,KACnB,EAAA,GAAA,GAAA,MAAA,GAA+B,EAAA,GAAA,GAAA,6BAAyB,EAAA,KAC5D,EAAA,KACJ,EAAA,KACJ,EAAA,2BA/CqC,EAAA,GAAA,oBAAA,EAAA,CAA+B,WAAA,EAAA,GAAA,EAAA,GAAA,EAAA,eAAA,SAAA,MAAA,EAAA,KAAA,KAAA,EAAA,KAAA,KAClD,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,WAAA,EAAA,qBAKA,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,SAAA,EAAA,qBAKA,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,SAAA,EAAA,qBAKA,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,aAAA,EAAA,qBAUiC,EAAA,GAAA,GAAA,EAAA,GAAA,kBAAA,SAAA,EAAA,qBAOA,EAAA,GAAA,GAAA,EAAA,GAAA,kBAAA,aAAA,EAAA,qBAQA,EAAA,GAAA,GAAA,EAAA,GAAA,kBAAA,SAAA,EAAA,20BCRR,OAAA,EAAA,EAAA,CAAA,CAAtC,OAAA,EAAA,EAAA,CAAO,GAAiBlB,sDALtB,kHC1BH,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,WAAA,GACA,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,MAAA,GAA4E,EAAA,GAAA,EAAA,sCAAkC,EAAA,KAC9G,EAAA,GAAA,EAAA,MAAA,GAAmB,EAAA,GAAA,mBAAmD,EAAA,KAC1E,EAAA,KACJ,EAAA,0BAHkC,EAAA,GAAA,GAAA,EAAA,GAAA,cAAA,EAAA,GAAA,EAAA,GAAA,EAAA,OACP,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,cAAA,IAAA,EAAA,GAAA,EAAA,EAAA,WAAA,+BAUnB,EAAA,GAAA,EAAA,OAAA,IACI,EAAA,GAAA,GACJ,EAAA,oCADI,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,EAAA,WAAA,QAAA,MAAA,8CAIA,EAAA,GAAA,EAAA,6BAAA,IACA,EAAA,GAAA,EAAA,SAAA,IAA+E,EAAA,GAAA,SAAA,WAAA,EAAA,GAAA,GAAA,MAAA,EAAA,EAAA,KAAA,UAAA,OAAA,EAAA,KAAA,WAAA,sBAC3E,EAAA,GAAA,EAAA,WAAA,IACJ,EAAA,+CAH4B,EAAA,GAAA,cAAA,EAAA,kBAAA,CAAsC,OAAA,GAC1C,EAAA,GAAA,GAAA,EAAA,GAAA,WAAA,EAAA,GAAA,EAAA,EAAA,EAAA,eAAA,SAAA,EAAA,gCAbpC,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,MAAA,GACA,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,MAAA,IAA0B,EAAA,GAAA,GAAqB,EAAA,KAC/C,EAAA,GAAA,EAAA,MAAA,GAAmB,EAAA,GAAA,GAAc,EAAA,KACrC,EAAA,KACA,EAAA,GAAA,EAAA,MAAA,IACI,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,OAAA,IAIA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,cAAA,KAAA,GAAA,EAAA,IAMJ,EAAA,KACJ,EAAA,mDAlBgF,EAAA,GAAA,UAAA,EAAA,SAA+B,EAAA,GAAA,YAAA,MACtG,EAAA,GAAA,GAAA,EAAA,GAAA,MAAA,EAAA,OAAA,EAAA,IAEyB,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,cACP,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAGO,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,YAAA,EAAA,YAAA,WAAA,KAAA,EAAA,GAAA,CAA2F,WAAA,ICgB1H,IAAA,GAAA,YAAMmB,EAUT,YACYtH,EACDhhB,EACAiB,GAFC,KAAA+f,MAAAA,EACD,KAAAhhB,YAAAA,EACA,KAAAiB,WAAAA,EAVJ,KAAAV,iBAAmBp6B,KAAK66C,MAAMhyB,OAAO,GAAWiwB,iBAClDvvC,KACG,OAAAH,GAAA,EAAA,CAAI+R,GAAWA,EAAQigC,MAAM39B,GAAKA,EAAEs+B,eACpC,OAAApgC,GAAA,EAAA,CAAOmhB,KAAOA,GACd,OAAAjkB,GAAA,EAAA,CAAU,IAAM7Y,KAAK86B,WAAWV,mBASjC,WAAWib,GACdr1C,KAAK66C,MAAMqB,SAAS,IAAIsE,GAAWnL,IAGvC,YAAYrxC,EAAeqxC,GAAgC,OAAOA,EAAK/zC,iDApB9D6gD,GAA2B,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,4BAA3BA,EAA2B,UAAA,CAAA,CAAA,yBAAA,MAAA,EAAA,KAAA,EAAA,OAAA,CAAA,CAAA,QAAA,GAAA,EAAA,UAAA,CAAA,EAAA,cAAA,CAAA,QAAA,YAAA,EAAA,QAAA,CAAA,QAAA,YAAA,EAAA,UAAA,EAAA,QAAA,UAAA,gBAAA,CAAA,EAAA,aAAA,CAAA,UAAA,SAAA,EAAA,iBAAA,CAAA,EAAA,QAAA,CAAA,QAAA,GAAA,EAAA,eAAA,EAAA,eAAA,CAAA,EAAA,SAAA,CAAA,MAAA,GAAA,EAAA,gBAAA,EAAA,OAAA,CAAA,EAAA,gBAAA,CAAA,EAAA,WAAA,CAAA,QAAA,cAAA,QAAA,GAAA,EAAA,OAAA,YAAA,CAAA,qBAAA,IAAA,CAAA,QAAA,GAAA,EAAA,eAAA,CAAA,EAAA,cAAA,QAAA,CAAA,kBAAA,GAAA,EAAA,WAAA,SAAA,CAAA,UAAA,UAAA,SAAA,SAAA,EAAA,GAAA,EAAA,IDhCxC,EAAA,GAAA,EAAA,MAAA,GAA0B,EAAA,GAAA,EAAA,kBAAc,EAAA,KACxC,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,MAAA,mBAOA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,MAAA,mBAmBJ,EAAA,YA1B2B,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,GAAA,EAAA,EAAA,EAAA,mBAOA,EAAA,GAAA,GAAA,EAAA,GAAA,UAAA,EAAA,GAAA,EAAA,EAAA,EAAA,OAAA,CAAwD,eAAA,EAAA,6wBCUnE,CACR,OAAA,GAAA,EAAA,CAAQ,WAAY,CAChB,OAAA,GAAA,EAAA,CAAM,KAAM,OAAA,GAAA,EAAA,CAAM,CAAChT,UAAW,mBAC9B,OAAA,GAAA,EAAA,CAAW,YAAa,CACpB,OAAA,GAAA,EAAA,CAAM,CAACA,UAAW,sBAClB,OAAA,GAAA,EAAA,CAAQ,OAEZ,OAAA,GAAA,EAAA,CAAW,YAAa,CACpB,OAAA,GAAA,EAAA,CAAQ,IAAK,OAAA,GAAA,EAAA,CAAM,CAACA,UAAW,4BAG1C,gBAAA,IAGyC,OAAA,EAAA,EAAA,CAAA,CAAzC,OAAA,EAAA,EAAA,CAAO,GAAiB2R,8CACc,OAAA,EAAA,EAAA,CAAA,CAAtC,OAAA,EAAA,EAAA,CAAO,GAAiBE,sDAFtB,6BClBC,EAAA,GAAA,EAAA,MAAA,IAAmE,EAAA,GAAA,GAAe,EAAA,+BAAf,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,gDAQvE,EAAA,GAAA,EAAA,SAAA,IAAuD,EAAA,GAAA,SAAA,WAAA,OAAA,EAAA,GAAA,GAAA,EAAA,KAAA,2BAAgG,EAAA,GAAA,EAAA,SAAK,EAAA,4BAAnF,EAAA,GAAA,WAAA,EAAA,GAAA,EAAA,EAAA,EAAA,YCHtE,IAAA,GAAA,YAAMoB,EAOT,YACWC,EACAnX,EACC2P,EACAyH,EACA7G,GAJD,KAAA4G,UAAAA,EACA,KAAAnX,SAAAA,EACC,KAAA2P,MAAAA,EACA,KAAAyH,SAAAA,EACA,KAAA7G,MAAAA,EATJ,KAAA8G,WAAa,IAAIzjB,GAAA,EAClB,KAAAsP,OAAgD,IAAIl3B,GAAA,EAAgB,IA6D3E,KAAAsrC,kBAAqB9mC,GACV1b,KAAKy7C,MAAMgH,OAAO,CAAC/mC,MAAAA,EAAOxD,QAAS,IACrC3O,KAAK,OAAAH,GAAA,EAAA,CAAIqyC,GAASA,EAAMryC,IAAIsjC,GAAKA,EAAEvZ,SArDxCnzB,KAAK0iD,aACL1iD,KAAK66C,MAAMqB,SAAS,IAAIoE,IAExBtgD,KAAK2iD,mBACL3iD,KAAK4iD,mBAGT,cACI5iD,KAAK66C,MAAMqB,SAAS,IAAI,IACxBl8C,KAAKuiD,WAAWzzC,OAChB9O,KAAKuiD,WAAWn4C,WAGb,QAMHpK,KAAK66C,MAAMqB,SAAS,IAAIwE,GALR,CACZ9tB,OAAQ5yB,KAAK6iD,WAAWjwB,OAAO1vB,MAC/Bs3B,YAAax6B,KAAK6iD,WAAWroB,eAGcz2B,UAAU,KACrD/D,KAAK8iD,mBACL9iD,KAAK0iD,eAIL,aACJ1iD,KAAK6iD,WAAa,CACdjwB,OAAQ,IAAI,GAAA,EAAY,IACxB4H,YAAa0lB,IAIb,iBAAiBhI,GACrBl4C,KAAKouC,OAAOt/B,KAAKopC,GAAY,IAGzB,mBACJl4C,KAAK6iD,WAAWjwB,OAAOF,aAClBnpB,KAAK,OAAAy2B,GAAA,EAAA,CAAUhgC,KAAKuiD,aACpBx+C,UAAU,IAAM/D,KAAK8iD,oBAGtB,mBACJ9iD,KAAKsiD,SAAS/4C,KACV,OAAAy2B,GAAA,EAAA,CAAUhgC,KAAKuiD,YACf,OAAA,EAAA,EAAA,CAAmB5B,KACrB58C,UAAW+3B,IACT97B,KAAK8iD,iBAAiBhnB,EAAOoc,0DA7D5BkK,GAAoB,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,4BAApBA,EAAoB,UAAA,CAAA,CAAA,iBAAA,MAAA,GAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,gBAAA,CAAA,mBAAA,GAAA,QAAA,IAAA,CAAA,OAAA,SAAA,kBAAA,GAAA,WAAA,KAAA,EAAA,eAAA,EAAA,SAAA,CAAA,UAAA,SAAA,CAAA,EAAA,oBAAA,CAAA,cAAA,2BAAA,QAAA,GAAA,WAAA,GAAA,EAAA,cAAA,cAAA,aAAA,CAAA,EAAA,UAAA,UAAA,CAAA,EAAA,UAAA,CAAA,QAAA,QAAA,EAAA,QAAA,WAAA,CAAA,OAAA,SAAA,aAAA,GAAA,QAAA,GAAA,EAAA,WAAA,SAAA,CAAA,OAAA,SAAA,oBAAA,GAAA,QAAA,SAAA,QAAA,GAAA,EAAA,WAAA,QAAA,EAAA,QAAA,CAAA,EAAA,SAAA,CAAA,OAAA,SAAA,oBAAA,GAAA,QAAA,SAAA,QAAA,GAAA,EAAA,WAAA,UAAA,SAAA,SAAA,EAAA,GAAA,EAAA,IDnBjC,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,KAAA,GAA2B,EAAA,GAAA,EAAA,cAAU,EAAA,KACrC,EAAA,GAAA,EAAA,SAAA,GAAsC,EAAA,GAAA,SAAA,WAAA,OAAS,EAAAC,UAAA,WAC3C,EAAA,GAAA,EAAA,WAAA,GACJ,EAAA,KACJ,EAAA,KAEA,EAAA,GAAA,EAAA,sBACI,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,aAAA,GACA,EAAA,GAAA,EAAA,6BAAA,GAA6C,EAAA,GAAA,UAAA,SAAA,GAAA,OAAA,EAAA,WAAA,YAAA,KAA2C,EAAA,KAC5F,EAAA,KAEA,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,MAAA,wCACJ,EAAA,KAEA,EAAA,GAAA,GAAA,wBACJ,EAAA,KAEA,EAAA,GAAA,GAAA,sBACI,EAAA,GAAA,GAAA,SAAA,GAAiC,EAAA,GAAA,SAAA,WAAA,OAAS,EAAAA,UAAA,4BAAuD,EAAA,GAAA,GAAA,SAAK,EAAA,KACtG,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,SAAA,IACJ,EAAA,YAdoB,EAAA,GAAA,GAAA,EAAA,GAAA,cAAA,EAAA,WAAA,OAAA,CAAiC,eAAA,EAAjC,CAAiC,YAAA,EAAA,SAAA,IAAA,wBAAA,EAAA,kBAAA,MACjB,EAAA,GAAA,GAAA,EAAA,GAAA,WAAA,GAIT,EAAA,GAAA,GAAA,EAAA,GAAA,UAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,UAOsC,EAAA,GAAA,GAAA,EAAA,GAAA,WAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAC4C,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,MAAA,EAAA,WAAA,OAAA,MAAA,KAAA,EAAA,WAAA,OAAA,MAAA,olBCFvE,OAAA,EAAA,EAAA,CAAA,CAAjC,OAAA,EAAA,EAAA,CAAO,GAAiBrJ,4CADtB,GCFA,GAAA,YAAM+J,EACT,YAAoBhsC,GAAA,KAAAA,KAAAA,EAEb,cAAcmjC,EAAiBphC,GAClC,OAAO9Y,KAAK+W,KAAKiC,IAAI,iBAAiBkhC,mBAA0BphC,GAG7D,WAAW49B,EAAc59B,GAC5B,OAAO9Y,KAAK+W,KAAKiC,IAAI,yBAAyB09B,EAAQ59B,GAGnD,OAAOohC,EAAiBphC,GAC3B,OAAO9Y,KAAK+W,KAAKokB,KAAK,iBAAiB+e,mBAA0BphC,GAG9D,OAAOxX,EAAYwX,GACtB,OAAO9Y,KAAK+W,KAAKskB,IAAI,yBAAyB/5B,EAAMwX,GAGjD,OAAOxX,GACV,OAAOtB,KAAK+W,KAAKkkB,OAAO,yBAAyB35B,MAG9C,cAAc0hD,EAAgBzO,GACjC,OAAOv0C,KAAK+W,KAAKokB,KAAK,yBAAyB6nB,mBAAyB,CAACzO,SAAAA,IAMtE,YAAYyO,EAAgBzO,GAC/B,OAAOv0C,KAAK+W,KAAKokB,KAAK,yBAAyB6nB,WAAiB,CAACzO,SAAAA,kDA/B5DwO,GAAwB,EAAA,GAAA,GAAA,8BAAxBA,EAAwB,QAAxBA,EAAwB,UAAA,WAFrB,YAET,GCIA,GAAA,YAAME,EAET,YAAmBr/C,EAAkC,IAAlC,KAAAA,QAAAA,UADH,EAAAkB,KAAO,wCADpB,GAKA,GAAA,YAAMo+C,EAET,YAAmBt/C,GAAA,KAAAA,QAAAA,UADH,EAAAkB,KAAO,6BADpB,GAKA,GAAA,YAAMq+C,EAET,YAAmBv/C,GAAA,KAAAA,QAAAA,UADH,EAAAkB,KAAO,6BADpB,GAKA,GAAA,YAAMs+C,UACO,EAAAt+C,KAAO,6BADpB,GAIA,GAAA,YAAMu+C,UACO,EAAAv+C,KAAO,sDADpB,GAIA,GAAA,YAAMw+C,UACO,EAAAx+C,KAAO,gDADpB,GAIA,GAAA,YAAMy+C,UACO,EAAAz+C,KAAO,kCADpB,GAIP,MAAM0+C,GAAe,CACjBlP,KAAM,KACN0E,SAAS,EACTyK,qBAAqB,EACrBC,cAAe,GACfzlC,MAAO,GACP0lC,YAAa,CACTC,eAAe,EACfC,WAAW,EACXC,UAAW,KACXvP,SAAU,wBASLwP,EAAc,MACvB,YACYlJ,EACA3P,EACA8Y,GAFA,KAAAnJ,MAAAA,EACA,KAAA3P,SAAAA,EACA,KAAA8Y,SAAAA,EAIZ,eAAehJ,GACX,OAAOA,EAAMhC,QAIjB,YAAYgC,GACR,OAAOA,EAAM1G,KAIjB,sBAAsB0G,GAClB,OAASA,EAAMhC,SAAWgC,EAAMyI,oBAIpC,qBAAqBzI,GACjB,OAAOA,EAAM0I,cAIjB,oBAAoBtiD,EAAwC06B,GACxD,MAAMoe,EAAUl6C,KAAK66C,MAAMmC,eAAe,GAAWI,kBAAkB,GAIvE,OAFAh8C,EAAI66C,WAAW,CAACjD,SAAS,IAElBh5C,KAAKgkD,SAASt1C,OAAOwrC,EAASpe,EAAOl4B,SACvC2F,KACG,OAAA8gC,EAAA,EAAA,CAAS,IAAMjpC,EAAI66C,WAAW,CAACjD,SAAS,EAAO0K,cAAe,MAC9D,OAAAxqC,EAAA,EAAA,CAAIE,IACA,MAAMk7B,EAAOl7B,EAASk7B,KACtBlzC,EAAI66C,WAAW,CACXh+B,MAAO,OAAF,OAAA,OAAA,OAAA,GAAM7c,EAAI+6C,WAAWl+B,OAAK,CAAE,CAACq2B,EAAK2P,UAAW3P,IAClDA,KAAMl7B,EAASk7B,KACfmP,qBAAqB,KAEzB/B,IACAtgD,EAAI66C,WAAW,CAACyH,cAAehC,EAActT,YAM7D,WAAWhtC,EAAwC06B,GAC/C,MAAMwY,EAAOlzC,EAAI+6C,WAAW7H,KAI5B,OAFAlzC,EAAI66C,WAAW,CAACjD,SAAS,IAElBh5C,KAAKgkD,SAAS7E,OAAO7K,EAAKhzC,GAAIw6B,EAAOl4B,SACvC2F,KACG,OAAA8gC,EAAA,EAAA,CAAS,IAAMjpC,EAAI66C,WAAW,CAACjD,SAAS,EAAO0K,cAAe,MAC9D,OAAAxqC,EAAA,EAAA,CAAIE,GAAYhY,EAAI66C,WAAW,CAC3B3H,KAAMl7B,EAASk7B,KACfr2B,MAAO,OAAF,OAAA,OAAA,OAAA,GAAM7c,EAAI+6C,WAAWl+B,OAAK,CAAE,CAACq2B,EAAK2P,UAAW7qC,EAASk7B,OAC3DmP,qBAAqB,IACpB/B,IACDtgD,EAAI66C,WAAW,CAACyH,cAAehC,EAActT,YAM7D,kBAAkBhtC,EAAwC06B,GACtD,MAAMoe,EAAUl6C,KAAK66C,MAAMmC,eAAe,GAAWI,kBAAkB,GACnE8G,EAAa9iD,EAAI+6C,WAAWl+B,MAAMi8B,GAEtC,OAAIgK,EACO9iD,EAAI66C,WAAW,CAAC3H,KAAM4P,EAAYT,qBAAqB,KAGlEriD,EAAI66C,WAAW,CAACjD,SAAS,IAElBh5C,KAAKgkD,SAASG,cAAcjK,EAAS,CAACkK,WAAYtoB,EAAOl4B,QAAQwgD,aACnE76C,KACG,OAAA8gC,EAAA,EAAA,CAAS,IAAMjpC,EAAI66C,WAAW,CAACjD,SAAS,KACxC,OAAA9/B,EAAA,EAAA,CAAIE,GAAYhY,EAAI66C,WAAW,CAC3B3H,KAAMl7B,EAASk7B,KACfmP,qBAAqB,EACrBxlC,MAAO,OAAF,OAAA,OAAA,OAAA,GAAM7c,EAAI+6C,WAAWl+B,OAAK,CAAE,CAAC7E,EAASk7B,KAAK2P,UAAW7qC,EAASk7B,SACpE,UAKhB,oBAAoBlzC,GAChB,MAAMkzC,EAAOlzC,EAAI+6C,WAAW7H,KAI5B,OAFAlzC,EAAI66C,WAAW,CAACjD,SAAS,IAElBh5C,KAAKgkD,SAAS/oB,OAAOqZ,EAAKhzC,IAC5BiI,KACG,OAAA8gC,EAAA,EAAA,CAAS,IAAMjpC,EAAI66C,WAAW,CAACjD,SAAS,KACxC,OAAA9/B,EAAA,EAAA,CAAI,KACA,MAAM+E,EAAQ7c,EAAI+6C,WAAWl+B,aACtBA,EAAMq2B,EAAK2P,UAElB7iD,EAAI66C,WAAW,CACX3H,KAAM,KACNr2B,MAAOA,OAO3B,mBAAmB7c,GACfA,EAAI66C,WAAW,CACZwH,qBAAsBriD,EAAI+6C,WAAWsH,sBAK5C,oBAAoBriD,GAChB,OAAOA,EAAI66C,WAAW,OAAD,OAAA,OAAA,OAAA,GAAK76C,EAAI+6C,YAAeqH,oDAxHxCO,GAAc,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,+BAAdA,EAAc,QAAdA,EAAc,YA4BvB,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOZ,6CAuBR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOD,oCAoBR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOD,2CAuBR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOG,6CAsBR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOC,4CAQR,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,CAAOE,GAAqB,CAAC/D,mBAAmB,6CA9GjD,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,sBAMD,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,mBAMD,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,6BAMD,OAAA,EAAA,EAAA,CAAA,CADC,OAAA,EAAA,EAAA,4BAtBQuE,EAAc,OAAA,EAAA,EAAA,CAAA,CAL1B,OAAA,EAAA,EAAA,CAA2B,CACxB5uC,KAAM,YACN7S,SAAUkhD,MAGDO,4EC3DG,EAAA,GAAA,EAAA,MAAA,IAAwE,EAAA,GAAA,GAAS,EAAA,0BAAT,EAAA,GAAA,GAAA,EAAA,GAAA,2BAOxE,EAAA,GAAA,GACI,EAAA,GAAA,EAAA,MAAA,IACI,EAAA,GAAA,EAAA,QAAA,IACJ,EAAA,KACJ,EAAA,MCNT,IAAA,GAAA,YAAMM,EAkBT,YAAoBxJ,GAAA,KAAAA,MAAAA,EAbb,KAAAyJ,KAAO,IAAI,GAAA,EAAU,CACxB/P,SAAU,IAAI,GAAA,EACduP,UAAW,IAAI,GAAA,EAAU,CACrBS,KAAM,IAAI,GAAA,EACVC,KAAM,IAAI,GAAA,IAEdX,UAAW,IAAI,GAAA,GAAY,GAC3BD,cAAe,IAAI,GAAA,GAAY,KAG5B,KAAAa,gBAAkB,IAAI,GAAA,GAAY,GAClC,KAAAC,kBAAoB,IAAI,GAAA,GAAY,GAI3C,WACI1kD,KAAK2kD,mBAGF,qBACH3kD,KAAK66C,MAAMqB,SAAS,IAAImH,IAGrB,cACCrjD,KAAK66C,MAAMmC,eAAe,GAAe1I,MACzCt0C,KAAK66C,MAAMqB,SAAS,IAAIgH,GAAoBljD,KAAK4kD,eAEjD5kD,KAAK66C,MAAMqB,SAAS,IAAIiH,GAAoBnjD,KAAK4kD,eAIjD,aACJ,MAAM1pB,EAAU,CACZ2oB,UAAW7jD,KAAKskD,KAAKtrC,IAAI,aAAa9V,MACtC0gD,cAAe5jD,KAAKskD,KAAKtrC,IAAI,iBAAiB9V,OAelD,OAZIlD,KAAK0kD,kBAAkBxhD,QACvBg4B,EAAQ4oB,UAAY9jD,KAAKskD,KAAKtrC,IAAI,kBAAkB9V,MAChDlD,KAAKskD,KAAKtrC,IAAI,kBAAkB9V,QAChCg4B,EAAQ4oB,WAAa,IAAM9jD,KAAKskD,KAAKtrC,IAAI,kBAAkB9V,QAK/DlD,KAAKykD,gBAAgBvhD,QACrBg4B,EAAQqZ,SAAWv0C,KAAKskD,KAAKtrC,IAAI,YAAY9V,OAG1Cg4B,EAGH,mBACJl7B,KAAK6kD,MAAMt7C,KAAK,OAAAoS,GAAA,EAAA,CAAO24B,KAAUA,IAC5BvwC,UAAUuwC,IACPt0C,KAAK8kD,sBAAsBxQ,GAG3Bt0C,KAAKykD,gBAAgBlyB,WAAW+hB,EAAKC,UACrCv0C,KAAK0kD,kBAAkBnyB,WAAW+hB,EAAKyQ,YAEvC/kD,KAAKskD,KAAKU,WAAW,CACjBnB,UAAWvP,EAAK2Q,WAChBrB,cAAetP,EAAK4Q,mBAK5B,sBAAsB5Q,GAC1B,IAAOA,IAAUA,EAAKyQ,WAAY,OAElC,MAAMI,EAAQ7Q,EAAKyQ,WAAW3hD,MAAM,QAEpCpD,KAAKskD,KAAKtrC,IAAI,aAAauZ,SAAS,CAChCgyB,KAAMY,EAAM,GACZX,KAAMW,EAAM,GAAKA,EAAM,GAAGC,OAAO,EAAG,GAAK,KAI1C,aACH,OAAA,IAAWC,MAAOC,SAASliD,MAAM,KAAK,iDArFjCihD,GAAoB,EAAA,GAAA,EAAA,4BAApBA,EAAoB,UAAA,CAAA,CAAA,iBAAA,MAAA,GAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,oBAAA,EAAA,YAAA,YAAA,CAAA,EAAA,gBAAA,CAAA,EAAA,eAAA,CAAA,QAAA,GAAA,EAAA,SAAA,CAAA,EAAA,WAAA,CAAA,QAAA,SAAA,QAAA,GAAA,EAAA,eAAA,CAAA,gBAAA,YAAA,EAAA,kBAAA,8BAAA,CAAA,EAAA,wBAAA,CAAA,OAAA,OAAA,kBAAA,OAAA,cAAA,qBAAA,oBAAA,GAAA,EAAA,aAAA,EAAA,OAAA,CAAA,OAAA,OAAA,kBAAA,OAAA,cAAA,qBAAA,oBAAA,GAAA,EAAA,cAAA,CAAA,QAAA,QAAA,EAAA,QAAA,CAAA,EAAA,QAAA,CAAA,QAAA,SAAA,kBAAA,YAAA,QAAA,IAAA,CAAA,QAAA,SAAA,kBAAA,gBAAA,QAAA,IAAA,CAAA,OAAA,SAAA,aAAA,GAAA,QAAA,GAAA,EAAA,SAAA,CAAA,OAAA,SAAA,oBAAA,GAAA,QAAA,SAAA,EAAA,gBAAA,EAAA,YAAA,CAAA,EAAA,SAAA,CAAA,EAAA,kBAAA,4BAAA,CAAA,OAAA,WAAA,kBAAA,WAAA,cAAA,wBAAA,oBAAA,KAAA,SAAA,SAAA,EAAA,SAAA,EAAA,IDjBjC,EAAA,GAAA,EAAA,OAAA,GAAmD,EAAA,GAAA,YAAA,WAAA,OAAY,EAAAkB,iBAC3D,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,MAAA,GAAyB,EAAA,GAAA,EAAA,mBAAe,EAAA,KACxC,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,eAAA,GAAqE,EAAA,GAAA,EAAA,wBAAoB,EAAA,KACzF,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,GAAA,QAAA,GACJ,EAAA,KACA,EAAA,GAAA,GAAA,QAAA,GACJ,EAAA,KACA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,MAAA,qBACJ,EAAA,KACJ,EAAA,KACA,EAAA,GAAA,GAAA,MAAA,GACI,EAAA,GAAA,GAAA,MAAA,GAAyB,EAAA,GAAA,GAAA,oBAAgB,EAAA,KACzC,EAAA,GAAA,GAAA,MAAA,GACI,EAAA,GAAA,GAAA,eAAA,GAAmE,EAAA,GAAA,GAAA,qBAAiB,EAAA,KACpF,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,eAAA,IAKJ,EAAA,KACJ,EAAA,KACA,EAAA,GAAA,GAAA,MAAA,GACI,EAAA,GAAA,GAAA,MAAA,GAAyB,EAAA,GAAA,GAAA,iBAAa,EAAA,KACtC,EAAA,GAAA,GAAA,eAAA,IAA+D,EAAA,GAAA,GAAA,yCAAqC,EAAA,KACxG,EAAA,KACA,EAAA,GAAA,GAAA,MAAA,GACI,EAAA,GAAA,GAAA,MAAA,GAAyB,EAAA,GAAA,GAAA,kBAAc,EAAA,KACvC,EAAA,GAAA,GAAA,eAAA,IAAmE,EAAA,GAAA,GAAA,2CAAuC,EAAA,KAC9G,EAAA,KACJ,EAAA,KAEA,EAAA,GAAA,GAAA,SAAA,IAAsB,EAAA,GAAA,SAAA,WAAA,OAAS,EAAAC,wBAAuC,EAAA,GAAA,GAAA,UAAM,EAAA,KAE5E,EAAA,GAAA,GAAA,SAAA,qBACI,EAAA,GAAA,sCACJ,EAAA,KACJ,EAAA,YAzCgC,EAAA,GAAA,YAAA,EAAA,MAKa,EAAA,GAAA,GAAA,EAAA,GAAA,cAAA,EAAA,mBACsD,EAAA,GAAA,GAAA,EAAA,GAAA,UAAA,EAAA,kBAAA,OAEqC,EAAA,GAAA,GAAA,EAAA,GAAA,MAAA,EAAA,cAIrG,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,OAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,iBAAA,KAAA,EAAA,WAMU,EAAA,GAAA,GAAA,EAAA,GAAA,cAAA,EAAA,iBACf,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,gBAAA,OAmBmD,EAAA,GAAA,IAAA,EAAA,GAAA,WAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WACzE,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,OAAA,cAAA,eAAA,y4BCrByB,OAAA,EAAA,EAAA,CAAA,CAA5B,OAAA,EAAA,EAAA,CAAO,GAAelR,mCACS,OAAA,EAAA,EAAA,CAAA,CAA/B,OAAA,EAAA,EAAA,CAAO,GAAe0E,yCACe,OAAA,EAAA,EAAA,CAAA,CAArC,OAAA,EAAA,EAAA,CAAO,GAAe0K,wDAHpB,4DCTH,EAAA,GAAA,GACI,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,mBAA+B,EAAA,GAAA,EAAA,OAAA,GAAuB,EAAA,GAAA,EAAA,SAAA,IAAsC,EAAA,GAAA,SAAA,WAAA,OAAA,EAAA,GAAA,GAAA,EAAA,KAAA,gBAA6B,EAAA,GAAA,EAAA,MAAE,EAAA,KAAS,EAAA,KACxI,EAAA,KACA,EAAA,GAAA,EAAA,MAAA,IACI,EAAA,GAAA,EAAA,SAAA,IAAsC,EAAA,GAAA,SAAA,WAAA,OAAA,EAAA,GAAA,GAAA,EAAA,KAAA,gBAClC,EAAA,GAAA,GAAA,WAAA,IACJ,EAAA,KACA,EAAA,GAAA,GAAA,SAAA,IAAsC,EAAA,GAAA,SAAA,WAAA,OAAA,EAAA,GAAA,GAAA,EAAA,KAAA,wBAClC,EAAA,GAAA,GAAA,WAAA,IACJ,EAAA,KACJ,EAAA,KACJ,EAAA,KAEA,EAAA,GAAA,GAAA,MAAA,IACI,EAAA,GAAA,GAAA,MAAA,IACI,EAAA,GAAA,GAAA,QAAA,IAA4C,EAAA,GAAA,SAAA,WAAA,OAAA,EAAA,GAAA,GAAA,EAAA,KAAA,eAAA,CAAsB,UAAA,WAAA,OAAA,EAAA,GAAA,GAAA,EAAA,KAAA,iCAAlE,EAAA,KACA,EAAA,GAAA,GAAA,SAAA,IAAuC,EAAA,GAAA,SAAA,WAAA,OAAA,EAAA,GAAA,GAAA,EAAA,KAAA,yBAAsC,EAAA,GAAA,GAAA,QAAI,EAAA,KACrF,EAAA,KACA,EAAA,GAAA,GAAA,MAAA,IACI,EAAA,GAAA,GAAA,SAAA,IAA4E,EAAA,GAAA,SAAA,WAAA,OAAA,EAAA,GAAA,GAAA,EAAA,KAAA,UAAmB,eAC3F,EAAA,GAAA,GAAA,WAAA,IACJ,EAAA,KACA,EAAA,GAAA,GAAA,SAAA,IAA2E,EAAA,GAAA,SAAA,WAAA,OAAA,EAAA,GAAA,GAAA,EAAA,KAAA,UAAmB,cAC1F,EAAA,GAAA,GAAA,WAAA,IACJ,EAAA,KACA,EAAA,GAAA,GAAA,SAAA,IAAwE,EAAA,GAAA,SAAA,WAAA,OAAA,EAAA,GAAA,GAAA,EAAA,KAAA,UAAmB,WACvF,EAAA,GAAA,GAAA,WAAA,IACJ,EAAA,KACJ,EAAA,KACJ,EAAA,KACJ,EAAA,4BA7BY,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,EAAA,mBAAA,KAc2F,EAAA,GAAA,IAAA,EAAA,GAAA,QAAA,EAAA,GAAA,GAAA,EAAA,EAAA,kBCiBpG,IAAA,GAAA,YAAM+B,EAOT,YACc5K,EACA7gB,EACAsoB,EACApX,EACAmX,GAJA,KAAAxH,MAAAA,EACA,KAAA7gB,MAAAA,EACA,KAAAsoB,SAAAA,EACA,KAAApX,SAAAA,EACA,KAAAmX,UAAAA,EARP,KAAAqD,eAAiB,IAAIxuC,GAAA,EAAgB,MACpC,KAAA+W,cAAgC,GAUxC,WACIjuB,KAAK66C,MAAMqB,SAAS,IAAI+G,IACxBjjD,KAAK2lD,2BAGT,kBACI3lD,KAAK2kD,mBAGT,cACI3kD,KAAK66C,MAAMqB,SAAS,IAAIqH,IACxBvjD,KAAKiuB,cAAcjgB,QAAQugB,GAAKA,EAAEnqB,eAG/B,qBACHpE,KAAK66C,MAAMqB,SAAS,IAAImH,IAGrB,aACHrjD,KAAK66C,MAAMqB,SAAS,IAAIkH,IAAuBr/C,UAAU,KACrD/D,KAAKg6B,MAAMjd,KAAK,iBAChB/c,KAAKqiD,UAAUziC,UAIhB,sBACH5f,KAAK4lD,aACW,IAAA,CAAK5lD,KAAK0lD,eAAexiD,QAGrClD,KAAK66C,MAAMqB,SAAS,IAAIoH,IAIxB,mBACJtjD,KAAK6kD,MAAM9gD,UAAUuwC,IACVA,IACPt0C,KAAK0lD,eAAe52C,KAAK9O,KAAKkrC,SAAS2a,aAAe,WAAavR,EAAKoC,MACxE1tB,WAAW,IAAMhpB,KAAK4lD,iBAItB,2BACJ,MAAME,EAAM9lD,KAAKsiD,SAAS/4C,KAAK,OAAA,EAAA,EAAA,CAAmB85C,KAC7Ct/C,UAAU,KAEA/D,KAAK66C,MAAMmC,eAAe,GAAe+I,iBAAqB/lD,KAAK0lD,eAAexiD,OACrFlD,KAAK4f,UAGjB5f,KAAKiuB,cAAcjb,KAAK8yC,GAGrB,UAAUE,IC5Gd,SAA2BA,EAA4B1R,EAAcn/B,EAAe8wC,GACvF,MAAMpuC,EAmBV,SAA0B/S,EAAcwvC,EAAcn/B,EAAe8wC,GACjE,OAAQnhD,GACJ,IAAK,WACD,MAAO,gDAAkDwvC,EAC7D,IAAK,UACD,MAAO,uDAAqDA,EAChE,IAAK,cACD,MAAO,qCAAuCA,EAClD,IAAK,YACD,MAAO,gDAAkDA,EAAO,UA5BtB2R,UA6B9C,IAAK,SAED,MAAOC,4IAA8C5R,EACzD,IAAK,UACD,MAAO,8CAAgDA,EAAO,MAjC1Bn/B,UAkCxC,IAAK,OACD,MAAO,6CAA6Cm/B,GAhBhE,CAnBiC0R,EAAS1R,GAEtB,SAAZ0R,EACAv8C,OAAOmoC,SAASuU,KAAOtuC,EAM/B,SAAuBA,GACnB,MAEIomB,GAAUx0B,OAAO28C,WAFN,KAE8B,EACzCC,GAAU58C,OAAO68C,YAFR,KAEgC,EAG7C78C,OAAOsT,KAAKlF,EAAK,QAFJ,mDAA+EwuC,EAAM,SAAWpoB,GALjH,CAJsBpmB,GANf,CD6GmBmuC,EAAShmD,KAAK0lD,eAAexiD,OAG5C,aACH,MAAMkoB,EAAQvI,SAAS0jC,eAAe,cACtCn7B,EAAMvd,QACNud,EAAMvC,SAGH,QACH7oB,KAAKqiD,UAAUziC,sDA/EV6lC,GAAwB,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,4BAAxBA,EAAwB,UAAA,CAAA,CAAA,sBAAA,MAAA,GAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,gBAAA,CAAA,mBAAA,GAAA,QAAA,IAAA,CAAA,OAAA,SAAA,kBAAA,GAAA,WAAA,KAAA,EAAA,eAAA,EAAA,SAAA,CAAA,UAAA,SAAA,CAAA,EAAA,QAAA,CAAA,EAAA,sBAAA,EAAA,aAAA,CAAA,OAAA,SAAA,aAAA,GAAA,QAAA,GAAA,EAAA,gBAAA,EAAA,WAAA,SAAA,CAAA,EAAA,SAAA,CAAA,EAAA,QAAA,CAAA,EAAA,QAAA,MAAA,CAAA,QAAA,GAAA,EAAA,UAAA,OAAA,WAAA,EAAA,SAAA,CAAA,EAAA,SAAA,CAAA,OAAA,SAAA,kBAAA,GAAA,EAAA,SAAA,CAAA,UAAA,UAAA,CAAA,UAAA,YAAA,CAAA,EAAA,kBAAA,CAAA,EAAA,uBAAA,mBAAA,CAAA,OAAA,OAAA,KAAA,aAAA,WAAA,GAAA,WAAA,IAAA,EAAA,QAAA,QAAA,UAAA,CAAA,kBAAA,GAAA,QAAA,SAAA,QAAA,GAAA,EAAA,SAAA,CAAA,EAAA,gBAAA,CAAA,OAAA,SAAA,kBAAA,GAAA,EAAA,cAAA,WAAA,WAAA,EAAA,SAAA,CAAA,UAAA,YAAA,CAAA,OAAA,SAAA,kBAAA,GAAA,EAAA,cAAA,WAAA,UAAA,EAAA,SAAA,CAAA,UAAA,WAAA,CAAA,OAAA,SAAA,kBAAA,GAAA,EAAA,cAAA,WAAA,OAAA,EAAA,SAAA,CAAA,UAAA,SAAA,SAAA,SAAA,EAAA,GAAA,EAAA,ID1CrC,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,KAAA,GAA2B,EAAA,GAAA,EAAA,kBAAc,EAAA,KACzC,EAAA,GAAA,EAAA,SAAA,GAAsC,EAAA,GAAA,SAAA,WAAA,OAAS,EAAA7lC,WAC3C,EAAA,GAAA,EAAA,WAAA,GACJ,EAAA,KACJ,EAAA,KAEA,EAAA,GAAA,EAAA,sBACI,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,eAAA,mBAkCA,EAAA,GAAA,EAAA,gCACA,EAAA,GAAA,GAAA,oBAAA,oBACJ,EAAA,KAEA,EAAA,GAAA,GAAA,sBACI,EAAA,GAAA,GAAA,SAAA,GAAuD,EAAA,GAAA,SAAA,WAAA,OAAS,EAAAA,4BAA6C,EAAA,GAAA,GAAA,SAAK,EAAA,KACtH,EAAA,YAxCkB,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,GAAA,EAAA,EAAA,EAAA,QAkCA,EAAA,GAAA,GAAA,EAAA,GAAA,cAAA,EAAA,GAAA,EAAA,EAAA,EAAA,kBACK,EAAA,GAAA,GAAA,EAAA,GAAA,YAAA,EAAA,GAAA,GAAA,EAAA,EAAA,WAIsD,EAAA,GAAA,GAAA,EAAA,GAAA,WAAA,EAAA,GAAA,GAAA,GAAA,EAAA,w1BCvB7D,CACR,OAAA,GAAA,EAAA,CAAQ,aAAc,CAClB,OAAA,GAAA,EAAA,CAAM,OAAQ,OAAA,GAAA,EAAA,CAAM,CAChB4mC,OAAQ,IACRC,QAAS,IACTC,QAAS,IACTC,SAAU,OAEd,OAAA,GAAA,EAAA,CAAM,QAAS,OAAA,GAAA,EAAA,CAAM,CACjBH,OAAQ,IACRC,QAAS,IACTC,QAAS,IACTC,SAAU,YAEd,OAAA,GAAA,EAAA,CAAW,iBAAkB,OAAA,GAAA,EAAA,CAAQ,sCAE5C,gBAAA,IAG+B,OAAA,EAAA,EAAA,CAAA,CAA/B,OAAA,EAAA,EAAA,CAAO,GAAe3N,yCACM,OAAA,EAAA,EAAA,CAAA,CAA5B,OAAA,EAAA,EAAA,CAAO,GAAe1E,mCACgB,OAAA,EAAA,EAAA,CAAA,CAAtC,OAAA,EAAA,EAAA,CAAO,GAAeyR,0DAHpB,6BE/BK,EAAA,GAAA,EAAA,MAAA,IAAuC,EAAA,GAAA,GAAe,EAAA,0BAAf,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,OCe5C,IAAA,GAAA,YAAMa,EAKT,YACYvE,EACwBxvC,EACxBgoC,EACAJ,EACA9zC,GAJA,KAAA07C,UAAAA,EACwB,KAAAxvC,KAAAA,EACxB,KAAAgoC,MAAAA,EACA,KAAAJ,WAAAA,EACA,KAAA9zC,gBAAAA,EATL,KAAAkgD,WAAa,IAAI,GAAA,EACjB,KAAA7N,QAAU,IAAI9hC,GAAA,GAAgB,GAC9B,KAAAk3B,OAA+B,GAU/B,UACHpuC,KAAKg5C,QAAQlqC,MAAK,GAElB,MAAM8sC,EAAe57C,KAAK6S,KAAKkgC,QAAU/yC,KAAK66C,MAAMmC,eAAe,GAAWpB,cAM9E,OAAO57C,KAAKy6C,WAAW/rC,OALR,CACXyG,KAAMnV,KAAK6mD,WAAW3jD,MACtBg7C,UAAUtC,MAAAA,OAAY,EAAZA,EAAct6C,KAAM,OAI7BiI,KAAK,OAAA8gC,EAAA,EAAA,CAAS,IAAMrqC,KAAKg5C,QAAQlqC,MAAK,KACtC/K,UAAUqV,IACPpZ,KAAK8mD,YACL9mD,KAAK66C,MAAMqB,SAAS,IAAIxE,GAAiBt+B,EAAS25B,SAClD/yC,KAAK4f,SACNxG,GAAYpZ,KAAK8mD,UAAU1tC,IAG/B,UAAUA,GACbpZ,KAAKouC,OAASh1B,EAAWA,EAASg1B,OAAS,GAC3CpuC,KAAK2G,gBAAgBgE,gBAGlB,QACH3K,KAAKqiD,UAAUziC,sDArCVgnC,GAA6B,EAAA,GAAA,GAAA,GAAA,EAAA,GAO1B,GAAA,GAAe,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,4BAPlBA,EAA6B,UAAA,CAAA,CAAA,2BAAA,MAAA,GAAA,KAAA,EAAA,OAAA,CAAA,CAAA,EAAA,gBAAA,CAAA,mBAAA,GAAA,QAAA,IAAA,CAAA,OAAA,SAAA,kBAAA,GAAA,WAAA,KAAA,EAAA,eAAA,EAAA,SAAA,CAAA,UAAA,SAAA,CAAA,mBAAA,GAAA,EAAA,YAAA,CAAA,EAAA,eAAA,CAAA,EAAA,mBAAA,CAAA,OAAA,OAAA,cAAA,iBAAA,oBAAA,GAAA,WAAA,GAAA,MAAA,IAAA,EAAA,eAAA,CAAA,QAAA,QAAA,EAAA,QAAA,CAAA,OAAA,SAAA,aAAA,GAAA,QAAA,GAAA,EAAA,gBAAA,EAAA,SAAA,CAAA,OAAA,SAAA,oBAAA,GAAA,QAAA,SAAA,QAAA,GAAA,EAAA,gBAAA,EAAA,YAAA,CAAA,EAAA,UAAA,SAAA,SAAA,EAAA,GAAA,EAAA,ID1B1C,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,KAAA,GAA2B,EAAA,GAAA,EAAA,cAAU,EAAA,KACrC,EAAA,GAAA,EAAA,SAAA,GAAsC,EAAA,GAAA,SAAA,WAAA,OAAS,EAAAhnC,WAC3C,EAAA,GAAA,EAAA,WAAA,GACJ,EAAA,KACJ,EAAA,KAEA,EAAA,GAAA,EAAA,OAAA,GAAuB,EAAA,GAAA,YAAA,WAAA,OAAY,EAAAmnC,aAC/B,EAAA,GAAA,EAAA,qBAAA,GACI,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,QAAA,GACA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,MAAA,GACJ,EAAA,KACJ,EAAA,KAEA,EAAA,GAAA,GAAA,sBACI,EAAA,GAAA,GAAA,SAAA,GAAQ,EAAA,GAAA,SAAA,WAAA,OAAS,EAAAnnC,WAA8D,EAAA,GAAA,GAAA,UAAM,EAAA,KACrF,EAAA,GAAA,GAAA,SAAA,qBAAgH,EAAA,GAAA,GAAA,UAAM,EAAA,KAC1H,EAAA,KACJ,EAAA,YAT+B,EAAA,GAAA,GAAA,EAAA,GAAA,cAAA,EAAA,YACA,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,OAAA,MAMsD,EAAA,GAAA,GAAA,EAAA,GAAA,WAAA,EAAA,GAAA,GAAA,EAAA,EAAA,kMCS9E,qFC+CP,MAAMonC,WAxDN,MACI,cAEIhnD,KAAKinD,eAAiB,IAAI,GAAA,GAAe,GAG7C,OAAOC,GACHlnD,KAAKinD,eAAe3mB,OAAOtgC,KAAKmnD,cAAcD,IAGlD,OAAOA,GACHlnD,KAAKinD,eAAep+B,OAAO7oB,KAAKmnD,cAAcD,IAGlD,SAASA,GACLlnD,KAAKinD,eAAe/4C,SAASlO,KAAKmnD,cAAcD,IAGpD,WAAWA,GACP,OAAOlnD,KAAKinD,eAAev9B,WAAW1pB,KAAKmnD,cAAcD,IAG7D,kBAAkBA,GACdlnD,KAAKinD,eAAev9B,WAAW1pB,KAAKmnD,cAAcD,IAC9ClnD,KAAKonD,oBAAoBF,GACzBlnD,KAAKqnD,kBAAkBH,GAG/B,cACIlnD,KAAKinD,eAAexoC,QAGxB,kBAAkByoC,GACd,IAAII,EAAgB,CAACJ,GACrBI,EAAct0C,QAAQhT,KAAKunD,eAAeL,IAC1ClnD,KAAKinD,eAAep+B,UAAUy+B,EAAcl+C,IAAIlG,GAASlD,KAAKmnD,cAAcjkD,KAGhF,oBAAoBgkD,GAChB,IAAII,EAAgB,CAACJ,GACrBI,EAAct0C,QAAQhT,KAAKunD,eAAeL,IAC1ClnD,KAAKinD,eAAe/4C,YAAYo5C,EAAcl+C,IAAIlG,GAASlD,KAAKmnD,cAAcjkD,KAElF,cAAcA,GACV,OAAOlD,KAAKwnD,QAAUxnD,KAAKwnD,QAAQtkD,GAASA,IAchD,YAAYukD,EAAUC,EAAc9jD,GAChCrB,QACAvC,KAAKynD,SAAWA,EAChBznD,KAAK0nD,aAAeA,EACpB1nD,KAAK4D,QAAUA,EACX5D,KAAK4D,UACL5D,KAAKwnD,QAAUxnD,KAAK4D,QAAQ4jD,SASpC,eAAeN,GACX,MACMS,EAAU,GAOhB,IAAK,IAAI5sB,EARU/6B,KAAK4nD,UAAU1rC,QAAQgrC,GAQhB,EAAGnsB,EAAI/6B,KAAK4nD,UAAUzkD,QAAUnD,KAAKynD,SAASP,GAAYlnD,KAAKynD,SAASznD,KAAK4nD,UAAU7sB,IAAKA,IAClH4sB,EAAQ30C,KAAKhT,KAAK4nD,UAAU7sB,IAEhC,OAAO4sB,EAQX,YACI3nD,KAAKinD,eAAep+B,UAAU7oB,KAAK4nD,UAAUx+C,IAAIy+C,GAAQ7nD,KAAKmnD,cAAcU,MAwEpF,MAAMC,GAA4B,IAAI,EAAA,EAAe,gDAK/CC,EACF,YAAYC,EAAeC,GACvBjoD,KAAKgoD,cAAgBA,EACrBhoD,KAAKioD,MAAQA,UAGrBF,EAAkBpjD,UAAO,SAAmCC,GAAK,OAAO,IAAKA,GAAKmjD,GAAmB,EAAA,GAAyB,EAAA,GAA0B,EAAA,GAAyBD,GAA2B,KAC5MC,EAAkBljD,UAAO,EAAA,GAAyB,CAAEC,KAAMijD,EAAmBpiD,UAAW,CAAC,CAAC,GAAI,oBAAqB,aAyBnH,MAAMuiD,GACF,YAAYr1C,GACR7S,KAAKmoD,UAAYt1C,sBAOnBu1C,EAEF,YAAYnjD,GACRjF,KAAKiF,SAAWA,UAGxBmjD,EAAezjD,UAAO,SAAgCC,GAAK,OAAO,IAAKA,GAAKwjD,GAAgB,EAAA,GAAyB,EAAA,KACrHA,EAAevjD,UAAO,EAAA,GAAyB,CAAEC,KAAMsjD,EAAgBziD,UAAW,CAAC,CAAC,GAAI,iBAAkB,KAAMR,OAAQ,CAAEkjD,KAAM,CAAC,qBAAsB,gCA6DjJC,EACF,YAAYC,EAAUnmD,GAClBpC,KAAKuoD,SAAWA,EAChBvoD,KAAKoC,mBAAqBA,EAE1BpC,KAAKwoD,WAAa,IAAI1pB,GAAA,EAEtB9+B,KAAKyoD,QAAU,IAAI91C,IAOnB3S,KAAK0oD,WAAa,IAAIxxC,GAAA,EAAgB,CAAE8mC,MAAO,EAAG2K,IAAK5uC,OAAO6uC,YAOlE,iBAAmB,OAAO5oD,KAAK6oD,YAC/B,eAAeC,GACP9oD,KAAK6oD,cAAgBC,GACrB9oD,KAAK+oD,kBAAkBD,GAG/B,WACI9oD,KAAKgpD,YAAchpD,KAAKuoD,SAAS5/B,KAAK,IAAIja,OAAO1O,KAAKwnD,SAK1D,cACIxnD,KAAKipD,YAAYjB,cAAcvpC,QAC/Bze,KAAK0oD,WAAWt+C,WAChBpK,KAAKwoD,WAAW15C,OAChB9O,KAAKwoD,WAAWp+C,WACZpK,KAAK6oD,aAAsD,mBAAhC7oD,KAAK6oD,YAAYK,YAC5ClpD,KAAK8oD,WAAWI,WAAWlpD,MAE3BA,KAAKmpD,oBACLnpD,KAAKmpD,kBAAkB/kD,cACvBpE,KAAKmpD,kBAAoB,MAGjC,wBACI,MAAMC,EAAkBppD,KAAKqpD,UAAU1tC,OAAO2tC,IAAQA,EAAIjB,MAI1DroD,KAAKupD,gBAAkBH,EAAgB,GACnCppD,KAAK8oD,YAAc9oD,KAAKqpD,YAAcrpD,KAAKmpD,mBAC3CnpD,KAAKwpD,wBAUb,kBAAkBV,GACV9oD,KAAK6oD,aAAsD,mBAAhC7oD,KAAK6oD,YAAYK,YAC5ClpD,KAAK8oD,WAAWI,WAAWlpD,MAE3BA,KAAKmpD,oBACLnpD,KAAKmpD,kBAAkB/kD,cACvBpE,KAAKmpD,kBAAoB,MAGxBL,GACD9oD,KAAKipD,YAAYjB,cAAcvpC,QAEnCze,KAAK6oD,YAAcC,EACf9oD,KAAKqpD,WACLrpD,KAAKwpD,wBAIb,wBACI,IAAIC,EACA,OAAA,GAAA,EAAA,CAAazpD,KAAK6oD,aAClBY,EAAazpD,KAAK6oD,YAAYa,QAAQ1pD,MAEjC,OAAA2pD,GAAA,EAAA,CAAa3pD,KAAK6oD,aACvBY,EAAazpD,KAAK6oD,YAEbxvC,MAAMC,QAAQtZ,KAAK6oD,eACxBY,EAAa,OAAAxwC,GAAA,EAAA,CAAGjZ,KAAK6oD,cAErBY,IACAzpD,KAAKmpD,kBAAoBM,EAAWlgD,KAAK,OAAAy2B,GAAA,EAAA,CAAUhgC,KAAKwoD,aACnDzkD,UAAU8O,GAAQ7S,KAAK4pD,kBAAkB/2C,KAOtD,kBAAkBA,EAAMg3C,EAAa7pD,KAAKgpD,YAAahB,EAAgBhoD,KAAKipD,YAAYjB,cAAe8B,GACnG,MAAMjgD,EAAUggD,EAAWE,KAAKl3C,GAC3BhJ,IAGLA,EAAQmgD,iBAAiB,CAACv3B,EAAMw3B,EAAuBC,KACnD,GAA0B,MAAtBz3B,EAAK03B,cACLnqD,KAAKoqD,WAAWv3C,EAAKq3C,GAAeA,EAAclC,EAAe8B,QAEhE,GAAoB,MAAhBI,EACLlC,EAAcjkC,OAAOkmC,GACrBjqD,KAAKyoD,QAAQxtB,OAAOxI,EAAKA,UAExB,CACD,MAAM0tB,EAAO6H,EAAchvC,IAAIixC,GAC/BjC,EAAcqC,KAAKlK,EAAM+J,MAGjClqD,KAAKoC,mBAAmBuI,iBAQ5B,YAAYkI,EAAMkoB,GACd,OAA8B,IAA1B/6B,KAAKqpD,UAAUlmD,OACRnD,KAAKqpD,UAAUnkD,MAEVlF,KAAKqpD,UAAU1gC,KAAK2gC,GAAOA,EAAIjB,MAAQiB,EAAIjB,KAAKttB,EAAGloB,KAAU7S,KAAKupD,gBAUtF,WAAWe,EAAUtmD,EAAOgkD,EAAe8B,GACvC,MAAMjC,EAAO7nD,KAAKuqD,YAAYD,EAAUtmD,GAElCwmD,EAAU,IAAItC,GAAyBoC,GAIzCE,EAAQC,MADRzqD,KAAK0qD,YAAYjD,SACDznD,KAAK0qD,YAAYjD,SAAS6C,QAEf,IAAfR,GAA8B9pD,KAAKyoD,QAAQ30C,IAAIg2C,GAC3C9pD,KAAKyoD,QAAQzvC,IAAI8wC,GAAc,EAG/B,EAEpB9pD,KAAKyoD,QAAQloD,IAAI+pD,EAAUE,EAAQC,QAEjBzC,GAAgChoD,KAAKipD,YAAYjB,eACzD2C,mBAAmB9C,EAAK5iD,SAAUulD,EAASxmD,GAIjD,GAAY4mD,qBACZ,GAAYA,mBAAmB/3C,KAAOy3C,WAIlDhC,EAAQ3jD,UAAO,SAAyBC,GAAK,OAAO,IAAKA,GAAK0jD,GAAS,EAAA,GAAyB,EAAA,GAAyB,EAAA,GAAyB,EAAA,KAClJA,EAAQ5iD,UAAO,EAAA,GAAyB,CAAEZ,KAAMwjD,EAAS3iD,UAAW,CAAC,CAAC,aAAcC,eAAgB,SAAgCzE,EAAIC,EAAKyE,GAGrI,IAAIb,EAHsJ,EAAL7D,GACrJ,EAAA,GAAsB0E,EAAU,IAAgB,GACzC,EAAL1E,GAEF,EAAA,GAAsB6D,EAAK,EAAA,QAA0B5D,EAAIioD,UAAYrkD,IACpED,UAAW,SAAuB5D,EAAIC,GAGvC,IAAI4D,EAHmD,EAAL7D,GAClD,EAAA,GAAyB,IAAmB,GACrC,EAALA,GAEF,EAAA,GAAsB6D,EAAK,EAAA,QAA0B5D,EAAI6nD,YAAcjkD,EAAGE,QACzEa,UAAW,CAAC,OAAQ,OAAQ,EAAG,YAAaZ,OAAQ,CAAE2jD,WAAY,aAAc4B,YAAa,cAAelD,QAAS,WAAavhD,SAAU,CAAC,WAAYI,MAAO,EAAGC,KAAM,EAAGC,OAAQ,CAAC,CAAC,oBAAqB,KAAMtB,SAAU,SAA0B9D,EAAIC,GAAgB,EAALD,GACrQ,EAAA,GAA0B,EAAG,IAC5BqF,WAAY,CAAC,IAAoBE,cAAe,yBAqDnDmkD,EACF,YAAYxoD,EAAayoD,GACrB9qD,KAAKqC,YAAcA,EACnBrC,KAAK8qD,MAAQA,EAEb9qD,KAAKwlB,WAAa,IAAIsZ,GAAA,EAEtB9+B,KAAK+qD,aAAe,IAAIjsB,GAAA,EAKxB9+B,KAAKqqB,KAAO,WACZwgC,EAAYD,mBAAqB5qD,KAGrC,WAAa,OAAOA,KAAKgrD,MACzB,SAAS9nD,GACDA,IAAUlD,KAAKgrD,QACfhrD,KAAKgrD,MAAQ9nD,EACblD,KAAKirD,mBACLjrD,KAAK+qD,aAAaj8C,QAG1B,iBACI,OAAO9O,KAAK8qD,MAAMJ,YAAYQ,WAAWlrD,KAAKgrD,OAElD,YACI,OAAOhrD,KAAK8qD,MAAMJ,YAAYjD,SAAWznD,KAAK8qD,MAAMJ,YAAYjD,SAASznD,KAAKgrD,OAAS,EAE3F,cAGQH,EAAYD,qBAAuB5qD,OACnC6qD,EAAYD,mBAAqB,MAErC5qD,KAAK+qD,aAAa3gD,WAClBpK,KAAKwlB,WAAW1W,OAChB9O,KAAKwlB,WAAWpb,WAGpB,QACIpK,KAAKqC,YAAYqB,cAAcmK,QAGnC,mBAKI7N,KAAKqqB,KAAO,mBAGpBwgC,EAAYlmD,UAAO,SAA6BC,GAAK,OAAO,IAAKA,GAAKimD,GAAa,EAAA,GAAyB,EAAA,GAAoB,EAAA,GAAyB,MACzJA,EAAYhmD,UAAO,EAAA,GAAyB,CAAEC,KAAM+lD,EAAallD,UAAW,CAAC,CAAC,kBAAmBI,UAAW,CAAC,EAAG,iBAAkBqL,SAAU,EAAGC,aAAc,SAAkClQ,EAAIC,GAAgB,EAALD,GACtM,EAAA,GAAmB,gBAAiBC,EAAI8pD,WAAxC,CAAoD,aAAc9pD,EAAIqpD,MAAQ,EAA9E,CAAiF,OAAQrpD,EAAIipB,OAC5FllB,OAAQ,CAAEklB,KAAM,QAAUpkB,SAAU,CAAC,iBAK9C4kD,EAAYD,mBAAqB,0BAqC3BO,UAA0B,GAC5B,YAAY9oD,EAAayoD,EAAOvC,GAC5BhmD,MAAMF,EAAayoD,GACnB9qD,KAAKqC,YAAcA,EACnBrC,KAAK8qD,MAAQA,EACb9qD,KAAKuoD,SAAWA,EAEpB,qBACIvoD,KAAKgpD,YAAchpD,KAAKuoD,SAAS5/B,KAAK,IAAIja,OAAO1O,KAAK8qD,MAAMtD,SAI5D,MAAM4D,EAAgBprD,KAAK8qD,MAAMJ,YAAYW,YAAYrrD,KAAK6S,MAC1DwG,MAAMC,QAAQ8xC,GACdprD,KAAKsrD,oBAAoBF,GAEpB,OAAAzB,GAAA,EAAA,CAAayB,IAClBA,EAAc7hD,KAAK,OAAAy2B,GAAA,EAAA,CAAUhgC,KAAKwlB,aAC7BzhB,UAAU3D,GAAUJ,KAAKsrD,oBAAoBlrD,IAEtDJ,KAAKurD,WAAW1hD,QAAQN,KAAK,OAAAy2B,GAAA,EAAA,CAAUhgC,KAAKwlB,aACvCzhB,UAAU,IAAM/D,KAAKsrD,uBAE9B,cACItrD,KAAKwrD,SACLjpD,MAAMkpD,cAGV,oBAAoBxmB,GAChB,MAAMymB,EAAS1rD,KAAK2rD,iBAChB1mB,IACAjlC,KAAK4rD,UAAY3mB,GAEjBymB,GAAU1rD,KAAK4rD,UAEf5rD,KAAK8qD,MAAMlB,kBAAkB5pD,KAAK4rD,UAAW5rD,KAAKgpD,YAD5B0C,EAAO1D,cACiDhoD,KAAKgrD,OAInFhrD,KAAKgpD,YAAYe,KAAK,IAI9B,SACI,MAAM2B,EAAS1rD,KAAK2rD,iBAChBD,IACAA,EAAO1D,cAAcvpC,QACrBze,KAAKgpD,YAAYe,KAAK,KAI9B,iBACI,MAAM8B,EAAU7rD,KAAKurD,WAGrB,OAAOM,GAAWA,EAAQljC,KAAK+iC,IAAWA,EAAOzD,OAASyD,EAAOzD,QAAUjoD,cAGnFmrD,EAAkBxmD,UAAO,SAAmCC,GAAK,OAAO,IAAKA,GAAKumD,GAAmB,EAAA,GAAyB,EAAA,GAAoB,EAAA,GAAyB,IAAU,EAAA,GAAyB,EAAA,KAC9MA,EAAkBtmD,UAAO,EAAA,GAAyB,CAAEC,KAAMqmD,EAAmBxlD,UAAW,CAAC,CAAC,yBAA0BC,eAAgB,SAA0CzE,EAAIC,EAAKyE,GAG/K,IAAIb,EAHgM,EAAL7D,GAC/L,EAAA,GAAsB0E,EAAU,IAAmB,GAC5C,EAAL1E,GAEF,EAAA,GAAsB6D,EAAK,EAAA,QAA0B5D,EAAImqD,WAAavmD,IACrEe,UAAW,CAAC,EAAG,gBAAiB,wBAAyBqL,SAAU,EAAGC,aAAc,SAAwClQ,EAAIC,GAAgB,EAALD,GAC5I,EAAA,GAAmB,gBAAiBC,EAAI8pD,WAAxC,CAAoD,OAAQ9pD,EAAIipB,OAC/DpkB,SAAU,CAAC,qBAAsBX,SAAU,CAAC,EAAA,GAA0B,CACnE,CAAEY,QAAS,GAAaC,YAAaglD,GACrC,CAAEjlD,QAAS4hD,GAA2B3hD,YAAaglD,KACnD,EAAA,YA6CZ,MAAMW,GAAiB,mCAKjBC,EACF,YAAYC,EAAWlB,EAKvBmB,EAAWtkD,EAAUK,GACjBhI,KAAKgsD,UAAYA,EACjBhsD,KAAK8qD,MAAQA,EACb9qD,KAAK2H,SAAWA,EAChB3H,KAAKgI,KAAOA,EAEZhI,KAAKwlB,WAAa,IAAIsZ,GAAA,EAEtB9+B,KAAKksD,YAAc,KACnBlsD,KAAKmsD,QAAU,GACfnsD,KAAKosD,cACDpkD,GACAA,EAAKlE,OAAOyF,KAAK,OAAAy2B,GAAA,EAAA,CAAUhgC,KAAKwlB,aAAazhB,UAAU,IAAM/D,KAAKosD,aAAY,IAKlFJ,EAAUjB,aAAahnD,UAAU,IAAM/D,KAAKosD,eAGhD,YAAc,OAAOpsD,KAAKqsD,OAC1B,UAAUnpD,GAASlD,KAAKssD,eAAeppD,GAKvC,aAAe,OAAOlD,KAAKmsD,QAC3B,WAAWI,GAAUvsD,KAAKwsD,gBAAgBD,GAC1C,cACIvsD,KAAKwlB,WAAW1W,OAChB9O,KAAKwlB,WAAWpb,WAGpB,iBACI,MAAMqiD,EAAazsD,KAAKgsD,UAAUn5C,MAAQ7S,KAAK8qD,MAAMJ,YAAYjD,SAC3DznD,KAAK8qD,MAAMJ,YAAYjD,SAASznD,KAAKgsD,UAAUn5C,MAC/C,KACA43C,EAAuB,MAAfzqD,KAAKqsD,OAAiBI,EAAYzsD,KAAKqsD,OACrD,MAAwB,iBAAV5B,EAAqB,GAAGA,EAAQzqD,KAAKmsD,UAAUnsD,KAAKksD,cAAgB,KAEtF,YAAYQ,GAAc,GACtB,MAAMjG,EAAUzmD,KAAK2sD,iBACrB,GAAIlG,IAAYzmD,KAAK4sD,iBAAmBF,EAAa,CACjD,MAAMn8C,EAAUvQ,KAAK2H,SAASjE,cACxBmpD,EAAc7sD,KAAKgI,MAA4B,QAApBhI,KAAKgI,KAAK9E,MAAkB,eAAiB,cACxE4pD,EAA4B,gBAAhBD,EAAgC,eAAiB,cACnEt8C,EAAQw8C,MAAMF,GAAepG,GAAW,GACxCl2C,EAAQw8C,MAAMD,GAAa,GAC3B9sD,KAAK4sD,gBAAkBnG,GAS/B,eAAevjD,GAIXlD,KAAKqsD,OAAS,OAAA,GAAA,EAAA,CAAqBnpD,EAAO,MAC1ClD,KAAKosD,cAQT,gBAAgBG,GACZ,IAAIrpD,EAAQqpD,EACRS,EAAQ,KACZ,GAAsB,iBAAXT,EAAqB,CAC5B,MAAMpH,EAAQoH,EAAOnpD,MAAM0oD,IAC3B5oD,EAAQiiD,EAAM,GACd6H,EAAQ7H,EAAM,IAAM6H,EAExBhtD,KAAKksD,YAAcc,EACnBhtD,KAAKmsD,QAAU,OAAA,GAAA,EAAA,CAAqBjpD,GACpClD,KAAKosD,sBAGbL,EAAmBpnD,UAAO,SAAoCC,GAAK,OAAO,IAAKA,GAAKmnD,GAAoB,EAAA,GAAyB,IAAc,EAAA,GAAyB,IAAU,EAAA,GAAyB,EAAA,GAAmB,EAAA,GAAyB,EAAA,GAAoB,EAAA,GAAyB,GAAA,EAAuB,KAC3TA,EAAmBlnD,UAAO,EAAA,GAAyB,CAAEC,KAAMinD,EAAoBpmD,UAAW,CAAC,CAAC,GAAI,qBAAsB,KAAMR,OAAQ,CAAEslD,MAAO,CAAC,qBAAsB,SAAU8B,OAAQ,CAAC,2BAA4B,kCAqC7MU,EACF,YAAYnC,EAAOkB,GACfhsD,KAAK8qD,MAAQA,EACb9qD,KAAKgsD,UAAYA,EACjBhsD,KAAKktD,YAAa,EAGtB,gBAAkB,OAAOltD,KAAKktD,WAC9B,cAAchqD,GAASlD,KAAKktD,WAAa,OAAA,GAAA,EAAA,CAAsBhqD,GAM/D,QAAQsB,GACJxE,KAAKmtD,UACCntD,KAAK8qD,MAAMJ,YAAY0C,kBAAkBptD,KAAKgsD,UAAUn5C,MACxD7S,KAAK8qD,MAAMJ,YAAYpqB,OAAOtgC,KAAKgsD,UAAUn5C,MACnDrO,EAAMuK,0BAGdk+C,EAAkBtoD,UAAO,SAAmCC,GAAK,OAAO,IAAKA,GAAKqoD,GAAmB,EAAA,GAAyB,IAAU,EAAA,GAAyB,MACjKA,EAAkBpoD,UAAO,EAAA,GAAyB,CAAEC,KAAMmoD,EAAmBtnD,UAAW,CAAC,CAAC,GAAI,oBAAqB,KAAM0L,aAAc,SAAwClQ,EAAIC,GAAgB,EAALD,GACtL,EAAA,GAAkB,SAAA,SAA6DoQ,GAAU,OAAOnQ,EAAIisD,QAAQ97C,OAC3GpM,OAAQ,CAAEgoD,UAAW,CAAC,6BAA8B,qCA0CvDG,UAENA,EAAc17C,UAAO,EAAA,GAAwB,CAAE9M,KAAMwoD,IACrDA,EAAcz7C,UAAO,EAAA,GAAwB,CAAE5P,QAAS,SAA+B2C,GAAK,OAAO,IAAKA,GAAK0oD,0CC/5B7G,MAAMC,GAAwB,OAAA,GAAA,EAAA,CAAc,OAAA,GAAA,EAAA,CAAc,wBAIpDC,UAAoBD,GACtB,YAAYlrD,EAAayoD,EAAOj2C,GAC5BtS,MAAMF,EAAayoD,GACnB9qD,KAAKqC,YAAcA,EACnBrC,KAAK8qD,MAAQA,EACb9qD,KAAKqqB,KAAO,WACZrqB,KAAK6U,SAAWkF,OAAOlF,IAAa,UAG5C24C,EAAY7oD,UAAO,SAA6BC,GAAK,OAAO,IAAKA,GAAK4oD,GAAa,EAAA,GAAyB,EAAA,GAAoB,EAAA,GAAyB,IAAiB,EAAA,GAAyB,cACnMA,EAAY3oD,UAAO,EAAA,GAAyB,CAAEC,KAAM0oD,EAAa7nD,UAAW,CAAC,CAAC,kBAAmBI,UAAW,CAAC,EAAG,iBAAkBqL,SAAU,EAAGC,aAAc,SAAkClQ,EAAIC,GAAgB,EAALD,GACtM,EAAA,GAAmB,gBAAiBC,EAAI8pD,WAAxC,CAAoD,aAAc9pD,EAAIqpD,MAAQ,EAA9E,CAAiF,OAAQrpD,EAAIipB,OAC5FllB,OAAQ,CAAE4G,SAAU,WAAY8I,SAAU,WAAYwV,KAAM,QAAUpkB,SAAU,CAAC,eAAgBX,SAAU,CAAC,EAAA,GAA0B,CAAC,CAAEY,QAAS,GAAaC,YAAaqnD,KAAiB,EAAA,2BAgChMC,UAAuB,WAE7BA,EAAe9oD,UAAO,SAAgCC,GAAK,OAAO8oD,GAA4B9oD,GAAK6oD,IACnGA,EAAe5oD,UAAO,EAAA,GAAyB,CAAEC,KAAM2oD,EAAgB9nD,UAAW,CAAC,CAAC,GAAI,iBAAkB,KAAMR,OAAQ,CAAEkjD,KAAM,CAAC,qBAAsB,QAASx1C,KAAM,CAAC,cAAe,SAAWvN,SAAU,CAAC,EAAA,GAA0B,CAAC,CAAEY,QAAS,GAAgBC,YAAasnD,KAAoB,EAAA,YAInS,MAAMC,GAA4C,EAAA,GAA6B,uBAiBzEC,UAA0B,GAC5B,YAAYtrD,EAAayoD,EAAOvC,EAAU1zC,GACtCtS,MAAMF,EAAayoD,EAAOvC,GAC1BvoD,KAAKqC,YAAcA,EACnBrC,KAAK8qD,MAAQA,EACb9qD,KAAKuoD,SAAWA,EAChBvoD,KAAKoiB,WAAY,EACjBpiB,KAAK6U,SAAWkF,OAAOlF,IAAa,EAGxC,eAAiB,OAAO7U,KAAKoiB,UAC7B,aAAalf,GAASlD,KAAKoiB,UAAY,OAAA,GAAA,EAAA,CAAsBlf,GAE7D,eAAiB,OAAOlD,KAAK+L,UAAY,EAAI/L,KAAK0lB,UAClD,aAAaxiB,GAETlD,KAAK0lB,UAAqB,MAATxiB,EAAgBA,EAAQ,EAK7C,qBACIX,MAAMqrD,qBAEV,cACIrrD,MAAMkpD,sBAGdkC,EAAkBhpD,UAAO,SAAmCC,GAAK,OAAO,IAAKA,GAAK+oD,GAAmB,EAAA,GAAyB,EAAA,GAAoB,EAAA,GAAyB,IAAiB,EAAA,GAAyB,EAAA,GAAyB,EAAA,GAAyB,cACvQA,EAAkB9oD,UAAO,EAAA,GAAyB,CAAEC,KAAM6oD,EAAmBhoD,UAAW,CAAC,CAAC,yBAA0BI,UAAW,CAAC,EAAG,wBAAyBqL,SAAU,EAAGC,aAAc,SAAwClQ,EAAIC,GAAgB,EAALD,GACtO,EAAA,GAAmB,gBAAiBC,EAAI8pD,WAAxC,CAAoD,OAAQ9pD,EAAIipB,OAC/DllB,OAAQ,CAAE0P,SAAU,WAAY9I,SAAU,WAAY87C,KAAM,CAAC,oBAAqB,SAAW5hD,SAAU,CAAC,qBAAsBX,SAAU,CAAC,EAAA,GAA0B,CAChK,CAAEY,QAAS,GAAmBC,YAAawnD,GAC3C,CAAEznD,QAAS,GAAaC,YAAawnD,GACrC,CAAEznD,QAAS4hD,GAA2B3hD,YAAawnD,KACnD,EAAA,2BAkDNE,UAA2B,GAE7B,YAAc,OAAO7tD,KAAKqsD,OAC1B,UAAUnpD,GAASlD,KAAKssD,eAAeppD,GAEvC,aAAe,OAAOlD,KAAKmsD,QAC3B,WAAWI,GAAUvsD,KAAKwsD,gBAAgBD,WAE9CsB,EAAmBlpD,UAAO,SAAoCC,GAAK,OAAOkpD,GAAgClpD,GAAKipD,IAC/GA,EAAmBhpD,UAAO,EAAA,GAAyB,CAAEC,KAAM+oD,EAAoBloD,UAAW,CAAC,CAAC,GAAI,qBAAsB,KAAMR,OAAQ,CAAEslD,MAAO,CAAC,qBAAsB,SAAU8B,OAAQ,CAAC,2BAA4B,WAAajnD,SAAU,CAAC,EAAA,GAA0B,CAAC,CAAEY,QAAS,GAAoBC,YAAa0nD,KAAwB,EAAA,YAK1U,MAAMC,GAAgD,EAAA,GAA6B,uBA0B7EC,EACF,YAAY/F,EAAeC,GACvBjoD,KAAKgoD,cAAgBA,EACrBhoD,KAAKioD,MAAQA,UAGrB8F,EAAkBppD,UAAO,SAAmCC,GAAK,OAAO,IAAKA,GAAKmpD,GAAmB,EAAA,GAAyB,EAAA,GAA0B,EAAA,GAAyBjG,GAA2B,KAC5MiG,EAAkBlpD,UAAO,EAAA,GAAyB,CAAEC,KAAMipD,EAAmBpoD,UAAW,CAAC,CAAC,GAAI,oBAAqB,KAAML,SAAU,CAAC,EAAA,GAA0B,CAAC,CAC/IY,QAAS,GACTC,YAAa4nD,6BAgCvBC,UAAgB,WAEtBA,EAAQrpD,UAAO,SAAyBC,GAAK,OAAOqpD,GAAqBrpD,GAAKopD,IAC9EA,EAAQtoD,UAAO,EAAA,GAAyB,CAAEZ,KAAMkpD,EAASroD,UAAW,CAAC,CAAC,aAAcZ,UAAW,SAAuB5D,EAAIC,GAGlH,IAAI4D,EAH8H,EAAL7D,GAC7H,EAAA,GAAyB,IAAmB,GACrC,EAALA,GAEF,EAAA,GAAsB6D,EAAK,EAAA,QAA0B5D,EAAI6nD,YAAcjkD,EAAGE,QACzEa,UAAW,CAAC,OAAQ,OAAQ,EAAG,YAAaE,SAAU,CAAC,WAAYX,SAAU,CAAC,EAAA,GAA0B,CAAC,CAAEY,QAAS,GAASC,YAAa6nD,KAAa,EAAA,IAAoC3nD,MAAO,EAAGC,KAAM,EAAGC,OAAQ,CAAC,CAAC,oBAAqB,KAAMtB,SAAU,SAA0B9D,EAAIC,GAAgB,EAALD,GACvS,EAAA,GAA0B,EAAG,IAC5BqF,WAAY,CAAC,IAAoBC,OAAQ,CAAC,qJAAsJC,cAAe,UAIxN,MAAMunD,GAAqC,EAAA,GAA6B,uBAkClEC,UAA0B,GAC5B,gBAAkB,OAAOluD,KAAKktD,WAC9B,cAAchqD,GAGVlD,KAAKktD,WAAa,OAAA,GAAA,EAAA,CAAsBhqD,WAGhDgrD,EAAkBvpD,UAAO,SAAmCC,GAAK,OAAOupD,GAA+BvpD,GAAKspD,IAC5GA,EAAkBrpD,UAAO,EAAA,GAAyB,CAAEC,KAAMopD,EAAmBvoD,UAAW,CAAC,CAAC,GAAI,oBAAqB,KAAMR,OAAQ,CAAEgoD,UAAW,CAAC,6BAA8B,cAAgB7nD,SAAU,CAAC,EAAA,GAA0B,CAAC,CAAEY,QAAS,GAAmBC,YAAa+nD,KAAuB,EAAA,YAIrS,MAAMC,GAA+C,EAAA,GAA6B,uBA4B5EC,UAENA,EAAcx8C,UAAO,EAAA,GAAwB,CAAE9M,KAAMspD,IACrDA,EAAcv8C,UAAO,EAAA,GAAwB,CAAE5P,QAAS,SAA+B2C,GAAK,OAAO,IAAKA,GAAKwpD,IAAqBr8C,QAAS,CAAC,CAAC,GAAe,GAAA,GAAkB,GAAA,WAoD9K,MAAM,GACF,YAAYs8C,EAAmB5G,EAAUC,EAAc2D,GACnDrrD,KAAKquD,kBAAoBA,EACzBruD,KAAKynD,SAAWA,EAChBznD,KAAK0nD,aAAeA,EACpB1nD,KAAKqrD,YAAcA,EAEvB,aAAaxD,EAAM4C,EAAO6D,EAAaC,GACnC,MAAMC,EAAWxuD,KAAKquD,kBAAkBxG,EAAM4C,GAE9C,GADA6D,EAAYt7C,KAAKw7C,GACbxuD,KAAK0nD,aAAa8G,GAAW,CAC7B,MAAMpD,EAAgBprD,KAAKqrD,YAAYxD,GACnCuD,IACI/xC,MAAMC,QAAQ8xC,GACdprD,KAAKyuD,iBAAiBrD,EAAeX,EAAO6D,EAAaC,GAGzDnD,EAAc7hD,KAAK,OAAA43B,GAAA,EAAA,CAAK,IAAIp9B,UAAUkhC,IAClCjlC,KAAKyuD,iBAAiBxpB,EAAUwlB,EAAO6D,EAAaC,MAKpE,OAAOD,EAEX,iBAAiBrpB,EAAUwlB,EAAO6D,EAAaC,GAC3CtpB,EAASj3B,QAAQ,CAAC0gD,EAAO1qD,KACrB,IAAI2qD,EAAiBJ,EAAU/uC,QAC/BmvC,EAAe37C,KAAKhP,GAASihC,EAAS9hC,OAAS,GAC/CnD,KAAK4uD,aAAaF,EAAOjE,EAAQ,EAAG6D,EAAaK,KAQzD,aAAaE,GACT,IAAIP,EAAc,GAElB,OADAO,EAAe7gD,QAAQ65C,GAAQ7nD,KAAK4uD,aAAa/G,EAAM,EAAGyG,EAAa,KAChEA,EAMX,qBAAqBQ,EAAOpE,GACxB,IAAI/C,EAAU,GACVoH,EAAgB,GAcpB,OAbAA,EAAc,IAAK,EACnBD,EAAM9gD,QAAQ65C,IACV,IAAImH,GAAS,EACb,IAAK,IAAIj0B,EAAI,EAAGA,GAAK/6B,KAAKynD,SAASI,GAAO9sB,IACtCi0B,EAASA,GAAUD,EAAch0B,GAEjCi0B,GACArH,EAAQ30C,KAAK60C,GAEb7nD,KAAK0nD,aAAaG,KAClBkH,EAAc/uD,KAAKynD,SAASI,GAAQ,GAAK6C,EAAYQ,WAAWrD,MAGjEF,GAUf,MAAM,WAA8B,GAAA,EAChC,YAAYsH,EAAcC,EAAgBp3C,EAAc,IACpDvV,QACAvC,KAAKivD,aAAeA,EACpBjvD,KAAKkvD,eAAiBA,EACtBlvD,KAAKmvD,eAAiB,IAAIj4C,GAAA,EAAgB,IAC1ClX,KAAKovD,cAAgB,IAAIl4C,GAAA,EAAgB,IACzClX,KAAKgrD,MAAQ,IAAI9zC,GAAA,EAAgBY,GAErC,WAAa,OAAO9X,KAAKgrD,MAAM9nD,MAC/B,SAASA,GACLlD,KAAKgrD,MAAMl8C,KAAK5L,GAChBlD,KAAKmvD,eAAergD,KAAK9O,KAAKkvD,eAAeG,aAAarvD,KAAK6S,OAC/D7S,KAAKivD,aAAarH,UAAY5nD,KAAKmvD,eAAejsD,MAEtD,QAAQosD,GACJ,MAAMzlD,EAAU,CACZylD,EAAiB5G,WACjB1oD,KAAKivD,aAAahI,eAAesI,QACjCvvD,KAAKmvD,gBAET,OAAO,OAAA/rB,GAAA,EAAA,IAASv5B,GAASN,KAAK,OAAAH,GAAA,EAAA,CAAI,KAC9BpJ,KAAKovD,cAActgD,KAAK9O,KAAKkvD,eAAeM,qBAAqBxvD,KAAKmvD,eAAejsD,MAAOlD,KAAKivD,eAC1FjvD,KAAKovD,cAAclsD,SAGlC,eCleG,IAAA,GAAA,YAAMusD,EAQT,cACIzvD,KAAK0vD,sBACL1vD,KAAK2vD,oBACL3vD,KAAK4vD,uBAPT,SAAgB99B,GACZ9xB,KAAK8oD,WAAWj2C,KAAOif,EASnB,sBACJ9xB,KAAK6vD,UAAY,IAAI,GACjB7vD,KAAK8vD,YACL9vD,KAAKynD,SACLznD,KAAK0nD,aAAc1nD,KAAKqrD,aAIxB,oBACJrrD,KAAK+vD,QAAU,IAAI/I,GACfhnD,KAAKynD,SACLznD,KAAK0nD,cAIL,uBACJ1nD,KAAK8oD,WAAa,IAAI,GAClB9oD,KAAK+vD,QACL/vD,KAAK6vD,WAIN,YAAYhI,EAAmB4C,GAClC,MAAM+D,EAAWp8C,OAAO8I,OAAO,GAAI2sC,GAGnC,OAFA2G,EAAS/D,MAAQA,EACjB+D,EAASwB,aAAenI,EAAK5iB,SACtBupB,EAGH,SAAS3G,GACb,OAAOA,EAAK4C,MAGR,aAAa5C,GACjB,OAAOA,EAAKmI,WAGR,YAAYnI,GAChB,OAAO,OAAA,GAAA,EAAA,CAAaA,EAAK5iB,wDApDpBwqB,6BAAAA,EAAkB,QAAlBA,EAAkB,UAAA,WAFf,YAET,GCbA,MAAMQ,GAA0B,IAAI,EAAA,EAAoB,4CCAxD,MAAMC,GACT,YAAoB/hD,GAAA,KAAAA,WAAAA,EAEb,QACCnO,KAAKmO,YACLnO,KAAKmO,WAAWX,UAIjB,gBACH,OAAOxN,KAAKmO,WAAWyzB,gBAGpB,cACH,OAAO5hC,KAAKmO,WAAWgiD,cAGpB,cACH,OAAOnwD,KAAKmO,WAAWrD,cAGpB,kBACH,OAAO9K,KAAKmO,WAAWiiD,gBAGpB,qBACH,OAAOpwD,KAAKmO,WAAW3C,gBC1BxB,MAAM6kD,GAAoB,IAAI,EAAA,EAAuC,sCCuBrE,IAAA,GAAA,YAAMC,EAIT,YACYx5C,EACAy5C,EACAC,EACA5yC,EACAxW,GAJA,KAAA0P,OAAAA,EACA,KAAAy5C,KAAAA,EACA,KAAAC,SAAAA,EACA,KAAA5yC,SAAAA,EACA,KAAAxW,QAAAA,EAERpH,KAAK8W,OAAO25C,OACPlnD,KAAK,OAAAoS,GAAA,EAAA,CAAO8B,GAAKA,aAAa,EAAA,IAC9B1Z,UAAU,IAAM/D,KAAK4f,SAGvB,KAAQ8wC,EAA6BjzC,EAAe3E,EAA4B,IAGnF,GAFA9Y,KAAK4f,SAEE8wC,EACH,OAGJ,MAAMviD,EAAanO,KAAK2wD,cAAclzC,EAAG3E,GACzC9Y,KAAK4wD,gBAAkB,IAAIV,GAAe/hD,GAE1C,MAAMqiD,EAAW,IAAI,GAAA,EAAexwD,KAAKwwD,SAAU,IAAI74B,QAAkB,CACrE,CAAC04B,GAAmBv3C,EAAOjG,MAC3B,CAACq9C,GAAgBlwD,KAAK4wD,oBAGpBC,EAAS,IAAI,GAAA,EAAgBH,EAAW,KAAMF,GAKpD,OAHAriD,EAAWa,OAAO6hD,GAClB7wD,KAAK8wD,sBAEE9wD,KAAK4wD,gBAMT,QACH5wD,KAAK+wD,mBAED/wD,KAAK4wD,kBACL5wD,KAAK4wD,gBAAgBhxC,QACrB5f,KAAK4wD,gBAAkB,MAIvB,cAAcnzC,EAAe3E,GACjC,OAAO9Y,KAAKoH,QAAQsH,OAAO,CACvBQ,iBAAkBlP,KAAKgxD,wBAAwBvzC,EAAG3E,GAClD/Q,eAAgB/H,KAAKoH,QAAQC,iBAAiBuY,QAC9C8jB,aAAa,EACbutB,cAAe,wBACfnhD,WAAY,yBAIZ,sBACJ9P,KAAK4wD,gBAAgBM,qBAAqBtnD,iBAAiB,QAAS,KAChE5J,KAAK4f,UAGT5f,KAAK4wD,gBAAgBhvB,gBAAgB79B,UAAU,KAC3C/D,KAAK4f,UAGT5f,KAAK4wD,gBAAgBR,kBAAkBxmD,iBAAiB,cAAe6T,IACnEA,EAAExR,iBACFjM,KAAK4f,UAGT5f,KAAK4wD,gBAAgB9lD,cAAc/G,UAAU,KACzC/D,KAAK4f,UAIL,wBAAwBnC,EAAe3E,GAC3C9Y,KAAKmxD,sBAAsB1zC,EAAG3E,GAE9B,MAAMs4C,EAAU,CACZ1hD,QAASoJ,EAAOpJ,SAAW,SAC3BC,QAASmJ,EAAOnJ,SAAW,SAC3BC,SAAUkJ,EAAOlJ,UAAY,SAC7BC,SAAUiJ,EAAOjJ,UAAY,OAGjC,OAAO7P,KAAKoH,QAAQ2B,WAAWuG,oBAAoB,IAAI,EAAA,EAAWtP,KAAKqxD,aAClEnhD,cAAc,CACXkhD,EACA,CAAC1hD,QAAS,MAAOC,QAAS,SAAUC,SAAU,QAASC,SAAU,UACjE,CAACH,QAAS,MAAOC,QAAS,SAAUC,SAAU,MAAOC,SAAU,OAC/D,CAACH,QAAS,MAAOC,QAAS,SAAUC,SAAU,MAAOC,SAAU,YAInE,sBAAsB4N,EAAe3E,GACzC9Y,KAAK+wD,mBAEDtzC,aAAa6zC,aAAe7zC,aAAa8zC,YACzCvxD,KAAKqxD,WAAa5zC,GAElBzd,KAAKqxD,WAAaxuC,SAASC,cAAc,OACzC9iB,KAAKqxD,WAAWtE,MAAMhkD,SAAW,QACjC/I,KAAKqxD,WAAWtE,MAAM1G,IAAM5oC,EAAE+zC,SAAW14C,EAAO0V,SAAW,GAAK,KAChExuB,KAAKqxD,WAAWtE,MAAM9uB,KAAOxgB,EAAEg0C,SAAW34C,EAAO6U,SAAW,GAAK,KACjE3tB,KAAKqxD,WAAW/vD,GAlHV,8BAmHNuhB,SAASwqB,KAAKtqB,YAAY/iB,KAAKqxD,aAI/B,mBACArxD,KAAKqxD,YAxHC,gCAwHarxD,KAAKqxD,WAAW/vD,IACnCtB,KAAKqxD,WAAWttC,uDApHfusC,GAAW,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,8BAAXA,EAAW,QAAXA,EAAW,UAAA,WAFR,YAET,GClBA,GAAA,YAAMoB,EAMT,YACYxkC,EACAykC,EACyBC,GAFzB,KAAA1kC,GAAAA,EACA,KAAAykC,YAAAA,EANiB,KAAAE,oBAAqB,EAE3C,KAAAC,eAAyB,GAO5BF,EAAgB5jD,QAAQ4M,IACpBxI,OAAO8I,OAAOlb,KAAK8xD,eAAgBl3C,KAI3C,WACI5a,KAAKktB,GAAGxpB,cAAckG,iBAAiB,cAAe6T,IAClDA,EAAExR,iBACFwR,EAAE1O,kBAEE/O,KAAK6xD,oBAET7xD,KAAK2xD,YAAY50C,KACb/c,KAAK+xD,mBACLt0C,EACA,CACI7N,SAAU,QACVC,SAAU,MACVgD,KAAM7S,KAAKgyD,kBAMnB,mBACJ,MAA2B,iBAAhBhyD,KAAK8Y,OACL9Y,KAAK8xD,eAAe9xD,KAAK8Y,QAEzB9Y,KAAK8xD,eAAe9xD,KAAK8Y,OAAOhU,MAIvC,cACJ,MAA+B,iBAAhB9E,KAAK8Y,OAAuB,CAAChU,KAAM9E,KAAK8Y,QAAU9Y,KAAK8Y,qDA5CjE44C,GAAoB,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,IAAA,EAAA,GASjBzB,6BATHyB,EAAoB,UAAA,CAAA,CAAA,GAAA,cAAA,KAAA,OAAA,CAAA,OAAA,CAAA,cAAA,UAAA,mBAAA,2BAA1B,oBCDA,IAAA,GAAA,YAAeO,EADtB,cAGc,KAAAC,KAAuB,GAIjC,WACIlyD,KAAK+4C,SAASh1C,UAAUg1C,IAChBA,EACA/4C,KAAKmyD,cAELnyD,KAAKoyD,cAKjB,cACIpyD,KAAKoE,cAMC,cACN,MAAMiuD,EAAQ,OAAAvyB,GAAA,EAAA,CAAU9/B,KAAKktB,GAAGxpB,cAAe,cAC1CK,UAAU,IAAM/D,KAAKsyD,eAEpBC,EAAQ,OAAAzyB,GAAA,EAAA,CAAU9/B,KAAKktB,GAAGxpB,cAAe,cAC1CK,UAAU,IAAM/D,KAAKwyD,eAE1BxyD,KAAKkyD,KAAKl/C,KAAKq/C,EAAOE,GAGhB,cACN,MACIE,EAAU,CAAC,aADCzyD,KAAK0yD,YAGjB1yD,KAAK2yD,QAAS,EACdF,EAAQz/C,KAAK,aAEjBhT,KAAKktB,GAAGxpB,cAAcJ,UAAUuQ,OAAO4+C,GAGjC,cACNzyD,KAAK2yD,QAAS,EACd3yD,KAAK4yD,sBAGC,YACN5yD,KAAKoE,cACLpE,KAAK4yD,sBAID5yD,KAAK2yD,QAAU3yD,KAAK0yD,YACpB1yD,KAAK6yD,gBACL7yD,KAAK2yD,QAAS,GAIZ,cACN3yD,KAAKkyD,KAAKlkD,QAAQ83C,GAAOA,GAAOA,EAAI1hD,eAG9B,sBACNpE,KAAKktB,GAAGxpB,cAAcJ,UAAUygB,OAAW,YAAa,0DAjE1CkuC,2BAAAA,IACW,OAAA,EAAA,EAAA,CAAA,CAA5B,OAAA,EAAA,EAAA,CAAO,GAAWlZ,6CADhB,GCIA,GAAA,YAAM+Z,UAAkC,GAG3C,YACc5lC,EACA2tB,GAEZt4C,QAHY,KAAA2qB,GAAAA,EACA,KAAA2tB,MAAAA,EAKJ,UACN,MAAM1/B,EAAUnb,KAAK66C,MAAMmC,eAAe,GAAWlE,iBAGrD,OAAO,GAAWyE,iBAAiBpiC,EAFtBnb,KAAK+yC,QAKZ,gBACN,OAAO/yC,KAAK66C,MAAMqB,SAAS,IAAI1I,EAAYxzC,KAAK+yC,uDAlB3C+f,GAAyB,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,4BAAzBA,EAAyB,UAAA,CAAA,CAAA,GAAA,mBAAA,KAAA,OAAA,CAAA,OAAA,CAAA,mBAAA,WAAA,SAAA,CAAA,EAAA,SAA/B,2CCVP,EAAA,GAAA,EAAA,MAAA,GAA+D,EAAA,GAAA,SAAA,WAAA,OAAA,EAAA,GAAA,GAAA,EAAA,KAAA,kCAC3D,EAAA,GAAA,EAAA,WAAA,GACA,EAAA,GAAA,EAAA,OAAA,GAAyB,EAAA,GAAA,EAAA,YAAQ,EAAA,KACrC,EAAA,4BAHwF,EAAA,GAAA,UAAA,EAAA,GAAA,EAAA,EAAA,EAAA,gHAKpF,EAAA,GAAA,EAAA,gBAAA,mBAUI,EAAA,GAAA,EAAA,WAAA,GAKA,EAAA,GAAA,EAAA,SAAA,GAAqD,EAAA,GAAA,SAAA,WAAA,EAAA,GAAA,GAAA,MAAA,EAAA,EAAA,UAAA,OAAA,EAAA,KAAA,aAAA,MACjD,EAAA,GAAA,EAAA,WAAA,GACA,EAAA,GAAA,EAAA,OAAA,IAA+B,EAAA,GAAA,GAAa,EAAA,KAChD,EAAA,KACJ,EAAA,0CAZQ,EAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,qBAAA,EAAA,MAJA,EAAA,GAAA,2BAAA,EAAA,aAAA,GAAA,GAAA,CAAmD,cAAA,EAAA,GAAA,GAAA,GAAA,GAAnD,CAAmD,qBAAA,EAAA,mBAAnD,CAAmD,mBAAA,GAS7C,EAAA,GAAA,GAAA,EAAA,GAAA,WAAA,EAAA,KAAA,QAAA,WAAA,IAKyB,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OCIpC,IAAA,GAAA,YAAMC,EAST,YAAmB3W,EAAkCvB,GAAlC,KAAAuB,KAAAA,EAAkC,KAAAvB,MAAAA,EARb,KAAAmY,UAAW,EACN,KAAAC,cAAe,EACnD,KAAApB,oBAAqB,EACpB,KAAAqB,eAA4C,IAAI,EAAA,EAGlD,KAAAjlC,cAAgC,GACjC,KAAAklC,kBAAoB,IAAIj8C,GAAA,EAAwB,MAGhD,aAAa67B,GAChB/yC,KAAKmzD,kBAAkBrkD,KAAKikC,MAAAA,OAAM,EAANA,EAAQ2D,MACpC12C,KAAKkzD,eAAejvD,KAAK8uC,GAGtB,SACH/yC,KAAKgzD,UAAYhzD,KAAKgzD,SAG1B,WACI,MAAMI,EAAOpzD,KAAK66C,MAAMhyB,OAAO,GAAWwqC,aACrC9pD,KAAK,OAAAoS,GAAA,EAAA,CAAO23C,KAAQA,IACpBvvD,UAAU8uC,IACP7yC,KAAKo8C,KAAKvpC,KAAOggC,IAGnB0gB,EAAOvzD,KAAK66C,MAAMhyB,OAAO,GAAW6vB,YAAY30C,UAAUqU,IAC5DpY,KAAKmzD,kBAAkBrkD,KAAKsJ,EAAKu9B,cAGrC31C,KAAKiuB,cAAcjb,KAAKogD,EAAMG,GAGlC,cACIvzD,KAAKiuB,cAAcjgB,QAAQugB,GAAKA,EAAEnqB,6DAnC7B2uD,GAAoB,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,4BAApBA,EAAoB,UAAA,CAAA,CAAA,iBAAA,SAAA,EAAA,aAAA,SAAA,EAAA,GAAA,EAAA,0NAFlB,CAAC,MAAmB,MAAA,EAAA,KAAA,EAAA,OAAA,CAAA,CAAA,QAAA,+BAAA,EAAA,SAAA,QAAA,EAAA,QAAA,CAAA,EAAA,aAAA,eAAA,CAAA,qBAAA,GAAA,QAAA,YAAA,EAAA,2BAAA,cAAA,qBAAA,mBAAA,SAAA,EAAA,kBAAA,CAAA,EAAA,gBAAA,iBAAA,EAAA,SAAA,CAAA,UAAA,uBAAA,EAAA,eAAA,CAAA,QAAA,GAAA,EAAA,QAAA,CAAA,qBAAA,GAAA,EAAA,YAAA,EAAA,2BAAA,cAAA,qBAAA,oBAAA,CAAA,oBAAA,GAAA,UAAA,kBAAA,EAAA,yBAAA,CAAA,OAAA,SAAA,EAAA,WAAA,gBAAA,EAAA,SAAA,CAAA,UAAA,SAAA,EAAA,eAAA,CAAA,EAAA,cAAA,SAAA,SAAA,SAAA,EAAA,GAAA,EAAA,IDxBnC,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,MAAA,GAIA,EAAA,GAAA,EAAA,WAAA,GACI,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,gBAAA,GAoBJ,EAAA,YAzB0C,EAAA,GAAA,OAAA,EAAA,cAIhC,EAAA,GAAA,GAAA,EAAA,GAAA,aAAA,EAAA,KAAA,WAAA,CAA8B,cAAA,EAAA,KAAA,krCCsBjC,GCNA,GAAA,YAAMS,EAUT,YACcnR,EACAxH,EACAwC,GAFA,KAAAgF,UAAAA,EACA,KAAAxH,MAAAA,EACA,KAAAwC,QAAAA,EAXP,KAAAoW,aAAe,IAAIv8C,GAAA,EAA6BlX,KAAK66C,MAAMmC,eAAe,GAAWtE,YAAY3F,QACjG,KAAA37B,SAAW,IAAIF,GAAA,GAAyB,GACvC,KAAA+W,cAAgC,GACjC,KAAAylC,SAAW1zD,KAAKyzD,aAAalqD,KAAK,OAAAH,GAAA,EAAA,CAAIyzB,IACzC,MAAMyiB,EAAgBt/C,KAAK66C,MAAMmC,eAAe,GAAWlE,iBAC3D,OAAO,GAAWyE,iBAAiB+B,EAAeziB,MAStD,WACI,MAAM82B,EAAU3zD,KAAKq9C,QAAQ9zC,KAAK,OAAA,EAAA,EAAA,CAAS0uC,KAAoBl0C,UAAU,KACrE/D,KAAKoX,SAAStI,MAAK,KAEjB8kD,EAAU5zD,KAAKq9C,QAAQ9zC,KAAK,OAAA,EAAA,EAAA,CAASwuC,IAAqB,OAAA5W,GAAA,EAAA,CAAK,IAChEp9B,UAAU,KACP/D,KAAK4f,UAEb5f,KAAKiuB,cAAcjb,KAAS4gD,EAASD,GAGzC,cACI3zD,KAAKiuB,cAAcjgB,QAAQugB,GAAKA,EAAEnqB,eAG/B,UACHpE,KAAKoX,SAAStI,MAAK,GACnB9O,KAAK66C,MAAMqB,SAAS,IAAI1I,EAAYxzC,KAAKyzD,aAAavwD,QACjDa,UAAU,KACP/D,KAAKoX,SAAStI,MAAK,KAIxB,QACH9O,KAAKqiD,UAAUziC,sDAxCV4zC,GAA0B,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,4BAA1BA,EAA0B,UAAA,CAAA,CAAA,wBAAA,MAAA,GAAA,KAAA,EAAA,OAAA,CAAA,CAAA,EAAA,gBAAA,CAAA,mBAAA,GAAA,QAAA,IAAA,CAAA,OAAA,SAAA,kBAAA,GAAA,WAAA,KAAA,EAAA,eAAA,EAAA,SAAA,CAAA,UAAA,SAAA,CAAA,mBAAA,GAAA,EAAA,YAAA,CAAA,EAAA,WAAA,qBAAA,eAAA,kBAAA,CAAA,OAAA,SAAA,aAAA,GAAA,QAAA,GAAA,EAAA,gBAAA,EAAA,SAAA,CAAA,OAAA,SAAA,oBAAA,GAAA,QAAA,SAAA,QAAA,GAAA,EAAA,gBAAA,EAAA,aAAA,SAAA,SAAA,EAAA,GAAA,EAAA,ICpBvC,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,KAAA,GAA2B,EAAA,GAAA,EAAA,cAAU,EAAA,KACrC,EAAA,GAAA,EAAA,SAAA,GAAsC,EAAA,GAAA,SAAA,WAAA,OAAS,EAAA5zC,WAC3C,EAAA,GAAA,EAAA,WAAA,GACJ,EAAA,KACJ,EAAA,KAEA,EAAA,GAAA,EAAA,OAAA,GAAuB,EAAA,GAAA,YAAA,WAAA,OAAY,EAAAmnC,aAC/B,EAAA,GAAA,EAAA,sBACI,EAAA,GAAA,EAAA,eAAA,GAII,EAAA,GAAA,kBAAA,SAAA,GAAA,OAAkB,EAAA0M,aAAA,KAAA,MACrB,EAAA,KACL,EAAA,KAEA,EAAA,GAAA,EAAA,sBACI,EAAA,GAAA,EAAA,SAAA,GAAQ,EAAA,GAAA,SAAA,WAAA,OAAS,EAAA7zC,WAA8D,EAAA,GAAA,GAAA,UAAM,EAAA,KACrF,EAAA,GAAA,GAAA,SAAA,qCAA0I,EAAA,GAAA,GAAA,QAAI,EAAA,KAClJ,EAAA,KACJ,EAAA,YAXY,EAAA,GAAA,GAAA,EAAA,GAAA,YAAA,EAAA,CAAiB,sBAAA,EAAjB,CAAiB,gBAAA,GASwD,EAAA,GAAA,GAAA,EAAA,GAAA,YAAA,EAAA,GAAA,GAAA,EAAA,EAAA,WAAA,EAAA,GAAA,GAAA,EAAA,EAAA,+XDE7C,OAAA,EAAA,EAAA,CAAA,CAAnC,OAAA,EAAA,EAAA,CAAO,GAAWk5B,4DADhB,6BETK,EAAA,GAAA,EAAA,MAAA,IAAuC,EAAA,GAAA,GAAe,EAAA,0BAAf,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,OCY5C,IAAA,GAAA,YAAM+a,EAMT,YACYxR,EACAxH,EACA7gB,EACA0gB,EACA/zC,GAJA,KAAA07C,UAAAA,EACA,KAAAxH,MAAAA,EACA,KAAA7gB,MAAAA,EACA,KAAA0gB,WAAAA,EACA,KAAA/zC,gBAAAA,EAVL,KAAAmtD,UAAY,IAAI,GAAA,EAChB,KAAA9a,QAAU,IAAI9hC,GAAA,GAAgB,GAC9B,KAAAk3B,OAAkC,GAWzC,WACIpuC,KAAK0e,MAAQ1e,KAAK66C,MAAMmC,eAAe,GAAWlE,iBAAiB,GACnE94C,KAAK8zD,UAAUvhC,SAASvyB,KAAK0e,MAAMvJ,MAGhC,UACH,MAAMyiC,EAAU53C,KAAK8zD,UAAU5wD,MAG/B,OAAI00C,IAAY53C,KAAK0e,MAAMvJ,KAChBnV,KAAK4f,SAGhB5f,KAAKg5C,QAAQlqC,MAAK,GAEX9O,KAAK06C,WAAWyE,OAAOn/C,KAAK0e,MAAMpd,GAAI,CAAC6T,KAAMyiC,IAC/CruC,KAAK,OAAA8gC,EAAA,EAAA,CAAS,IAAMrqC,KAAKg5C,QAAQlqC,MAAK,KACtC/K,UAAU,KACP/D,KAAK8mD,YACL9mD,KAAK66C,MAAMqB,SAAS,IAAIvE,GAAa33C,KAAK0e,MAAOk5B,IACjD53C,KAAK4f,SACNxG,GAAYpZ,KAAK8mD,UAAU1tC,KAG/B,UAAUA,GACbpZ,KAAKg5C,QAAQlqC,MAAK,GAClB9O,KAAKouC,OAASh1B,EAAWA,EAASg1B,OAAS,GAC3CpuC,KAAK2G,gBAAgBgE,gBAGlB,QACH3K,KAAKqiD,UAAUziC,sDA7CVi0C,GAA0B,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,4BAA1BA,EAA0B,UAAA,CAAA,CAAA,wBAAA,MAAA,GAAA,KAAA,EAAA,OAAA,CAAA,CAAA,EAAA,gBAAA,CAAA,mBAAA,GAAA,QAAA,IAAA,CAAA,OAAA,SAAA,kBAAA,GAAA,WAAA,KAAA,EAAA,eAAA,EAAA,SAAA,CAAA,UAAA,SAAA,CAAA,mBAAA,GAAA,EAAA,YAAA,CAAA,EAAA,eAAA,CAAA,EAAA,mBAAA,CAAA,OAAA,OAAA,cAAA,kBAAA,oBAAA,GAAA,WAAA,GAAA,MAAA,IAAA,EAAA,eAAA,CAAA,QAAA,QAAA,EAAA,QAAA,CAAA,OAAA,SAAA,aAAA,GAAA,QAAA,GAAA,EAAA,gBAAA,EAAA,SAAA,CAAA,OAAA,SAAA,oBAAA,GAAA,QAAA,SAAA,QAAA,GAAA,EAAA,gBAAA,EAAA,YAAA,CAAA,EAAA,UAAA,SAAA,SAAA,EAAA,GAAA,EAAA,IDvBvC,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,KAAA,GAA2B,EAAA,GAAA,EAAA,UAAM,EAAA,KACjC,EAAA,GAAA,EAAA,SAAA,GAAsC,EAAA,GAAA,SAAA,WAAA,OAAS,EAAAj0C,WAC3C,EAAA,GAAA,EAAA,WAAA,GACJ,EAAA,KACJ,EAAA,KAEA,EAAA,GAAA,EAAA,OAAA,GAAuB,EAAA,GAAA,YAAA,WAAA,OAAY,EAAAmnC,aAC/B,EAAA,GAAA,EAAA,qBAAA,GACI,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,QAAA,GACA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,MAAA,GACJ,EAAA,KACJ,EAAA,KAEA,EAAA,GAAA,GAAA,sBACI,EAAA,GAAA,GAAA,SAAA,GAAQ,EAAA,GAAA,SAAA,WAAA,OAAS,EAAAnnC,WAA8D,EAAA,GAAA,GAAA,UAAM,EAAA,KACrF,EAAA,GAAA,GAAA,SAAA,qBAAgH,EAAA,GAAA,GAAA,UAAM,EAAA,KAC1H,EAAA,KACJ,EAAA,YAT+B,EAAA,GAAA,GAAA,EAAA,GAAA,cAAA,EAAA,WACA,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,OAAA,MAMsD,EAAA,GAAA,GAAA,EAAA,GAAA,WAAA,EAAA,GAAA,GAAA,EAAA,EAAA,kMCM9E,GCXA,GAAA,YAAem0C,EAOlB,YACclZ,EACA/f,EACAjB,GAFA,KAAAghB,MAAAA,EACA,KAAA/f,WAAAA,EACA,KAAAjB,YAAAA,EAGP,aAEH,OADA75B,KAAKg0D,eACEh0D,KAAKq9C,QAGN,qBACN,OAAOr9C,KAAK66C,MAAMmC,eAAe,GAAWlE,iBAGtC,eACN94C,KAAKi0D,wBAA0Bj0D,KAAK66C,MAAMmC,eAAe,GAAWiX,yBACpEj0D,KAAKk0D,WAAal0D,KAAK66C,MAAMmC,eAAe,GAAWmX,2BACvDn0D,KAAKo0D,oBAAsBp0D,KAAK66C,MAAMmC,eAAe,GAAWoX,qBAG1D,cAAc/5B,GACpB,GAAmB,iBAAfA,EAA+B,CAC/B,MAAMuhB,EAAe57C,KAAK66C,MAAMmC,eAAe,GAAWtE,YAAY3F,OAGhE5nC,GAAWnL,KAAKi0D,yBAA2Bj0D,KAAKq0D,qBAAwBzY,EAC9E,QAAQzwC,MAAAA,OAAM,EAANA,EAAQqvB,cAAe,IAAI,gBAEnC,OAAOx6B,KAAKs0D,qBAAqBlZ,MAAM18B,GAC5BA,EAAM8b,YAAYH,IAK3B,oBACN,OAAOr6B,KAAKs0D,qBAAqB3rC,KAAKuyB,GAAgB,WAAXA,EAAEp2C,MAGvC,iBAAiBA,GACvB9E,KAAK66C,MAAMqB,SAAS,IAAInH,EAAiBjwC,kDA/C3BivD,GAAmB,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,8BAAnBA,EAAmB,QAAnBA,EAAmB,UAAA,WAFzB,YAET,GCSA,GAAA,YAAMQ,UAAqB,GAHlC,kCAIc,KAAAlX,QAAU,CAChB,CACI3H,SAAU,UACV8e,KAAM,aACNC,eAAe,EACfC,QAAS,KACL10D,KAAK66C,MAAMqB,SAAS,IAAI9H,IAE5BugB,QAAS,KACG30D,KAAKo0D,qBAGrB,CACI1e,SAAU,gBACV8e,KAAM,aACNC,eAAe,EACfC,QAAS,KACL10D,KAAK66C,MAAMqB,SAAS,IAAIzI,EAAW,MAEvCkhB,QAAS,IAAM30D,KAAK40D,cAAc,iBAEtC,CACIlf,SAAU,qBACV8e,KAAM,OACNE,QAAS,KACL10D,KAAK66C,MAAMqB,SAAS,IAAIzI,EAAW,GAA0B,KAAM,CAC/D3jC,WAAY,8BACZywB,WAAW,MAGnBo0B,QAAS,KAAO30D,KAAKi0D,yBAA2Bj0D,KAAK40D,cAAc,iBAEvE,CACIlf,SAAU,aACV8e,KAAM,OACNE,QAAS,KACL10D,KAAK66C,MAAMqB,SAAS,IAAI1H,EAAQx0C,KAAKs0D,wBAEzCK,QAAS,KAAO30D,KAAKk0D,YAEzB,CACIxe,SAAU,cACV8e,KAAM,cACNE,QAAS,KACL10D,KAAK66C,MAAMqB,SAAS,IAAIzH,EAAWz0C,KAAKs0D,wBAE5CK,QAAS,IAAM30D,KAAKk0D,YAExB,CACIxe,SAAU,aACV8e,KAAM,oBACNK,gBAAiB70D,KAAK66C,MAAMmC,eAAe,GAAWvE,UACtDic,QAAS,KACL10D,KAAK66C,MAAMqB,SAAS,IAAIzI,EAAW,GAA+B,CAACV,OAAQ/yC,KAAKq0D,wBAEpFM,QAAS,IAAM30D,KAAK40D,cAAc,iBAEtC,CACIlf,SAAU,eACV8e,KAAM,eACNE,QAAS,KACL10D,KAAK80D,iBAAiB,SAE1BH,QAAS,IAAM30D,KAAK40D,cAAc,iBAAmB50D,KAAK66C,MAAMmC,eAAe,GAAWvE,WAE9F,CACI/C,SAAU,gBACV8e,KAAM,uBACNE,QAAS,KACL10D,KAAK80D,iBAAiB,cAE1BH,QAAS,IAAM30D,KAAK40D,cAAc,iBAAmB50D,KAAK66C,MAAMmC,eAAe,GAAWvE,WAE9F,CACI/C,SAAU,UACV8e,KAAM,2BACNK,gBAAiB70D,KAAK66C,MAAMmC,eAAe,GAAWvE,UACtDic,QAAS,KACL10D,KAAK66C,MAAMqB,SAAS,IAAIzI,EAAW,GAA4B,KAAM,CAAC3jC,WAAY,oCAEtF6kD,QAAS,IAAM30D,KAAK40D,cAAc,iBAEtC,CACIlf,SAAU,SACV8e,KAAM,OACNE,QAAS,KACL10D,KAAK66C,MAAMqB,SAAS,IAAIzI,EAAW,MAEvCkhB,QAAS,KACG30D,KAAKi0D,yBAA2Bj0D,KAAK40D,cAAc,iBAGnE,CACIlf,SAAU,cACV8e,KAAM,YACNE,QAAS,KACL10D,KAAK66C,MAAMqB,SAAS,IAAIpH,IAE5B6f,QAAS,IAAM30D,KAAK40D,cAAc,iBAEtC,CACIlf,SAAU,WACV8e,KAAM,gBACNE,QAAS,KACL10D,KAAK66C,MAAMqB,SAAS,IAAI7H,IAE5BsgB,QAAS,IAAM30D,KAAK40D,cAAc,mBAEtC,CACIlf,SAAU,SACV8e,KAAM,SACNC,eAAe,EACfI,iBAAiB,EACjBH,QAAS,KACL10D,KAAK66C,MAAMqB,SAAS,IAAI9I,IAE5BuhB,QAAS,IAAM30D,KAAK40D,cAAc,+DArHjCL,6BAAAA,EAAY,QAAZA,EAAY,UAAA,WAFT,YAET,iBAAM,ICbN,IAAA,GAAA,YAAMQ,UAAsB,GAHnC,kCAIc,KAAA1X,QAAU,CAChB,CACI3H,SAAU,aACV8e,KAAM,oBACNE,QAAS,KACL10D,KAAK66C,MAAMqB,SAAS,IAAIzI,EAAW,MAEvCkhB,QAAS,IAAM30D,KAAK40D,cAAc,iBAEtC,CACIlf,SAAU,eACV8e,KAAM,eACNK,iBAAiB,EACjBH,QAAS,KACL10D,KAAK80D,iBAAiB,SAE1BH,QAAS,IAAM30D,KAAK40D,cAAc,iBAEtC,CACIlf,SAAU,gBACV8e,KAAM,uBACNE,QAAS,KACL10D,KAAK80D,iBAAiB,cAE1BH,QAAS,IAAM30D,KAAK40D,cAAc,+DAzBjCG,6BAAAA,EAAa,QAAbA,EAAa,UAAA,WAFV,YAET,iBAAM,ICKPC,GAAW,KAAM,EAKhB,IAAA,GAAA,YAAMC,UAAsB,GAmF/B,YACcpa,EACAhhB,EACAq7B,EACAp6B,GAEVv4B,MAAMs4C,EAAO/f,EAAYjB,GALf,KAAAghB,MAAAA,EACA,KAAAhhB,YAAAA,EACA,KAAAq7B,OAAAA,EACA,KAAAp6B,WAAAA,EAtFJ,KAAAuiB,QAAU,CAChB,CACI3H,SAAU,UACV8e,KAAM,aACNE,QAAS,KACL10D,KAAK66C,MAAMqB,SAAS,IAAI9H,IAE5BugB,QAAS,KACG30D,KAAKo0D,qBAGrB,CACI1e,SAAU,gBACV8e,KAAM,aACNC,eAAe,EACfC,QAAS,KACL10D,KAAK66C,MAAMqB,SAAS,IAAIzI,EAAW,MAEvCkhB,QAAS,IACE30D,KAAK40D,cAAc,iBAGlC,CACIlf,SAAU,qBACV8e,KAAM,OACNE,QAAS,KACL10D,KAAK66C,MAAMqB,SAAS,IAAIzI,EAAW,GAA0B,KAAM,CAC/D3jC,WAAY,8BACZywB,WAAW,MAGnBo0B,QAAS,KACG30D,KAAKi0D,yBAA2Bj0D,KAAK40D,cAAc,iBAGnE,CACIlf,SAAU,SACV8e,KAAM,OACNE,QAAS,KACL10D,KAAK66C,MAAMqB,SAAS,IAAIzI,EAAW,MAEvCkhB,QAAS,KACG30D,KAAKi0D,yBAA2Bj0D,KAAK40D,cAAc,iBAGnE,CACIlf,SAAU,cACV8e,KAAM,YACNE,QAAS,KACL10D,KAAK66C,MAAMqB,SAAS,IAAIpH,IAE5B6f,QAAS,IACE30D,KAAK40D,cAAc,mBAAqB50D,KAAK40D,cAAc,iBAG1E,CACIlf,SAAU,WACV8e,KAAM,gBACNE,QAAS,KACL10D,KAAK66C,MAAMqB,SAAS,IAAI7H,IAE5BsgB,QAAS,IACE30D,KAAK40D,cAAc,mBAGlC,CACIlf,SAAU,SACV8e,KAAM,SACNC,eAAe,EACfC,QAAS,KACL,MAAMv5C,EAAUnb,KAAKs0D,qBACrBt0D,KAAKk1D,OAAO3T,WACRvhD,KAAK65B,YAAY7gB,IAAI,MACrBmC,EAAQ/R,IAAIqU,GAAKA,EAAEnc,KACrByC,UAAU,KACR/D,KAAK66C,MAAMqB,SAAS,IAAIxH,EAAcv5B,OAG9Cw5C,QAASK,mDA/ERC,GAAa,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAAA,EAAA,GAAA,GAAA,8BAAbA,EAAa,QAAbA,EAAa,UAAA,WAFV,YAET,GCXA,GAAA,YAAME,UAAqB,GAHlC,kCAIc,KAAA9X,QAAU,CAChB,CACI3H,SAAU,UACV8e,KAAM,UACNC,eAAe,EACfC,QAAS,KACL10D,KAAK66C,MAAMqB,SAAS,IAAIjI,IAE5B0gB,QAAS,IAAM30D,KAAK40D,cAAc,iBAEtC,CACIlf,SAAU,iBACV8e,KAAM,iBACNC,eAAe,EACfC,QAAS,KACL10D,KAAKq+C,iBAETsW,QAAS,IAAM30D,KAAK40D,cAAc,kBAInC,gBACH50D,KAAK66C,MAAMqB,SAAS,IAAIvI,EAAkB,CACtC7E,MAAO,iBACPzB,KAAM,+CACN+nB,SAAU,iCACVrmB,GAAI,kBACL,IAAImF,iDA5BFihB,6BAAAA,EAAY,QAAZA,EAAY,UAAA,WAFT,YAET,iBAAM,ICAN,IAAA,GAAA,YAAME,UAAyB,GAHtC,kCAIc,KAAAhY,QAAU,CAChB,CACI3H,SAAU,cACV8e,KAAM,iBACNE,QAAS,KACL10D,KAAKm6C,cAETwa,QAAS,IAAM30D,KAAK40D,cAAc,kBAInC,aACH50D,KAAK66C,MAAMqB,SAAS,IAAIvI,EAAkB,CACtC7E,MAAO,cACPzB,KAAM,mEACN+nB,SAAU,iCACVrmB,GAAI,eACL,IAAIoF,iDAlBFkhB,6BAAAA,EAAgB,QAAhBA,EAAgB,UAAA,WAFb,YAET,iBAAM,ICFN,IAAA,GAAA,YAAMC,gDAAAA,6BAAAA,EAAoB,QAApBA,EAAoB,UAAA,WAFjB,YAET,iCCLA,MAAMC,GAAoB,CAC7B,CAACpgD,KAAM,UAAWrQ,KAAM,UACxB,CAACqQ,KAAM,SAAUrQ,KAAM,SACvB,CAACqQ,KAAM,iBAAkBrQ,KAAM,QAC/B,CAACqQ,KAAM,QAASrQ,KAAM,SACtB,CAACqQ,KAAM,QAASrQ,KAAM,SACtB,CAACqQ,KAAM,OAAQrQ,KAAM,mDCOlB,MAAM0wD,GAA4B,CACrC99C,WAAY,CAAC7E,KAAM,+FCTnB,EAAA,GAAA,EAAA,SAAA,GAAoF,EAAA,GAAA,SAAA,WAAA,OAAA,EAAA,GAAA,GAAA,EAAA,KAAA,eAChF,EAAA,GAAA,EAAA,WAAA,IACJ,EAAA,gCASY,EAAA,GAAA,EAAA,MAAA,IAAgD,EAAA,GAAA,GAAyC,EAAA,oCAAzC,EAAA,GAAA,GAAA,EAAA,GAAA,MAAA,EAAA,QAAA,MAAA,GAAA,KAAA,EAAA,QAAA,MAAA,GAAA,yCAEpD,EAAA,GAAA,EAAA,MAAA,IAAoD,EAAA,GAAA,2BAA6C,EAAA,oCAA7C,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,QAAA,wCAP5D,EAAA,GAAA,GACI,EAAA,GAAA,EAAA,aAAA,IACI,EAAA,GAAA,EAAA,YAAA,IACA,EAAA,GAAA,EAAA,MAAA,IACI,EAAA,GAAA,EAAA,MAAA,IAAkB,EAAA,GAAA,mBAAsF,EAAA,KACxG,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,MAAA,IACJ,EAAA,KACA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,MAAA,IACJ,EAAA,KACJ,EAAA,+BARgB,EAAA,GAAA,GAAA,EAAA,GAAA,QAAA,GACG,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,MAEW,EAAA,GAAA,GAAA,EAAA,GAAA,cAAA,EAAA,KAAA,EAAA,GAAA,EAAA,EAAA,EAAA,QAAA,MAAA,EAAA,QAAA,MACC,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,OAEL,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,aCavB,IAAA,GAAA,YAAM4iD,EAST,YACY5a,EACA6a,GADA,KAAA7a,MAAAA,EACA,KAAA6a,SAAAA,EAPJ,KAAAC,eAAiC,GAClC,KAAAnkC,YAAc,IAAI,GAAA,EAClB,KAAAokC,SAA4C,IAAI1+C,GAAA,EAAgB,IAqEvE,KAAA2+C,UAAY,IAGD71D,KAAK81D,WAAa,GAjEzB91D,KAAK+1D,oBAGT,WACI/1D,KAAKwxB,YAAYkB,aAAanpB,KAC1B,OAAA0R,GAAA,EAAA,CAAa,KACb,OAAAglB,GAAA,EAAA,GACA,OAAAtkB,GAAA,EAAA,CAAOq6C,GAAkB,iBAANA,GACnB,OAAAn9C,GAAA,EAAA,CAAU6C,GAAS1b,KAAKi2D,OAAOv6C,KACjC3X,UAAUqV,IACRpZ,KAAK41D,SAAS9mD,MAAMsK,EAASvG,MAAQ,IAAIzJ,IAAIsV,IAAAA,CACjC5Z,KAAM,QAASoxD,QAASx3C,QAKrC,cAAcjB,GACjB,MAAMva,EAAQua,EAAE7b,OAAOsB,MAEJ,cAAfA,EAAM4B,MACN9E,KAAKm2D,eAAe,CAACrxD,KAAM5B,EAAMgzD,QAAQpxD,OACzC9E,KAAKo2D,aAELp2D,KAAK66C,MAAMqB,SAAS,IAAI5E,GAAkBp0C,EAAMgzD,UAGpDl2D,KAAKq2D,oBAGF,eAAev9C,GAClB9Y,KAAK66C,MAAMqB,SAAS,IAAIlJ,EAAel6B,IAAS/U,UAAU,KACtD/D,KAAKq2D,sBAIL,OAAO36C,GAEX,OADA1b,KAAK81D,UAAYp6C,GACVA,GAASA,EAAMvY,OAAS,EACpB,OAAA,GAAA,EAAA,CAAaqyD,IAEjBx1D,KAAK01D,SAASY,sBAAsB,CAAC56C,MAAAA,EAAOvD,SAAU,IAGzD,oBACJnY,KAAK21D,eAAiBJ,GAAkBnsD,IAAImtD,IAAAA,CAChCzxD,KAAM,YAAaoxD,QAASK,KAGxCv2D,KAAK41D,SAAS9mD,KAAK9O,KAAK21D,gBAGrB,YACH31D,KAAKwxB,YAAY7W,QACjB3a,KAAK+1D,oBACL/1D,KAAK81D,UAAY,KAGb,oBACJ91D,KAAKw2D,QAAQjpD,aACbvN,KAAKorB,MAAM1nB,cAAck9B,qDAxEpB60B,GAAsB,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,6BAAtBA,EAAsB,UAAA,CAAA,CAAA,mBAAA,UAAA,SAAA,EAAA,SAAA,EAAA,eACD,GAAA,cACA,EAAA,o1BDjClC,EAAA,GAAA,EAAA,OAAA,GAA8B,EAAA,GAAA,YAAA,WAAA,OAAY,EAAAU,eAAA,CAAA,MAAA,EAAA,YAAA,WACtC,EAAA,GAAA,EAAA,QAAA,EAAA,GACA,EAAA,GAAA,EAAA,SAAA,GACI,EAAA,GAAA,EAAA,WAAA,GACJ,EAAA,KACA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,SAAA,GAGJ,EAAA,KAEA,EAAA,GAAA,EAAA,mBAAA,EAAA,GAA2F,EAAA,GAAA,kBAAA,SAAA,GAAA,OAAkB,EAAAtD,cAAA,MACzG,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,eAAA,mBAUJ,EAAA,2BApBuB,EAAA,GAAA,GAAA,EAAA,GAAA,kBAAA,EAAA,CAAwB,cAAA,EAAA,aAIe,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,YAAA,OAKsE,EAAA,GAAA,GAAA,EAAA,GAAA,cAAA,EAAA,WAClH,EAAA,GAAA,GAAA,EAAA,GAAA,UAAA,EAAA,GAAA,EAAA,EAAA,EAAA,suCCoBX,8CCbA,IAAA,GAAA,YAAM4D,EAGT,YACY/iB,EACAmH,EACkCE,GAFlC,KAAArH,OAAAA,EACA,KAAAmH,MAAAA,EACkC,KAAAE,kBAAAA,EAGvC,sBACH/6C,KAAK0zC,OAAO32B,KAAK,IAGd,iBAAiBqQ,GACpBptB,KAAK66C,MAAMqB,SAAS,IAAIlI,EAAY5mB,kDAd/BqpC,GAA6B,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAM1B7c,6BANH6c,EAA6B,UAAA,CAAA,CAAA,2BAAA,MAAA,EAAA,KAAA,EAAA,OAAA,CAAA,CAAA,oBAAA,GAAA,QAAA,SAAA,EAAA,gBAAA,EAAA,WAAA,eAAA,iBAAA,CAAA,UAAA,gBAAA,CAAA,QAAA,IAAA,CAAA,oBAAA,GAAA,QAAA,SAAA,EAAA,oBAAA,EAAA,WAAA,SAAA,CAAA,UAAA,sBAAA,SAAA,SAAA,EAAA,GAAA,EAAA,IClB1C,EAAA,GAAA,EAAA,SAAA,GAAqI,EAAA,GAAA,iBAAA,SAAA,GAAA,OAAiB,EAAAC,iBAAA,sBAClJ,EAAA,GAAA,EAAA,WAAA,GACA,EAAA,GAAA,EAAA,OAAA,GAAY,EAAA,GAAA,EAAA,UAAM,EAAA,KACtB,EAAA,KAEA,EAAA,GAAA,EAAA,SAAA,GAAsG,EAAA,GAAA,SAAA,WAAA,OAAS,EAAAC,yCAC3G,EAAA,GAAA,EAAA,WAAA,GACJ,EAAA,YAP+D,EAAA,GAAA,YAAA,EAAA,GAAA,EAAA,EAAA,EAAA,YAAA,CAAkC,eAAA,EAAA,mBAK9B,EAAA,GAAA,GAAA,EAAA,GAAA,YAAA,EAAA,GAAA,EAAA,EAAA,EAAA,qXDcjC,OAAA,EAAA,EAAA,CAAA,CAA7B,OAAA,EAAA,EAAA,CAAO,GAAWC,gDADhB,oBEhBA,MAAMC,GAAsB,CAC/B,OAAA,GAAA,EAAA,CAAQ,SAAU,CACd,OAAA,GAAA,EAAA,CAAW,SAAU,CACjB,OAAA,GAAA,EAAA,CAAM,CAACnQ,QAAS,IAChB,OAAA,GAAA,EAAA,CAAQ,gBAAiB,OAAA,GAAA,EAAA,CAAM,CAC3BA,QAAS,SAIrB,OAAA,GAAA,EAAA,CAAQ,UAAW,CACf,OAAA,GAAA,EAAA,CAAW,SAAU,CACjB,OAAA,GAAA,EAAA,CAAM,CAACA,QAAS,EAAG39C,SAAU,WAAYk1B,KAAM,IAAKC,MAAO,MAC3D,OAAA,GAAA,EAAA,CAAQ,iBAAkB,OAAA,GAAA,EAAA,CAAM,CAC5BwoB,QAAS,+ECbzB,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,2HACJ,EAAA,0BAF6E,EAAA,GAAA,eAAA,GACzE,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,aAAA,IAAA,EAAA,GAAA,EAAA,EAAA,MAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,kBAAA,IAAA,EAAA,GAAA,EAAA,GAAA,QAAA,6BAGA,EAAA,GAAA,EAAA,WAAA,QAA6B,EAAA,GAAA,gBAAA,0BAIjC,EAAA,GAAA,EAAA,OACI,EAAA,GAAA,EAAA,IAAA,GAAuF,EAAA,GAAA,EAAA,mBAAe,EAAA,KAC1G,EAAA,MCGO,IAAA,GAAA,YAAMoQ,EAKT,YAAmB5rB,EAA2BpQ,GAA3B,KAAAoQ,SAAAA,EAA2B,KAAApQ,WAAAA,gDALrCg8B,GAAgC,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,4BAAhCA,EAAgC,UAAA,CAAA,CAAA,8BAAA,MAAA,EAAA,KAAA,GAAA,OAAA,CAAA,CAAA,OAAA,cAAA,QAAA,SAAA,EAAA,SAAA,CAAA,QAAA,aAAA,EAAA,OAAA,YAAA,CAAA,WAAA,IAAA,CAAA,EAAA,QAAA,CAAA,EAAA,cAAA,CAAA,aAAA,GAAA,aAAA,mBAAA,SAAA,SAAA,QAAA,GAAA,EAAA,iBAAA,SAAA,SAAA,EAAA,MAAA,EAAA,IDf7C,EAAA,GAAA,EAAA,mBAAA,mBAEA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,MAAA,mBAGA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,cAAA,KAAA,EAAA,EAAA,IAKA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,MAAA,oEAVoD,EAAA,GAAA,QAAA,EAAA,GAAA,EAAA,EAAA,EAAA,oBAE5B,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,OAAA,EAAA,GAAA,EAAA,EAAA,EAAA,YAAA,CAAoD,WAAA,GAQvE,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,EAAA,EAAA,WAAA,aAAA,OAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,WAAA,oBAAA,MAAA,EAAA,YAAA,KAAA,EAAA,YAAA,+bCGW,CAACD,KAAoB,gBAAA,IAGC,OAAA,EAAA,EAAA,CAAA,CAAjC,OAAA,EAAA,EAAA,CAAO,GAAWlX,iDACoB,OAAA,EAAA,EAAA,CAAA,CAAtC,OAAA,EAAA,EAAA,CAAO,GAAWC,2DACkB,OAAA,EAAA,EAAA,CAAA,CAApC,OAAA,EAAA,EAAA,CAAO,GAAWmX,8DAHhB,qECXK,EAAA,GAAA,EAAA,OAAA,IAAqC,EAAA,GAAA,EAAA,sBAAkB,EAAA,sEACvD,EAAA,GAAA,EAAA,OAAA,IAAsC,EAAA,GAAA,mBAAoE,EAAA,+BAApE,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,iBAAA,EAAA,GAAA,EAAA,IAAA,MAAA,EAAA,KAAA,EAAA,gBAAA,gCALlD,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,MAAA,GAA6B,EAAA,GAAA,GAAiB,EAAA,KAC9C,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,OAAA,GACA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,OAAA,GACJ,EAAA,KACJ,EAAA,KACA,EAAA,GAAA,EAAA,MAAA,IACI,EAAA,GAAA,EAAA,WAAA,IACJ,EAAA,KACJ,EAAA,iDAXK,EAAA,GAAA,oBAAA,GAEgC,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,MAEnB,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SACA,EAAA,GAAA,GAAA,EAAA,GAAA,QAAA,EAAA,iCAcF,EAAA,GAAA,EAAA,OAAA,IAAsC,EAAA,GAAA,EAAA,sBAAkB,EAAA,gCACxD,EAAA,GAAA,EAAA,OAAA,IAAuC,EAAA,GAAA,mBAAqE,EAAA,oCAArE,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,iBAAA,EAAA,GAAA,EAAA,IAAA,MAAA,EAAA,KAAA,EAAA,gBAAA,8CAG/C,EAAA,GAAA,EAAA,SAAA,IAAyF,EAAA,GAAA,SAAA,SAAA,GAAA,EAAA,GAAA,GAAA,MAAA,EAAA,EAAA,KAAA,UAAA,OAAA,EAAA,KAAA,0BAAA,GAA+CxlD,EAAOxC,qBAC3I,EAAA,GAAA,EAAA,WAAA,IACJ,EAAA,8CAXJ,EAAA,GAAA,EAAA,MAAA,IAAwK,EAAA,GAAA,SAAA,WAAA,EAAA,GAAA,GAAA,MAAA,EAAA,EAAA,UAAA,OAAA,EAAA,KAAA,gBAAA,sBACpK,EAAA,GAAA,EAAA,WAAA,oBACA,EAAA,GAAA,EAAA,OACI,EAAA,GAAA,EAAA,MAAA,IAAwB,EAAA,GAAA,GAAkB,EAAA,KAC1C,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,OAAA,GACA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,OAAA,GACJ,EAAA,KACJ,EAAA,KACA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,SAAA,IAGJ,EAAA,0CAZ+C,EAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,WAAA,aAAA,EAAA,IACjB,EAAA,GAAA,GAAA,EAAA,GAAA,kBAAA,EAAA,GAAA,EAAA,GAAA,EAAA,WAAA,aAAA,EAAA,IAEE,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,MAEd,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SACA,EAAA,GAAA,GAAA,EAAA,GAAA,QAAA,EAAA,SAGgD,EAAA,GAAA,GAAA,EAAA,GAAA,QAAA,EAAA,kDAIlE,EAAA,GAAA,EAAA,MAAA,IAAmD,EAAA,GAAA,SAAA,WAAA,OAAA,EAAA,GAAA,GAAA,EAAA,KAAA,gCAC/C,EAAA,GAAA,EAAA,WAAA,IACA,EAAA,GAAA,EAAA,OAAA,IAAY,EAAA,GAAA,EAAA,wBAAoB,EAAA,KACpC,EAAA,MCXG,IAAA,GAAA,YAAMioD,EAGT,YACY/8C,EACD6gB,EACAjB,EACCG,EACAi9B,EACAnpC,GALA,KAAA7T,MAAAA,EACD,KAAA6gB,WAAAA,EACA,KAAAjB,YAAAA,EACC,KAAAG,MAAAA,EACA,KAAAi9B,IAAAA,EACA,KAAAnpC,GAAAA,EAGZ,WACI9tB,KAAK86B,WAAW92B,MAAM,CAACu3B,OAAQv7B,KAAK65B,YAAY7gB,IAAI,MAAOk+C,UAAW,CAAC,aAClEnzD,YAGF,2BAA2B62B,GAC9B,EAAA,EAAA,GAAA,KAAA,EAAA,KAAA,KAAA,SACKjvB,KAAKwrD,IAEFn3D,KAAKia,MAAM8C,KAAKo6C,EAAEC,gBAAgBC,WAAWC,cAAe,CAAC18B,UAAAA,GAAY,CAAC28B,iBAAkBv3D,KAAKi3D,MACjGj3D,KAAK8tB,GAAGvpB,iBAIb,0BAA0Bq2B,GAC7B,EAAA,EAAA,GAAA,KAAA,EAAA,KAAA,KAAA,SACKjvB,KAAKwrD,IACFn3D,KAAKia,MAAM8C,KAAKo6C,EAAEC,gBAAgBC,WAAWG,cAAe,CAAC58B,UAAAA,GAAY,CAAC28B,iBAAkBv3D,KAAKi3D,MACjGj3D,KAAK8tB,GAAGvpB,eACRvE,KAAKy3D,YAAYC,cAKtB,qBAAqB98B,GACxB,MAAM/nB,EAAO,OAAH,OAAA,OAAA,OAAA,GAAO,GAAA,GAAuB,CAAEsK,aAAc,CAACD,SAAU,eACnEld,KAAKia,MAAM8C,KAAK,GAAA,EAAuBlK,GAClCuK,cACA7T,KAAK,OAAAoS,GAAA,EAAA,CAAO0B,GAAaA,IACzBtZ,UAAU,KACP/D,KAAK86B,WAAWG,OAAO,CAACL,EAAUt5B,KAAKyC,UAAU,KAC7C/D,KAAKg6B,MAAMjd,KAAK,uBAChB+vB,IACA9sC,KAAKg6B,MAAMjd,KAAK+vB,EAAY5b,SAAW,GAAA,EAAWkL,aAK3D,gBAAgBxB,GACnB56B,KAAK86B,WAAWjS,OAAO+R,EAAUt5B,IACjCtB,KAAKy3D,YAAYC,0DApDZV,GAA0B,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,4BAA1BA,EAA0B,UAAA,CAAA,CAAA,uBAAA,UAAA,SAAA,EAAA,SAAA,EAAA,QACxB,GAAA,GAAc,o1BDpB7B,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,MAAA,mBAaA,EAAA,GAAA,EAAA,WAAA,EAAA,GACI,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,MAAA,mBAaA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,MAAA,GAIJ,EAAA,YA/ByC,EAAA,GAAA,OAAA,EAAA,GAAA,EAAA,EAAA,EAAA,WAAA,mBAc2E,EAAA,GAAA,GAAA,EAAA,GAAA,UAAA,EAAA,GAAA,EAAA,EAAA,EAAA,WAAA,aAatB,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,YAAA,cAAA,+7CCRvF,yCCHA,IAAA,GAAA,YAAMW,EAIT,YACWC,EACC/c,GADD,KAAA+c,KAAAA,EACC,KAAA/c,MAAAA,EAGL,WAAW9H,GACd/yC,KAAK66C,MAAMqB,SAAS,IAAIpJ,EAAWC,kDAV9B4kB,GAAgB,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,4BAAhBA,EAAgB,UAAA,CAAA,CAAA,YAAA,MAAA,GAAA,KAAA,EAAA,OAAA,CAAA,CAAA,EAAA,gBAAA,CAAA,EAAA,iBAAA,CAAA,mBAAA,SAAA,EAAA,oBAAA,EAAA,aAAA,0BAAA,oBAAA,CAAA,UAAA,kBAAA,EAAA,wBAAA,EAAA,SAAA,CAAA,UAAA,wBAAA,CAAA,QAAA,GAAA,EAAA,QAAA,CAAA,EAAA,kBAAA,CAAA,YAAA,IAAA,CAAA,WAAA,gBAAA,YAAA,oBAAA,EAAA,gBAAA,CAAA,EAAA,mBAAA,CAAA,UAAA,WAAA,CAAA,EAAA,mBAAA,SAAA,SAAA,EAAA,GAAA,GAAA,EAAA,EAAA,gBChB7B,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,0BAEA,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,MAAA,mBACI,EAAA,GAAA,EAAA,WAAA,GAAwG,EAAA,GAAA,SAAA,SAAA,GAA6B,OAA7B,EAAA,GAAA,GAAA,EAAA,GAAA,IAAS,SAAoBpmD,EAAOxC,qBAAmB,EAAA,KAC/J,EAAA,GAAA,EAAA,WAAA,GACA,EAAA,GAAA,EAAA,OAAA,GAAyB,EAAA,GAAA,EAAA,aAAS,EAAA,KACtC,EAAA,KACA,EAAA,GAAA,EAAA,eAAA,EAAA,GAAc,EAAA,GAAA,kBAAA,SAAA,GAAA,OAAkB,EAAA8oD,WAAA,MAA+B,EAAA,KACnE,EAAA,KAEA,EAAA,GAAA,GAAA,cAAA,GAEA,EAAA,GAAA,GAAA,MAAA,GACI,EAAA,GAAA,GAAA,WAAA,IACA,EAAA,GAAA,GAAA,6BACJ,EAAA,KACJ,EAAA,KAEA,EAAA,GAAA,GAAA,MAAA,IACI,EAAA,GAAA,GAAA,sBACJ,EAAA,8BAlBuC,EAAA,GAAA,GAAA,EAAA,GAAA,aAAA,EAAA,KAAA,YAAA,CAA+B,0BAAA,EAAA,GAAA,EAAA,IAA/B,CAA+B,mBAAA,EAAA,GAAA,EAAA,EAAA,EAAA,cACQ,EAAA,GAAA,GAAA,EAAA,GAAA,WAAA,EAAA,yxDDY3C,OAAA,EAAA,EAAA,CAAA,CAA9B,OAAA,EAAA,EAAA,CAAO,GAAWnf,+CACY,OAAA,EAAA,EAAA,CAAA,CAA9B,OAAA,EAAA,EAAA,CAAO,GAAWyC,kDAFhB,iEEfH,EAAA,GAAA,GACI,EAAA,GAAA,EAAA,OAAA,GAAY,EAAA,GAAA,EAAA,aAAS,EAAA,KACzB,EAAA,8CAEI,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,QAAA,GAA8C,EAAA,GAAA,EAAA,eAAW,EAAA,KACzD,EAAA,GAAA,EAAA,WAAA,EAAA,GAKQ,EAAA,GAAA,gBAAA,WAAA,OAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAgB,SAAhB,CAAgC,QAAA,WAAA,EAAA,GAAA,GAAA,MAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,KAAA,OAAA,EAAA,KAAA,kBAAA,EAAA,EAAA,UAEvC,EAAA,KACL,EAAA,kCAJY,EAAA,GAAA,GAAA,EAAA,GAAA,QAAA,EAAA,sDAMR,EAAA,GAAA,EAAA,MAAA,IAA8B,EAAA,GAAA,SAAA,WAAA,OAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,qBAA4B,EAAA,GAAA,mBAAsD,EAAA,KAChH,EAAA,GAAA,EAAA,SAAA,IAAwB,EAAA,GAAA,SAAA,WAAA,OAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,qCACpB,EAAA,GAAA,EAAA,WAAA,IACJ,EAAA,kCAH0D,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,aAAA,EAAA,GAAA,EAAA,EAAA,sBACN,EAAA,GAAA,GAAA,EAAA,GAAA,aAAA,EAAA,GAAA,EAAA,EAAA,gDAbxD,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,MAAA,mBAWA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,cAAA,KAAA,EAAA,EAAA,oCAX6B,EAAA,GAAA,OAAA,EAAA,GAAA,EAAA,EAAA,EAAA,qBAAA,CAAuD,WAAA,8BAL5F,EAAA,GAAA,GACI,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,eAAA,mBAGA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,cAAA,KAAA,EAAA,EAAA,IAmBJ,EAAA,oCAtBkB,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,GAAA,EAAA,EAAA,EAAA,oBAAA,CAAyD,WAAA,ICepE,IAAA,GAAA,YAAM2c,EAMT,YAAoBjd,GAAA,KAAAA,MAAAA,EAHb,KAAAkd,oBAAsB,IAAI7gD,GAAA,GAAgB,GAC1C,KAAA8gD,mBAAqB,IAAI9gD,GAAA,GAAgB,GAIzC,kBACHlX,KAAKi4D,SAASpuD,QAAQ9F,UAAUm0D,IAC5BA,EAAU/0D,QAAU+0D,EAAUhzD,MAAMxB,cAAcmK,UAInD,kBACH7N,KAAK+3D,oBAAoBjpD,MAAK,GAG3B,kBAAkB4P,EAAkBxb,GACvClD,KAAK+3D,oBAAoBjpD,MAAK,GAC1B4P,EAAM82B,cAAgBtyC,IAC1BlD,KAAKg4D,mBAAmBlpD,MAAK,GAC7B9O,KAAK66C,MAAMqB,SAAS,IAAI3G,EAAuB72B,EAAOxb,IACjDqG,KAAK,OAAA8gC,EAAA,EAAA,CAAS,IAAMrqC,KAAKg4D,mBAAmBlpD,MAAK,KACjD/K,2DAxBA+zD,GAA8B,EAAA,GAAA,EAAA,4BAA9BA,EAA8B,UAAA,CAAA,CAAA,4BAAA,UAAA,SAAA,EAAA,SAAA,EAAA,weDhB3C,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,eAAA,yBAAc,EAAA,GAAA,OAAA,EAAA,GAAA,EAAA,EAAA,EAAA,+SCiBsC,OAAA,EAAA,EAAA,CAAA,CAA/C,OAAA,EAAA,EAAA,CAAO,GAAWpY,8DADhB,4BChBP,EAAA,GAAA,EAAA,MAAA,uBAAK,EAAA,GAAA,MAAA,EAAA,gBAAA,EAAA,GAAA,CAAuB,UAAA,EAAA,KAAA,KAAA,mCAM5B,EAAA,GAAA,EAAA,YAAA,uBAAyC,EAAA,GAAA,OAAA,WAAA,EAAA,KAAA,KAAA,EAAA,gBAAA,EAAA,KAAA,OCIlC,IAAA,GAAA,YAAMyY,EAGF,gBACH,IAAItgD,EAAM7X,KAAKkgB,KAAKrI,IACpB,GAAI7X,KAAKkgB,KAAKk4C,UAAW,CACrB,MAAMC,EAAYxgD,EAAI8c,SAAS,KAAO,IAAM,IAC5C9c,GAAOwgD,EAAY,iBAEvB,OAAOxgD,EAGJ,gBACH,OAAI7X,KAAKkgB,KAAKu7B,OAASz7C,KAAKkgB,KAAKu7B,MAAMt4C,OAAS,EACrC,gBAEA,uDAhBNg1D,2BAAAA,EAAsB,UAAA,CAAA,CAAA,mBAAA,OAAA,CAAA,KAAA,QAAA,MAAA,EAAA,KAAA,EAAA,OAAA,CAAA,CAAA,QAAA,aAAA,YAAA,QAAA,EAAA,MAAA,UAAA,EAAA,QAAA,CAAA,EAAA,OAAA,EAAA,QAAA,CAAA,YAAA,QAAA,EAAA,aAAA,EAAA,MAAA,WAAA,CAAA,EAAA,SAAA,SAAA,SAAA,EAAA,GAAA,EAAA,IDVnC,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,MAAA,GAMA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,YAAA,UALK,EAAA,GAAA,OAAA,UAAA,EAAA,KAAA,MAKM,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,UAAA,EAAA,KAAA,4PCIJ,4BCRC,EAAA,GAAA,EAAA,iBAAA,8BAA+D,EAAA,GAAA,OAAA,wEAE3D,EAAA,GAAA,EAAA,WAAA,gEAA2F,EAAA,GAAA,aAAA,EAAA,GAAA,EAAA,EAAA,mCAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,WAAA,mBAAA,KAAA,EAAA,kCAC3F,EAAA,GAAA,EAAA,MAAA,6BAA6D,EAAA,GAAA,MAAA,EAAA,OAAA,EAAA,GAAA,CAAmB,aAAA,EAAA,yCAsBhF,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,MAAA,GAAwB,EAAA,GAAA,EAAA,SAAK,EAAA,KAC7B,EAAA,GAAA,EAAA,MAAA,IAAmB,EAAA,GAAA,GAAsB,EAAA,KAC7C,EAAA,0BADuB,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,uDA5B/B,EAAA,GAAA,GACI,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,iBAAA,GACA,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,WAAA,GACA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,MAAA,GACJ,EAAA,KACA,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,MAAA,GAAwB,EAAA,GAAA,EAAA,QAAI,EAAA,KAC5B,EAAA,GAAA,EAAA,MAAA,GAAoC,EAAA,GAAA,IAAc,EAAA,KACtD,EAAA,KACA,EAAA,GAAA,GAAA,MAAA,GACI,EAAA,GAAA,GAAA,MAAA,GAAwB,EAAA,GAAA,GAAA,QAAI,EAAA,KAC5B,EAAA,GAAA,GAAA,MAAA,IAAmB,EAAA,GAAA,iCAAuC,EAAA,KAC9D,EAAA,KACA,EAAA,GAAA,GAAA,MAAA,GACI,EAAA,GAAA,GAAA,MAAA,GAAwB,EAAA,GAAA,GAAA,gBAAY,EAAA,KACpC,EAAA,GAAA,GAAA,MAAA,IAAmB,EAAA,GAAA,iCAAuC,EAAA,KAC9D,EAAA,KACA,EAAA,GAAA,GAAA,MAAA,IACI,EAAA,GAAA,GAAA,MAAA,GAAwB,EAAA,GAAA,GAAA,YAAQ,EAAA,KAChC,EAAA,GAAA,GAAA,MAAA,IAAmB,EAAA,GAAA,SAAA,WAAA,OAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,kBACf,EAAA,GAAA,GAAA,WAAA,IACA,EAAA,GAAA,GAAA,OAAA,IAAmB,EAAA,GAAA,sCAAoD,EAAA,KAC3E,EAAA,KACJ,EAAA,KACA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,MAAA,qBAIA,EAAA,GAAA,GAAA,MAAA,GACI,EAAA,GAAA,GAAA,MAAA,GAAwB,EAAA,GAAA,GAAA,gBAAY,EAAA,KACpC,EAAA,GAAA,GAAA,MAAA,IAAmB,EAAA,GAAA,6BAAoC,EAAA,KAC3D,EAAA,KACA,EAAA,GAAA,GAAA,MAAA,GACI,EAAA,GAAA,GAAA,MAAA,GAAwB,EAAA,GAAA,GAAA,WAAO,EAAA,KAC/B,EAAA,GAAA,GAAA,MAAA,IAAmB,EAAA,GAAA,6BAAoC,EAAA,KAC3D,EAAA,KACA,EAAA,GAAA,GAAA,2BACJ,EAAA,KACJ,EAAA,gDAvCoB,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,UAAA,EAAA,MAEoD,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,cACpC,EAAA,GAAA,GAAA,EAAA,GAAA,UAAA,EAAA,OAKY,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,MAIjB,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,YAIA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,YAMI,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,IAAA,OAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,UAAA,KAAA,EAAA,OAAA,cAGT,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,GAAA,GAAA,GAAA,EAAA,SAMK,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,aAIA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,wCArCnC,EAAA,GAAA,GACI,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,eAAA,GAyCJ,EAAA,iDAzCkB,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,WAAA,CAA8C,WAAA,2BA4C5D,EAAA,GAAA,EAAA,MAAA,IACI,EAAA,GAAA,EAAA,WAAA,IACA,EAAA,GAAA,EAAA,MAAA,IAAwB,EAAA,GAAA,EAAA,8CAA0C,EAAA,KACtE,EAAA,MC/BG,IAAA,GAAA,YAAMG,EAMT,YACYzd,EACD/f,GADC,KAAA+f,MAAAA,EACD,KAAA/f,WAAAA,EALJ,KAAAy9B,OAASv4D,KAAK66C,MAAMhyB,OAAO,GAAW62B,6BACxCn2C,KAAK,OAAAH,GAAA,EAAA,CAAIqU,KAAMA,MAAAA,OAAC,EAADA,EAAGg+B,QAAS,IAAI9yB,KAAK+jB,GAAKA,EAAEgP,cAOzC,eACH,MAAMc,EAASx8C,KAAK66C,MAAMmC,eAAe,GAAWM,qBACpDt9C,KAAK66C,MAAMqB,SAAS,IAAIpJ,EAAW0J,kDAb9B8b,GAAqB,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,4BAArBA,EAAqB,UAAA,CAAA,CAAA,kBAAA,MAAA,EAAA,KAAA,EAAA,OAAA,CAAA,CAAA,EAAA,OAAA,YAAA,CAAA,kBAAA,IAAA,CAAA,QAAA,UAAA,EAAA,OAAA,EAAA,QAAA,CAAA,EAAA,cAAA,CAAA,QAAA,+BAAA,UAAA,SAAA,EAAA,aAAA,EAAA,QAAA,CAAA,QAAA,iBAAA,EAAA,MAAA,aAAA,EAAA,QAAA,WAAA,CAAA,EAAA,gBAAA,CAAA,EAAA,QAAA,CAAA,QAAA,GAAA,EAAA,QAAA,CAAA,QAAA,GAAA,EAAA,QAAA,cAAA,CAAA,EAAA,SAAA,CAAA,EAAA,OAAA,iBAAA,CAAA,EAAA,QAAA,EAAA,SAAA,CAAA,UAAA,UAAA,CAAA,EAAA,QAAA,CAAA,QAAA,OAAA,EAAA,QAAA,CAAA,EAAA,UAAA,EAAA,QAAA,CAAA,UAAA,SAAA,EAAA,iBAAA,gBAAA,EAAA,cAAA,CAAA,EAAA,iBAAA,EAAA,MAAA,cAAA,CAAA,EAAA,oBAAA,CAAA,UAAA,wBAAA,EAAA,QAAA,CAAA,QAAA,GAAA,EAAA,SAAA,SAAA,SAAA,EAAA,MAAA,EAAA,IDjBlC,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,eAAA,mBA4CA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,cAAA,KAAA,EAAA,EAAA,0BA5Cc,EAAA,GAAA,OAAA,EAAA,GAAA,EAAA,EAAA,EAAA,QAAA,CAAqD,WAAA,y0CCkBf,OAAA,EAAA,EAAA,CAAA,CAA/C,OAAA,EAAA,EAAA,CAAO,GAAW5Y,2DACqB,OAAA,EAAA,EAAA,CAAA,CAAvC,OAAA,EAAA,EAAA,CAAO,GAAWpC,uDAFhB,6BCdK,EAAA,GAAA,GACI,EAAA,GAAA,EAAA,YAAA,GACA,EAAA,GAAA,EAAA,MAAA,GAAkB,EAAA,GAAA,GAAc,EAAA,KACpC,EAAA,+BAFe,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,MACO,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,iCAH1B,EAAA,GAAA,GACI,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,eAAA,GAIJ,EAAA,iDAJkB,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,KAAA,CAAqC,WAAA,8BAMnD,EAAA,GAAA,EAAA,YAAA,GACA,EAAA,GAAA,EAAA,MAAA,GAAkB,EAAA,GAAA,mCAA+C,EAAA,gCAA/C,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,cAAA,KAAA,EAAA,YCKvB,IAAA,GAAA,YAAMkb,EAIT,YAAoB3d,GAAA,KAAAA,MAAAA,EAEb,QACH76C,KAAK66C,MAAMqB,SAAS,IAAIpI,iDAPnB0kB,GAAuB,EAAA,GAAA,EAAA,4BAAvBA,EAAuB,UAAA,CAAA,CAAA,oBAAA,MAAA,EAAA,KAAA,EAAA,OAAA,CAAA,CAAA,EAAA,UAAA,CAAA,EAAA,SAAA,CAAA,EAAA,OAAA,YAAA,CAAA,eAAA,IAAA,CAAA,kBAAA,GAAA,EAAA,eAAA,EAAA,SAAA,CAAA,UAAA,SAAA,CAAA,EAAA,QAAA,CAAA,EAAA,QAAA,CAAA,OAAA,WAAA,SAAA,SAAA,EAAA,MAAA,EAAA,IDfpC,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,eAAA,mBAMA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,cAAA,KAAA,EAAA,EAAA,IAIA,EAAA,GAAA,EAAA,SAAA,GAA6C,EAAA,GAAA,SAAA,WAAA,OAAS,EAAA54C,WAClD,EAAA,GAAA,EAAA,WAAA,GACJ,EAAA,KACJ,EAAA,KACJ,EAAA,KACA,EAAA,GAAA,EAAA,uCAfsB,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,GAAA,EAAA,EAAA,EAAA,QAAA,CAAkD,WAAA,olBCcpB,OAAA,EAAA,EAAA,CAAA,CAA/C,OAAA,EAAA,EAAA,CAAO,GAAW8/B,2DACY,OAAA,EAAA,EAAA,CAAA,CAA9B,OAAA,EAAA,EAAA,CAAO,GAAWhH,kDAFhB,GCLA,GAAA,YAAM+f,EAPb,cAQsC,KAAAC,YAAa,EAG/C,aACI,OAAO14D,KAAK0e,MAAMpd,iDALbm3D,2BAAAA,EAAsB,UAAA,CAAA,CAAA,oBAAA,SAAA,EAAA,aAAA,SAAA,EAAA,GAAA,EAAA,8OCVnC,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,iBAAA,GACJ,EAAA,KACA,EAAA,GAAA,EAAA,aAAA,GACI,EAAA,GAAA,EAAA,YAAA,GACA,EAAA,GAAA,EAAA,MAAA,GAAkB,EAAA,GAAA,GAAc,EAAA,KACpC,EAAA,YALoC,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,OAGrB,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,MAAA,MACO,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,MAAA,s/DDKf,GEQA,GAAA,YAAME,EAOT,YACY9d,EACA58B,GADA,KAAA48B,MAAAA,EACA,KAAA58B,MAAAA,EAPJ,KAAA26C,QAAU,CAAC97B,EAAG,EAAGoD,EAAG,EAAG77B,UAAW,GAUnC,MAAMoZ,GACTzd,KAAK64D,mBACL74D,KAAK84D,kBACL94D,KAAK+4D,aACL/4D,KAAKg5D,aAAeh5D,KAAKi5D,kBAEzBj5D,KAAK44D,QAAU,OAAH,OAAA,OAAA,OAAA,GACL54D,KAAKk5D,iBAAiBz7C,IAAE,CAC3BpZ,UAAWrE,KAAKie,MAAMk7C,WAAW90D,YAGrCrE,KAAKo5D,UAAUrM,MAAM1G,IAAMrmD,KAAK44D,QAAQ14B,EAAI,KAC5ClgC,KAAKo5D,UAAUrM,MAAM9uB,KAAOj+B,KAAK44D,QAAQ97B,EAAI,KAK1C,KAAKrf,GACRzd,KAAKq5D,aAAe57C,EACpBzd,KAAKs5D,UAAU77C,GAGZ,MACHzd,KAAKu5D,kBACLv5D,KAAKw5D,yBACLx5D,KAAKy5D,eACLz5D,KAAKg5D,aAAe,GAGjB,UAAUv7C,GAEb,GADOA,IAAGA,EAAIzd,KAAKq5D,eACZ57C,IAAOzd,KAAKo5D,UAAW,OAC9B,MAAMM,EAAS15D,KAAK25D,uBAAuBl8C,GAC3Czd,KAAK45D,4BAA4BF,GACjC15D,KAAK65D,6BAMD,uBAAuBp8C,GAC3B,MAAMnF,EAAUtY,KAAKk5D,iBAAiBz7C,GAEtC,IAAIq8C,EACAC,EAAK/5D,KAAK44D,QAAQ97B,EAClBk9B,EAAKh6D,KAAK44D,QAAQ14B,EAClB+5B,EAAK3hD,EAAQwkB,EACbo9B,EAAK5hD,EAAQ4nB,EAKjB,OAHI65B,EAAKE,IAAMH,EAAMG,EAAIA,EAAKF,EAAIA,EAAKD,GACnCE,EAAKE,IAAMJ,EAAMI,EAAIA,EAAKF,EAAIA,EAAKF,GAEhC,CACHvrD,MAAO0rD,EAAKF,EACZvT,OAAQ0T,EAAKF,EACb3T,IAAK2T,EACL97B,MAAO67B,GAAME,EAAKF,GAClBI,OAAQH,GAAME,EAAKF,GACnB/7B,KAAM87B,GAON,gBAAgBL,GACpB,MAAMU,EAAOp6D,KAAKq6D,eAAer6D,KAAKie,MAAMq8C,eAE5C,OAAIZ,EAAOz7B,MAAQm8B,EAAKn8B,KACb,OACAy7B,EAAOrT,KAAO+T,EAAK/T,IACnB,MACAqT,EAAOx7B,OAASk8B,EAAKl8B,MACrB,QACAw7B,EAAOS,QAAUC,EAAKD,QACtB,SASP,4BAA4BT,GAChC,MAAMU,EAAOp6D,KAAKie,MAAMk7C,WACpBoB,EAAOv6D,KAAKw6D,gBAAgBd,GAIhCA,EAAOrT,KAAOrmD,KAAK44D,QAAQv0D,UAGd,WAATk2D,EACAH,EAAKK,SAAS,CAACpU,IAAK,IACJ,QAATkU,GACPH,EAAKK,SAAS,CAACpU,KAAM,IAIzB,MAAMqU,EAAa16D,KAAKie,MAAMk7C,WAAW90D,UAAYrE,KAAK44D,QAAQv0D,UAC9Ds2D,EAAcvyC,KAAKwyC,IAAIF,GAGvBA,EAAa,IACbhB,EAAOrT,KAAOsU,GAIlBjB,EAAOlT,QAAUmU,EAMJ,SAATJ,GAA4B,UAATA,GAHAb,EAAOrT,IAAMqT,EAAOlT,QAAWxmD,KAAKie,MAAMk7C,WAAW0B,cAM5E76D,KAAK86D,cAAcpB,GAMf,cAAcA,GAClB15D,KAAKo5D,UAAUrM,MAAMx+C,MAAQmrD,EAAOnrD,MAAQ,KAC5CvO,KAAKo5D,UAAUrM,MAAMvG,OAASkT,EAAOlT,OAAS,KAC9CxmD,KAAKo5D,UAAUrM,MAAM9uB,KAAOy7B,EAAOz7B,KAAO,KAC1Cj+B,KAAKo5D,UAAUrM,MAAM1G,IAAMqT,EAAOrT,IAAM,KAGpC,6BACJ,MAAM0U,EAAkB/6D,KAAKo5D,UAAU/oD,wBACvCrQ,KAAKg5D,aAAahrD,QAASgtD,IACvB,MAAMC,EAAOD,EAAS3qD,wBAGlB4qD,EAAK5U,IAAM4U,EAAKzU,OAASuU,EAAgB1U,KACtC4U,EAAKh9B,KAAOg9B,EAAK1sD,MAAQwsD,EAAgB98B,MACzCg9B,EAAKd,OAASc,EAAKzU,OAASuU,EAAgBZ,QAC5Cc,EAAK/8B,MAAQ+8B,EAAK1sD,MAAQwsD,EAAgB78B,MAC7C88B,EAAS13D,UAAUuQ,IAAI,YAEvBmnD,EAAS13D,UAAUygB,OAAO,cAQ9B,eAAek3C,GACnB,MAAO,CACH1sD,MAAO0sD,EAAK1sD,MACZi4C,OAAQyU,EAAKzU,OACbvoB,KAAMg9B,EAAKh9B,KAAOj+B,KAAKie,MAAMq8C,cAAcr8B,KAC3CooB,IAAK4U,EAAK5U,IAAMrmD,KAAKie,MAAMq8C,cAAcjU,IACzCnoB,MAAO+8B,EAAK/8B,MAAQl+B,KAAKie,MAAMq8C,cAAcr8B,KAC7Ck8B,OAAQc,EAAKd,OAASn6D,KAAKie,MAAMq8C,cAAcjU,KAO/C,iBAAiB5oC,GACrB,MAAO,CACHqf,EAAGrf,EAAEy9C,OAAOp+B,EAAI98B,KAAKie,MAAMq8C,cAAcr8B,KACzCiC,EAAGziB,EAAEy9C,OAAOh7B,EAAIlgC,KAAKie,MAAMq8C,cAAcjU,KAIzC,yBACJ,MAAM1+B,EAAM3nB,KAAKg5D,aACZr9C,OAAOuR,GAAMA,EAAG5pB,UAAUiI,SAAS,aACnCnC,IAAI8jB,IAAOA,EAAGiuC,QAAQ75D,IAErB6Z,EAAUnb,KAAK66C,MAAMmC,eAAe,GAAW7hC,SAChDQ,OAAO+C,GAASiJ,EAAIzL,QAAQwC,EAAMpd,KAAO,GAE9CtB,KAAK66C,MAAMqB,SAAS,IAAIhF,GAAuB/7B,IAG3C,kBACJnb,KAAKo5D,UAAYv2C,SAASC,cAAc,OACxC9iB,KAAKo5D,UAAU91D,UAAUuQ,IAAI,oBAC7B7T,KAAKie,MAAMm9C,UAAUr4C,YAAY/iB,KAAKo5D,WAGnC,kBACIp5D,KAAKo5D,YACZp5D,KAAKo5D,UAAUr1C,SACf/jB,KAAKo5D,UAAY,MAGd,WACH,QAASp5D,KAAKo5D,UAGV,mBACJp5D,KAAKie,MAAMq8C,cAAgBt6D,KAAKie,MAAMm9C,UAAU/qD,wBAChDrQ,KAAKie,MAAMo9C,eAAiBr7D,KAAKie,MAAMk7C,WAAW9oD,wBAG9C,kBACJ,OAAOgJ,MAAMozB,KAAKzsC,KAAKie,MAAMm9C,UAAUE,iBArOpB,iBAwOf,aACJt7D,KAAKu7D,eAAiB,IAAMv7D,KAAKs5D,YACjCt5D,KAAKie,MAAMk7C,WAAWvvD,iBAAiB,SAAU5J,KAAKu7D,gBAGlD,eACJv7D,KAAKie,MAAMk7C,WAAWjvD,oBAAoB,SAAUlK,KAAKu7D,8DAlOpD5C,GAAsB,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,+BAAtBA,EAAsB,QAAtBA,EAAsB,UAAA,WAFnB,YAET,GCTA,GAAA,YAAM6C,EACT,YACYC,EACA5gB,GADA,KAAA4gB,SAAAA,EACA,KAAA5gB,MAAAA,EAGL,MAAMp9B,GACTzd,KAAK66C,MAAMqB,SAAS,IAAIrE,IAGrB,KAAKp6B,GACRzd,KAAKy7D,SAASC,YAAY3O,MAAM1G,IAAM5oC,EAAEy9C,OAAOh7B,EAAI,KACnDlgC,KAAKy7D,SAASC,YAAY3O,MAAM9uB,KAAOxgB,EAAEy9C,OAAOp+B,EAAI,KAGjD,MACH98B,KAAK66C,MAAMqB,SAAS,IAAIpE,kDAhBnB0jB,GAAgB,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,8BAAhBA,EAAgB,QAAhBA,EAAgB,UAAA,WAFb,YAET,GCQA,GAAA,YAAMG,EAOT,YACYpL,EACArjC,EACA2tB,EACA+gB,EACAC,EACAJ,GALA,KAAAlL,KAAAA,EACA,KAAArjC,GAAAA,EACA,KAAA2tB,MAAAA,EACA,KAAA+gB,WAAAA,EACA,KAAAC,UAAAA,EACA,KAAAJ,SAAAA,EARJ,KAAAxtC,cAAgC,GAWxC,WACIjuB,KAAK87D,eAGL,MAAMhW,EAAM9lD,KAAK66C,MAAMhyB,OAAO,GAAW4vB,UAAU10C,UAAU00C,IACzDz4C,KAAK+7D,cAAc/iD,IAAI,OAAOzY,IAAI,CAC9By7D,QAASvjB,IAEbz4C,KAAK+7D,cAAc/iD,IAAI,aAAazY,IAAI,CACpCy7D,QAASvjB,MAIjBz4C,KAAKiuB,cAAcjb,KAAK8yC,GAG5B,cACI9lD,KAAK47D,WAAWrC,kBAChBv5D,KAAKiuB,cAAcjgB,QAAQ83C,GAAOA,EAAI1hD,eAGlC,eACJpE,KAAKi8D,sBACLj8D,KAAKk8D,aACLl8D,KAAKm8D,QACLn8D,KAAKo8D,WACLp8D,KAAKq8D,QACLr8D,KAAKs8D,cAGD,sBACJt8D,KAAKuwD,KAAK5mD,kBAAkB,KACxB3J,KAAK+7D,cAAgB,IAAIQ,OAAOC,QAAQx8D,KAAKy7D,SAASL,WAEtD,MAAMliD,EAAM,IAAIqjD,OAAOE,IACnBC,EAAM,IAAIH,OAAOI,IACjBC,EAAY,IAAIL,OAAOE,IAAI,CAAEj4D,MAAO,YAAaq4D,KAAM,IAE3D78D,KAAK+7D,cAAcloD,IAAI,CAACqF,EAAK0jD,EAAWF,IACxC18D,KAAK+7D,cAAc/iD,IAAI,aAAa8jD,cAAc,SAIlD,aACJ98D,KAAK+7D,cAAcgB,GAAG,WAAYt/C,IAC9B,MAAMu/C,EAAch9D,KAAKi9D,WAAWx/C,GAEpC,GAAIu/C,EAAa,CACbh9D,KAAKk9D,WAAal9D,KAAK67D,UACvB,MAAMn9C,EAAQ1e,KAAKm9D,aAAaH,GACVh9D,KAAK66C,MAAMmC,eAAe,GAAWlE,iBAGpCnwB,KAAKy0C,GAAMA,EAAG97D,KAAOod,EAAMpd,KAC9CtB,KAAK66C,MAAMqB,SAAS,IAAIjJ,EAAc,CAACjzC,KAAKm9D,aAAaH,WAG7Dh9D,KAAKk9D,WAAal9D,KAAK47D,WAG3B57D,KAAKk9D,WAAWlf,MAAMvgC,KAItB,QACJzd,KAAK+7D,cAAcgB,GAAG,MAAOt/C,IACrBzd,KAAKk9D,YAAYl9D,KAAKk9D,WAAW7S,KAAK5sC,KAI1C,WACJzd,KAAK+7D,cAAcgB,GAAG,SAAU,KACxB/8D,KAAKk9D,YAAYl9D,KAAKk9D,WAAWvU,QAIrC,QACJ3oD,KAAK+7D,cAAcgB,GAAG,MAAOt/C,IACzB,MAAM4/C,EAAUr9D,KAAKi9D,WAAWx/C,GAChCzd,KAAK47D,WAAWrC,kBAEZ8D,EACAr9D,KAAK66C,MAAMqB,SAAS,IAAI9E,GAAYp3C,KAAKm9D,aAAaE,GAAU5/C,EAAE6/C,SAASjmB,SAAW55B,EAAE6/C,SAASC,UAC1F9/C,EAAEtS,OAAOqyD,QAAQ,qBACxBx9D,KAAK66C,MAAMqB,SAAS,IAAI/I,KAK5B,cACJnzC,KAAK+7D,cAAcgB,GAAG,YAAat/C,IAC/B,MAAMu/C,EAAch9D,KAAKi9D,WAAWx/C,GAC7Bu/C,GAEPh9D,KAAK66C,MAAMqB,SAAS,IAAI5E,GACpBt3C,KAAKm9D,aAAaH,OAKtB,WAAWv/C,GACf,OAAOA,EAAEtS,OAAOqyD,QAAQ,gBAGpB,aAAatwC,GACjB,MAAM5rB,GAAM4rB,EAAGiuC,QAAQ75D,GACvB,OAAOtB,KAAK66C,MAAMmC,eAAe,GAAW7hC,SACvCwN,KAAKu0B,GAAQA,EAAK57C,MAAQA,iDA3H1Bq6D,GAAgC,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,IAAA,EAAA,GAAA,IAAA,EAAA,GAAA,6BAAhCA,EAAgC,UAAA,CAAA,CAAA,GAAA,0BAAA,KAAA,eAAA,SAAA,EAAA,EAAA,SAAA,EAAA,UACxB,IAAwB,8CADtC,oBCTA,IAAA,GAAA,YAAM8B,EAGT,YAAoBvwC,GAAA,KAAAA,GAAAA,EAEpB,kBACIltB,KAAKo9C,iBAAiBr5C,UAAU4jB,IAC5B,MAAM+1C,EAAM19D,KAAKktB,GAAGxpB,cAAc43D,iBAAiB,gBAC5CoC,EAAIv6D,QAEXkW,MAAMozB,KAAKixB,GAAK1vD,QAASkf,IACJvF,EAAIzL,QAAQ1G,SAAS0X,EAAGiuC,QAAQ75D,GAAI,MAAQ,EAGzD4rB,EAAG5pB,UAAUuQ,IAAI,YAEjBqZ,EAAG5pB,UAAUygB,OAAO,8DAhB3B05C,GAA4B,EAAA,GAAA,EAAA,4BAA5BA,EAA4B,UAAA,CAAA,CAAA,GAAA,sBAAA,OACA,OAAA,EAAA,EAAA,CAAA,CAApC,OAAA,EAAA,EAAA,CAAO,GAAWrgB,6DADhB,oBCUP,SAAeugB,GAAiBj/C,EAA6B0O,EAAQ,uDACjE,MAAMjS,QAeWgM,EAfiBzI,EAgB3B,IAAIjT,QAAQC,KAKvB,SAASkyD,EAAqBC,EAA+BnyD,EAASoyD,EAA4B,IAC9FD,EAAOE,YAAY5iD,IACXA,EAAQhY,QACR26D,EAAaA,EAAWxxB,OAAOnxB,GAC/ByiD,EAAqBC,EAAQnyD,EAASoyD,IAEtCpyD,EAAQoyD,KANpB,CAJ4B32C,EAAI62C,eAAgBtyD,MAFhD,IAAqByb,EAbjB,IAAK,MAAMpnB,KAAOob,EAAS,CACvB,MAAM8iD,EAAa9iD,EAAQpb,GAEvBk+D,EAAWC,kBACLP,GAAiBM,EAAoC7wC,GAE3DA,EAAMpa,WAAWmrD,GAAmBF,IAI5C,OAAO7wC,KAoBX,SAAS+wC,GAAmBz/C,GACxB,OAAO,IAAIjT,QAAQC,IACfgT,EAAMwB,KAAMA,IACRxU,EAAQ,IAAI,GAAA,EAAawU,EAAcxB,EAAM0/C,eC7ClD,IAAA,GAAA,YAAMC,EAOT,YAAsBnxC,GAAA,KAAAA,GAAAA,EANb,KAAAoxC,sBAAuB,EACvB,KAAAC,iBAAkB,EAEJ,KAAAC,aAAkC,GAC/C,KAAAC,aAA6C,IAAI,EAAA,EAI3D,WACI,MAAMvxC,EAAKltB,KAAKktB,GAAGxpB,cACnBwpB,EAAGtjB,iBAAiB,YAAc6T,GAAMzd,KAAK0+D,gBAAgBjhD,IAC7DyP,EAAGtjB,iBAAiB,WAAa6T,GAAMzd,KAAK2+D,eAAelhD,IAC3DyP,EAAGtjB,iBAAiB,YAAc6T,GAAMzd,KAAK4+D,gBAAgBnhD,IAC7DyP,EAAGtjB,iBAAiB,OAAS6T,GAAMzd,KAAK6+D,WAAWphD,IAE5Czd,KAAKs+D,uBACQt+D,KAAK8+D,YAAc9+D,KAAK8+D,YAAYp7D,cAAgBwpB,GAC5DtjB,iBAAiB,QAAS,IAAM5J,KAAK++D,eAIrD,cACI/+D,KAAKg/D,4BAGC,cACFh/D,KAAKu+D,iBACT,OAAA,GAAA,EAAA,CAAiBv+D,KAAKw+D,cAAc7yD,KAAKyhB,IACrCptB,KAAKi/D,gBAAgB7xC,KAItB,gBAAgB3P,GACfzd,KAAKk/D,iBAAiBzhD,IAC1Bzd,KAAKktB,GAAGxpB,cAAcJ,UAAUuQ,IAAI,sBAGjC,eAAe4J,GAGlB,OAFIA,EAAExR,gBAAgBwR,EAAExR,iBACxBwR,EAAE0hD,aAAaC,WAAap/D,KAAKk/D,iBAAiBzhD,GAAK,OAAS,QACzD,EAGJ,gBAAgBA,GACnB,MAAM4hD,EAAQx8C,SAASy8C,iBAAiB7hD,EAAEg0C,QAASh0C,EAAE+zC,SACjDxxD,KAAKktB,GAAGxpB,cAAc6H,SAAS8zD,IACnCr/D,KAAKg/D,4BAGI,WAAWvhD,sDAIpB,GAHAA,EAAE1O,kBACF0O,EAAExR,iBACFjM,KAAKg/D,4BACDh/D,KAAKk/D,iBAAiBzhD,KAAOA,EAAE0hD,aAAartC,MAAO,OAEvD,MAAMA,EAAQzY,MAAMozB,KAAKhvB,EAAE0hD,aAAartC,OACnCnW,OAAQ8W,GAAyC,SAAdA,EAAK8sC,MACxCn2D,IAAKqpB,GACKA,EAAK+sC,oBAGhB1tC,EAAM3uB,QACNnD,KAAKi/D,sBDtEV,SAAmC9jD,sDACtC,IAAIiS,EAAQ,GAEZ,IAAK,MAAMrtB,KAAOob,EAAS,CACvB,MAAMuD,EAAQvD,EAAQpb,GAEf2e,EAAMw/C,YAGT9wC,EAAQA,EAAMkf,aAAaqxB,GAAiBj/C,IAF5C0O,EAAMpa,WAAWmrD,GAAmBz/C,IAM5C,OAAO0O,KAbJ,CCsEoD0E,OAI7C,gBAAgB1E,GACtBptB,KAAKy+D,aAAax6D,KAAKmpB,GAGjB,4BACNptB,KAAKktB,GAAGxpB,cAAcJ,UAAUygB,OAAO,sBAGjC,iBAAiBtG,GACvB,MAAMgiD,EAAWhiD,EAAE0hD,aAAatvB,MAAMlnB,KAAK7jB,GAA+B,UAAvBA,EAAKkX,eACxD,OAAOhc,KAAKu+D,kBAAqBkB,gDA7E5BpB,GAAuB,EAAA,GAAA,EAAA,4BAAvBA,EAAuB,UAAA,CAAA,CAAA,GAAA,eAAA,KAAA,OAAA,CAAA,qBAAA,uBAAA,gBAAA,kBAAA,YAAA,cAAA,aAAA,CAAA,eAAA,iBAAA,QAAA,CAAA,aAAA,qBAA7B,GCJA,GAAA,YAAeqB,EADtB,cAMW,KAAAC,UAA6B,GAEpC,WACW3/D,KAAKktB,KACRltB,KAAKktB,GAAK,IAAI,EAAA,EAAWrK,WAE7B7iB,KAAKuwD,KAAK5mD,kBAAkB,KACxB3J,KAAK4/D,UAAY,OAAA9/B,GAAA,EAAA,CAAU9/B,KAAK6/D,qBAAsB,SAAU,CAACC,SAAS,EAAMC,SAAS,IACpFx2D,KAAK,OAAA0R,GAAA,EAAA,CAAa,KAClBlX,UAAW0Z,GAAazd,KAAKggE,SAASviD,EAAEtS,WAIrD,cACInL,KAAK4/D,WAAa5/D,KAAK4/D,UAAUx7D,cAG3B,qBACN,OAAOpE,KAAKktB,GAAKltB,KAAKktB,GAAGxpB,cAAgBmf,SAGnC,SAAS1X,GACf,IAAKA,GAAWA,IAAWnL,KAAKktB,GAAGxpB,gBAAmB1D,KAAKigE,eAAiBjgE,KAAK2hD,YAAa,OAE9F,MAAMn1B,EAAShX,SAASxV,KAAK2/D,WACzBO,EAAkBlgE,KAAKktB,SAAmC,IAArB/hB,EAAO9G,WAE1B67D,EAClB/0D,EAAO9G,UAAY8G,EAAO6F,aAC1BvH,OAAO02D,QAAU12D,OAAO68C,eAEA4Z,EACxB/0D,EAAO0vD,aAAeruC,EACtB3J,SAASu9C,gBAAgBvF,aAAeruC,IAGxCxsB,KAAKuwD,KAAKtsC,IAAI,KACVjkB,KAAKqgE,gEA1CCX,2BAAAA,OAAf,GCIA,GAAA,YAAMY,UAAqC,GAC9C,YACcpzC,EACA2tB,EACA0V,GAEVhuD,QAJU,KAAA2qB,GAAAA,EACA,KAAA2tB,MAAAA,EACA,KAAA0V,KAAAA,EAKJ,gBACN,MAAMn4C,EAAOpY,KAAK66C,MAAMmC,eAAe,GAAWtjC,aAAe,EACjE1Z,KAAK66C,MAAMqB,SAAS,IAAIvH,EAAgB,CAACv8B,KAAAA,KAGnC,YACN,OAAOpY,KAAK66C,MAAMmC,eAAe,GAAWhE,SAGtC,cACN,OAAOh5C,KAAK66C,MAAMmC,eAAe,GAAWujB,kEAnBvCD,GAA4B,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,4BAA5BA,EAA4B,UAAA,CAAA,CAAA,GAAA,sBAAA,KAAA,SAAA,CAAA,EAAA,SAAlC,oBCSA,IAAA,GAAA,YAAME,EAGT,YACkD3tD,EACpCgoC,EACAhhB,GAFoC,KAAAhnB,KAAAA,EACpC,KAAAgoC,MAAAA,EACA,KAAAhhB,YAAAA,EALqB,KAAA83B,aAAc,EAQzC3xD,KAAK66C,MAAMqB,SADXl8C,KAAK6S,MAAQ7S,KAAK6S,KAAK6L,MACH,IAAI+4B,GAAuBz3C,KAAK6S,KAAK6L,OAErC,IAAIy0B,iDAXvBqtB,GAAyB,EAAA,GAIVnQ,GAAiB,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,4BAJhCmQ,EAAyB,UAAA,CAAA,CAAA,uBAAA,SAAA,EAAA,aAAA,SAAA,EAAA,GAAA,EAAA,kFClBtC,EAAA,GAAA,EAAA,qEDkBO,0CElBP,EAAA,GAAA,EAAA,iBAAqD,EAAA,GAAA,gBAAA,yBAMrC,EAAA,GAAA,EAAA,WAAA,yBAEJ,EAAA,GAAA,EAAA,WAAA,4CALJ,EAAA,GAAA,GACI,EAAA,GAAA,EAAA,MAAA,EAAA,GAA6B,EAAA,GAAA,SAAA,WAAA,EAAA,GAAA,GAAA,MAAA,EAAA,EAAA,KAAA,EAAA,EAAA,UAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,OAAA,EAAA,EAAA,gBAAA,EAAA,GAAA,EAAA,SAAA,MACzB,EAAA,GAAA,EAAA,OAAA,GAAmB,EAAA,GAAA,mBAAmD,EAAA,KACtE,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,WAAA,GACJ,EAAA,KACA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,WAAA,GACJ,EAAA,oDALiG,EAAA,GAAA,GAAA,EAAA,GAAA,aAAA,EAAA,YACtE,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,EAAA,UACiB,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,GAAA,EAAA,YAEmB,EAAA,GAAA,GAAA,EAAA,GAAA,QAAA,8BANnE,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,eAAA,mBAOJ,EAAA,0BARkC,EAAA,GAAA,eAAA,GAChB,EAAA,GAAA,GAAA,EAAA,GAAA,UAAA,EAAA,GAAA,EAAA,EAAA,EAAA,cCwBf,IAAA,GAAA,YAAMC,EAKT,YACY/lB,EACA36B,EACA4xC,EACA9W,EACA/f,GAJA,KAAA4f,WAAAA,EACA,KAAA36B,KAAAA,EACA,KAAA4xC,YAAAA,EACA,KAAA9W,MAAAA,EACA,KAAA/f,WAAAA,EATL,KAAA4lC,WAA2C,IAAIxpD,GAAA,EAAgB,IAC/D,KAAAE,SAAW,IAAIF,GAAA,GAAyB,GAW/C,WAEI,OAAA8D,GAAA,EAAA,CAAc,CACVhb,KAAK66C,MAAMhyB,OAAO,GAAW4wB,MAC7Bz5C,KAAK66C,MAAMhyB,OAAO,GAAWgwB,mBAC7B74C,KAAK86B,WAAWV,mBACjB7wB,KACC,OAAAoS,GAAA,EAAA,CAAO,EAAE89B,EAAMknB,EAAe/lC,KAAe6e,EAAK//B,aAAeinD,KAAmB/lC,GACpF,OAAAuG,GAAA,EAAA,CAAK,IACPp9B,UAAU,KACR/D,KAAKoX,SAAStI,MAAK,GACnB9O,KAAK4gE,qBAIb,cACI5gE,KAAK6gE,eAAiB7gE,KAAK6gE,cAAcz8D,cAGtC,SAASgU,GAERpY,KAAK66C,MAAMqB,SADX9jC,EAAK26B,OACe,IAAID,EAAW16B,EAAK26B,QAEpB,IAAI,EAAA,EAAS,CAAC,mBAInC,gBAAgBtgB,EAAiBhE,GACpC,IAAI3V,EAAS,CAACpJ,QAAS,QAASE,SAAU,SAC1C,OAAQ6iB,EAAKtd,MACT,I9F/DD,Q8FgEK,OAAOnV,KAAK2xD,YAAY50C,KAAK,GAA2B0R,EAAQ3V,GACpE,I9FnEA,S8FqEI,OADAA,EAAS,OAAH,OAAA,CAAIjG,KAAM,CAAC6L,MAAO1e,KAAK66C,MAAMmC,eAAe,GAAWpB,gBAAmB9iC,GACzE9Y,KAAK2xD,YAAY50C,KAAK,GAA2B0R,EAAQ3V,IAIpE,mBAAmBV,SACvB,MAAM0oD,EAAc,CAAC9gE,KAAK+gE,kBAAkB3oD,IAE5C,GAAe,QAAf,EAAIA,EAAK26B,cAAM,IAAA,OAAA,EAAA,EAAEzxC,GAAI,CACjB,MAAM0/D,EAAahhE,KAAKihE,uBAAuB7oD,EAAK26B,QACpD+tB,EAAY9tD,QAAQguD,GAExBhhE,KAAK0gE,WAAW5xD,KAAKgyD,GAGjB,uBAAuB/tB,GAC3B,MAAMmuB,EAAalhE,KAAK66C,MAAMmC,eAAe,GAAWpE,cAAgB,GAExE,OADa7F,EAAOnyC,KAAOmyC,EAAOnyC,KAAKwC,MAAM,KAAO,CAAC2vC,EAAOzxC,KACjD8H,IAAI9H,IACX,MAAM6/D,EAAapuB,EAAOzxC,MAAQA,EAAKyxC,EAASmuB,EAAWv4C,KAAKuyB,GAAKA,EAAE55C,MAAQA,GAC/E,GAAI6/D,EACA,OAAO,IAAI1qB,GAAW0qB,KAE3BxlD,OAAOu/B,KAAOA,GAGb,kBAAkB9iC,GACtB,G9F/FI,W8F+FAA,EAAKjD,KAAkC,CACvC,MAAMulB,EAAc16B,KAAK86B,WAAWZ,UAAUh3B,MACxCk+D,EAAmB,IAAI3qB,GAAWz2C,KAAK66C,MAAMmC,eAAe,GAAW7B,aAC7E,OAAIzgB,GAAetiB,EAAK26B,OAAOgJ,eAAiBrhB,EACrC,OAAP,OAAA,OAAA,OAAA,GAAW0mC,GAAgB,CAAE1rB,SAAU11C,KAAK86B,WAAWV,iBAAiBl3B,MAAMiS,OAEtEnV,KAAK66C,MAAMmC,eAAe,GAAWqkB,sBAAsCD,EAAdlrB,GAGzE,OAAO99B,EAIP,mBACJpY,KAAK6gE,cAAgB,OAAA7lD,GAAA,EAAA,CAAc,CAC/Bhb,KAAK66C,MAAMhyB,OAAO,GAAW6vB,YAC7B14C,KAAK66C,MAAMhyB,OAAO,GAAW+vB,eAC9BrvC,KACC,OAAA02B,GAAA,EAAA,GACA,OAAAtkB,GAAA,EAAA,CAAO,EAAE+8B,YAEL,M9FpHJ,W8FoHWA,EAAWvjC,OAAoD,QAAlB,EAACujC,EAAW3F,cAAM,IAAA,OAAA,EAAA,EAAE59B,SAE9EpR,UAAU,EAAE20C,MACV14C,KAAKshE,mBAAmB5oB,mDAjGvB+nB,GAAyB,EAAA,GAAA,IAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,4BAAzBA,EAAyB,UAAA,CAAA,CAAA,sBAAA,MAAA,EAAA,KAAA,EAAA,OAAA,CAAA,CAAA,EAAA,OAAA,YAAA,CAAA,cAAA,IAAA,CAAA,EAAA,wBAAA,CAAA,EAAA,QAAA,WAAA,CAAA,EAAA,kBAAA,EAAA,SAAA,CAAA,SAAA,IAAA,CAAA,EAAA,QAAA,CAAA,UAAA,kBAAA,EAAA,QAAA,CAAA,QAAA,YAAA,UAAA,uBAAA,EAAA,QAAA,CAAA,UAAA,mBAAA,CAAA,UAAA,uBAAA,EAAA,cAAA,SAAA,SAAA,EAAA,MAAA,EAAA,ID3BtC,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,WAAA,mBACA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,cAAA,KAAA,EAAA,EAAA,0BADU,EAAA,GAAA,OAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,CAA0C,WAAA,84BCyBpC,CAAC5J,KAAoB,gBAAA,OAE9B,GClBA,GAAA,YAAM0K,gDAAAA,2BAAAA,EAAqB,UAAA,CAAA,CAAA,kBAAA,MAAA,EAAA,KAAA,EAAA,SAAA,SAAA,EAAA,GAAA,EAAA,GCTlC,EAAA,GAAA,EAAA,gNDSO,GETA,MAAMC,GAAqC,CAC9C,CAACrsD,KAAM,YAAaugC,SAAU,QAC9B,CAACvgC,KAAM,OAAQugC,SAAU,QACzB,CAACvgC,KAAM,aAAcugC,SAAU,iBAC/B,CAACvgC,KAAM,aAAcugC,SAAU,eAC/B,CAACvgC,KAAM,OAAQugC,SAAU,QACzB,CAACvgC,KAAM,YAAaugC,SAAU,sDCe1B,EAAA,GAAA,EAAA,SAAA,GAA0D,EAAA,GAAA,SAAA,WAAA,EAAA,GAAA,GAAA,MAAA,EAAA,EAAA,UAAA,OAAA,EAAA,GAAA,GAAA,WAAA,MACtD,EAAA,GAAA,EAAA,WAAA,IACA,EAAA,GAAA,EAAA,OAAA,IAAY,EAAA,GAAA,GAAiB,EAAA,KACjC,EAAA,+CAHqF,EAAA,GAAA,SAAA,EAAA,SAAA,EAAA,MAErE,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,mDAvBxB,EAAA,GAAA,GACI,EAAA,GAAA,EAAA,OAAA,GAA0B,EAAA,GAAA,EAAA,WAAO,EAAA,KACjC,EAAA,GAAA,EAAA,SAAA,GACI,EAAA,GAAA,EAAA,OAAA,GACI,EAAA,GAAA,EAAA,QAAM,EAAA,GAAA,mBAA6C,EAAA,KACnD,EAAA,GAAA,EAAA,WAAA,GACJ,EAAA,KACA,EAAA,GAAA,EAAA,WAAA,GACJ,EAAA,KACA,EAAA,GAAA,GAAA,WAAA,EAAA,GACI,EAAA,GAAA,GAAA,MAAA,GAAyB,EAAA,GAAA,GAAA,aAAS,EAAA,KAClC,EAAA,GAAA,GAAA,SAAA,GAAsB,EAAA,GAAA,SAAA,WAAA,OAAA,EAAA,GAAA,GAAA,EAAA,KAAA,gBAAyB,UAC3C,EAAA,GAAA,GAAA,WAAA,IACA,EAAA,GAAA,GAAA,OAAA,IAAY,EAAA,GAAA,GAAA,aAAS,EAAA,KACzB,EAAA,KACA,EAAA,GAAA,GAAA,SAAA,GAAsB,EAAA,GAAA,SAAA,WAAA,OAAA,EAAA,GAAA,GAAA,EAAA,KAAA,gBAAyB,WAC3C,EAAA,GAAA,GAAA,WAAA,IACA,EAAA,GAAA,GAAA,OAAA,IAAY,EAAA,GAAA,GAAA,cAAU,EAAA,KAC1B,EAAA,KACA,EAAA,GAAA,GAAA,MAAA,IACA,EAAA,GAAA,GAAA,MAAA,GAAyB,EAAA,GAAA,GAAA,WAAO,EAAA,KAChC,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,SAAA,IAIJ,EAAA,KACJ,EAAA,gDAxB6B,EAAA,GAAA,GAAA,EAAA,GAAA,oBAAA,EAAA,CAA0B,WAAA,EAAA,aAErC,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,gBAAA,EAAA,UAO6C,EAAA,GAAA,GAAA,EAAA,GAAA,SAAA,QAAA,EAAA,WAIC,EAAA,GAAA,GAAA,EAAA,GAAA,SAAA,SAAA,EAAA,WAMlC,EAAA,GAAA,GAAA,EAAA,GAAA,UAAA,EAAA,iBChB9B,MAAM+rB,GAA2B,CAACC,OAAQ,aAActyD,UAAW,QAc5D,IAAA,GAAA,YAAMuyD,EAZb,cAaa,KAAAC,aAAc,EAChB,KAAAC,eAAiBL,GAGjB,KAAAtnD,MAAoC,IAAIhD,GAAA,EAAgBuqD,IAExD,WAAWC,GACd1hE,KAAKka,MAAMpL,KAAK,OAAD,OAAA,OAAA,OAAA,GAAK9O,KAAKka,MAAMhX,OAAK,CAAEw+D,OAAQA,EAAOvsD,QACrDnV,KAAKgyB,gBAAgBhyB,KAAKka,MAAMhX,OAG7B,gBAAgBkM,GACnBpP,KAAKka,MAAMpL,KAAK,OAAD,OAAA,OAAA,OAAA,GAAK9O,KAAKka,MAAMhX,OAAK,CAAEkM,UAAAA,KACtCpP,KAAKgyB,gBAAgBhyB,KAAKka,MAAMhX,OAG7B,gBAAgBw+D,GACnB,OAAO1hE,KAAK6hE,eAAel5C,KAAKtM,GAAQA,EAAKlH,OAASusD,GAAQhsB,SAG3D,WAAWxyC,GACdlD,KAAKka,MAAMpL,KAAK5L,GAASu+D,IAGtB,iBAAiB51D,GACpB7L,KAAKgyB,gBAAkBnmB,EAGpB,mEA7BE81D,2BAAAA,EAA0B,UAAA,CAAA,CAAA,wBAAA,OAAA,CAAA,YAAA,eAAA,SAAA,CAAA,EAAA,GANxB,CAAC,CACRz7D,QAAS,GAAA,EACTC,YAAaw7D,EACbl6D,OAAO,MACT,MAAA,EAAA,KAAA,EAAA,OAAA,CAAA,CAAA,EAAA,QAAA,CAAA,QAAA,GAAA,EAAA,SAAA,CAAA,EAAA,WAAA,EAAA,oBAAA,YAAA,CAAA,EAAA,uBAAA,CAAA,UAAA,sBAAA,EAAA,cAAA,CAAA,UAAA,OAAA,EAAA,8BAAA,CAAA,EAAA,mBAAA,CAAA,OAAA,WAAA,CAAA,QAAA,GAAA,EAAA,SAAA,CAAA,gBAAA,GAAA,EAAA,SAAA,CAAA,UAAA,SAAA,CAAA,QAAA,IAAA,CAAA,EAAA,aAAA,CAAA,gBAAA,GAAA,EAAA,SAAA,QAAA,EAAA,QAAA,YAAA,SAAA,SAAA,EAAA,GAAA,EAAA,IDjBN,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,eAAA,yBAAc,EAAA,GAAA,OAAA,EAAA,GAAA,EAAA,EAAA,EAAA,ojCCmBP,wDCjBC,EAAA,GAAA,EAAA,MAAA,2CAEA,EAAA,GAAA,EAAA,SAAA,GAAmD,EAAA,GAAA,SAAA,WAAA,OAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,UAAS,aACxD,EAAA,GAAA,EAAA,WAAA,GACA,EAAA,GAAA,EAAA,OAAA,GAAY,EAAA,GAAA,GAAmB,EAAA,KACnC,EAAA,uCAFc,EAAA,GAAA,GAAA,EAAA,GAAA,UAAA,EAAA,MACE,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,mDAGhB,EAAA,GAAA,EAAA,SAAA,GAAwB,EAAA,GAAA,SAAA,WAAA,OAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,UAAS,6BAC7B,EAAA,GAAA,EAAA,WAAA,GACJ,EAAA,uCAFmD,EAAA,GAAA,aAAA,EAAA,GAAA,EAAA,EAAA,EAAA,WACrC,EAAA,GAAA,GAAA,EAAA,GAAA,UAAA,EAAA,iCATlB,EAAA,GAAA,GACI,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,MAAA,GAEA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,SAAA,GAKA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,SAAA,GAGJ,EAAA,6CAV2B,EAAA,GAAA,GAAA,EAAA,GAAA,QAAA,EAAA,SAAA,EAAA,iBAEW,EAAA,GAAA,GAAA,EAAA,GAAA,QAAA,EAAA,SAKwD,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,0CATlG,EAAA,GAAA,GACI,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,eAAA,GAYJ,EAAA,+BAZkB,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,oDAclB,EAAA,GAAA,EAAA,SAAA,EAAA,IAAwB,EAAA,GAAA,SAAA,WAAA,OAAA,EAAA,GAAA,GAAA,EAAA,KAAA,yCACpB,EAAA,GAAA,EAAA,WAAA,IACJ,EAAA,UAFwD,EAAA,GAAA,aAAA,EAAA,GAAA,EAAA,EAAA,iBCgBjD,IAAA,GAAA,YAAMq6D,EAST,YACYjnB,EACA2V,EACAmB,GAFA,KAAA9W,MAAAA,EACA,KAAA2V,SAAAA,EACA,KAAAmB,YAAAA,EAV2B,KAAA5P,SAAU,EAG1C,KAAAggB,gBAAkB,IAAI7qD,GAAA,GAAgB,GACtC,KAAAorC,SAAkD,IAAIprC,GAAA,EAAgB,IAQzElX,KAAKgY,aAAe,OAAAgD,GAAA,EAAA,CAAc,CAC9Bhb,KAAK66C,MAAMhyB,OAAO,GAAW6vB,YAC7B14C,KAAK66C,MAAMhyB,OAAO,GAAW42B,iBAC9B17C,UAAUi+D,IACThiE,KAAKiiE,WAAWD,EAAS,GAAIA,EAAS,IACtChiE,KAAK+hE,gBAAgBjzD,KAAK9O,KAAKsiD,SAASp/C,MAAMid,KAAK2b,IAAWA,EAAO24B,kBAI7E,cACIz0D,KAAKgY,aAAa5T,cAGf,sBACH,MAAMsa,EAAQ1e,KAAK66C,MAAMmC,eAAe,GAAW0C,6BACnD1/C,KAAK2xD,YAAY50C,KACb,GACA/c,KAAKkiE,kBAAkBx+D,cACvB,CAACmP,KAAM,CAAC6L,MAAAA,KAIR,WAAWg6B,EAAuB+G,GrG5DnC,UqG8DC/G,EAAWvjC,MAAoCsqC,EAIpB,UAApB/G,EAAWvjC,MAAoBsqC,EACtCz/C,KAAKsiD,SAASxzC,KAAK9O,KAAKwwD,SAASx3C,IAAI,IAAcmpD,cACxB,WAApBzpB,EAAWvjC,MAAqBsqC,EACvCz/C,KAAKoiE,qBAEE1pB,EAAW3F,UAAW0M,MAAAA,OAAa,EAAbA,EAAen+C,IAC5CtB,KAAKsiD,SAASxzC,KAAK9O,KAAKwwD,SAASx3C,IAAI,IAAempD,cAGzB,YAApBzpB,EAAWvjC,MAA0C,WAApBujC,EAAWvjC,KACnDnV,KAAKsiD,SAASxzC,KAAK9O,KAAKwwD,SAASx3C,IAAI,IAAcmpD,cAG5C1iB,EACPz/C,KAAKoiE,qBAELpiE,KAAKsiD,SAASxzC,KAAK,IAnBnB9O,KAAKsiD,SAASxzC,KAAK9O,KAAKwwD,SAASx3C,IAAI,IAAkBmpD,cAuBvD,2BACJ,MAAMhnD,EAAUnb,KAAK66C,MAAMmC,eAAe,GAAWlE,iBAAiB31C,OAChEnD,KAAK66C,MAAMmC,eAAe,GAAWlE,iBACrC,CAAC94C,KAAK66C,MAAMmC,eAAe,GAAWpB,eAC5C,IAAIymB,EAAUriE,KAAK66C,MAAMmC,eAAe,GAAWlE,iBAAiB31C,OAC9DnD,KAAK66C,MAAMmC,eAAe,GAAWslB,yBACrCtiE,KAAK66C,MAAMmC,eAAe,GAAWqkB,uBACc,QAAzD,EAAIrhE,KAAK66C,MAAMmC,eAAe,GAAW3D,wBAAgB,IAAA,OAAA,EAAA,EAAE/3C,MACvD+gE,EAAUlnD,EAAQigC,MAAM39B,IAAI,IAAA,EAAC,OAAAA,EAAEs+B,gBAAsE,QAA1D,EAAK/7C,KAAK66C,MAAMmC,eAAe,GAAW3D,wBAAgB,IAAA,OAAA,EAAA,EAAE/3C,OAGvGtB,KAAKsiD,SAASxzC,KADduzD,EACmBriE,KAAKwwD,SAASx3C,IAAI,IAAcmpD,aAEhCniE,KAAKwwD,SAASx3C,IAAI,IAAempD,4DA3EnDL,GAAgC,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,6BAAhCA,EAAgC,UAAA,CAAA,CAAA,8BAAA,UAAA,SAAA,EAAA,SAAA,EAAA,cACD,EAAA,iiBDhC5C,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,eAAA,mBAeA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,SAAA,0BAfc,EAAA,GAAA,UAAA,EAAA,GAAA,EAAA,EAAA,EAAA,WAemG,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,GAAA,EAAA,EAAA,EAAA,SAAA,EAAA,qHCgB1G,kCChBA,IAAA,GAAA,YAAMS,EAOT,YACc1nB,EACA8W,GADA,KAAA9W,MAAAA,EACA,KAAA8W,YAAAA,EAGP,iBACH,MAAMr5C,EAAUtY,KAAK66C,MAAMmC,eAAe,GAAW9D,UACrDl5C,KAAK66C,MAAMqB,SAAS,IAAIrI,EAAwB,SAAZv7B,EAAqB,OAAS,SAG/D,gBACHtY,KAAK66C,MAAMqB,SAAS,IAAIpI,GAGrB,sBACH,MAAMp1B,EAAQ1e,KAAK66C,MAAMmC,eAAe,GAAWyC,eACnDz/C,KAAK2xD,YAAY50C,KACb,GACA/c,KAAKkiE,kBAAkBx+D,cACvB,CAACmP,KAAM,CAAC6L,MAAAA,mDA1BP6jD,GAAuB,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,6BAAvBA,EAAuB,UAAA,CAAA,CAAA,oBAAA,UAAA,SAAA,EAAA,SAAA,EAAA,cACQ,EAAA,yNChB5C,EAAA,GAAA,EAAA,4BAAA,GAEA,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,SAAA,GAAwB,EAAA,GAAA,SAAA,WAAA,OAAS,EAAAC,oBAC7B,EAAA,GAAA,EAAA,WAAA,mBACJ,EAAA,KACA,EAAA,GAAA,EAAA,SAAA,GAAwB,EAAA,GAAA,SAAA,WAAA,OAAS,EAAAC,mCAC7B,EAAA,GAAA,EAAA,WAAA,GACJ,EAAA,KACJ,EAAA,YAT2B,EAAA,GAAA,WAAA,GAIT,EAAA,GAAA,GAAA,EAAA,GAAA,UAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,YAAA,eAEoC,EAAA,GAAA,GAAA,EAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,mYDWb,OAAA,EAAA,EAAA,CAAA,CAApC,OAAA,EAAA,EAAA,CAAO,GAAWC,0DACU,OAAA,EAAA,EAAA,CAAA,CAA5B,OAAA,EAAA,EAAA,CAAO,GAAWxpB,0CACa,OAAA,EAAA,EAAA,CAAA,CAA/B,OAAA,EAAA,EAAA,CAAO,GAAWypB,iDACyB,OAAA,EAAA,EAAA,CAAA,CAA3C,OAAA,EAAA,EAAA,CAAO,GAAW1O,4EALhB,GEGA,GAAA,YAAM2O,EAST,YAAoB/nB,GAAA,KAAAA,MAAAA,EALb,KAAAgoB,gBAAkB,IAAI,GAAA,EAAY,CACrCnB,OAAQ1hE,KAAK66C,MAAMmC,eAAe,GAAWnH,YAC7CzmC,UAAWpP,KAAK66C,MAAMmC,eAAe,GAAWlH,iBAKpD,WACI,OAAA96B,GAAA,EAAA,CAAc,CACVhb,KAAK66C,MAAMhyB,OAAO,GAAWgtB,YAC7B71C,KAAK66C,MAAMhyB,OAAO,GAAWitB,iBAC9B/xC,UAAU,EAAE29D,EAAQtyD,MACnBpP,KAAK6iE,gBAAgBtwC,SAAS,CAACmvC,OAAAA,EAAQtyD,UAAAA,GAAY,CAACmiC,WAAW,MAEnEvxC,KAAK6iE,gBAAgBnwC,aAAa3uB,UAAWsY,IACzCrc,KAAK66C,MAAMqB,SAAS,IAAIrH,EACpB,CAAC14B,QAASE,EAAKqlD,OAAQtlD,SAAUC,EAAKjN,6DApBzCwzD,GAAuB,EAAA,GAAA,EAAA,4BAAvBA,EAAuB,UAAA,CAAA,CAAA,qBAAA,MAAA,EAAA,KAAA,EAAA,OAAA,CAAA,CAAA,EAAA,eAAA,CAAA,EAAA,cAAA,gBAAA,SAAA,SAAA,EAAA,SAAA,EAAA,IClBpC,EAAA,GAAA,EAAA,MAAA,GACG,EAAA,GAAA,EAAA,sBAAA,mBACH,EAAA,KACA,EAAA,GAAA,EAAA,0BAFwB,EAAA,GAAA,GAAA,EAAA,GAAA,cAAA,OAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,cAAA,KAAA,EAAA,YAAA,CAAkD,cAAA,EAAA,0jBDkBvC,OAAA,EAAA,EAAA,CAAA,CAA9B,OAAA,EAAA,EAAA,CAAO,GAAW/sB,+CACY,OAAA,EAAA,EAAA,CAAA,CAA9B,OAAA,EAAA,EAAA,CAAO,GAAW6C,kDAFhB,6EENC,EAAA,GAAA,GACI,EAAA,GAAA,EAAA,iBACA,EAAA,GAAA,EAAA,oBACJ,EAAA,MC6BR,MAAM,GAAU,CAAC,GAAc,GAAe,GAAe,GAAc,IAYpE,IAAA,GAAA,YAAMoqB,EAcT,YACYjoB,EACA1U,EACAtM,EACA7iB,EACAykD,EACAsH,EACAjoC,EACDoQ,GAPC,KAAA2P,MAAAA,EACA,KAAA1U,MAAAA,EACA,KAAAtM,YAAAA,EACA,KAAA7iB,aAAAA,EACA,KAAAykD,SAAAA,EACA,KAAAsH,YAAAA,EACA,KAAAjoC,WAAAA,EACD,KAAAoQ,SAAAA,EAVH,KAAAjd,cAAgC,GAaxC,WACIjuB,KAAKgjE,cACLhjE,KAAKijE,oBACLjjE,KAAKkjE,2BACLljE,KAAKmjE,kBACLnjE,KAAK66C,MAAMqB,SAAS,IAAIxJ,GACxB1yC,KAAK66C,MAAMqB,SAAS,IAAIvJ,GAGxB3yC,KAAK66C,MAAMqB,SAAS,IAAI9G,EAAep1C,KAAK65B,YAAYupC,aACxDpjE,KAAK65B,YAAYwpC,OAAOt/D,UAAUsxC,IAC9Br1C,KAAK66C,MAAMqB,SAAS,IAAI9G,EAAeC,MAI/C,cACIr1C,KAAK66C,MAAMqB,SAAShH,GACpBl1C,KAAKiuB,cAAcjgB,QAAQ83C,GAAOA,EAAI1hD,eACtCpE,KAAKiuB,cAAgB,GAGlB,YAAYb,GACfptB,KAAK66C,MAAMqB,SAAS,IAAIlI,EAAY5mB,IAGjC,gBACHptB,KAAK66C,MAAMqB,SAAS,IAAInI,GAGpB,oBACJ/zC,KAAKy7D,SAASL,UAAYp7D,KAAKsjE,eAAe5/D,cAC9C1D,KAAKy7D,SAAStC,WAAan5D,KAAKujE,gBAAgB7/D,cAChD1D,KAAKy7D,SAASC,YAAc17D,KAAK07D,YAAYh4D,cAGzC,cACJ1D,KAAK66C,MAAMqB,SAAS,IAAIrI,EACpB7zC,KAAKgX,aAAagC,IzGlFD,mByGkFoBhZ,KAAKkrC,SAASlyB,IAAI,qBAAsB,WAI7E,2BACJ,MAAM8sC,EAAM9lD,KAAK+iE,YAAYS,QAAQ,uBAAuBz/D,UAAU3D,IAClEJ,KAAK66C,MAAMqB,SAAS,IAAI3D,GAAkB,CAACE,SAAUr4C,EAAOqjE,aAEhEzjE,KAAKiuB,cAAcjb,KAAK8yC,GAGpB,kBAEJ,MAAMsN,EAAOpzD,KAAK86B,WAAWZ,UAAU3wB,KAAK,OAAAwE,GAAA,EAAA,CAAK,IAAIhK,UAAU,KAC3D/D,KAAK66C,MAAMqB,SAAS,CAChB,IAAIrH,EAAkB,GAAI,IAAI4B,GAAWz2C,KAAK66C,MAAMmC,eAAe,GAAW7B,cAC9E,IAAI7C,GACJ,IAAI5F,MAGNgxB,EAAO1jE,KAAK86B,WAAWV,iBAAiB7wB,KAAK,OAAAoS,GAAA,EAAA,CAAOkf,KAAOA,IAC5D92B,UAAU62B,IACP56B,KAAK66C,MAAMqB,SAAS,IAAI5G,EAAa1a,MAEvC24B,EAAOvzD,KAAK86B,WAAW6oC,0BAC7B3jE,KAAKiuB,cAAcjb,KAAKogD,EAAMG,EAAMmQ,iDAvF/BZ,GAAc,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,4BAAdA,EAAc,UAAA,CAAA,CAAA,UAAA,UAAA,SAAA,EAAA,SAAA,EAAA,eACe,EAAA,oBAE3B,IAA2B,EAAQ,EAAA,0JALnC,IAAI,GAAS,GAAa,GAAA,KAAkB,MAAA,GAAA,KAAA,GAAA,OAAA,CAAA,CAAA,eAAA,eAAA,EAAA,mBAAA,qBAAA,CAAA,EAAA,iBAAA,CAAA,EAAA,eAAA,EAAA,OAAA,UAAA,CAAA,WAAA,MAAA,EAAA,gBAAA,EAAA,SAAA,QAAA,CAAA,0BAAA,IAAA,CAAA,OAAA,aAAA,CAAA,EAAA,QAAA,CAAA,EAAA,6BAAA,CAAA,sBAAA,GAAA,cAAA,QAAA,eAAA,GAAA,sBAAA,GAAA,EAAA,kBAAA,EAAA,qBAAA,uBAAA,kBAAA,gBAAA,CAAA,iBAAA,GAAA,kBAAA,IAAA,CAAA,EAAA,UAAA,EAAA,cAAA,SAAA,SAAA,EAAA,GAAA,EAAA,IDtD3D,EAAA,GAAA,EAAA,kBAAA,GAA0D,EAAA,GAAA,qBAAA,WAAA,OAAqB,EAAAc,mCAC3E,EAAA,GAAA,EAAA,iBAAA,GACJ,EAAA,KACA,EAAA,GAAA,EAAA,yBACI,EAAA,GAAA,EAAA,cAAA,mCACI,EAAA,GAAA,EAAA,WACJ,EAAA,KACA,EAAA,GAAA,EAAA,cAAA,oCACI,EAAA,GAAA,GAAA,mBACJ,EAAA,KACA,EAAA,GAAA,GAAA,sBAAA,GACI,EAAA,GAAA,GAAA,UAAA,GACA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,eAAA,oBAIA,EAAA,GAAA,GAAA,MAAA,GACI,EAAA,GAAA,GAAA,MAAA,EAAA,GAYI,EAAA,GAAA,gBAAA,SAAA,GAAA,OAAgB,EAAAC,YAAA,yDAEhB,EAAA,GAAA,GAAA,iBACJ,EAAA,KACA,EAAA,GAAA,GAAA,oBAAA,qBACJ,EAAA,KACJ,EAAA,KACJ,EAAA,KAEA,EAAA,GAAA,GAAA,6BAtCiB,EAAA,GAAA,mBAAA,EAAA,GAAA,EAAA,GAAA,EAAA,YAIA,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,GAAA,EAAA,GAAA,EAAA,WAAA,OAAA,OAAA,CAA8C,SAAA,EAAA,GAAA,EAAA,GAAA,EAAA,eAG9C,EAAA,GAAA,GAAA,EAAA,GAAA,SAAA,EAAA,GAAA,EAAA,GAAA,EAAA,eAAA,CAAgC,OAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,QAGA,EAAA,GAAA,GAAA,EAAA,GAAA,UAAA,EAAA,SAAA,IAAA,cAE3B,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,eAAA,EAAA,GAAA,GAAA,GAAA,EAAA,aAAA,MAUN,EAAA,GAAA,GAAA,EAAA,GAAA,WAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAEA,EAAA,GAAA,sBAAA,EAAA,GAAA,GAAA,GAAA,EAAA,YAAA,CAA4C,wBAAA,EAA5C,CAA4C,mBAAA,EAAA,GAAA,GAAA,GAAA,EAAA,aAS7B,EAAA,GAAA,GAAA,EAAA,GAAA,YAAA,EAAA,GAAA,GAAA,GAAA,EAAA,+yCC2BE,OAAA,EAAA,EAAA,CAAA,CAA5B,OAAA,EAAA,EAAA,CAAO,GAAW9qB,0CACa,OAAA,EAAA,EAAA,CAAA,CAA/B,OAAA,EAAA,EAAA,CAAO,GAAW4pB,kDACa,OAAA,EAAA,EAAA,CAAA,CAA/B,OAAA,EAAA,EAAA,CAAO,GAAWvpB,iDACS,OAAA,EAAA,EAAA,CAAA,CAA3B,OAAA,EAAA,EAAA,CAAO,GAAWJ,yCACU,OAAA,EAAA,EAAA,CAAA,CAA5B,OAAA,EAAA,EAAA,CAAO,GAAWP,2CACW,OAAA,EAAA,EAAA,CAAA,CAA7B,OAAA,EAAA,EAAA,CAAO,GAAWme,6CACY,OAAA,EAAA,EAAA,CAAA,CAA9B,OAAA,EAAA,EAAA,CAAO,GAAWle,kDAVhB,GCxDP,IAAYorB,GAAZ,SAAYA,UACR,EAAA,EAAA,MAAA,IAAA,QACA,EAAA,EAAA,MAAA,IAAA,QACA,EAAA,EAAA,OAAA,IAAA,SACA,EAAA,EAAA,OAAA,IAAA,SACA,EAAA,EAAA,SAAA,IAAA,WACA,EAAA,EAAA,YAAA,IAAA,cACA,EAAA,EAAA,WAAA,IAAA,aACA,EAAA,EAAA,WAAA,IAAA,aACA,EAAA,EAAA,EAAA,IAAA,IACA,EAAA,EAAA,EAAA,IAAA,IACA,EAAA,EAAA,EAAA,IAAA,IACA,EAAA,EAAA,EAAA,IAAA,IACA,EAAA,EAAA,EAAA,IAAA,IACA,EAAA,EAAA,EAAA,IAAA,IACA,EAAA,EAAA,EAAA,IAAA,IACA,EAAA,EAAA,EAAA,IAAA,IACA,EAAA,EAAA,EAAA,IAAA,IACA,EAAA,EAAA,EAAA,IAAA,IACA,EAAA,EAAA,EAAA,IAAA,IACA,EAAA,EAAA,EAAA,IAAA,IApBQA,EAAZ,CAqBC,ICNM,IAAA,GAAA,YAAMC,EAHb,cAIY,KAAAC,SAAW,GAEZ,IAAIC,EAAiBC,GACxBlkE,KAAKgkE,SAAShxD,KAAK,CAACixD,QAASjkE,KAAKmkE,mBAAmBF,GAAUG,cAAeH,EAASC,SAAAA,IAGpF,sBAAsBD,EAAiBC,GAC1ClkE,KAAKgkE,SAAShxD,KAAK,CAACixD,QAASjkE,KAAKmkE,mBAAmBF,GAAUG,cAAeH,EAASC,SAAAA,EAAUj4D,gBAAgB,IAG9G,SAASihB,GACZ,OAAO,OAAA4S,GAAA,EAAA,CAAU5S,EAAI,WAAWnpB,UAAW0Z,IAChC,CAAC,QAAS,UAAUkX,SAAS9R,SAASla,cAAc+b,SAAS1I,gBAChEhc,KAAKqkE,gBAAgB5mD,KAKzB,gBAAgBA,GACpBzd,KAAKgkE,SAASh2D,QAAQ8hC,IACX9vC,KAAKskE,eAAex0B,EAAQm0B,QAASxmD,KACxCqyB,EAAQ7jC,gBAAkBwR,EAAExR,gBAAgBwR,EAAExR,iBAClD6jC,EAAQo0B,SAASzmD,MAIjB,eAAewmD,EAAwBxmD,GAC3C,OAAOqmD,GAASG,EAAQlkE,IAAIwkE,iBAAmB9mD,EAAEzR,SAAWyR,EAAE45B,UAAY4sB,EAAQO,MAAQ/mD,EAAEgnD,WAAaR,EAAQS,MAM7G,mBAAmBT,GACvB,MAAM9e,EAAQ8e,EAAQzgE,OAAOJ,MAAM,KAC7BuhE,EAAS,CAACH,MAAM,EAAOE,OAAO,EAAO3kE,IAAK,IAchD,OAZAolD,EAAMn3C,QAAQ42D,IAGG,UAFbA,EAAOA,EAAKphE,OAAOwY,eAGf2oD,EAAOH,MAAO,EACE,UAATI,EACPD,EAAOD,OAAQ,EAEfC,EAAO5kE,IAAM6kE,IAIdD,gDAlDFZ,6BAAAA,EAAQ,QAARA,EAAQ,UAAA,WAFL,YAET,+ECfP,EAAA,GAAA,EAAA,kBAAA,qCAEQ,EAAA,GAAA,QAAA,EAAA,CAAe,cAAA,EAAA,GAAA,EAAA,GAAA,GAAf,CAAe,qBAAA,EAAA,oBAAf,CAAe,mBAAA,ICQhB,IAAA,GAAA,YAAMc,EAPb,cASa,KAAAC,qBAAsB,EACxB,UAAU9gE,EAAe0a,GAC5B,OAAOA,EAAMpd,iDAJRujE,2BAAAA,EAAkB,UAAA,CAAA,CAAA,eAAA,OAAA,CAAA,QAAA,UAAA,oBAAA,uBAAA,MAAA,EAAA,KAAA,EAAA,OAAA,CAAA,CAAA,EAAA,QAAA,cAAA,qBAAA,mBAAA,EAAA,QAAA,UAAA,gBAAA,CAAA,EAAA,QAAA,cAAA,qBAAA,qBAAA,SAAA,SAAA,EAAA,GAAA,EAAA,GDV/B,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,kBAAA,QACQ,EAAA,GAAA,UAAA,EAAA,QAAA,CAAiD,eAAA,EAAA,+LCSlD,wDCKa,EAAA,GAAA,EAAA,WAAA,0BAAmE,EAAA,GAAA,aAAA,EAAA,GAAA,EAAA,EAAA,yFANnF,EAAA,GAAA,EAAA,KAAA,GACI,EAAA,GAAA,EAAA,KAAA,GACI,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,iBAAA,GACA,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,OAAA,IAAyB,EAAA,GAAA,GAAa,EAAA,KACtC,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,WAAA,IACJ,EAAA,KACJ,EAAA,KACJ,EAAA,KACA,EAAA,GAAA,EAAA,KAAA,IAA0D,EAAA,GAAA,4BAAmC,EAAA,KAC7F,EAAA,GAAA,GAAA,KAAA,IAA0C,EAAA,GAAA,iCAAsC,EAAA,KACpF,EAAA,wCAZyE,EAAA,GAAA,cAAA,EAAA,GAAA,GAAA,GAAA,GAAA,CAA4C,qBAAA,EAAA,oBAA5C,CAA4C,mBAAA,GAA4C,EAAA,GAAA,UAAA,EAAA,IAGrI,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,GAEa,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,MACkB,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,UAAA,IAIG,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,aAChB,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,aCJ3C,IAAA,GAAA,YAAME,EAIT,YAAoBlqB,EAAsBjtB,GAAtB,KAAAitB,MAAAA,EAAsB,KAAAjtB,UAAAA,EAFjC,KAAAk3C,qBAAsB,EAI/B,WACI9kE,KAAK4tB,UAAUvV,KAAK,CAChB8gB,YAAan5B,KAAK8kE,sBAGtB9kE,KAAK4tB,UAAU1T,MACV3Q,KAAK,OAAAoS,GAAA,EAAA,CAAOuS,KAAO9b,OAAOgJ,KAAK8S,GAAG/qB,SAClCY,UAAUb,IACPlD,KAAK66C,MAAMqB,SAAS,IAAIrH,EAAkB3xC,MAItD,cACIlD,KAAK4tB,UAAUmT,UAGZ,UAAUriB,GACb,QAAOA,EAAM28B,QACJ38B,EAAM28B,KAAK1yB,KAAKwD,GAAoB,YAAbA,EAAIhX,MAGjC,UAAUnR,EAAe0a,GAC5B,OAAOA,EAAMpd,iDA5BRyjE,GAAkB,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,4BAAlBA,EAAkB,UAAA,CAAA,CAAA,eAAA,OAAA,CAAA,QAAA,UAAA,oBAAA,uBAAA,SAAA,CAAA,EAAA,GAFhB,CAAC,GAAA,KAAiB,MAAA,GAAA,KAAA,EAAA,OAAA,CAAA,CAAA,EAAA,kBAAA,CAAA,oBAAA,GAAA,QAAA,GAAA,EAAA,eAAA,CAAA,oBAAA,aAAA,QAAA,GAAA,EAAA,uBAAA,CAAA,oBAAA,YAAA,QAAA,GAAA,EAAA,eAAA,CAAA,QAAA,cAAA,EAAA,cAAA,qBAAA,mBAAA,EAAA,QAAA,UAAA,gBAAA,CAAA,EAAA,cAAA,EAAA,cAAA,qBAAA,oBAAA,CAAA,aAAA,OAAA,EAAA,eAAA,CAAA,EAAA,uBAAA,CAAA,EAAA,QAAA,CAAA,EAAA,aAAA,CAAA,EAAA,cAAA,CAAA,QAAA,YAAA,UAAA,OAAA,EAAA,aAAA,EAAA,QAAA,CAAA,aAAA,eAAA,EAAA,uBAAA,CAAA,aAAA,OAAA,EAAA,eAAA,CAAA,UAAA,OAAA,EAAA,YAAA,EAAA,eAAA,SAAA,SAAA,EAAA,GAAA,EAAA,IDdjC,EAAA,GAAA,EAAA,QAAA,GACI,EAAA,GAAA,EAAA,SACA,EAAA,GAAA,EAAA,MACI,EAAA,GAAA,EAAA,KAAA,GAAgD,EAAA,GAAA,EAAA,QAAI,EAAA,KACpD,EAAA,GAAA,EAAA,KAAA,GAAqE,EAAA,GAAA,EAAA,gBAAY,EAAA,KACjF,EAAA,GAAA,EAAA,KAAA,GAA4D,EAAA,GAAA,EAAA,QAAI,EAAA,KACpE,EAAA,KACA,EAAA,KACA,EAAA,GAAA,EAAA,SACA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,KAAA,GAaA,EAAA,KACJ,EAAA,YAdQ,EAAA,GAAA,IAAA,EAAA,GAAA,UAAA,EAAA,QAAA,CAAgD,eAAA,EAAA,olCCOjD,GCRA,GAAA,YAAMC,gDAAAA,2BAAAA,EAAwB,UAAA,CAAA,CAAA,sBAAA,MAAA,EAAA,KAAA,EAAA,OAAA,CAAA,CAAA,EAAA,sBAAA,CAAA,QAAA,GAAA,EAAA,QAAA,CAAA,QAAA,GAAA,EAAA,aAAA,CAAA,UAAA,gBAAA,EAAA,SAAA,SAAA,SAAA,EAAA,GAAA,EAAA,ICRrC,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,MAAA,GAAwB,EAAA,GAAA,EAAA,sBAAkB,EAAA,KAC1C,EAAA,GAAA,EAAA,MAAA,GAA6B,EAAA,GAAA,EAAA,mDAA+C,EAAA,KAC5E,EAAA,GAAA,EAAA,WAAA,GACJ,EAAA,qEDIO,GEAA,GAAA,YAAMC,gDAAAA,2BAAAA,EAAyB,UAAA,CAAA,CAAA,uBAAA,MAAA,EAAA,KAAA,EAAA,OAAA,CAAA,CAAA,EAAA,sBAAA,CAAA,QAAA,GAAA,EAAA,QAAA,CAAA,QAAA,GAAA,EAAA,aAAA,CAAA,UAAA,eAAA,EAAA,SAAA,SAAA,SAAA,EAAA,GAAA,EAAA,ICRtC,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,MAAA,GAAwB,EAAA,GAAA,EAAA,mBAAe,EAAA,KACvC,EAAA,GAAA,EAAA,MAAA,GAA6B,EAAA,GAAA,EAAA,0DAAsD,EAAA,KACnF,EAAA,GAAA,EAAA,WAAA,GACJ,EAAA,qEDIO,GEAA,GAAA,YAAMC,gDAAAA,2BAAAA,EAAyB,UAAA,CAAA,CAAA,uBAAA,MAAA,EAAA,KAAA,EAAA,OAAA,CAAA,CAAA,EAAA,sBAAA,CAAA,QAAA,GAAA,EAAA,QAAA,CAAA,QAAA,GAAA,EAAA,aAAA,CAAA,UAAA,kBAAA,EAAA,SAAA,SAAA,SAAA,EAAA,GAAA,EAAA,ICRtC,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,MAAA,GAAwB,EAAA,GAAA,EAAA,uBAAmB,EAAA,KAC3C,EAAA,GAAA,EAAA,MAAA,GAA6B,EAAA,GAAA,EAAA,sEAAkE,EAAA,KAC/F,EAAA,GAAA,EAAA,WAAA,GACJ,EAAA,qEDIO,GEAA,GAAA,YAAMC,gDAAAA,2BAAAA,EAAwB,UAAA,CAAA,CAAA,sBAAA,MAAA,EAAA,KAAA,EAAA,OAAA,CAAA,CAAA,EAAA,sBAAA,CAAA,QAAA,GAAA,EAAA,QAAA,CAAA,QAAA,GAAA,EAAA,aAAA,CAAA,UAAA,eAAA,EAAA,SAAA,SAAA,SAAA,EAAA,GAAA,EAAA,ICRrC,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,MAAA,GAAwB,EAAA,GAAA,EAAA,mBAAe,EAAA,KACvC,EAAA,GAAA,EAAA,MAAA,GAA6B,EAAA,GAAA,EAAA,wDAAoD,EAAA,KACjF,EAAA,GAAA,EAAA,WAAA,GACJ,EAAA,qEDIO,GEAA,GAAA,YAAMC,gDAAAA,2BAAAA,EAAwB,UAAA,CAAA,CAAA,sBAAA,MAAA,EAAA,KAAA,EAAA,OAAA,CAAA,CAAA,EAAA,sBAAA,CAAA,QAAA,GAAA,EAAA,QAAA,CAAA,QAAA,GAAA,EAAA,aAAA,CAAA,UAAA,gBAAA,EAAA,SAAA,SAAA,SAAA,EAAA,GAAA,EAAA,ICRrC,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,MAAA,GAAwB,EAAA,GAAA,EAAA,qBAAiB,EAAA,KACzC,EAAA,GAAA,EAAA,MAAA,GAA6B,EAAA,GAAA,EAAA,yDAAqD,EAAA,KAClF,EAAA,GAAA,EAAA,WAAA,GACJ,EAAA,qEDIO,4BEMA,IAAA,GAAA,YAAMC,EAGT,YACYxqB,EACmC2jB,GADnC,KAAA3jB,MAAAA,EACmC,KAAA2jB,aAAAA,EAG/C,kBACIx+D,KAAKgL,YAAYtH,cAAckG,iBAAiB,QAAS,KACrD,OAAA,GAAA,EAAA,CAAiB5J,KAAKw+D,cAAc7yD,KAAKyhB,IACrCptB,KAAK66C,MAAMqB,SAAS,IAAIlI,EAAY5mB,sDAXvCi4C,GAAuB,EAAA,GAAA,EAAA,GAAA,EAAA,GAKpBzrB,6BALHyrB,EAAuB,UAAA,CAAA,CAAA,oBAAA,UAAA,SAAA,EAAA,SAAA,EAAA,ySCdpC,EAAA,GAAA,EAAA,MAAA,GACA,EAAA,GAAA,EAAA,MAAA,EAAA,GACI,EAAA,GAAA,EAAA,WAAA,GACA,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,MAAA,GAA2B,EAAA,GAAA,EAAA,8BAA0B,EAAA,KACrD,EAAA,GAAA,EAAA,MAAA,GAA6B,EAAA,GAAA,EAAA,uBAAmB,EAAA,KACpD,EAAA,KACJ,EAAA,y2DDOO,GENA,GAAA,YAAMC,gDAAAA,2BAAAA,EAAwB,UAAA,CAAA,CAAA,sBAAA,MAAA,EAAA,KAAA,EAAA,SAAA,SAAA,EAAA,GAAA,EAAA,GCRrC,EAAA,GAAA,EAAA,2EDQO,6BERP,EAAA,GAAA,EAAA,aAAA,wCAAY,EAAA,GAAA,UAAA,EAAA,GAAA,EAAA,EAAA,EAAA,sCAER,EAAA,GAAA,EAAA,aAAA,wCAAY,EAAA,GAAA,UAAA,EAAA,GAAA,EAAA,EAAA,EAAA,kCAIZ,EAAA,GAAA,EAAA,2CACA,EAAA,GAAA,EAAA,4CACA,EAAA,GAAA,EAAA,4CACA,EAAA,GAAA,EAAA,2CACA,EAAA,GAAA,EAAA,2CACA,EAAA,GAAA,EAAA,+CANJ,EAAA,GAAA,EAAA,mBACI,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,oBAAA,GACA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,qBAAA,GACA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,qBAAA,GACA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,oBAAA,GACA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,oBAAA,GACA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,oBAAA,GACJ,EAAA,0BAPc,EAAA,GAAA,WAAA,EAAA,GAAA,EAAA,EAAA,EAAA,kBACS,EAAA,GAAA,GAAA,EAAA,GAAA,eAAA,UACC,EAAA,GAAA,GAAA,EAAA,GAAA,eAAA,SACA,EAAA,GAAA,GAAA,EAAA,GAAA,eAAA,WACD,EAAA,GAAA,GAAA,EAAA,GAAA,eAAA,UACA,EAAA,GAAA,GAAA,EAAA,GAAA,eAAA,WCsBhB,IAAA,GAAA,YAAMC,EAQT,YACY1qB,EACA3tB,EACAs4C,GAFA,KAAA3qB,MAAAA,EACA,KAAA3tB,GAAAA,EACA,KAAAs4C,SAAAA,EAVkB,KAAAC,SAAW,EAazC,WACIzlE,KAAK0lE,WAAa1lE,KAAKwlE,SAASG,SAAS3lE,KAAKktB,GAAGxpB,eACjD1D,KAAKwlE,SAASI,sBAAsB,SAAU,KAC1C5lE,KAAK66C,MAAMqB,SAAS,IAAIhJ,KAE5BlzC,KAAKwlE,SAASI,sBAAsB,SAAU,KjI5C3C,UiI6CK5lE,KAAK66C,MAAMmC,eAAe,GAAW6oB,gBACrC7lE,KAAK66C,MAAMqB,SAAS,IAAIvI,EAAkB,CACtC7E,MAAO,iBACPzB,KAAM,+CACN+nB,SAAU,iCACVrmB,GAAI,kBACL,IAAImF,IAEPl0C,KAAK66C,MAAMqB,SAAS,IAAI9I,KAGhCpzC,KAAKwlE,SAASI,sBAAsB,QAAS,KACzC5lE,KAAK66C,MAAMqB,SAAS,IAAI5E,GAAkBt3C,KAAK66C,MAAMmC,eAAe,GAAWyC,mBAIvF,cACIz/C,KAAK0lE,WAAWthE,4DArCXmhE,GAAyB,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,6BAAzBA,EAAyB,UAAA,CAAA,CAAA,sBAAA,SAAA,EAAA,aAAA,SAAA,EAAA,GAAA,EAAA,+CAFvB,CAAC,MAAS,MAAA,EAAA,KAAA,EAAA,OAAA,CAAA,CAAA,EAAA,UAAA,EAAA,OAAA,YAAA,CAAA,YAAA,IAAA,CAAA,EAAA,WAAA,EAAA,QAAA,CAAA,EAAA,WAAA,CAAA,EAAA,YAAA,CAAA,EAAA,gBAAA,CAAA,EAAA,oBAAA,SAAA,SAAA,EAAA,MAAA,EAAA,ID9BzB,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,aAAA,mBACA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,cAAA,KAAA,EAAA,EAAA,IAIA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,eAAA,yCALyC,EAAA,GAAA,OAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,WAAA,CAAsD,WAAA,GAK5C,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,GAAA,EAAA,EAAA,EAAA,8SC6BnB,OAAA,EAAA,EAAA,CAAA,CAA3B,OAAA,EAAA,EAAA,CAAO,GAAWpqD,yCACc,OAAA,EAAA,EAAA,CAAA,CAAhC,OAAA,EAAA,EAAA,CAAO,GAAW2qD,+CACU,OAAA,EAAA,EAAA,CAAA,CAA5B,OAAA,EAAA,EAAA,CAAO,GAAW5sB,2CACgB,OAAA,EAAA,EAAA,CAAA,CAAlC,OAAA,EAAA,EAAA,CAAO,GAAW2sB,0DALhB,GC9BA,MAAME,GAAuB,IAAI,EAAA,EAAoB,wBCG/CC,GAA0B,IAAI,EAAA,EAAsC,0BAA2B,CACxG/jE,QAAS,IACEyc,GAASA,EAAM7G,IAE1B7V,WAAY,0BCET,IAAA,GAAA,YAAeikE,EAIlB,YAC4C/lD,EACG4vC,EACjC5kB,EACAn0B,EACAmvD,EACArsC,GAL8B,KAAA3Z,KAAAA,EACG,KAAA4vC,YAAAA,EACjC,KAAA5kB,SAAAA,EACA,KAAAn0B,KAAAA,EACA,KAAAmvD,UAAAA,EACA,KAAArsC,YAAAA,EAT6B,KAAAssC,oBAAqB,EACzD,KAAA/lB,SAAW,IAAI,EAAA,EAWf,SACH,OAAOpgD,KAAK8vD,YAAY9vD,KAAKkgB,MAG1B,aACH,OAAOlgB,KAAKkmE,UAAUE,+BAA+BpmE,KAAKqmE,UAGvD,cACH,OAAOrmE,KAAK+W,KAAKiC,IAAIhZ,KAAKqmE,SAAU,KAAM,CAACC,aAAc,uDAtB3CL,GAAe,EAAA,GAKrBF,IAAoB,EAAA,GACpBC,IAAuB,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,4BANjBC,EAAe,SAAA,EAAA,aAAA,SAAA,EAAA,GAAA,EAAA,2DAA9B,2CCTH,EAAA,GAAA,EAAA,SAAA,GAAyC,EAAA,GAAA,SAAA,WAAA,OAAA,EAAA,GAAA,GAAA,EAAA,KAAS7lB,SAAA,UAAyD,EAAA,GAAA,EAAA,YAAQ,EAAA,MCOhH,IAAA,GAAA,YAAMmmB,UAAgC,GAGlC,aACH,OAAOvmE,KAAKkxB,SAAW,0EAJlBq1C,2BAAAA,EAAuB,UAAA,CAAA,CAAA,oBAAA,OAAA,CAAA,QAAA,WAAA,SAAA,CAAA,EAAA,IAAA,MAAA,EAAA,KAAA,EAAA,OAAA,CAAA,CAAA,EAAA,QAAA,kBAAA,CAAA,QAAA,GAAA,EAAA,WAAA,CAAA,oBAAA,GAAA,QAAA,SAAA,QAAA,GAAA,EAAA,QAAA,EAAA,QAAA,CAAA,oBAAA,GAAA,QAAA,SAAA,QAAA,GAAA,EAAA,UAAA,SAAA,SAAA,EAAA,GAAA,EAAA,IDTpC,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,MAAA,GAA2B,EAAA,GAAA,GAAgB,EAAA,KAC3C,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,SAAA,GACJ,EAAA,YAF+B,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,cACwC,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,UAAA,+iBCOhE,iBAAM,0BCTb,EAAA,GAAA,EAAA,kBAAA,6BAEI,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,OAAK,EAAA,GAAA,mBAAsB,EAAA,KAC/B,EAAA,0BADS,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,YCSN,IAAA,GAAA,YAAMC,UAA6B,GAN1C,kCAOW,KAAAC,SAAW,IAAIvvD,GAAA,EAAgB,IAC/B,KAAAwvD,cAAgB,IAAIxvD,GAAA,GAAgB,GAE3C,WACQlX,KAAKkgB,KAAK29B,UAbN,QAcJ79C,KAAK0mE,cAAc53D,MAAK,GAExB9O,KAAK2mE,mBAIL,mBACJ3mE,KAAK4mE,cACA7iE,UAAUmyD,IACPl2D,KAAKymE,SAAS33D,KAAKonD,kDAftBsQ,2BAAAA,EAAoB,UAAA,CAAA,CAAA,iBAAA,SAAA,CAAA,EAAA,IAAA,MAAA,EAAA,KAAA,EAAA,OAAA,CAAA,CAAA,UAAA,qCAAA,EAAA,OAAA,YAAA,CAAA,cAAA,IAAA,CAAA,UAAA,sCAAA,CAAA,EAAA,eAAA,mBAAA,SAAA,SAAA,EAAA,MAAA,EAAA,IDZjC,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,kBAAA,mBACA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,cAAA,KAAA,EAAA,EAAA,0BADiB,EAAA,GAAA,OAAA,EAAA,GAAA,EAAA,EAAA,EAAA,eAAA,CAA+C,WAAA,2tBCYzD,iBAAM,0CCVb,EAAA,GAAA,EAAA,mBCOO,IAAA,GAAA,YAAMK,UAA8B,GAN3C,kCAQW,KAAAC,cAAe,EAEtB,WAGI,GAFA9mE,KAAK8mE,cAAgB9mE,KAAK+mE,gBAEnB/mE,KAAK8mE,aAAc,CACtB,MAAMnlE,EAASkhB,SAASC,cAAc,UACtCnhB,EAAOqlE,IAAMhnE,KAAKqmE,SAClB1kE,EAAOmD,KAAO9E,KAAKkgB,KAAK6/B,KACxB//C,KAAKinE,SAASlkD,YAAYphB,GAC1B3B,KAAKinE,SAASC,QAIZ,eACN,QAASlnE,KAAKinE,SAASE,YAAYnnE,KAAKkgB,KAAK6/B,MAGvC,SACN,OAAO//C,KAAKonE,SAAS1jE,2DArBhBmjE,2BAAAA,EAAqB,UAAA,CAAA,CAAA,kBAAA,UAAA,SAAA,EAAA,SAAA,EAAA,kPDTlC,EAAA,GAAA,EAAA,QAAA,EAAA,GAEA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,kBAAA,UAF4D,EAAA,GAAA,SAAA,EAAA,cAE3C,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,wfCOV,iBAAM,0BCPb,EAAA,GAAA,EAAA,mBCOO,IAAA,GAAA,YAAMQ,UAA8B,gDAA9BA,2BAAAA,EAAqB,UAAA,CAAA,CAAA,kBAAA,SAAA,CAAA,EAAA,IAAA,MAAA,EAAA,KAAA,EAAA,OAAA,CAAA,CAAA,WAAA,WAAA,eAAA,8BAAA,cAAA,GAAA,EAAA,kBAAA,CAAA,WAAA,IAAA,CAAA,EAAA,SAAA,SAAA,SAAA,EAAA,GAAA,EAAA,IDTlC,EAAA,GAAA,EAAA,QAAA,EAAA,GAEA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,kBAAA,UAF4D,EAAA,GAAA,SAAA,EAAA,cAE3C,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,qhBCOV,iBAAM,ICAN,IAAA,GAAA,YAAMC,UAA8B,gDAA9BA,2BAAAA,EAAqB,UAAA,CAAA,CAAA,kBAAA,SAAA,CAAA,EAAA,IAAA,MAAA,EAAA,KAAA,EAAA,OAAA,CAAA,CAAA,EAAA,iBAAA,EAAA,QAAA,SAAA,SAAA,EAAA,GAAA,EAAA,GCTlC,EAAA,GAAA,EAAA,MAAA,QAAK,EAAA,GAAA,MAAA,EAAA,aAAA,EAAA,+cDSE,iBAAM,IEAN,IAAA,GAAA,YAAMC,UAA4B,GANzC,kCAO0B,KAAAhkE,UAAY,iBAE3B,SACH,OAAOhB,MAAM8jE,SAAW,0DAJnBkB,2BAAAA,EAAmB,UAAA,CAAA,CAAA,gBAAA,SAAA,EAAA,aAAA,SAAA,EAAA,GAAA,EAAA,oGCThC,EAAA,GAAA,EAAA,SAAA,QAAQ,EAAA,GAAA,MAAA,EAAA,aAAA,EAAA,kSDSD,iBAAM,iFETb,EAAA,GAAA,GACI,EAAA,GAAA,EAAA,SAAA,EAAA,GACA,EAAA,GAAA,EAAA,MAAA,GAAwC,EAAA,GAAA,SAAA,WAAA,OAAA,EAAA,GAAA,GAAA,EAAA,KAAA,qBAA4B,EAAA,KACxE,EAAA,4BAEI,EAAA,GAAA,EAAA,mBCOG,IAAA,GAAA,YAAMC,UAAkC,GAN/C,kCAQW,KAAApwD,SAAW,IAAIF,GAAA,GAAgB,GAC/B,KAAAuwD,oBAAsB,IAAIvwD,GAAA,GAAgB,GAGjD,kBAEI,GAAIlX,KAAKkgB,KAAK29B,UAAY,KACtB,OAAO79C,KAAK0nE,qBAGhB1nE,KAAK2nE,OAAOjkE,cAAckkE,OAAS,KAC/BC,aAAa7nE,KAAK8nE,YAClB9nE,KAAK+nE,eAGT/nE,KAAKgoE,eAAer8D,KAAKkM,IACrB7X,KAAK2nE,OAAOjkE,cAAcsjE,IAAMnvD,IACjCowD,MAAM,KACLjoE,KAAK0nE,uBAKT1nE,KAAK8nE,WAAa9+C,WAAW,KACzBhpB,KAAK0nE,sBACN,KAGA,cACH1nE,KAAKoX,SAAStI,MAAK,GAGhB,qBACH9O,KAAK+nE,cACL/nE,KAAKynE,oBAAoB34D,MAAK,GAG3B,kBACHrF,OAAOsT,KAAKtT,OAAOmoC,SAASuU,KAAM,UAG9B,eACJ,OAAO,IAAI16C,QAAQ,CAACC,EAASw8D,KACzB,IAAIC,EAAanoE,KAAKqmE,UAIwB,IAA1C8B,EAAWjsD,QAAQ,kBACnBlc,KAAK+W,KAAKokB,KAAsD,WAAWn7B,KAAKkgB,KAAK5e,wBAAwByC,UAAUqV,IACnH+uD,GAAc,kBAAkB/uD,EAASgvD,cACzC18D,EAAQ1L,KAAKqoE,kBAAkBF,KAChC,IAAMD,GAETx8D,EAAQ1L,KAAKqoE,kBAAkBF,MAKnC,kBAAkBA,GAGtB,OADAA,EAAa,OAAA,GAAA,EAAA,CAAcA,GAAcA,EAAanoE,KAAKkrC,SAAS2a,aAAesiB,EAC5E,sDAAwDG,mBAAmBH,gDA/D7EX,2BAAAA,EAAyB,UAAA,CAAA,CAAA,uBAAA,UAAA,SAAA,EAAA,SAAA,EAAA,wRDZtC,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,eAAA,mBAIA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,cAAA,KAAA,EAAA,EAAA,IAGA,EAAA,GAAA,EAAA,oBAAA,yCAPc,EAAA,GAAA,QAAA,EAAA,GAAA,EAAA,EAAA,EAAA,qBAAA,CAA2D,WAAA,GAOtD,EAAA,GAAA,GAAA,EAAA,GAAA,YAAA,EAAA,GAAA,EAAA,EAAA,EAAA,0rBCKZ,iBAAM,ICJAe,GAAqB,IAAI,EAAA,EAAoB,sBAGnD,IAAA,GAAA,YAAMC,EADb,cAEI,KAAAxoB,KAAO,GACP,KAAAyoB,MAAQ,GACR,KAAAC,MAAQ,GACR,KAAAziB,MAAQ,GACR,KAAA0iB,IAAM,GACN,KAAAC,YAAc,GACd,KAAAC,WAAa,GACb,KAAAC,KAAO,iDAREN,6BAAAA,EAAe,QAAfA,EAAe,eAArB,GCUA,GAAA,YAAMO,EAOT,YACwCC,EAC5BxY,GAD4B,KAAAwY,kBAAAA,EAC5B,KAAAxY,SAAAA,EARJ,KAAApjC,MAAqB,GACrB,KAAAyjC,OAAS,IAAI35C,GAAA,EAAgB,MAC7B,KAAAuiC,KAA0C,IAAIviC,GAAA,EAAgB,IAC9D,KAAA+xD,sBAAoD,KACrD,KAAA7oB,SAAW,IAAIthB,GAAA,EAOf,aACH,OAAO9+B,KAAKy5C,KACPlwC,KAAK,OAAAoS,GAAA,EAAA,CAAO9I,GAAQA,KAAUA,EAAK6L,QAGrC,aACH,OAAO1e,KAAKy5C,KAAKv2C,MAAMwb,MAGpB,gBACH,OAAO1e,KAAKotB,MAGT,YACH,OAAOptB,KAAK6wD,OAAO3kB,eAGhB,WACIlsC,KAAKy5C,KAAKv2C,MAAMouC,WACvBtxC,KAAKkpE,WAAW,QAChBlpE,KAAKmpE,gBAGF,eACInpE,KAAKy5C,KAAKv2C,MAAMmuC,eACvBrxC,KAAKkpE,WAAW,YAChBlpE,KAAKmpE,gBAGD,WAAWhiD,GACf,IAAIiiD,EAAa,EAEjB,GAAmB,iBAARjiD,EAAkB,CACzB,MAAMkiD,EAAarpE,KAAKy5C,KAAKv2C,MAAMomE,QACnCF,EAAqB,SAARjiD,EAAiBkiD,EAAa,EAAIA,EAAa,MACtC,iBAARliD,IACdiiD,EAAajiD,GAGjBnnB,KAAKy5C,KAAK3qC,KAAK,CACXw6D,QAASF,EACT1qD,MAAO1e,KAAKotB,MAAMg8C,GAClB7wD,MAAOvY,KAAKotB,MAAMjqB,OAClBmuC,SAAW83B,EAAa,EAAKppE,KAAKotB,MAAMjqB,OACxCkuC,aAAe+3B,EAAa,GAAM,IAIlC,eACJ,MAAM9wD,EAAUtY,KAAKupE,aAErBvpE,KAAK6wD,OAAO/hD,KAAK,IAAI,GAAA,EADPwJ,GAAWtY,KAAKgpE,kBAAkB1wD,EAAQxT,OAAU,GACvB,KAAM9E,KAAKwpE,mBAGnD,IAAIp8C,EAAoBq8C,GACpBr8C,GAA0B,IAAjBA,EAAMjqB,SACtBnD,KAAKotB,MAAQA,EAAMzR,OAAO+C,GAAwB,WAAfA,EAAM5Z,MACzC9E,KAAKkpE,WAAWO,GAChBzpE,KAAKmpE,gBAGD,iBACJ,MAAMO,EAAkB,IAAI/xC,QAU5B,OAPA+xC,EAAgBnpE,IAAIwlE,GAAsB/lE,KAAKupE,cAG3CvpE,KAAKipE,uBACLS,EAAgBnpE,IAAIylE,GAAyBhmE,KAAKipE,uBAG/C,IAAI,GAAA,EAAejpE,KAAKwwD,SAAUkZ,GAGtC,UACH1pE,KAAKy5C,KAAK3qC,KAAK,IACf9O,KAAKotB,MAAQ,KACbptB,KAAK6wD,OAAO/hD,KAAK,MAOd,yBAAyBghD,GAC5B9vD,KAAKipE,sBAAwBnZ,gDAlGxBiZ,GAAmB,EAAA,GAQhBR,IAAkB,EAAA,GAAA,EAAA,8BARrBQ,EAAmB,QAAnBA,EAAmB,UAAA,WAFhB,YAET,0BCbC,EAAA,GAAA,EAAA,MAAA,GAAwD,EAAA,GAAA,EAAA,4BAAwB,EAAA,MCKjF,IAAA,GAAA,YAAMY,EAOT,YAAoBC,GAAA,KAAAA,MAAAA,EANb,KAAAC,gBAAkB,IAAI,GAAA,EACtB,KAAAC,eAAiB,IAAI5yD,GAAA,GAAgB,GAGlC,KAAA6yD,cAAgB,IAAI,EAAA,EAAa,MAIpC,iBACH/pE,KAAK4pE,MAAMI,cAAchqE,KAAKs0C,KAAKhzC,GAAItB,KAAK6pE,gBAAgB3mE,OACvDa,UAAUqV,IACRpZ,KAAKiqE,oBAAoB7wD,EAASqqD,UAClC,QAGH,oBAAoBA,GACxBzjE,KAAK8pE,eAAeh7D,MAAM20D,GAEtBA,GACAzjE,KAAK+pE,cAAc9lE,KAAKjE,KAAK6pE,gBAAgB3mE,qDApB5CymE,GAAiC,EAAA,GAAA,6BAAjCA,EAAiC,UAAA,CAAA,CAAA,gCAAA,OAAA,CAAA,KAAA,QAAA,QAAA,CAAA,cAAA,iBAAA,MAAA,GAAA,KAAA,EAAA,OAAA,CAAA,CAAA,UAAA,mBAAA,CAAA,mBAAA,GAAA,EAAA,UAAA,EAAA,YAAA,CAAA,QAAA,GAAA,EAAA,WAAA,CAAA,EAAA,mBAAA,CAAA,MAAA,WAAA,QAAA,GAAA,EAAA,UAAA,CAAA,OAAA,WAAA,KAAA,WAAA,cAAA,WAAA,oBAAA,GAAA,WAAA,GAAA,EAAA,eAAA,CAAA,EAAA,oBAAA,CAAA,QAAA,QAAA,QAAA,GAAA,EAAA,QAAA,CAAA,OAAA,SAAA,oBAAA,GAAA,QAAA,SAAA,QAAA,IAAA,CAAA,QAAA,GAAA,EAAA,UAAA,SAAA,SAAA,EAAA,GAAA,EAAA,IDb9C,EAAA,GAAA,EAAA,WAAA,GACA,EAAA,GAAA,EAAA,OAAA,GAAsB,EAAA,GAAA,YAAA,WAAA,OAAY,EAAAO,oBAC9B,EAAA,GAAA,EAAA,MAAA,GAA2B,EAAA,GAAA,EAAA,4DAAwD,EAAA,KACnF,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,QAAA,GAA2C,EAAA,GAAA,EAAA,YAAQ,EAAA,KACnD,EAAA,GAAA,EAAA,QAAA,GACJ,EAAA,KACA,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,MAAA,oBACA,EAAA,GAAA,GAAA,SAAA,GAA6D,EAAA,GAAA,GAAA,SAAK,EAAA,KACtE,EAAA,KACJ,EAAA,YANoE,EAAA,GAAA,GAAA,EAAA,GAAA,cAAA,EAAA,iBAGzC,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,GAAA,GAAA,EAAA,EAAA,yzBCKpB,yECbP,EAAA,GAAA,EAAA,SAAA,GAA4C,EAAA,GAAA,SAAA,WAAA,OAAA,EAAA,GAAA,GAAA,EAAA,KAASnnE,OAAA,MAAY,MAC7D,EAAA,GAAA,EAAA,WAAA,GACJ,EAAA,8CAOI,EAAA,GAAA,GACI,EAAA,GAAA,EAAA,MAAA,IACI,EAAA,GAAA,EAAA,SAAA,IAA+E,EAAA,GAAA,SAAA,WAAA,OAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAASonE,aAAA,kBACpF,EAAA,GAAA,EAAA,WAAA,IACJ,EAAA,KAEA,EAAA,GAAA,EAAA,OAAA,IAAmB,EAAA,GAAA,mBAAgE,EAAA,KAEnF,EAAA,GAAA,EAAA,SAAA,IAAuE,EAAA,GAAA,SAAA,WAAA,OAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAASA,aAAA,cAC5E,EAAA,GAAA,EAAA,WAAA,IACJ,EAAA,KACJ,EAAA,KACJ,EAAA,4BAViD,EAAA,GAAA,GAAA,EAAA,GAAA,YAAA,EAAA,cAItB,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,QAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,MAAA,IAAA,EAAA,MAAA,IAEkB,EAAA,GAAA,GAAA,EAAA,GAAA,YAAA,EAAA,mDAdjD,EAAA,GAAA,GACI,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,YAAA,GACA,EAAA,GAAA,GACJ,EAAA,KAEA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,eAAA,mBAcA,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,SAAA,GAAwB,EAAA,GAAA,SAAA,WAAA,OAAA,EAAA,GAAA,GAAA,EAAA,KAAA,mBACpB,EAAA,GAAA,EAAA,WAAA,GACJ,EAAA,KACA,EAAA,GAAA,GACJ,EAAA,KACJ,EAAA,qCAxBmB,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,MAAA,MACX,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,EAAA,MAAA,KAAA,KAGU,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,GAAA,EAAA,EAAA,EAAA,aAAA,eAewC,EAAA,GAAA,GAAA,EAAA,GAAA,WAAA,EAAA,2CAOtD,EAAA,GAAA,EAAA,MAAA,yBAA6D,EAAA,GAAA,MAAA,EAAA,SAAA,IAAA,uBAAA,EAAA,+BADjE,EAAA,GAAA,EAAA,IAAA,IACI,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,MAAA,IACJ,EAAA,0BADS,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,SAAA,IAAA,wCCpBF,IAAA,GAAA,YAAMC,EAOT,YACWD,EACAj/B,GADA,KAAAi/B,aAAAA,EACA,KAAAj/B,SAAAA,EARF,KAAAm/B,UAAW,EACX,KAAAC,iBAAkB,EAClB,KAAAC,iBAAkB,EAEjB,KAAAxnE,OAAS,IAAI,EAAA,EAOhB,gBACH/C,KAAKmqE,aAAa/pB,SAAStxC,qDAbtBs7D,GAA2B,EAAA,GAAA,IAAA,EAAA,GAAA,GAAA,4BAA3BA,EAA2B,UAAA,CAAA,CAAA,yBAAA,OAAA,CAAA,SAAA,WAAA,gBAAA,kBAAA,gBAAA,mBAAA,QAAA,CAAA,OAAA,UAAA,mBAAA,GAAA,MAAA,EAAA,KAAA,EAAA,OAAA,CAAA,CAAA,kBAAA,GAAA,QAAA,cAAA,EAAA,QAAA,EAAA,QAAA,CAAA,EAAA,QAAA,CAAA,aAAA,SAAA,QAAA,OAAA,EAAA,QAAA,CAAA,kBAAA,GAAA,EAAA,cAAA,EAAA,SAAA,CAAA,UAAA,cAAA,CAAA,EAAA,cAAA,CAAA,EAAA,QAAA,CAAA,EAAA,WAAA,CAAA,kBAAA,GAAA,EAAA,WAAA,SAAA,CAAA,UAAA,iBAAA,CAAA,EAAA,cAAA,CAAA,kBAAA,GAAA,EAAA,WAAA,EAAA,WAAA,SAAA,CAAA,UAAA,uBAAA,CAAA,EAAA,QAAA,CAAA,kBAAA,GAAA,EAAA,OAAA,EAAA,WAAA,SAAA,CAAA,UAAA,wBAAA,CAAA,aAAA,SAAA,EAAA,QAAA,CAAA,EAAA,MAAA,EAAA,QAAA,CAAA,EAAA,QAAA,SAAA,SAAA,EAAA,GAAA,EAAA,WDXxC,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,SAAA,GAGA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,eAAA,mBA2BA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,UA9BwE,EAAA,GAAA,OAAA,EAAA,iBAG1D,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,GAAA,EAAA,EAAA,EAAA,aAAA,eA2BsB,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,SAAA,IAAA,m8CCnB7B,6DCXP,EAAA,GAAA,GACI,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,cAAA,GAAwC,EAAA,GAAA,YAAA,SAAA,GAAA,OAAA,EAAA,GAAA,GAAA,EAAA,KAAA,uBAAA,MAC5C,EAAA,4BADiB,EAAA,GAAA,GAAA,EAAA,GAAA,kBAAA,ICWV,IAAA,GAAA,YAAMI,EAMT,YAAmBL,GAAA,KAAAA,aAAAA,EAHV,KAAAG,iBAAkB,EAK3B,YAAYzgE,GACR7J,KAAKmqE,aAAa5pE,IAAIP,KAAKotB,MAAOptB,KAAKypE,YAG3C,cACIzpE,KAAKmqE,aAAappC,UACd/gC,KAAKyqE,aAAazqE,KAAKyqE,YAAYrmE,cAGpC,uBAAuBsmE,GACtB1qE,KAAKyqE,aAAazqE,KAAKyqE,YAAYrmE,cAChCpE,KAAKsqE,kBACRtqE,KAAKyqE,YAAcC,EAAKC,SAASvqB,SAASr8C,UAAU,KAChD/D,KAAKmqE,aAAa/pB,SAAStxC,wDArB9B07D,GAAyB,EAAA,GAAA,6BAAzBA,EAAyB,UAAA,CAAA,CAAA,sBAAA,OAAA,CAAA,MAAA,QAAA,WAAA,aAAA,gBAAA,mBAAA,SAAA,CAAA,EAAA,IAAA,MAAA,EAAA,KAAA,EAAA,OAAA,CAAA,CAAA,EAAA,QAAA,CAAA,EAAA,kBAAA,aAAA,SAAA,SAAA,EAAA,GAAA,EAAA,IDZtC,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,eAAA,yBAAc,EAAA,GAAA,OAAA,EAAA,GAAA,EAAA,EAAA,EAAA,aAAA,6SCYP,kGCXH,EAAA,GAAA,EAAA,SAAA,EAAA,GAAwB,EAAA,GAAA,SAAA,WAAA,OAAA,EAAA,GAAA,GAAA,EAAA,KAAA,qBACpB,EAAA,GAAA,EAAA,WAAA,GACJ,EAAA,MCwBG,IAAA,GAAA,YAAMI,EAKT,YACY/vB,EACA3tB,EACAykC,EACAxjD,EACAg8D,EACAtwC,EAC2BhnB,GAN3B,KAAAgoC,MAAAA,EACA,KAAA3tB,GAAAA,EACA,KAAAykC,YAAAA,EACA,KAAAxjD,WAAAA,EACA,KAAAg8D,aAAAA,EACA,KAAAtwC,YAAAA,EAC2B,KAAAhnB,KAAAA,EAGvC,kBACI7S,KAAK6qE,iBAGL7hD,WAAW,KACPhpB,KAAK8qE,iBAAiBpnE,cAAckG,iBAAiB,QAAS6T,IACnDA,EAAEtS,OAAOqyD,QAAQ,oBACpBx9D,KAAKmO,WAAWyR,YAMhC,cACI5f,KAAKyqE,YAAYrmE,cAGd,kBAEHpE,KAAK2xD,YAAY50C,KAAK,GADP/c,KAAK+qE,cAAcrnE,cACuB,CAACmP,KAAM,CAAC6L,MAAO1e,KAAKmqE,aAAaZ,gBAGvF,eACHvpE,KAAKmO,WAAWyR,QAGb,cACH,OAAO5f,KAAK6S,KAAKsI,QAAQigC,MAAM18B,UACpBA,EAAM+8B,QAAO/8B,EAAM+8B,MAAQ,IAClC,MAAMpG,EAAO32B,EAAM+8B,OAAS/8B,EAAM+8B,MAAM9yB,KAAK+jB,GAAKA,EAAEprC,KAAOtB,KAAK65B,YAAY7gB,IAAI,OAEhF,OAA8B,QAAvB,EAAAhZ,KAAK6S,KAAKm4D,qBAAa,IAAA,OAAA,EAAA,EAAE9lB,iBADE7P,IAASA,EAAKqG,YAAcrG,EAAKsG,kBAAkByE,YAKrF,iBACJpgD,KAAKyqE,YAAczqE,KAAKmqE,aAAa/pB,SAASr8C,UAAU,KACpD,MAAMoX,EAAUnb,KAAKmqE,aAAaZ,aAClCvpE,KAAK66C,MAAMqB,SAAS,IAAI7H,EAAgB,CAACl5B,GAAUnb,KAAK6S,KAAKm4D,cAAehrE,KAAK6S,KAAK0hC,2DArDrFq2B,GAA2B,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,IAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAYxB,GAAA,4BAZHA,EAA2B,UAAA,CAAA,CAAA,yBAAA,UAAA,SAAA,EAAA,SAAA,EAAA,eACG,EAAA,cACC,EAAA,wYD7B5C,EAAA,GAAA,EAAA,uBAAA,GAA+C,EAAA,GAAA,UAAA,WAAA,OAAU,EAAAK,kBACrD,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,SAAA,GAGJ,EAAA,KACA,EAAA,GAAA,EAAA,oBAAA,EAAA,UALsB,EAAA,GAAA,mBAAA,EAAA,CAAwB,mBAAA,EAAA,eAC6B,EAAA,GAAA,GAAA,EAAA,GAAA,QAAA,EAAA,KAAA,oBAIxD,EAAA,GAAA,GAAA,EAAA,GAAA,QAAA,EAAA,KAAA,QAAA,CAAsB,aAAA,EAAA,KAAA,YAAtB,CAAsB,mBAAA,EAAA,6TCsBlC,qGCvBC,EAAA,GAAA,EAAA,SAAA,IAA8C,EAAA,GAAA,SAAA,WAAA,OAAA,EAAA,GAAA,GAAA,EAAA,KAAA,gBAC1C,EAAA,GAAA,EAAA,WAAA,IACJ,EAAA,4BAGI,EAAA,GAAA,EAAA,WAAA,4CAFJ,EAAA,GAAA,GACI,EAAA,GAAA,EAAA,MAAA,IAA6B,EAAA,GAAA,SAAA,WAAA,EAAA,GAAA,GAAA,MAAA,EAAA,EAAA,UAAA,OAAA,EAAA,KAAA,WAAA,MAA6B,EAAA,GAAA,GAAe,EAAA,KACzE,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,WAAA,IACJ,EAAA,0CAF8D,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,MACC,EAAA,GAAA,GAAA,EAAA,GAAA,QAAA,4CAS/D,EAAA,GAAA,GACI,EAAA,GAAA,EAAA,SAAA,IAAwB,EAAA,GAAA,SAAA,WAAA,OAAA,EAAA,GAAA,GAAA,EAAA,KAAA,oCACpB,EAAA,GAAA,EAAA,WAAA,IACJ,EAAA,KACJ,EAAA,4BAHkF,EAAA,GAAA,GAAA,EAAA,GAAA,aAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,YAAA,cAChE,EAAA,GAAA,GAAA,EAAA,GAAA,UAAA,SAAA,EAAA,YAAA,wDAIlB,EAAA,GAAA,EAAA,SAAA,IAAwB,EAAA,GAAA,SAAA,WAAA,OAAA,EAAA,GAAA,GAAA,EAAA,KAAA,8BACpB,EAAA,GAAA,EAAA,WAAA,IACJ,EAAA,UAF8E,EAAA,GAAA,aAAA,EAAA,GAAA,EAAA,EAAA,0CAY/E,EAAA,GAAA,EAAA,aAAA,6BAAY,EAAA,GAAA,UAAA,EAAA,KAAA,CAA2B,uBAAA,6BAEnC,EAAA,GAAA,EAAA,aAAA,6BAAY,EAAA,GAAA,UAAA,EAAA,KAAA,CAA2B,uBAAA,2BAE3C,EAAA,GAAA,EAAA,sBACI,EAAA,GAAA,EAAA,OAAA,IAAyB,EAAA,GAAA,EAAA,mBAAe,EAAA,KACxC,EAAA,GAAA,EAAA,OAAA,IAA2B,EAAA,GAAA,EAAA,mDAA+C,EAAA,KAC9E,EAAA,gCARJ,EAAA,GAAA,GACI,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,aAAA,oBACA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,cAAA,KAAA,GAAA,EAAA,IAGA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,qBAAA,GAIJ,EAAA,6CARyE,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,WAAA,CAAsD,WAAA,GAIvG,EAAA,GAAA,GAAA,EAAA,GAAA,QAAA,EAAA,KAAA,wBCfpB,IAAA,GAAA,YAAMC,UAA+B,GAuBxC,YACYrwB,EACAzzC,EACA0P,EACAq0D,EACE5a,EACArjC,GAEV3qB,QAPQ,KAAAs4C,MAAAA,EACA,KAAAzzC,QAAAA,EACA,KAAA0P,OAAAA,EACA,KAAAq0D,QAAAA,EACE,KAAA5a,KAAAA,EACA,KAAArjC,GAAAA,EAfP,KAAA9V,SAAW,IAAIF,GAAA,GAAgB,GAC/B,KAAAk0D,YAA4C,IAAIl0D,GAAA,EAAgB,IAChE,KAAAm0D,YAA8D,IAAIn0D,GAAA,EAAgB,MACjF,KAAAgqD,WAAa,GACd,KAAA2B,gBAAkB,IAAI,GAAA,EAAY,CACrCnB,OAAQ,aACRtyD,UAAW,SAdf,aACI,OAAOpP,KAAK6S,KAAKyhC,KAAK51B,MAG1B,eACI,OAAO1e,KAAKqrE,YAAYnoE,MAAM2P,KAuBlC,WACItQ,MAAM+oE,WACNtrE,KAAK6iE,gBAAgBnwC,aAAa3uB,UAAWb,IACrCA,GACAlD,KAAKurE,aAAa,IAAI,KAKlC,cACIvrE,KAAKkhE,WAAWlhE,KAAK+yC,OAAOzxC,IAAMtB,KAAK+yC,OACvC/yC,KAAKwrE,mBAAmBxrE,KAAK+yC,QAC7B/yC,KAAKyrE,cAAczrE,KAAK6S,KAAK64D,gBAC7B1rE,KAAKoX,SAAStI,MAAK,GAGhB,WACH9O,KAAK66C,MAAMqB,SAAS,IAAI7H,EAAgB,CAACr0C,KAAK+yC,QAAS/yC,KAAK6S,KAAKyhC,KAAMt0C,KAAKu0C,WAGzE,iBACH,MAAMj8B,EAAUtY,KAAK66C,MAAMmC,eAAe,GAAW9D,UACrDl5C,KAAK66C,MAAMqB,SAAS,IAAIrI,EAAwB,SAAZv7B,EAAqB,OAAS,SAG9D,mBAAmBoG,GACvB,MAAMvD,EAAUnb,KAAKilC,SAAStpB,OAAOgwD,GAAoB,WAAbA,EAAI7mE,MAC5C8mE,EAAczwD,EAAQqX,UAAU/U,GAAKA,EAAEnc,KAAOod,EAAMpd,IAExDtB,KAAKoH,QAAQ2V,KAAK,GAA6B,CAC3ChU,SAAU,SACV0lB,OAAQ,SACR3e,WAAY,iCACZ+C,KAAM,CACFsI,QAASA,EAAQqE,QACjBosD,YAAAA,EACAZ,cAAehrE,KAAK6S,KAAKyhC,KACzBC,SAAUv0C,KAAKu0C,SACfs3B,oBAAoB,KAKxB,SAASpuD,GACb,MAAMoqC,EAAQpqC,EAAEtS,OAAuBqyD,QAAQ,gBAC/C,GAAI3V,EACA,OAAO7nD,KAAKilC,SAAStc,KAAKjK,GAASA,EAAMpd,MAAQumD,EAAKsT,QAAQ75D,IAI/D,QAAQmc,GACX,MAAMiB,EAAQ1e,KAAK8rE,SAASruD,GACrBiB,IAEY,WAAfA,EAAM5Z,KACN9E,KAAK63D,WAAWn5C,GAEhB1e,KAAK+rE,mBAAmBrtD,IAIzB,cACH,OAAO1e,KAAK8W,OAAOe,IAAIqE,QAAQ,MAAQ,EAGpC,WAAW62B,GACVA,GAAU/yC,KAAK+yC,OAAOzxC,KAAOyxC,EAAOzxC,KACxCtB,KAAKoX,SAAStI,MAAK,GACnB9O,KAAK8W,OAAO0C,SAAS,CAAC,WAAYxZ,KAAKgsE,aAAaj5B,KAAUpnC,KAAK,KAG/D3L,KAAK6iE,gBAAgBloD,WAIrB,mBAAmBo4B,GACvB/yC,KAAKorE,YAAYt8D,KAAKikC,EAAOnyC,KAAKwC,MAAM,KAAKgG,IAAIi2C,GACtCr/C,KAAKkhE,YAAY7hB,IACzB1jC,OAAOswD,KAAeA,IAGrB,aAAanzD,EAAyBozD,GAAkB,GAC5DlsE,KAAKoX,SAAStI,MAAK,GACnB,MAAMq9D,EAAQ,GAAGnsE,KAAK6iE,gBAAgB3/D,MAAMw+D,UAAU1hE,KAAK6iE,gBAAgB3/D,MAAMkM,YAC3EgJ,EAAOU,EAAOV,MAAQpY,KAAKqrE,YAAYnoE,MAAMyU,aACnD3X,KAAKmrE,QAAQiB,WAAWpsE,KAAKgsE,aAAahsE,KAAK+yC,QAAS,CAAC36B,KAAAA,EAAM+zD,MAAAA,EAAOE,aAAa,IAC9E9iE,KAAK,OAAA8gC,EAAA,EAAA,CAAS,IAAMrqC,KAAKoX,SAAStI,MAAK,KACvC/K,UAAUqV,IACP,MACM1B,EAAa0B,EAASsyD,eACrBQ,IACHx0D,EAAW7E,KAAO,IAHF7S,KAAKilC,YAGiBvtB,EAAW7E,OAErD7S,KAAKyrE,cAAc/zD,KAIvB,aAAaq7B,GACjB,IAAI2D,EAAO12C,KAAK6S,KAAKyhC,KAAKoC,KAE1B,OADI3D,IAAQ2D,GAAQ,IAAM3D,EAAO2D,MAC1BA,EAGH,cAAch/B,GAElBA,EAAW7E,KAAO6E,EAAW7E,KAAKzJ,IAAIsV,IAClCA,EAAM7G,KAAO,mBAAmB7X,KAAK6S,KAAKyhC,KAAKhzC,GAC3CtB,KAAKu0C,WACL71B,EAAM7G,KAAO,aAAa7X,KAAKu0C,UAE5B71B,IAEX1e,KAAKqrE,YAAYv8D,KAAK4I,GAGhB,gBAEN1X,KAAKurE,aAAa,CAACnzD,KADNpY,KAAKqrE,YAAYnoE,MAAMyU,aAAe,IACzB,GAGpB,cACN,OAAO3X,KAAKqrE,YAAYnoE,MAAMyU,aAAe3X,KAAKqrE,YAAYnoE,MAAMyW,UAG9D,YACN,OAAO3Z,KAAKoX,SAASlU,oDA/JhBgoE,GAAsB,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,4BAAtBA,EAAsB,UAAA,CAAA,CAAA,mBAAA,UAAA,SAAA,EAAA,SAAA,EAAA,0pCDzBnC,EAAA,GAAA,EAAA,mBAEA,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,SAAA,GAGA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,eAAA,mBAIJ,EAAA,KAEA,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,sBAAA,GAEA,EAAA,GAAA,EAAA,OAAA,GAEA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,eAAA,oBAMA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,SAAA,GAIA,EAAA,GAAA,IACJ,EAAA,KACJ,EAAA,KAEA,EAAA,GAAA,GAAA,UAAA,GAEA,EAAA,GAAA,GAAA,MAAA,GAAA,IAA6C,EAAA,GAAA,SAAA,SAAA,GAAA,OAAS,EAAAoB,QAAA,MACnD,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,eAAA,oBAUH,EAAA,KAEA,EAAA,GAAA,GAAA,oBAAA,4BA3CgC,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,eAGV,EAAA,GAAA,GAAA,EAAA,GAAA,UAAA,EAAA,GAAA,EAAA,EAAA,EAAA,cAOO,EAAA,GAAA,GAAA,EAAA,GAAA,cAAA,EAAA,iBAIP,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,GAAA,GAAA,EAAA,EAAA,YAM+B,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,KAAA,KAAA,gBAWpC,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,GAAA,GAAA,GAAA,EAAA,cAYE,EAAA,GAAA,GAAA,EAAA,GAAA,YAAA,EAAA,GAAA,GAAA,GAAA,EAAA,moEClBc,OAAA,EAAA,EAAA,CAAA,CAA5B,OAAA,EAAA,EAAA,CAAO,GAAWpzB,8CAJhB,2CCxBH,EAAA,GAAA,EAAA,8BAAA,GAAwG,EAAA,GAAA,iBAAA,SAAA,GAAA,OAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,iBAAA,MAA2C,EAAA,iCAA9D,EAAA,GAAA,OAAA,EAAA,+CAKzE,EAAA,GAAA,GACI,EAAA,GAAA,EAAA,OAAA,GACA,EAAA,GAAA,EAAA,SAAA,GAGQ,EAAA,GAAA,SAAA,WAAA,OAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,YAEP,EAAA,GAAA,EAAA,UAAM,EAAA,KACX,EAAA,gCAVR,EAAA,GAAA,GACI,EAAA,GAAA,EAAA,iBAAA,GACI,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,eAAA,mBASJ,EAAA,KACJ,EAAA,yCAXoB,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,CAAa,WAAA,EAAA,UACX,EAAA,GAAA,GAAA,EAAA,GAAA,QAAA,EAAA,GAAA,EAAA,EAAA,EAAA,wBAAA,EAAA,YAAA,sCAcd,EAAA,GAAA,EAAA,IAAA,IAA8F,EAAA,GAAA,EAAA,WAAO,EAAA,8CACrG,EAAA,GAAA,EAAA,SAAA,GAGQ,EAAA,GAAA,SAAA,WAAA,OAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,YAGP,EAAA,GAAA,EAAA,UAAM,EAAA,gEATf,EAAA,GAAA,GACI,EAAA,GAAA,EAAA,uBAAA,GACI,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,GACA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,SAAA,mBAOJ,EAAA,KACA,EAAA,GAAA,EAAA,UAAA,IACA,EAAA,GAAA,EAAA,oBAAA,IACJ,EAAA,yCAZ0B,EAAA,GAAA,GAAA,EAAA,GAAA,YAAA,EAAA,CAAiB,mBAAA,EAAA,KAAA,gBACmB,EAAA,GAAA,GAAA,EAAA,GAAA,QAAA,EAAA,YAAA,cAK9C,EAAA,GAAA,GAAA,EAAA,GAAA,QAAA,EAAA,GAAA,EAAA,EAAA,EAAA,wBAAA,EAAA,YAAA,cAKmC,EAAA,GAAA,GAAA,EAAA,GAAA,UAAA,EAAA,SAAA,IAAA,qBAA5B,EAAA,GAAA,QAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,mCA1BvB,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,eAAA,GAcA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,eAAA,6BAdc,EAAA,GAAA,OAAA,WAAA,EAAA,KAAA,MAAA,MAcA,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,WAAA,EAAA,KAAA,MAAA,iCAlBtB,EAAA,GAAA,GACI,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,8BAAA,mBAEA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,cAAA,KAAA,EAAA,EAAA,IA8BJ,EAAA,oCAhCiC,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,GAAA,EAAA,EAAA,EAAA,uBAAA,CAAuD,WAAA,ICwBjF,IAAA,GAAA,YAAMqzB,EAoBT,YACY1xB,EACA1U,EACAyjC,EACDO,EACAj/B,EACArR,EACC/iB,EACAkjB,EACA9M,EACAlW,GATA,KAAA6jC,MAAAA,EACA,KAAA1U,MAAAA,EACA,KAAAyjC,MAAAA,EACD,KAAAO,aAAAA,EACA,KAAAj/B,SAAAA,EACA,KAAArR,YAAAA,EACC,KAAA/iB,OAAAA,EACA,KAAAkjB,MAAAA,EACA,KAAA9M,GAAAA,EACA,KAAAlW,aAAAA,EA7BL,KAAAwD,MAAsC,IAAItD,GAAA,EAAgB,MAC1D,KAAAs1D,sBAAkD,IAAIt1D,GAAA,GAAgB,GAQ7E,4BACI,MAAMqkB,EAASv7B,KAAK65B,YAAY7gB,IAAI,MACpC,OAAOhZ,KAAKwa,MAAMjR,KACd,OAAAH,GAAA,EAAA,CAAIyJ,GAAQA,EAAKyhC,MACjB,OAAA34B,GAAA,EAAA,CAAO24B,KAAUA,KAAUA,EAAK51B,SAAW41B,EAAK51B,MAAM+8B,OACtD,OAAAryC,GAAA,EAAA,CAAIkrC,GAAQA,EAAK51B,OACjB,OAAAtV,GAAA,EAAA,CAAIsV,KAAWA,EAAM+8B,MAAM9yB,KAAK0sB,GAAQA,EAAK/zC,KAAOi6B,KAiB5D,WACIv7B,KAAK6qE,iBACL7qE,KAAK6xD,qBACL7xD,KAAKgjE,cACLhjE,KAAKmmC,MAAMrtB,OAAO/U,UAAU+U,IACxB9Y,KAAK4pE,MAAMwC,WAAWtzD,EAAO49B,KAAM,CAAC21B,aAAa,IAAOtoE,UAAUqV,IAC9D,MAAMqzD,EAAcrzD,EAASk7B,KAAKhzC,MAAQtB,KAAKwa,MAAMtX,OAASlD,KAAKwa,MAAMtX,MAAMoxC,KAAKhzC,IACpFtB,KAAKwa,MAAM1L,KAAKsK,GAChBpZ,KAAK0sE,mBAAmBtzD,EAASk7B,OAG7Bl7B,EAASk7B,KAAKC,WAAak4B,GAAgBzsE,KAAKu0C,UAGhDv0C,KAAK2sE,qBAAoB,GACzB3sE,KAAK4sE,eAHL5sE,KAAK2sE,qBAAoB,IAK9B,KACC3sE,KAAK8W,OAAO0C,SAAS,CAAC,aAKlC,cACIxZ,KAAKyqE,YAAYrmE,cAGd,SACHpE,KAAK4pE,MAAMiD,YAAY7sE,KAAKwa,MAAMtX,MAAMoxC,KAAKhzC,GAAItB,KAAKu0C,UACjDxwC,UAAUqV,IACP,MAAMk7B,EAAOt0C,KAAKwa,MAAMtX,MAAMoxC,KAC9BA,EAAK51B,MAAM+8B,MAAQriC,EAASqiC,MAC5Bz7C,KAAKwa,MAAM1L,KAAK,OAAD,OAAA,OAAA,OAAA,GAAK9O,KAAKwa,MAAMtX,OAAK,CAAEoxC,KAAAA,KACtCt0C,KAAKg6B,MAAMjd,KAAK,CACZmU,QAAS,oCACT/T,aAAc,CAAChI,KAAMm/B,EAAK51B,MAAMvJ,UAKzC,oBAAoBjS,GACvBlD,KAAKwsE,sBAAsB19D,KAAK5L,GAG5B,iBACJlD,KAAKyqE,YAAczqE,KAAKmqE,aAAa/pB,SAASr8C,UAAU,KACpD,MAAMuwC,EAAOt0C,KAAKwa,MAAMtX,MAAMoxC,KAC9Bt0C,KAAK66C,MAAMqB,SAAS,IAAI7H,EAAgB,CAACC,EAAK51B,OAAQ41B,EAAMt0C,KAAKu0C,aAOjE,cACJ,MAAM1hC,EAAO7S,KAAKwa,MAAMtX,MACxB2P,EAAKyhC,KAAK51B,MAAM7G,KAAO,mBAAmBhF,EAAKyhC,KAAKhzC,GAChDtB,KAAKu0C,WACL1hC,EAAKyhC,KAAK51B,MAAM7G,KAAO,aAAa7X,KAAKu0C,UAE7Cv0C,KAAKwa,MAAM1L,KAAK,OAAD,OAAA,GAAK+D,IAGjB,iBAAiB0hC,GACpBv0C,KAAKu0C,SAAWA,EAChBv0C,KAAK4sE,cACL5sE,KAAK2sE,qBAAoB,GAGrB,mBAAmBr4B,GAEvBt0C,KAAKktB,GAAGxpB,cAAcJ,UAAUuQ,IADM,WAApBygC,EAAK51B,MAAM5Z,KAAoB,cAAgB,aAI7D,qBACJ,OAAAg7B,GAAA,EAAA,CAAU9/B,KAAKktB,GAAGxpB,cAAe,eAC5BK,UAAU0Z,IACPA,EAAExR,mBAIN,cACJjM,KAAK66C,MAAMqB,SAAS,IAAIrI,EACpB7zC,KAAKgX,aAAagC,I9JzGD,mB8JyGoBhZ,KAAKkrC,SAASlyB,IAAI,qBAAsB,yDApH5EuzD,GAA6B,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,IAAA,EAAA,GAAA,IAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,4BAA7BA,EAA6B,UAAA,CAAA,CAAA,2BAAA,SAAA,CAAA,EAAA,GAJ3B,CACP,MACH,MAAA,EAAA,KAAA,EAAA,OAAA,CAAA,CAAA,EAAA,QAAA,CAAA,EAAA,OAAA,gBAAA,EAAA,OAAA,YAAA,CAAA,cAAA,IAAA,CAAA,EAAA,OAAA,iBAAA,CAAA,EAAA,OAAA,YAAA,CAAA,EAAA,oBAAA,CAAA,kBAAA,GAAA,QAAA,SAAA,QAAA,GAAA,EAAA,SAAA,CAAA,EAAA,WAAA,mBAAA,CAAA,kBAAA,GAAA,QAAA,SAAA,aAAA,SAAA,QAAA,GAAA,EAAA,QAAA,CAAA,kBAAA,GAAA,QAAA,SAAA,QAAA,GAAA,EAAA,QAAA,EAAA,QAAA,CAAA,OAAA,mBAAA,EAAA,0BAAA,CAAA,EAAA,SAAA,CAAA,kBAAA,GAAA,QAAA,SAAA,aAAA,SAAA,QAAA,KAAA,SAAA,SAAA,EAAA,GAAA,EAAA,IDvBL,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,eAAA,yBAAc,EAAA,GAAA,OAAA,EAAA,GAAA,EAAA,EAAA,EAAA,yfCyBP,iCChBP,MAAMO,GAA0B,CAE5B,CACIlsE,KAAM,UACN8vD,UAAW,IAIf,CACI9vD,KAAM,GACN8vD,UAAW,GACXqc,YAAa,CAAC,GAAA,EAAW,GAAA,GACzB9nC,SAAU,CACN,CAAErkC,KAAM,GAAI8vD,UAAW,IACvB,CAAE9vD,KAAM,SAAU8vD,UAAW,IAC7B,CAAE9vD,KAAM,SAAU8vD,UAAW,IAC7B,CAAE9vD,KAAM,SAAU8vD,UAAW,IAC7B,CAAE9vD,KAAM,UAAW8vD,UAAW,IAC9B,CAAE9vD,KAAM,QAAS8vD,UAAW,IAC5B,CAAE9vD,KAAM,gBAAiB8vD,UAAW,IACpC,CACI9vD,KAAM,aACN2qE,aAAc,IAAM,EAAA,EAAA,IAAA,KAAA,EAAA,KAAA,KAAA,SAAiD5/D,KAAKwrD,GAAKA,EAAE6V,4BAe1F,IAAA,GAAA,YAAMC,iCAAAA,wDAAAA,IAAkB,QAAA,CARlB,CACL,EAAA,EACA,EAAA,EAAaC,SAASJ,KAGtB,EAAA,QAGD,iCCxBP,SAASK,GAA0ChsE,EAAIC,GAGrD,GAHqE,EAALD,IAC9D,EAAA,KACA,EAAA,GAAiB,EAAG,SAAU,IACvB,EAALA,EAAQ,CACV,MAAME,EAAS,EAAA,KACf,EAAA,GAAmB,iBAAkB,sCAAwCA,EAAO+rE,uBAApF,CAA4G,oBAAqB/rE,EAAOgsE,uBAAwB,KAAhK,CAAsK,mBAAoBhsE,EAAOisE,0BAA2B,KAA5N,CAAkO,eAAgBjsE,EAAOksE,wBAAyB,KAClR,EAAA,GAAmB,IAAKlsE,EAAOmsE,qBAEnC,SAASC,GAA0CtsE,EAAIC,GAGrD,GAHqE,EAALD,IAC9D,EAAA,KACA,EAAA,GAAiB,EAAG,SAAU,IACvB,EAALA,EAAQ,CACV,MAAMusE,EAAS,EAAA,KACf,EAAA,GAAmB,oBAAqBA,EAAOL,uBAAwB,KAAvE,CAA6E,mBAAoBK,EAAOJ,0BAA2B,KAAnI,CAAyI,eAAgBI,EAAOH,wBAAyB,KACzL,EAAA,GAAmB,IAAKG,EAAOF,qBAEnC,SAASG,GAAkCxsE,EAAIC,GAG7C,GAH6D,EAALD,IACtD,EAAA,KACA,EAAA,GAAiB,EAAG,SAAU,IACvB,EAALA,EAAQ,CACV,MAAME,EAAS,EAAA,KACf,EAAA,GAAmB,iBAAkB,sCAAwCA,EAAO+rE,uBAApF,CAA4G,oBAAqB/rE,EAAOgsE,uBAAwB,KAAhK,CAAsK,mBAAoBhsE,EAAOisE,0BAA2B,KAA5N,CAAkO,eAAgBjsE,EAAOksE,wBAAyB,KAClR,EAAA,GAAmB,IAAKlsE,EAAOmsE,qBAEnC,SAASI,GAAkCzsE,EAAIC,GAG7C,GAH6D,EAALD,IACtD,EAAA,KACA,EAAA,GAAiB,EAAG,SAAU,IACvB,EAALA,EAAQ,CACV,MAAMusE,EAAS,EAAA,KACf,EAAA,GAAmB,oBAAqBA,EAAOL,uBAAwB,KAAvE,CAA6E,mBAAoBK,EAAOJ,0BAA2B,KAAnI,CAAyI,eAAgBI,EAAOH,wBAAyB,KACzL,EAAA,GAAmB,IAAKG,EAAOF,qBAEnC,MAAM,GAAM,4tGASZ,MAAMK,GACF,YAAYxrE,GACRrC,KAAKqC,YAAcA,GAG3B,MAAMyrE,GAA+B,OAAA,GAAA,EAAA,CAAWD,GAAwB,WAElEE,GAAuC,IAAI,EAAA,EAAe,uCAAwC,CACpG/rE,WAAY,OACZC,QAGJ,WACI,MAAO,CAAE+rE,SArBK,2BAqDZC,UAA2BH,GAC7B,YAAYzrE,EAAasf,EAAUzZ,EAAW2Z,EAAevf,GACzDC,MAAMF,GACNrC,KAAKqC,YAAcA,EACnBrC,KAAKkI,UAAYA,EACjBlI,KAAKkuE,UA1DK,IA2DVluE,KAAKsjB,OAAS,EACdtjB,KAAKmuE,oBAAqB,EAE1BnuE,KAAKqgC,KAAO,cACZ,MAAM+tC,EAAmBH,EAAmBI,WAC5CruE,KAAKotE,uBAAyBptE,KAAKsuE,4BAG9BF,EAAiBt6D,IAAI5L,EAAUqmE,OAChCH,EAAiB7tE,IAAI2H,EAAUqmE,KAAM,IAAIljD,IAAI,CApEvC,OAsEVrrB,KAAKmuE,mBAAqBxsD,EAAS6sD,MAAQ7sD,EAAS8sD,QACpDzuE,KAAK0uE,gBAAoC,mBAAlB7sD,KAChBvf,IAAaA,EAASqsE,iBACzBrsE,IACIA,EAAS0rE,WACThuE,KAAKguE,SAAW1rE,EAAS0rE,UAEzB1rE,EAASssE,cACT5uE,KAAK4uE,YAActsE,EAASssE,cAKxC,eAAiB,OAAO5uE,KAAKkuE,UAC7B,aAAaj7D,GACTjT,KAAKkuE,UAAY,OAAA,GAAA,EAAA,CAAqBj7D,GACtCjT,KAAKotE,uBAAyBptE,KAAKsuE,6BAE9BtuE,KAAKmuE,oBAAsBnuE,KAAK6uE,YACjC7uE,KAAK8uE,mBAIb,kBACI,OAAO9uE,KAAK+uE,cAAgB/uE,KAAKguE,SAAW,GAEhD,gBAAgB9qE,GACZlD,KAAK+uE,aAAe,OAAA,GAAA,EAAA,CAAqB7rE,GAG7C,YACI,MAAqB,gBAAdlD,KAAKqgC,KAAyBrgC,KAAKsjB,OAAS,EAEvD,UAAU4rB,GACNlvC,KAAKsjB,OAAS8E,KAAK4mD,IAAI,EAAG5mD,KAAKC,IAAI,IAAK,OAAA,GAAA,EAAA,CAAqB6mB,KAEjE,WACI,MAAM3+B,EAAUvQ,KAAKqC,YAAYqB,cAIjC1D,KAAK6uE,WAAa,OAAA,GAAA,EAAA,CAAet+D,IAAYvQ,KAAKkI,UAAUqmE,KAC5DvuE,KAAK8uE,mBAILv+D,EAAQjN,UAAUuQ,IADK,qCAAqC7T,KAAKmuE,mBAAqB,YAAc,gBAIxG,mBACI,OAAQnuE,KAAKguE,SAnHK,IAmH2B,EAGjD,cACI,MAAMiB,EAAoC,EAA1BjvE,KAAKwtE,mBAAyBxtE,KAAK4uE,YACnD,MAAO,OAAOK,KAAWA,IAG7B,0BACI,OAAO,EAAI7mD,KAAK8mD,GAAKlvE,KAAKwtE,mBAG9B,uBACI,MAAkB,gBAAdxtE,KAAKqgC,KACErgC,KAAKstE,2BAA6B,IAAMttE,KAAKsjB,QAAU,IAG9DtjB,KAAKmuE,oBAAoC,kBAAdnuE,KAAKqgC,KACQ,GAAjCrgC,KAAKstE,0BAET,KAGX,wBACI,OAAOttE,KAAK4uE,YAAc5uE,KAAKguE,SAAW,IAG9C,mBACI,MAAMmB,EAAYnvE,KAAK6uE,WACjBO,EAAkBpvE,KAAKkuE,UACvBmB,EAAYpB,EAAmBI,WACrC,IAAIiB,EAAsBD,EAAUr2D,IAAIm2D,GACxC,IAAKG,IAAwBA,EAAoBx7D,IAAIs7D,GAAkB,CACnE,MAAMG,EAAWvvE,KAAKkI,UAAU4a,cAAc,SAC9CysD,EAAS5qD,aAAa,wBAAyB3kB,KAAKotE,wBACpDmC,EAAS94D,YAAczW,KAAKwvE,oBAC5BL,EAAUpsD,YAAYwsD,GACjBD,IACDA,EAAsB,IAAIjkD,IAC1BgkD,EAAU9uE,IAAI4uE,EAAWG,IAE7BA,EAAoBz7D,IAAIu7D,IAIhC,oBACI,MAAMK,EAAsBzvE,KAAKstE,0BACjC,MA5IiC,46CA8I5Bz9C,QAAQ,eAAgB,GAAG,IAAO4/C,GAClC5/C,QAAQ,aAAc,GAAG,GAAM4/C,GAC/B5/C,QAAQ,YAAa,GAAG7vB,KAAKotE,wBAGtC,4BAGI,OAAOptE,KAAKguE,SAASt8D,WAAWme,QAAQ,IAAK,aAGrDo+C,EAAmBtpE,UAAO,SAAoCC,GAAK,OAAO,IAAKA,GAAKqpE,GAAoB,EAAA,GAAyB,EAAA,GAAoB,EAAA,GAAyB,GAAA,GAAkB,EAAA,GAAyB,EAAA,EAAU,GAAI,EAAA,GAAyB,GAAA,EAAuB,GAAI,EAAA,GAAyBF,MACpTE,EAAmBvoE,UAAO,EAAA,GAAyB,CAAEZ,KAAMmpE,EAAoBtoE,UAAW,CAAC,CAAC,yBAA0BI,UAAW,CAAC,OAAQ,cAAe,EAAG,wBAAyBqL,SAAU,GAAIC,aAAc,SAAyClQ,EAAIC,GAAgB,EAALD,IACjQ,EAAA,GAAmB,gBAA8B,gBAAbC,EAAIi/B,KAAyB,EAAI,KAArE,CAA2E,gBAA8B,gBAAbj/B,EAAIi/B,KAAyB,IAAM,KAA/H,CAAqI,gBAA8B,gBAAbj/B,EAAIi/B,KAAyBj/B,EAAI8B,MAAQ,KAA/L,CAAqM,OAAQ9B,EAAIi/B,MACjN,EAAA,GAAmB,QAASj/B,EAAI4sE,SAAU,KAA1C,CAAgD,SAAU5sE,EAAI4sE,SAAU,MACxE,EAAA,GAAmB,0BAA2B5sE,EAAIstE,mBACjDvpE,OAAQ,CAAE8Q,MAAO,QAASoqB,KAAM,OAAQ2tC,SAAU,WAAYY,YAAa,cAAe1rE,MAAO,SAAW+C,SAAU,CAAC,sBAAuBX,SAAU,CAAC,EAAA,IAAoCe,MAAO,EAAGC,KAAM,EAAGC,OAAQ,CAAC,CAAC,sBAAuB,gBAAiB,YAAa,QAAS,EAAG,YAAa,CAAC,KAAM,MAAO,KAAM,MAAO,EAAG,iBAAkB,oBAAqB,mBAAoB,eAAgB,EAAG,gBAAiB,CAAC,KAAM,MAAO,KAAM,MAAO,EAAG,oBAAqB,mBAAoB,eAAgB,EAAG,gBAAiB,CAAC,KAAM,MAAO,KAAM,QAAStB,SAAU,SAAqC9D,EAAIC,GAAgB,EAALD,IAC5mB,EAAA,KACA,EAAA,GAAsB,EAAG,MAAO,GAChC,EAAA,GAAkB,EAAGgsE,GAA2C,EAAG,EAAG,SAAU,GAChF,EAAA,GAAkB,EAAGM,GAA2C,EAAG,EAAG,SAAU,GAChF,EAAA,MACO,EAALtsE,IACF,EAAA,GAAmB,QAASC,EAAI4sE,SAAU,KAA1C,CAAgD,SAAU5sE,EAAI4sE,SAAU,MACxE,EAAA,GAAkB,WAAyB,kBAAb5sE,EAAIi/B,MAClC,EAAA,GAAmB,UAAWj/B,EAAIsuE,eAClC,EAAA,GAAiB,GACjB,EAAA,GAAkB,gBAAgB,GAClC,EAAA,GAAiB,GACjB,EAAA,GAAkB,gBAAgB,KACjClpE,WAAY,CAAC,EAAA,EAAiB,EAAA,GAAsBC,OAAQ,CAAC,IAAMC,cAAe,EAAGC,gBAAiB,IAO/GsnE,EAAmBI,WAAa,IAAI12C,6BAgE9Bg4C,UAAmB,GACrB,YAAY9oE,EAAY8a,EAAUkB,EAAUhB,EAAevf,GACvDC,MAAMsE,EAAY8a,EAAUkB,EAAUhB,EAAevf,GACrDtC,KAAKqgC,KAAO,wBAGpBsvC,EAAWhrE,UAAO,SAA4BC,GAAK,OAAO,IAAKA,GAAK+qE,GAAY,EAAA,GAAyB,EAAA,GAAoB,EAAA,GAAyB,GAAA,GAAkB,EAAA,GAAyB,EAAA,EAAU,GAAI,EAAA,GAAyB,GAAA,EAAuB,GAAI,EAAA,GAAyB5B,MAC5R4B,EAAWjqE,UAAO,EAAA,GAAyB,CAAEZ,KAAM6qE,EAAYhqE,UAAW,CAAC,CAAC,gBAAiBI,UAAW,CAAC,OAAQ,cAAe,OAAQ,gBAAiB,EAAG,cAAe,wBAAyBqL,SAAU,EAAGC,aAAc,SAAiClQ,EAAIC,GAAgB,EAALD,IACvQ,EAAA,GAAmB,QAASC,EAAI4sE,SAAU,KAA1C,CAAgD,SAAU5sE,EAAI4sE,SAAU,MACxE,EAAA,GAAmB,0BAA2B5sE,EAAIstE,mBACjDvpE,OAAQ,CAAE8Q,MAAO,SAAW3Q,SAAU,CAAC,EAAA,IAAoCe,MAAO,EAAGC,KAAM,EAAGC,OAAQ,CAAC,CAAC,sBAAuB,gBAAiB,YAAa,QAAS,EAAG,YAAa,CAAC,KAAM,MAAO,KAAM,MAAO,EAAG,iBAAkB,oBAAqB,mBAAoB,eAAgB,EAAG,gBAAiB,CAAC,KAAM,MAAO,KAAM,MAAO,EAAG,oBAAqB,mBAAoB,eAAgB,EAAG,gBAAiB,CAAC,KAAM,MAAO,KAAM,QAAStB,SAAU,SAA6B9D,EAAIC,GAAgB,EAALD,IAClf,EAAA,KACA,EAAA,GAAsB,EAAG,MAAO,GAChC,EAAA,GAAkB,EAAGwsE,GAAmC,EAAG,EAAG,SAAU,GACxE,EAAA,GAAkB,EAAGC,GAAmC,EAAG,EAAG,SAAU,GACxE,EAAA,MACO,EAALzsE,IACF,EAAA,GAAmB,QAASC,EAAI4sE,SAAU,KAA1C,CAAgD,SAAU5sE,EAAI4sE,SAAU,MACxE,EAAA,GAAkB,WAAyB,kBAAb5sE,EAAIi/B,MAClC,EAAA,GAAmB,UAAWj/B,EAAIsuE,eAClC,EAAA,GAAiB,GACjB,EAAA,GAAkB,gBAAgB,GAClC,EAAA,GAAiB,GACjB,EAAA,GAAkB,gBAAgB,KACjClpE,WAAY,CAAC,EAAA,EAAiB,EAAA,GAAsBC,OAAQ,CAAC,IAAMC,cAAe,EAAGC,gBAAiB,yBAgDzGipE,UAENA,EAAyBh+D,UAAO,EAAA,GAAwB,CAAE9M,KAAM8qE,IAChEA,EAAyB/9D,UAAO,EAAA,GAAwB,CAAE5P,QAAS,SAA0C2C,GAAK,OAAO,IAAKA,GAAKgrE,IAAgC79D,QAAS,CAAC,CAAC,GAAA,EAAiB,EAAA,GAAe,GAAA,4BC9YvM,MAAM89D,GAAsB,CAC/BnxD,MAAO,4DCCH,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,GACA,EAAA,GAAA,EAAA,OAAA,IAAY,EAAA,GAAA,EAAA,QAAI,EAAA,KACpB,EAAA,0BAFI,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,EAAA,SAAA,IAAA,6BAIA,EAAA,GAAA,EAAA,WAAA,0BAIQ,EAAA,GAAA,aAAA,EAAA,GAAA,EAAA,iCAIJ,EAAA,GAAA,EAAA,WAAA,4CACA,EAAA,GAAA,EAAA,OAAA,IAAsD,EAAA,GAAA,SAAA,WAAA,EAAA,GAAA,GAAA,MAAA,EAAA,EAAA,GAAA,GAAA,OAAA,EAAA,aAAA,EAAA,WAAqC,EAAA,GAAA,EAAA,UAAM,EAAA,gCADjG,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,WAAA,IACA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,OAAA,yBADiC,EAAA,GAAA,OAAA,EAAA,OAAA,WACL,EAAA,GAAA,GAAA,EAAA,GAAA,QAAA,EAAA,OAAA,YCHrC,IAAA,GAAA,YAAMoxD,EAKT,YACYj/B,EACAgK,EACA/sB,GAFA,KAAA+iB,YAAAA,EACA,KAAAgK,MAAAA,EACA,KAAA/sB,GAAAA,EANL,KAAAie,SAAoC,GAS3C,WACI/rC,KAAKgY,aAAehY,KAAKgsC,OAAOjC,UAAUxgC,KAEtC,OAAAw/B,GAAA,EAAA,CAAa,IAAKgnC,GAAA,EAAyB,CAAClnC,SAAS,EAAMC,UAAU,KACvE/kC,UAAUgoC,IACR/rC,KAAK+rC,SAAWA,EAChB/rC,KAAK8tB,GAAGnjB,kBAIhB,cACI3K,KAAKgY,aAAa5T,cAGf,aAAa4nC,GAChBhsC,KAAK6wC,YAAY9sB,OAAOioB,EAAO1qC,IAC3BtB,KAAK6wC,YAAYm/B,WACjBhwE,KAAK66C,MAAMqB,SAAS,IAAI5I,iDA5BvBw8B,GAAyB,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,4BAAzBA,EAAyB,UAAA,CAAA,CAAA,uBAAA,OAAA,CAAA,OAAA,UAAA,MAAA,GAAA,KAAA,EAAA,OAAA,CAAA,CAAA,EAAA,QAAA,CAAA,EAAA,WAAA,CAAA,EAAA,QAAA,CAAA,EAAA,OAAA,EAAA,cAAA,CAAA,QAAA,YAAA,EAAA,QAAA,CAAA,EAAA,WAAA,CAAA,UAAA,QAAA,QAAA,aAAA,qBAAA,OAAA,EAAA,aAAA,EAAA,OAAA,YAAA,CAAA,UAAA,IAAA,CAAA,OAAA,cAAA,QAAA,SAAA,EAAA,SAAA,CAAA,EAAA,aAAA,CAAA,QAAA,IAAA,CAAA,UAAA,QAAA,qBAAA,OAAA,EAAA,aAAA,EAAA,cAAA,CAAA,UAAA,eAAA,QAAA,iBAAA,EAAA,QAAA,CAAA,QAAA,gBAAA,QAAA,GAAA,EAAA,QAAA,EAAA,QAAA,CAAA,UAAA,eAAA,EAAA,kBAAA,CAAA,QAAA,GAAA,EAAA,gBAAA,EAAA,UAAA,SAAA,SAAA,EAAA,MAAA,EAAA,IDftC,EAAA,GAAA,EAAA,YAAA,GACA,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,MAAA,GAA0D,EAAA,GAAA,GAA4B,EAAA,KACtF,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,MAAA,GAIA,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,WAAA,mBAOA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,cAAA,KAAA,EAAA,EAAA,IAIJ,EAAA,KACJ,EAAA,KACA,EAAA,GAAA,GAAA,mBAAA,GACJ,EAAA,4BAvBW,EAAA,GAAA,OAAA,EAAA,OAAA,aAAA,MAGe,EAAA,GAAA,GAAA,EAAA,GAAA,aAAA,EAAA,OAAA,aAAA,MAAwC,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,aAAA,MACnC,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,YAAA,EAAA,SAAA,WAAA,MAAA,EAAA,OAAA,OAAA,OAOX,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,GAAA,EAAA,EAAA,EAAA,OAAA,QAAA,CAAoD,WAAA,GAW/B,EAAA,GAAA,GAAA,EAAA,GAAA,QAAA,EAAA,SAAA,s4CCPlC,6BCZK,EAAA,GAAA,GACI,EAAA,GAAA,mCACJ,EAAA,+BADI,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,EAAA,aAAA,IAAA,EAAA,QAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,QAAA,EAAA,QAAA,QAAA,gCAEJ,EAAA,GAAA,GACI,EAAA,GAAA,mBACJ,EAAA,+BADI,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,kBAAA,gCALR,EAAA,GAAA,GACI,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,eAAA,GAGA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,eAAA,GAGJ,EAAA,0BANkB,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,GAGA,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,IAAA,EAAA,gCAOd,EAAA,GAAA,EAAA,WAAA,0BAEI,EAAA,GAAA,EAAA,WAAA,0BAUZ,EAAA,GAAA,EAAA,qBAAA,SAA8F,EAAA,GAAA,sBCX3F,IAAA,GAAA,YAAMG,EAGT,YACYp1B,EACDq1B,GADC,KAAAr1B,MAAAA,EACD,KAAAq1B,cAAAA,EAJJ,KAAAC,WAAa,IAAIj5D,GAAA,GAAgB,GAQxC,cACIlX,KAAKkwE,cAAcv1D,QAGhB,kBACH3a,KAAKmwE,WAAWrhE,MAAM9O,KAAKmwE,WAAWjtE,OAGnC,QACHlD,KAAK66C,MAAMqB,SAAS,IAAI5I,GAGrB,UAAUtvC,EAAegoC,GAC5B,OAAOA,EAAO1qC,iDAtBT2uE,GAAqB,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,4BAArBA,EAAqB,UAAA,CAAA,CAAA,kBAAA,MAAA,GAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,UAAA,CAAA,EAAA,QAAA,CAAA,EAAA,QAAA,CAAA,EAAA,WAAA,CAAA,kBAAA,GAAA,EAAA,SAAA,CAAA,UAAA,oBAAA,QAAA,gBAAA,EAAA,OAAA,YAAA,CAAA,eAAA,IAAA,CAAA,UAAA,SAAA,CAAA,EAAA,gBAAA,CAAA,EAAA,SAAA,EAAA,QAAA,UAAA,gBAAA,CAAA,UAAA,oBAAA,EAAA,iBAAA,CAAA,UAAA,sBAAA,EAAA,iBAAA,CAAA,EAAA,WAAA,SAAA,SAAA,EAAA,MAAA,EAAA,IDdlC,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,eAAA,mBAQJ,EAAA,KACA,EAAA,GAAA,EAAA,MAAA,GACI,EAAA,GAAA,EAAA,SAAA,GAAwB,EAAA,GAAA,SAAA,WAAA,OAAS,EAAAG,qBAC7B,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,WAAA,mBACA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,cAAA,KAAA,EAAA,EAAA,IAGJ,EAAA,KACA,EAAA,GAAA,GAAA,SAAA,GAAwB,EAAA,GAAA,SAAA,WAAA,OAAS,EAAAxwD,WAC7B,EAAA,GAAA,GAAA,WAAA,GACJ,EAAA,KACJ,EAAA,KACJ,EAAA,KAEA,EAAA,GAAA,GAAA,MAAA,oBACI,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,qBAAA,oBACJ,EAAA,2BAxBsB,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,GAAA,EAAA,EAAA,EAAA,cAAA,SAW4B,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,GAAA,EAAA,EAAA,EAAA,YAAA,CAA6C,WAAA,GAWrE,EAAA,GAAA,GAAA,EAAA,GAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,aACF,EAAA,GAAA,GAAA,EAAA,GAAA,UAAA,EAAA,GAAA,GAAA,GAAA,EAAA,cAAA,UAAA,CAAyE,eAAA,EAAA,2sBCX1F,GCNA,GAAA,YAAMywD,EACT,YACYx1B,EACAyH,EACAl7C,GAFA,KAAAyzC,MAAAA,EACA,KAAAyH,SAAAA,EACA,KAAAl7C,QAAAA,EAERpH,KAAKsiD,SAAS/4C,KAAK,OAAA,EAAA,EAAA,CAAmB6qC,IACjCrwC,UAAW+3B,IACR,MAAM3gB,EAAUnb,KAAK66C,MAAMmC,eAAe,GAAW7hC,SAASQ,OAAO8B,GAAgB,WAAXA,EAAE3Y,MACtE26C,EAAgBz/C,KAAK66C,MAAMmC,eAAe,GAAWyC,eACrDmsB,EAAczwD,EAAQqX,UAAU/U,GAAKA,EAAEnc,MAAOm+C,MAAAA,OAAa,EAAbA,EAAen+C,KACnEtB,KAAKoH,QAAQ2V,KAAK,GAA6B,CAC3ChU,SAAU,SACV0lB,OAAQ,SACR3e,WAAY,iCACZ+C,KAAM,CAACsI,QAASA,EAAQqE,QAASosD,aAA8B,IAAjBA,EAAqB,EAAIA,qDAf9EyE,GAAc,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,8BAAdA,EAAc,QAAdA,EAAc,eAApB,GCCA,GAAA,YAAMC,EACT,YACYhuB,EACAzH,EACA3P,GAFA,KAAAoX,SAAAA,EACA,KAAAzH,MAAAA,EACA,KAAA3P,SAAAA,EAERlrC,KAAKsiD,SAAS/4C,KAAK,OAAA,EAAA,EAAA,CAAmB8qC,IACjCtwC,UAAW+3B,KCbjB,SAA6BjkB,EAAa1C,GAC7C,MAAMm/B,EAAOzxB,SAASC,cAAc,KACpCwxB,EAAK6R,KAAOtuC,EAEZgL,SAASwqB,KAAKtqB,YAAYuxB,GAC1BA,EAAKi8B,QACL1tD,SAASwqB,KAAKmjC,YAAYl8B,GANvB,CDc6Bt0C,KAAKywE,eAAe30C,MAI5C,eAAeA,GACnB,MAAM40C,EAAS1wE,KAAK2wE,eAAe70C,EAAO3gB,SAC1C,IAAI+qC,EAAO,GAAGlmD,KAAKkrC,SAAS2a,8CAA8C6qB,IAG1E,OAFI50C,EAAOwY,OAAM4R,GAAQ,mBAAmBpqB,EAAOwY,KAAKhzC,IACpDw6B,EAAOyY,WAAU2R,GAAQ,aAAapqB,EAAOyY,UAC1C2R,EAMH,eAAe/qC,GAKnB,OAJOA,IACHA,EAAUnb,KAAK66C,MAAMmC,eAAe,GAAWlE,kBAG5C39B,EAAQ/R,IAAIsV,GAASA,EAAMg4B,MAAMn9B,KAAK,mDA5BxC+2D,GAAe,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,8BAAfA,EAAe,QAAfA,EAAe,eAArB,oBECA,IAAA,GAAA,YAAMM,EACT,YAA+C/9D,GAAA,KAAAA,KAAAA,gDADtC+9D,GAAqB,EAAA,GACV,GAAA,4BADXA,EAAqB,UAAA,CAAA,CAAA,kBAAA,MAAA,EAAA,KAAA,EAAA,OAAA,CAAA,CAAA,EAAA,YAAA,CAAA,QAAA,KAAA,SAAA,SAAA,EAAA,GAAA,EAAA,ICVlC,EAAA,GAAA,EAAA,cAAA,GACA,EAAA,GAAA,EAAA,OAAA,GAAY,EAAA,GAAA,GAAkB,EAAA,YADjB,EAAA,GAAA,WAAA,IACD,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,KAAA,iPDSL,GESA,GAAA,YAAMC,EACT,YACYvuB,EACAtoB,EACA6gB,EACA/jC,GAHA,KAAAwrC,SAAAA,EACA,KAAAtoB,MAAAA,EACA,KAAA6gB,MAAAA,EACA,KAAA/jC,OAAAA,EAER9W,KAAK8wE,iBACL9wE,KAAK+wE,iBACL/wE,KAAKgxE,mBACLhxE,KAAKixE,oBACLjxE,KAAKkxE,gBACLlxE,KAAKmxE,eACLnxE,KAAKoxE,wBACLpxE,KAAKqxE,2BACLrxE,KAAKsxE,eACLtxE,KAAKuxE,wBACLvxE,KAAKwxE,iBACLxxE,KAAKyxE,eAGD,iBACJzxE,KAAKsiD,SACA/4C,KAAK,OAAA,EAAA,EAAA,CAASguC,KACdxzC,UAAW+3B,IAER97B,KAAKg6B,MAAMjd,KADC,CAACmU,QAAS,wBAAyB/T,aAAc,CAACwhC,MAAO7iB,EAAO0b,aAAar0C,SACpE,CAAC24B,OAAQ,SACzB2S,WAAW1qC,UAAU,KAClB/D,KAAK66C,MAAMqB,SAAS,IAAIjI,EAAsBnY,EAAO0b,mBAKjE,iBACJx3C,KAAKsiD,SACA/4C,KAAK,OAAA,EAAA,EAAA,CAAmBirC,IACxBzwC,UAAW+3B,IACR97B,KAAKg6B,MAAMjd,KAAK,cAAe,CAAC+e,OAAQ,SAAS2S,WAC5C1qC,UAAU,KACP/D,KAAK66C,MAAMqB,SAAS,IAAIzH,EAAW3Y,EAAO3gB,cAKtD,mBACJnb,KAAKsiD,SACA/4C,KAAK,OAAA,EAAA,EAAA,CAAmBkrC,IACxB1wC,UAAW+3B,IACR97B,KAAKg6B,MAAMjd,KAAK,gBAAiB,CAAC+e,OAAQ,SAAS2S,WAC9C1qC,UAAU,KACP/D,KAAK66C,MAAMqB,SAAS,IAAI1H,EAAQ1Y,EAAO3gB,cAKnD,eACJnb,KAAKsiD,SAAS/4C,KAAK,OAAA,EAAA,EAAA,CAASwuC,KACvBh0C,UAAW+3B,IACR97B,KAAKg6B,MAAMjd,KACP,CAACmU,QAAS,sBAAuB/T,aAAc,CAACwhC,MAAO7iB,EAAO3gB,QAAQhY,YAK9E,oBACJnD,KAAKsiD,SAAS/4C,KAAK,OAAA,EAAA,EAAA,CAAS0uC,KACvBl0C,UAAU,KACP/D,KAAKg6B,MAAMjd,KAAK,oDAIpB,gBACJ/c,KAAKsiD,SAAS/4C,KAAK,OAAA,EAAA,EAAA,CAASmuC,KACvB3zC,UAAU,KACP/D,KAAKg6B,MAAMjd,KAAK,qBAIpB,wBACJ/c,KAAKsiD,SAAS/4C,KAAK,OAAA,EAAA,EAAA,CAAmB4uC,KACjCp0C,UAAW+3B,IACR97B,KAAKg6B,MAAMjd,KAAK,CACZmU,QAAS,oCACT/T,aAAc,CAACwhC,MAAO7iB,EAAO3gB,QAAQhY,YAK7C,2BACJnD,KAAKsiD,SAAS/4C,KAAK,OAAA,EAAA,EAAA,CAAmB6uC,KACjCr0C,UAAW+3B,IACR97B,KAAKg6B,MAAMjd,KAAK,CACZmU,QAAS,yBACT/T,aAAc,CAACwhC,MAAO7iB,EAAO3gB,QAAQhY,YAK7C,eACJnD,KAAKsiD,SAAS/4C,KAAK,OAAA,EAAA,EAAA,CAAmBouC,KACjC5zC,UAAW+3B,IACR97B,KAAKg6B,MAAMjd,KAAK,CACZmU,QAAS,+BACT/T,aAAc,CAACu0D,QAAS51C,EAAOpd,MAAMvJ,KAAMyiC,QAAS9b,EAAO8b,aAMnE,wBACJ53C,KAAKsiD,SAAS/4C,KAAK,OAAA,EAAA,EAAA,CAAmB+5C,KACjCv/C,UAAU,KACP/D,KAAKg6B,MAAMjd,KAAK,+BAIpB,iBACJ/c,KAAKsiD,SAAS/4C,KAAK,OAAA,EAAA,EAAA,CAAmB8uC,KACjCt0C,UAAU,KACP/D,KAAKg6B,MAAMjd,KAAK,kDAAmD,CAAC+e,OAAQ,YACvE2S,WAAW1qC,UAAU,KAClB/D,KAAK8W,OAAO0C,SAAS,CAAC,yBAKlC,eACJ,IAAIm4D,EAEJ3xE,KAAKsiD,SAAS/4C,KAAK,OAAA,EAAA,EAAA,CAAmByrC,IACjCjxC,UAAW+3B,IACR61C,EAAW3xE,KAAKg6B,MAAM43C,cAAc,GAAuB,CAAC5oC,SAAU,EAAGn2B,KAAM,CAACqe,QAAS4K,EAAO5K,aAGxGlxB,KAAKsiD,SAAS/4C,KAAK,OAAA,EAAA,EAAA,CAAmB0rC,IACjClxC,UAAU,KACH4tE,IACAA,EAASE,UACTF,EAAW,sDA1IlBd,GAAY,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,8BAAZA,EAAY,QAAZA,EAAY,eAAlB,GCVP,MAAMiB,GAAoC,CACtCrjD,OAAQ,SACRiV,aAAa,EACb36B,SAAU,CAACm1B,MAAO,OAAQi8B,OAAQ,QAClCxrC,eAAgB,CAACsP,KAAM,EAAGk8B,OAAQ,IAI/B,IAAA,GAAA,YAAM4X,EAGT,YACYzvB,EACAzoB,EACA9L,GAFA,KAAAu0B,SAAAA,EACA,KAAAzoB,YAAAA,EACA,KAAA9L,aAAAA,EAER/tB,KAAKsiD,SACA/4C,KAAK,OAAA,EAAA,EAAA,CAAmB8pC,IACxBtvC,UAAU,KACP/D,KAAK02D,qBAGb12D,KAAKsiD,SACA/4C,KAAK,OAAA,EAAA,EAAA,CAAmB+pC,IACxBvvC,UAAU,KACR/D,KAAKgyE,sBAGZhyE,KAAK65B,YAAYwpC,OAAOt/D,UAAU,KAC9B/D,KAAKgyE,sBAIN,mBACChyE,KAAKiyE,iBACTjyE,KAAKiyE,eAAiBjyE,KAAK+tB,aACtBhR,KAAK,GAAuB+0D,KAG7B,oBACG9xE,KAAKiyE,iBACZjyE,KAAKiyE,eAAeryD,QACpB5f,KAAKiyE,eAAiB,oDAlCjBF,GAAkB,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,8BAAlBA,EAAkB,QAAlBA,EAAkB,eAAxB,GCVA,GAAA,YAAMG,EACT,YACY5vB,EACA5O,EACAmH,GAFA,KAAAyH,SAAAA,EACA,KAAA5O,OAAAA,EACA,KAAAmH,MAAAA,EAER76C,KAAKsiD,SAAS/4C,KAAK,OAAA,EAAA,EAAA,CAAmBkqC,IACjC1vC,UAAW+3B,IACR97B,KAAK0zC,OAAO32B,KAAK+e,EAAO4X,OAAQ5X,EAAOjpB,KAAMipB,EAAOlhB,UAG5D5a,KAAKsiD,SAAS/4C,KAAK,OAAA,EAAA,EAAA,CAAmBoqC,IACjC5vC,UAAW+3B,IACR97B,KAAKmyE,kBAAkBr2C,KAI3B,kBAAkBA,GACtB97B,KAAK0zC,OAAO32B,KAAK,GAAA,EAAuB+e,EAAOjpB,MAC1CmK,eACAjZ,UAAUsZ,IACP,GAAOA,EACP,OAAOrd,KAAK66C,MAAMqB,SAASpgB,EAAO8X,+DAtBrCs+B,GAAa,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,8BAAbA,EAAa,QAAbA,EAAa,eAAnB,2DCgDA,IAAA,GAAA,YAAME,iCAAAA,wDAAAA,IAAa,UAJX,CACP,GAAA,GACH,QAAA,CA9BQ,CACL,EAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EAGA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,SAiBD,GCjDA,GAAA,YAAMC,EACT,YACY/vB,EACAmZ,GADA,KAAAnZ,SAAAA,EACA,KAAAmZ,SAAAA,EAERz7D,KAAKsiD,SAAS/4C,KAAK,OAAA,EAAA,EAAA,CAAmBsrC,IACjC9wC,UAAU,KACP/D,KAAKy7D,SAAStC,WAAWmZ,SAAS,CAACjsB,IAAK,oDAP3CgsB,GAAkB,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,+BAAlBA,EAAkB,QAAlBA,EAAkB,eAAxB,GCCA,GAAA,YAAME,EACT,YACY13B,GAAA,KAAAA,MAAAA,EAER76C,KAAK66C,MAAMhyB,OAAO,GAAW6vB,YACxBnvC,KAAK,OAAAoS,GAAA,EAAA,CAAOvD,KAAUA,IACtBrU,UAAU,KACP/D,KAAK66C,MAAMqB,SAAS,IAAI/I,mDAP3Bo/B,GAAiB,EAAA,GAAA,EAAA,8BAAjBA,EAAiB,QAAjBA,EAAiB,eAAvB,GCWA,GAAA,YAAMC,EACT,YACY33B,EACAyH,EACAzoB,GAFA,KAAAghB,MAAAA,EACA,KAAAyH,SAAAA,EACA,KAAAzoB,YAAAA,EAER75B,KAAKsiD,SACA/4C,KACG,OAAA,EAAA,EAAA,CAAmB,EAAA,GACnB,OAAAoS,GAAA,EAAA,CAAQmgB,GAA6BA,EAAOt3B,MAAMiuE,kBAAkBv2D,QAAQ,UAAY,GACxF,OAAAP,GAAA,EAAA,CAAO,IAAM3b,KAAK65B,YAAY64C,eAEjC3uE,UAAU,KACP,MAAM+3B,EAAS97B,KAAK2yE,oBAChB72C,GAAQ97B,KAAK66C,MAAMqB,SAASpgB,KAIpC,oBACJ,MAAMhjB,EAAS9Y,KAAK4yE,mBACpB,OAAQ95D,EAAO+5D,UACX,InLjCA,SmLkCI,OAAO,IAAI,GACf,InLlCD,QmLmCK,OAAO,IAAI,GACf,InLnCA,SmLoCI,OAAO,IAAI,GACf,InLpCC,UmLqCG,OAAO,IAAI,GACf,InLrCA,SmLsCI,MACM5c,EADQj2D,KAAK66C,MAAMmC,eAAe,EAAA,EAAYhC,OAC/BpkC,KAAKk8D,WAAW/6D,YACrC,OAAO,IAAI,GAAiB,CAACjT,KAAMmxD,EAAOnxD,KAAM4W,MAAOu6C,EAAOv6C,QAClE,InLxCI,amLyCA,OAAO,IAAI,GACf,IAtCc,IAuCV,OAAO,KACX,QACI,OAAO,IAAI,GAAiB5C,EAAO68B,aAIvC,mBAEJ,MAAM/8B,EAAM5Y,KAAK66C,MAAMmC,eAAe,EAAA,EAAYnlC,KAAKzU,MAAM,KAAK,IAC3D,CAAEyvE,EAAUl9B,GAAc/8B,EAAIxV,MAAM,KAAKuY,OAAOmhB,KAAOA,GAC9D,MAAO,CAAC+1C,SAAAA,EAAUl9B,WAAAA,iDA9Cb68B,GAAe,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,8BAAfA,EAAe,QAAfA,EAAe,eAArB,GCVA,GAAA,YAAMO,EACT,YACYzwB,EACAzH,GADA,KAAAyH,SAAAA,EACA,KAAAzH,MAAAA,EAER76C,KAAKsiD,SAAS/4C,KAAK,OAAA,EAAA,EAAA,CAAmBkrC,IACjClrC,KAAK,OAAAoS,GAAA,EAAA,CAAO,IpLLZ,YoLMgB3b,KAAK66C,MAAMmC,eAAe,GAAWtE,YAAYvjC,OAGjEpR,UAAW+3B,IACR97B,KAAK66C,MAAMqB,SAAS,IAAIxH,EAAc5Y,EAAO3gB,0DAXhD43D,GAAiB,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,8BAAjBA,EAAiB,QAAjBA,EAAiB,eAAvB,8CCQA,IAAA,GAAA,YAAMC,iCAAAA,wDAAAA,IAAiB,QAAA,CAPjB,CACL,EAAA,SAMD,oBC6BA,IAAA,GAAA,YAAMC,iCAAAA,wDAAAA,IAAiB,UANf,CACP,GAAA,EACA,GACA,CAAC/sE,QAASqiE,GAAoB2K,SAAU,KAC3C,QAAA,CAzBQ,CACL,EAAA,EAGA,GAAA,EACA,GAAA,EACA,GAAA,SAqBD,oBClBA,IAAA,GAAA,YAAMC,iCAAAA,wDAAAA,IAAuB,QAAA,CAbzB,CACL,EAAA,EACA,GAAA,EAGA,GAAA,EACA,GAAA,EACA,GAAA,SAMC,0MCuEA,MAAMC,GAAiB,CAC1B,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IA4HG,IAAA,GAAA,YAAMC,EACT,YAAoB7iB,GAAA,KAAAA,SAAAA,EAChB4iB,GAAeplE,QAAQslE,GAAWtzE,KAAKwwD,SAASx3C,IAAIs6D,mCAF/CD,wDAAAA,GAAW,EAAA,GAAA,EAAA,KAAA,UAnCT,CAEP,GAAA,EACA,GACA,GAAA,KAGGD,GACH,CACIltE,QAAS+pD,GACTrkC,SAAUikD,GACVpoE,OAAO,GAEX,CACIvB,QAAS0zC,GACT1yC,KAAM,CAAC,GAAA,GACPC,WAAa+jC,IACT,MAAM6P,EAAuC,CAAC50B,UAAU,GAElDlG,EAAairB,EAASE,QAAQ,uCAKpC,OAJInrB,IACA86B,EAAkB96B,WAAaA,EAAW7W,IAAImqE,GAAO,IAAMA,IAGxDx4B,IAGf,CACI70C,QAAS,GAAA,EACT0lB,SAAU,CACN4pB,YAAa,qGAGxB,QAAA,CAtHQ,CACL,EAAA,EACA,GAAA,EACA,GACA,GACA,GAAA,EACA,GACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GACA,GAAA,EACA,GACA,GAAA,EACA,GAAA,EAGA,GAAA,EACA,GACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GACA,GAAA,EAGA,EAAA,EAAWg+B,WAAW,CAClB,GACA,GACA,YAoFL,QAxEC,GAAyzB,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IAA0B,CA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","sourceRoot":"webpack:///","sourcesContent":["var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var Uint8Array = require('./_Uint8Array');\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nmodule.exports = cloneArrayBuffer;\n","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n","var baseCreate = require('./_baseCreate'),\n    getPrototype = require('./_getPrototype'),\n    isPrototype = require('./_isPrototype');\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nmodule.exports = initCloneObject;\n","import { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, EventEmitter, Directive, ChangeDetectorRef, ElementRef, Inject, ViewChild, TemplateRef, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, forwardRef, ViewContainerRef, NgZone, Optional, Host, NgModule } from '@angular/core';\nimport { mixinDisableRipple, MAT_OPTION_PARENT_COMPONENT, MAT_OPTGROUP, MatOption, MatOptionSelectionChange, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { Subscription, Subject, defer, merge, of, fromEvent } from 'rxjs';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ESCAPE, ENTER, UP_ARROW, DOWN_ARROW, TAB } from '@angular/cdk/keycodes';\nimport { _getShadowRoot } from '@angular/cdk/platform';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatFormField, MAT_FORM_FIELD } from '@angular/material/form-field';\nimport { take, switchMap, filter, map, tap, delay } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/cdk/overlay';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/cdk/scrolling';\nimport * as ɵngcc5 from '@angular/material/form-field';\n\nconst _c0 = [\"panel\"];\nfunction MatAutocomplete_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r0.id)(\"ngClass\", ctx_r0._classList);\n} }\nconst _c1 = [\"*\"];\nlet _uniqueAutocompleteIdCounter = 0;\n/** Event object that is emitted when an autocomplete option is selected. */\nclass MatAutocompleteSelectedEvent {\n    constructor(\n    /** Reference to the autocomplete panel that emitted the event. */\n    source, \n    /** Option that was selected. */\n    option) {\n        this.source = source;\n        this.option = option;\n    }\n}\n// Boilerplate for applying mixins to MatAutocomplete.\n/** @docs-private */\nclass MatAutocompleteBase {\n}\nconst _MatAutocompleteMixinBase = mixinDisableRipple(MatAutocompleteBase);\n/** Injection token to be used to override the default options for `mat-autocomplete`. */\nconst MAT_AUTOCOMPLETE_DEFAULT_OPTIONS = new InjectionToken('mat-autocomplete-default-options', {\n    providedIn: 'root',\n    factory: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY() {\n    return { autoActiveFirstOption: false };\n}\n/** Base class with all of the `MatAutocomplete` functionality. */\nclass _MatAutocompleteBase extends _MatAutocompleteMixinBase {\n    constructor(_changeDetectorRef, _elementRef, defaults) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._activeOptionChanges = Subscription.EMPTY;\n        /** Whether the autocomplete panel should be visible, depending on option length. */\n        this.showPanel = false;\n        this._isOpen = false;\n        /** Function that maps an option's control value to its display value in the trigger. */\n        this.displayWith = null;\n        /** Event that is emitted whenever an option from the list is selected. */\n        this.optionSelected = new EventEmitter();\n        /** Event that is emitted when the autocomplete panel is opened. */\n        this.opened = new EventEmitter();\n        /** Event that is emitted when the autocomplete panel is closed. */\n        this.closed = new EventEmitter();\n        /** Emits whenever an option is activated using the keyboard. */\n        this.optionActivated = new EventEmitter();\n        this._classList = {};\n        /** Unique ID to be used by autocomplete trigger's \"aria-owns\" property. */\n        this.id = `mat-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n        this._autoActiveFirstOption = !!defaults.autoActiveFirstOption;\n    }\n    /** Whether the autocomplete panel is open. */\n    get isOpen() { return this._isOpen && this.showPanel; }\n    /**\n     * Whether the first option should be highlighted when the autocomplete panel is opened.\n     * Can be configured globally through the `MAT_AUTOCOMPLETE_DEFAULT_OPTIONS` token.\n     */\n    get autoActiveFirstOption() { return this._autoActiveFirstOption; }\n    set autoActiveFirstOption(value) {\n        this._autoActiveFirstOption = coerceBooleanProperty(value);\n    }\n    /**\n     * Takes classes set on the host mat-autocomplete element and applies them to the panel\n     * inside the overlay container to allow for easy styling.\n     */\n    set classList(value) {\n        if (value && value.length) {\n            this._classList = value.split(' ').reduce((classList, className) => {\n                classList[className.trim()] = true;\n                return classList;\n            }, {});\n        }\n        else {\n            this._classList = {};\n        }\n        this._setVisibilityClasses(this._classList);\n        this._elementRef.nativeElement.className = '';\n    }\n    ngAfterContentInit() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap();\n        this._activeOptionChanges = this._keyManager.change.subscribe(index => {\n            this.optionActivated.emit({ source: this, option: this.options.toArray()[index] || null });\n        });\n        // Set the initial visibility state.\n        this._setVisibility();\n    }\n    ngOnDestroy() {\n        this._activeOptionChanges.unsubscribe();\n    }\n    /**\n     * Sets the panel scrollTop. This allows us to manually scroll to display options\n     * above or below the fold, as they are not actually being focused when active.\n     */\n    _setScrollTop(scrollTop) {\n        if (this.panel) {\n            this.panel.nativeElement.scrollTop = scrollTop;\n        }\n    }\n    /** Returns the panel's scrollTop. */\n    _getScrollTop() {\n        return this.panel ? this.panel.nativeElement.scrollTop : 0;\n    }\n    /** Panel should hide itself when the option list is empty. */\n    _setVisibility() {\n        this.showPanel = !!this.options.length;\n        this._setVisibilityClasses(this._classList);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits the `select` event. */\n    _emitSelectEvent(option) {\n        const event = new MatAutocompleteSelectedEvent(this, option);\n        this.optionSelected.emit(event);\n    }\n    /** Sets the autocomplete visibility classes on a classlist based on the panel is visible. */\n    _setVisibilityClasses(classList) {\n        classList[this._visibleClass] = this.showPanel;\n        classList[this._hiddenClass] = !this.showPanel;\n    }\n}\n_MatAutocompleteBase.ɵfac = function _MatAutocompleteBase_Factory(t) { return new (t || _MatAutocompleteBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS)); };\n_MatAutocompleteBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatAutocompleteBase, viewQuery: function _MatAutocompleteBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n    } }, inputs: { displayWith: \"displayWith\", autoActiveFirstOption: \"autoActiveFirstOption\", classList: [\"class\", \"classList\"], panelWidth: \"panelWidth\" }, outputs: { optionSelected: \"optionSelected\", opened: \"opened\", closed: \"closed\", optionActivated: \"optionActivated\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatAutocompleteBase.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS,] }] }\n];\n_MatAutocompleteBase.propDecorators = {\n    template: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    displayWith: [{ type: Input }],\n    autoActiveFirstOption: [{ type: Input }],\n    panelWidth: [{ type: Input }],\n    optionSelected: [{ type: Output }],\n    opened: [{ type: Output }],\n    closed: [{ type: Output }],\n    optionActivated: [{ type: Output }],\n    classList: [{ type: Input, args: ['class',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatAutocompleteBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n            }] }]; }, { displayWith: [{\n            type: Input\n        }], optionSelected: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], closed: [{\n            type: Output\n        }], optionActivated: [{\n            type: Output\n        }], autoActiveFirstOption: [{\n            type: Input\n        }], classList: [{\n            type: Input,\n            args: ['class']\n        }], template: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], panelWidth: [{\n            type: Input\n        }] }); })();\nclass MatAutocomplete extends _MatAutocompleteBase {\n    constructor() {\n        super(...arguments);\n        this._visibleClass = 'mat-autocomplete-visible';\n        this._hiddenClass = 'mat-autocomplete-hidden';\n    }\n}\nMatAutocomplete.ɵfac = function MatAutocomplete_Factory(t) { return ɵMatAutocomplete_BaseFactory(t || MatAutocomplete); };\nMatAutocomplete.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatAutocomplete, selectors: [[\"mat-autocomplete\"]], contentQueries: function MatAutocomplete_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_OPTGROUP, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n    } }, hostAttrs: [1, \"mat-autocomplete\"], inputs: { disableRipple: \"disableRipple\" }, exportAs: [\"matAutocomplete\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[\"role\", \"listbox\", 1, \"mat-autocomplete-panel\", 3, \"id\", \"ngClass\"], [\"panel\", \"\"]], template: function MatAutocomplete_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatAutocomplete_ng_template_0_Template, 3, 2, \"ng-template\");\n    } }, directives: [ɵngcc1.NgClass], styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatAutocomplete.propDecorators = {\n    optionGroups: [{ type: ContentChildren, args: [MAT_OPTGROUP, { descendants: true },] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }]\n};\nconst ɵMatAutocomplete_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatAutocomplete);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocomplete, [{\n        type: Component,\n        args: [{\n                selector: 'mat-autocomplete',\n                template: \"<ng-template>\\n  <div class=\\\"mat-autocomplete-panel\\\" role=\\\"listbox\\\" [id]=\\\"id\\\" [ngClass]=\\\"_classList\\\" #panel>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                exportAs: 'matAutocomplete',\n                inputs: ['disableRipple'],\n                host: {\n                    'class': 'mat-autocomplete'\n                },\n                providers: [\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n                ],\n                styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}\\n\"]\n            }]\n    }], null, { optionGroups: [{\n            type: ContentChildren,\n            args: [MAT_OPTGROUP, { descendants: true }]\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Base class containing all of the functionality for `MatAutocompleteOrigin`. */\nclass _MatAutocompleteOriginBase {\n    constructor(\n    /** Reference to the element on which the directive is applied. */\n    elementRef) {\n        this.elementRef = elementRef;\n    }\n}\n_MatAutocompleteOriginBase.ɵfac = function _MatAutocompleteOriginBase_Factory(t) { return new (t || _MatAutocompleteOriginBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\n_MatAutocompleteOriginBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatAutocompleteOriginBase });\n_MatAutocompleteOriginBase.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatAutocompleteOriginBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n */\nclass MatAutocompleteOrigin extends _MatAutocompleteOriginBase {\n}\nMatAutocompleteOrigin.ɵfac = function MatAutocompleteOrigin_Factory(t) { return ɵMatAutocompleteOrigin_BaseFactory(t || MatAutocompleteOrigin); };\nMatAutocompleteOrigin.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteOrigin, selectors: [[\"\", \"matAutocompleteOrigin\", \"\"]], exportAs: [\"matAutocompleteOrigin\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatAutocompleteOrigin_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatAutocompleteOrigin);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[matAutocompleteOrigin]',\n                exportAs: 'matAutocompleteOrigin'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the scrollTop of the panel. Because we are not\n * actually focusing the active item, scroll must be handled manually.\n */\n/**\n * The height of each autocomplete option.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 11.0.0\n */\nconst AUTOCOMPLETE_OPTION_HEIGHT = 48;\n/**\n * The total height of the autocomplete panel.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 11.0.0\n */\nconst AUTOCOMPLETE_PANEL_HEIGHT = 256;\n/** Injection token that determines the scroll handling while the autocomplete panel is open. */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY = new InjectionToken('mat-autocomplete-scroll-strategy');\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatAutocompleteTrigger),\n    multi: true\n};\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * @docs-private\n */\nfunction getMatAutocompleteMissingPanelError() {\n    return Error('Attempting to open an undefined instance of `mat-autocomplete`. ' +\n        'Make sure that the id passed to the `matAutocomplete` is correct and that ' +\n        'you\\'re attempting to open it after the ngAfterContentInit hook.');\n}\n/** Base class with all of the `MatAutocompleteTrigger` functionality. */\nclass _MatAutocompleteTriggerBase {\n    constructor(_element, _overlay, _viewContainerRef, _zone, _changeDetectorRef, scrollStrategy, _dir, _formField, _document, _viewportRuler) {\n        this._element = _element;\n        this._overlay = _overlay;\n        this._viewContainerRef = _viewContainerRef;\n        this._zone = _zone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._formField = _formField;\n        this._document = _document;\n        this._viewportRuler = _viewportRuler;\n        this._componentDestroyed = false;\n        this._autocompleteDisabled = false;\n        /** Whether or not the label state is being overridden. */\n        this._manuallyFloatingLabel = false;\n        /** Subscription to viewport size changes. */\n        this._viewportSubscription = Subscription.EMPTY;\n        /**\n         * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n         * closed autocomplete from being reopened if the user switches to another browser tab and then\n         * comes back.\n         */\n        this._canOpenOnNextFocus = true;\n        /** Stream of keyboard events that can close the panel. */\n        this._closeKeyEventStream = new Subject();\n        /**\n         * Event handler for when the window is blurred. Needs to be an\n         * arrow function in order to preserve the context.\n         */\n        this._windowBlurHandler = () => {\n            // If the user blurred the window while the autocomplete is focused, it means that it'll be\n            // refocused when they come back. In this case we want to skip the first focus event, if the\n            // pane was closed, in order to avoid reopening it unintentionally.\n            this._canOpenOnNextFocus =\n                this._document.activeElement !== this._element.nativeElement || this.panelOpen;\n        };\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when autocomplete has been touched` */\n        this._onTouched = () => { };\n        /**\n         * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n         * will render the panel underneath the trigger if there is enough space for it to fit in\n         * the viewport, otherwise the panel will be shown above it. If the position is set to\n         * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n         * whether it fits completely in the viewport.\n         */\n        this.position = 'auto';\n        /**\n         * `autocomplete` attribute to be set on the input element.\n         * @docs-private\n         */\n        this.autocompleteAttribute = 'off';\n        this._overlayAttached = false;\n        /** Stream of autocomplete option selections. */\n        this.optionSelections = defer(() => {\n            if (this.autocomplete && this.autocomplete.options) {\n                return merge(...this.autocomplete.options.map(option => option.onSelectionChange));\n            }\n            // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n            // Return a stream that we'll replace with the real one once everything is in place.\n            return this._zone.onStable\n                .pipe(take(1), switchMap(() => this.optionSelections));\n        });\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * Whether the autocomplete is disabled. When disabled, the element will\n     * act as a regular input and the user won't be able to open the panel.\n     */\n    get autocompleteDisabled() { return this._autocompleteDisabled; }\n    set autocompleteDisabled(value) {\n        this._autocompleteDisabled = coerceBooleanProperty(value);\n    }\n    ngAfterViewInit() {\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            this._zone.runOutsideAngular(() => window.addEventListener('blur', this._windowBlurHandler));\n        }\n    }\n    ngOnChanges(changes) {\n        if (changes['position'] && this._positionStrategy) {\n            this._setStrategyPositions(this._positionStrategy);\n            if (this.panelOpen) {\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    ngOnDestroy() {\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('blur', this._windowBlurHandler);\n        }\n        this._viewportSubscription.unsubscribe();\n        this._componentDestroyed = true;\n        this._destroyPanel();\n        this._closeKeyEventStream.complete();\n    }\n    /** Whether or not the autocomplete panel is open. */\n    get panelOpen() {\n        return this._overlayAttached && this.autocomplete.showPanel;\n    }\n    /** Opens the autocomplete suggestion panel. */\n    openPanel() {\n        this._attachOverlay();\n        this._floatLabel();\n    }\n    /** Closes the autocomplete suggestion panel. */\n    closePanel() {\n        this._resetLabel();\n        if (!this._overlayAttached) {\n            return;\n        }\n        if (this.panelOpen) {\n            // Only emit if the panel was visible.\n            this.autocomplete.closed.emit();\n        }\n        this.autocomplete._isOpen = this._overlayAttached = false;\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n            this._closingActionsSubscription.unsubscribe();\n        }\n        // Note that in some cases this can end up being called after the component is destroyed.\n        // Add a check to ensure that we don't try to run change detection on a destroyed view.\n        if (!this._componentDestroyed) {\n            // We need to trigger change detection manually, because\n            // `fromEvent` doesn't seem to do it at the proper time.\n            // This ensures that the label is reset when the\n            // user clicks outside.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * Updates the position of the autocomplete suggestion panel to ensure that it fits all options\n     * within the viewport.\n     */\n    updatePosition() {\n        if (this._overlayAttached) {\n            this._overlayRef.updatePosition();\n        }\n    }\n    /**\n     * A stream of actions that should close the autocomplete panel, including\n     * when an option is selected, on blur, and when TAB is pressed.\n     */\n    get panelClosingActions() {\n        return merge(this.optionSelections, this.autocomplete._keyManager.tabOut.pipe(filter(() => this._overlayAttached)), this._closeKeyEventStream, this._getOutsideClickStream(), this._overlayRef ?\n            this._overlayRef.detachments().pipe(filter(() => this._overlayAttached)) :\n            of()).pipe(\n        // Normalize the output so we return a consistent type.\n        map(event => event instanceof MatOptionSelectionChange ? event : null));\n    }\n    /** The currently active option, coerced to MatOption type. */\n    get activeOption() {\n        if (this.autocomplete && this.autocomplete._keyManager) {\n            return this.autocomplete._keyManager.activeItem;\n        }\n        return null;\n    }\n    /** Stream of clicks outside of the autocomplete panel. */\n    _getOutsideClickStream() {\n        return merge(fromEvent(this._document, 'click'), fromEvent(this._document, 'touchend'))\n            .pipe(filter(event => {\n            // If we're in the Shadow DOM, the event target will be the shadow root, so we have to\n            // fall back to check the first element in the path of the click event.\n            const clickTarget = (this._isInsideShadowRoot && event.composedPath ? event.composedPath()[0] :\n                event.target);\n            const formField = this._formField ? this._formField._elementRef.nativeElement : null;\n            const customOrigin = this.connectedTo ? this.connectedTo.elementRef.nativeElement : null;\n            return this._overlayAttached && clickTarget !== this._element.nativeElement &&\n                (!formField || !formField.contains(clickTarget)) &&\n                (!customOrigin || !customOrigin.contains(clickTarget)) &&\n                (!!this._overlayRef && !this._overlayRef.overlayElement.contains(clickTarget));\n        }));\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        Promise.resolve(null).then(() => this._setTriggerValue(value));\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this._element.nativeElement.disabled = isDisabled;\n    }\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        // Prevent the default action on all escape key presses. This is here primarily to bring IE\n        // in line with other browsers. By default, pressing escape on IE will cause it to revert\n        // the input value to the one that it had on focus, however it won't dispatch any events\n        // which means that the model value will be out of sync with the view.\n        if (keyCode === ESCAPE) {\n            event.preventDefault();\n        }\n        if (this.activeOption && keyCode === ENTER && this.panelOpen) {\n            this.activeOption._selectViaInteraction();\n            this._resetActiveItem();\n            event.preventDefault();\n        }\n        else if (this.autocomplete) {\n            const prevActiveItem = this.autocomplete._keyManager.activeItem;\n            const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n            if (this.panelOpen || keyCode === TAB) {\n                this.autocomplete._keyManager.onKeydown(event);\n            }\n            else if (isArrowKey && this._canOpen()) {\n                this.openPanel();\n            }\n            if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n                this._scrollToOption(this.autocomplete._keyManager.activeItemIndex || 0);\n            }\n        }\n    }\n    _handleInput(event) {\n        let target = event.target;\n        let value = target.value;\n        // Based on `NumberValueAccessor` from forms.\n        if (target.type === 'number') {\n            value = value == '' ? null : parseFloat(value);\n        }\n        // If the input has a placeholder, IE will fire the `input` event on page load,\n        // focus and blur, in addition to when the user actually changed the value. To\n        // filter out all of the extra events, we save the value on focus and between\n        // `input` events, and we check whether it changed.\n        // See: https://connect.microsoft.com/IE/feedback/details/885747/\n        if (this._previousValue !== value) {\n            this._previousValue = value;\n            this._onChange(value);\n            if (this._canOpen() && this._document.activeElement === event.target) {\n                this.openPanel();\n            }\n        }\n    }\n    _handleFocus() {\n        if (!this._canOpenOnNextFocus) {\n            this._canOpenOnNextFocus = true;\n        }\n        else if (this._canOpen()) {\n            this._previousValue = this._element.nativeElement.value;\n            this._attachOverlay();\n            this._floatLabel(true);\n        }\n    }\n    /**\n     * In \"auto\" mode, the label will animate down as soon as focus is lost.\n     * This causes the value to jump when selecting an option with the mouse.\n     * This method manually floats the label until the panel can be closed.\n     * @param shouldAnimate Whether the label should be animated when it is floated.\n     */\n    _floatLabel(shouldAnimate = false) {\n        if (this._formField && this._formField.floatLabel === 'auto') {\n            if (shouldAnimate) {\n                this._formField._animateAndLockLabel();\n            }\n            else {\n                this._formField.floatLabel = 'always';\n            }\n            this._manuallyFloatingLabel = true;\n        }\n    }\n    /** If the label has been manually elevated, return it to its normal state. */\n    _resetLabel() {\n        if (this._manuallyFloatingLabel) {\n            this._formField.floatLabel = 'auto';\n            this._manuallyFloatingLabel = false;\n        }\n    }\n    /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     */\n    _subscribeToClosingActions() {\n        const firstStable = this._zone.onStable.pipe(take(1));\n        const optionChanges = this.autocomplete.options.changes.pipe(tap(() => this._positionStrategy.reapplyLastPosition()), \n        // Defer emitting to the stream until the next tick, because changing\n        // bindings in here will cause \"changed after checked\" errors.\n        delay(0));\n        // When the zone is stable initially, and when the option list changes...\n        return merge(firstStable, optionChanges)\n            .pipe(\n        // create a new stream of panelClosingActions, replacing any previous streams\n        // that were created, and flatten it so our stream only emits closing events...\n        switchMap(() => {\n            const wasOpen = this.panelOpen;\n            this._resetActiveItem();\n            this.autocomplete._setVisibility();\n            if (this.panelOpen) {\n                this._overlayRef.updatePosition();\n                // If the `panelOpen` state changed, we need to make sure to emit the `opened`\n                // event, because we may not have emitted it when the panel was attached. This\n                // can happen if the users opens the panel and there are no options, but the\n                // options come in slightly later or as a result of the value changing.\n                if (wasOpen !== this.panelOpen) {\n                    this.autocomplete.opened.emit();\n                }\n            }\n            return this.panelClosingActions;\n        }), \n        // when the first closing event occurs...\n        take(1))\n            // set the value, close the panel, and complete.\n            .subscribe(event => this._setValueAndClose(event));\n    }\n    /** Destroys the autocomplete suggestion panel. */\n    _destroyPanel() {\n        if (this._overlayRef) {\n            this.closePanel();\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n    }\n    _setTriggerValue(value) {\n        const toDisplay = this.autocomplete && this.autocomplete.displayWith ?\n            this.autocomplete.displayWith(value) :\n            value;\n        // Simply falling back to an empty string if the display value is falsy does not work properly.\n        // The display value can also be the number zero and shouldn't fall back to an empty string.\n        const inputValue = toDisplay != null ? toDisplay : '';\n        // If it's used within a `MatFormField`, we should set it through the property so it can go\n        // through change detection.\n        if (this._formField) {\n            this._formField._control.value = inputValue;\n        }\n        else {\n            this._element.nativeElement.value = inputValue;\n        }\n        this._previousValue = inputValue;\n    }\n    /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     */\n    _setValueAndClose(event) {\n        if (event && event.source) {\n            this._clearPreviousSelectedOption(event.source);\n            this._setTriggerValue(event.source.value);\n            this._onChange(event.source.value);\n            this._element.nativeElement.focus();\n            this.autocomplete._emitSelectEvent(event.source);\n        }\n        this.closePanel();\n    }\n    /**\n     * Clear any previous selected option and emit a selection change event for this option\n     */\n    _clearPreviousSelectedOption(skip) {\n        this.autocomplete.options.forEach(option => {\n            if (option != skip && option.selected) {\n                option.deselect();\n            }\n        });\n    }\n    _attachOverlay() {\n        if (!this.autocomplete && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatAutocompleteMissingPanelError();\n        }\n        // We want to resolve this once, as late as possible so that we can be\n        // sure that the element has been moved into its final place in the DOM.\n        if (this._isInsideShadowRoot == null) {\n            this._isInsideShadowRoot = !!_getShadowRoot(this._element.nativeElement);\n        }\n        let overlayRef = this._overlayRef;\n        if (!overlayRef) {\n            this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef);\n            overlayRef = this._overlay.create(this._getOverlayConfig());\n            this._overlayRef = overlayRef;\n            // Use the `keydownEvents` in order to take advantage of\n            // the overlay event targeting provided by the CDK overlay.\n            overlayRef.keydownEvents().subscribe(event => {\n                // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n                // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n                if (event.keyCode === ESCAPE || (event.keyCode === UP_ARROW && event.altKey)) {\n                    this._resetActiveItem();\n                    this._closeKeyEventStream.next();\n                    // We need to stop propagation, otherwise the event will eventually\n                    // reach the input itself and cause the overlay to be reopened.\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n            });\n            this._viewportSubscription = this._viewportRuler.change().subscribe(() => {\n                if (this.panelOpen && overlayRef) {\n                    overlayRef.updateSize({ width: this._getPanelWidth() });\n                }\n            });\n        }\n        else {\n            // Update the trigger, panel width and direction, in case anything has changed.\n            this._positionStrategy.setOrigin(this._getConnectedElement());\n            overlayRef.updateSize({ width: this._getPanelWidth() });\n        }\n        if (overlayRef && !overlayRef.hasAttached()) {\n            overlayRef.attach(this._portal);\n            this._closingActionsSubscription = this._subscribeToClosingActions();\n        }\n        const wasOpen = this.panelOpen;\n        this.autocomplete._setVisibility();\n        this.autocomplete._isOpen = this._overlayAttached = true;\n        // We need to do an extra `panelOpen` check in here, because the\n        // autocomplete won't be shown if there are no options.\n        if (this.panelOpen && wasOpen !== this.panelOpen) {\n            this.autocomplete.opened.emit();\n        }\n    }\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._getOverlayPosition(),\n            scrollStrategy: this._scrollStrategy(),\n            width: this._getPanelWidth(),\n            direction: this._dir\n        });\n    }\n    _getOverlayPosition() {\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this._getConnectedElement())\n            .withFlexibleDimensions(false)\n            .withPush(false);\n        this._setStrategyPositions(strategy);\n        this._positionStrategy = strategy;\n        return strategy;\n    }\n    /** Sets the positions on a position strategy based on the directive's input state. */\n    _setStrategyPositions(positionStrategy) {\n        // Note that we provide horizontal fallback positions, even though by default the dropdown\n        // width matches the input, because consumers can override the width. See #18854.\n        const belowPositions = [\n            { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n            { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' }\n        ];\n        // The overlay edge connected to the trigger should have squared corners, while\n        // the opposite end has rounded corners. We apply a CSS class to swap the\n        // border-radius based on the overlay position.\n        const panelClass = this._aboveClass;\n        const abovePositions = [\n            { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom', panelClass },\n            { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom', panelClass }\n        ];\n        let positions;\n        if (this.position === 'above') {\n            positions = abovePositions;\n        }\n        else if (this.position === 'below') {\n            positions = belowPositions;\n        }\n        else {\n            positions = [...belowPositions, ...abovePositions];\n        }\n        positionStrategy.withPositions(positions);\n    }\n    _getConnectedElement() {\n        if (this.connectedTo) {\n            return this.connectedTo.elementRef;\n        }\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;\n    }\n    _getPanelWidth() {\n        return this.autocomplete.panelWidth || this._getHostWidth();\n    }\n    /** Returns the width of the input element, so the panel width can match it. */\n    _getHostWidth() {\n        return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n    }\n    /**\n     * Resets the active item to -1 so arrow events will activate the\n     * correct options, or to 0 if the consumer opted into it.\n     */\n    _resetActiveItem() {\n        this.autocomplete._keyManager.setActiveItem(this.autocomplete.autoActiveFirstOption ? 0 : -1);\n    }\n    /** Determines whether the panel can be opened. */\n    _canOpen() {\n        const element = this._element.nativeElement;\n        return !element.readOnly && !element.disabled && !this._autocompleteDisabled;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        var _a;\n        return ((_a = this._document) === null || _a === void 0 ? void 0 : _a.defaultView) || window;\n    }\n    /** Scrolls to a particular option in the list. */\n    _scrollToOption(index) {\n        // Given that we are not actually focusing active options, we must manually adjust scroll\n        // to reveal options below the fold. First, we find the offset of the option from the top\n        // of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n        // the panel height + the option height, so the active option will be just visible at the\n        // bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n        // will become the offset. If that offset is visible within the panel already, the scrollTop is\n        // not adjusted.\n        const autocomplete = this.autocomplete;\n        const labelCount = _countGroupLabelsBeforeOption(index, autocomplete.options, autocomplete.optionGroups);\n        if (index === 0 && labelCount === 1) {\n            // If we've got one group label before the option and we're at the top option,\n            // scroll the list to the top. This is better UX than scrolling the list to the\n            // top of the option, because it allows the user to read the top group's label.\n            autocomplete._setScrollTop(0);\n        }\n        else {\n            const option = autocomplete.options.toArray()[index];\n            if (option) {\n                const element = option._getHostElement();\n                const newScrollPosition = _getOptionScrollPosition(element.offsetTop, element.offsetHeight, autocomplete._getScrollTop(), autocomplete.panel.nativeElement.offsetHeight);\n                autocomplete._setScrollTop(newScrollPosition);\n            }\n        }\n    }\n}\n_MatAutocompleteTriggerBase.ɵfac = function _MatAutocompleteTriggerBase_Factory(t) { return new (t || _MatAutocompleteTriggerBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 9), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ViewportRuler)); };\n_MatAutocompleteTriggerBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatAutocompleteTriggerBase, inputs: { position: [\"matAutocompletePosition\", \"position\"], autocompleteAttribute: [\"autocomplete\", \"autocompleteAttribute\"], autocompleteDisabled: [\"matAutocompleteDisabled\", \"autocompleteDisabled\"], autocomplete: [\"matAutocomplete\", \"autocomplete\"], connectedTo: [\"matAutocompleteConnectedTo\", \"connectedTo\"] }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n_MatAutocompleteTriggerBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Overlay },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }, { type: Host }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ViewportRuler }\n];\n_MatAutocompleteTriggerBase.propDecorators = {\n    autocomplete: [{ type: Input, args: ['matAutocomplete',] }],\n    position: [{ type: Input, args: ['matAutocompletePosition',] }],\n    connectedTo: [{ type: Input, args: ['matAutocompleteConnectedTo',] }],\n    autocompleteAttribute: [{ type: Input, args: ['autocomplete',] }],\n    autocompleteDisabled: [{ type: Input, args: ['matAutocompleteDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatAutocompleteTriggerBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.Overlay }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc5.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }, {\n                type: Host\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc4.ViewportRuler }]; }, { position: [{\n            type: Input,\n            args: ['matAutocompletePosition']\n        }], autocompleteAttribute: [{\n            type: Input,\n            args: ['autocomplete']\n        }], autocompleteDisabled: [{\n            type: Input,\n            args: ['matAutocompleteDisabled']\n        }], autocomplete: [{\n            type: Input,\n            args: ['matAutocomplete']\n        }], connectedTo: [{\n            type: Input,\n            args: ['matAutocompleteConnectedTo']\n        }] }); })();\nclass MatAutocompleteTrigger extends _MatAutocompleteTriggerBase {\n    constructor() {\n        super(...arguments);\n        this._aboveClass = 'mat-autocomplete-panel-above';\n    }\n}\nMatAutocompleteTrigger.ɵfac = function MatAutocompleteTrigger_Factory(t) { return ɵMatAutocompleteTrigger_BaseFactory(t || MatAutocompleteTrigger); };\nMatAutocompleteTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteTrigger, selectors: [[\"input\", \"matAutocomplete\", \"\"], [\"textarea\", \"matAutocomplete\", \"\"]], hostAttrs: [1, \"mat-autocomplete-trigger\"], hostVars: 7, hostBindings: function MatAutocompleteTrigger_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focusin\", function MatAutocompleteTrigger_focusin_HostBindingHandler() { return ctx._handleFocus(); })(\"blur\", function MatAutocompleteTrigger_blur_HostBindingHandler() { return ctx._onTouched(); })(\"input\", function MatAutocompleteTrigger_input_HostBindingHandler($event) { return ctx._handleInput($event); })(\"keydown\", function MatAutocompleteTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"autocomplete\", ctx.autocompleteAttribute)(\"role\", ctx.autocompleteDisabled ? null : \"combobox\")(\"aria-autocomplete\", ctx.autocompleteDisabled ? null : \"list\")(\"aria-activedescendant\", ctx.panelOpen && ctx.activeOption ? ctx.activeOption.id : null)(\"aria-expanded\", ctx.autocompleteDisabled ? null : ctx.panelOpen.toString())(\"aria-owns\", ctx.autocompleteDisabled || !ctx.panelOpen ? null : ctx.autocomplete == null ? null : ctx.autocomplete.id)(\"aria-haspopup\", !ctx.autocompleteDisabled);\n    } }, exportAs: [\"matAutocompleteTrigger\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_AUTOCOMPLETE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatAutocompleteTrigger_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatAutocompleteTrigger);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `input[matAutocomplete], textarea[matAutocomplete]`,\n                host: {\n                    'class': 'mat-autocomplete-trigger',\n                    '[attr.autocomplete]': 'autocompleteAttribute',\n                    '[attr.role]': 'autocompleteDisabled ? null : \"combobox\"',\n                    '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : \"list\"',\n                    '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',\n                    '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',\n                    '[attr.aria-owns]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',\n                    '[attr.aria-haspopup]': '!autocompleteDisabled',\n                    // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n                    // a little earlier. This avoids issues where IE delays the focusing of the input.\n                    '(focusin)': '_handleFocus()',\n                    '(blur)': '_onTouched()',\n                    '(input)': '_handleInput($event)',\n                    '(keydown)': '_handleKeydown($event)'\n                },\n                exportAs: 'matAutocompleteTrigger',\n                providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatAutocompleteModule {\n}\nMatAutocompleteModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatAutocompleteModule });\nMatAutocompleteModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatAutocompleteModule_Factory(t) { return new (t || MatAutocompleteModule)(); }, providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n            CommonModule\n        ], CdkScrollableModule,\n        MatOptionModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatAutocompleteModule, { declarations: function () { return [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin]; }, imports: function () { return [OverlayModule,\n        MatOptionModule,\n        MatCommonModule,\n        CommonModule]; }, exports: function () { return [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin, CdkScrollableModule,\n        MatOptionModule,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                    CommonModule\n                ],\n                exports: [\n                    MatAutocomplete,\n                    MatAutocompleteTrigger,\n                    MatAutocompleteOrigin,\n                    CdkScrollableModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                declarations: [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin],\n                providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AUTOCOMPLETE_OPTION_HEIGHT, AUTOCOMPLETE_PANEL_HEIGHT, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_AUTOCOMPLETE_VALUE_ACCESSOR, MatAutocomplete, MatAutocompleteModule, MatAutocompleteOrigin, MatAutocompleteSelectedEvent, MatAutocompleteTrigger, _MatAutocompleteBase, _MatAutocompleteOriginBase, _MatAutocompleteTriggerBase, getMatAutocompleteMissingPanelError };\n\n//# sourceMappingURL=autocomplete.js.map","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {ChipInputComponent} from './chip-input/chip-input.component';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {TranslationsModule} from '@common/core/translations/translations.module';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatRippleModule} from '@angular/material/core';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        MatChipsModule,\r\n        MatAutocompleteModule,\r\n        ReactiveFormsModule,\r\n        TranslationsModule,\r\n\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatRippleModule,\r\n    ],\r\n    declarations: [\r\n        ChipInputComponent,\r\n    ],\r\n    exports: [\r\n        ChipInputComponent,\r\n    ]\r\n})\r\nexport class ChipsModule {\r\n}\r\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TableSortHeaderComponent} from './table-sort-header/table-sort-header.component';\nimport {MatIconModule} from '@angular/material/icon';\nimport {TranslationsModule} from '../core/translations/translations.module';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {UserColumnComponent} from './columns/user-column/user-column.component';\nimport {TableBodyCheckboxComponent} from './selection/table-body-checkbox.component';\nimport {TableHeaderCheckboxComponent} from './selection/table-header-checkbox.component';\nimport {DatatableFooterComponent} from './datatable-footer/datatable-footer.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatButtonModule} from '@angular/material/button';\nimport {DatatableHeaderComponent} from './datatable-header/datatable-header.component';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {DatatableFiltersPanelComponent} from './datatable-filters-panel/datatable-filters-panel.component';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {ChipsModule} from '../core/ui/chips/chips.module';\nimport { DatatableHeaderSearchInputComponent } from './datatable-header/datatable-header-search-input/datatable-header-search-input.component';\nimport {NoResultsMessageModule} from '../core/ui/no-results-message/no-results-message.module';\nimport {NoResultsMessageComponent} from '../core/ui/no-results-message/no-results-message.component';\n\n@NgModule({\n    declarations: [\n        TableSortHeaderComponent,\n        UserColumnComponent,\n        TableBodyCheckboxComponent,\n        TableHeaderCheckboxComponent,\n        DatatableFooterComponent,\n        DatatableHeaderComponent,\n        DatatableHeaderSearchInputComponent,\n        DatatableFiltersPanelComponent,\n        DatatableHeaderSearchInputComponent,\n    ],\n    imports: [\n        CommonModule,\n        TranslationsModule,\n        ReactiveFormsModule,\n        FormsModule,\n        ChipsModule,\n        NoResultsMessageModule,\n\n        // material\n        MatButtonModule,\n        MatIconModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatProgressBarModule,\n    ],\n    exports: [\n        TableSortHeaderComponent,\n        MatCheckboxModule,\n        UserColumnComponent,\n        TableBodyCheckboxComponent,\n        TableHeaderCheckboxComponent,\n        DatatableFooterComponent,\n        DatatableHeaderComponent,\n        DatatableFiltersPanelComponent,\n        DatatableHeaderSearchInputComponent,\n        NoResultsMessageComponent,\n    ]\n})\nexport class DatatableModule {\n}\n","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n","import { ObserversModule } from '@angular/cdk/observers';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Attribute, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/observers';\n\nconst _c0 = [\"thumbContainer\"];\nconst _c1 = [\"toggleBar\"];\nconst _c2 = [\"input\"];\nconst _c3 = function () { return { enterDuration: 150 }; };\nconst _c4 = [\"*\"];\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: () => ({ disableToggleValue: false })\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for slide-toggle components.\nlet nextUniqueId = 0;\n/** @docs-private */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlideToggle),\n    multi: true\n};\n/** Change event object emitted by a MatSlideToggle. */\nclass MatSlideToggleChange {\n    constructor(\n    /** The source MatSlideToggle of the event. */\n    source, \n    /** The new `checked` value of the MatSlideToggle. */\n    checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n}\n// Boilerplate for applying mixins to MatSlideToggle.\n/** @docs-private */\nclass MatSlideToggleBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatSlideToggleMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatSlideToggleBase)), 'accent'));\n/** Represents a slidable \"switch\" toggle that can be moved between on and off. */\nclass MatSlideToggle extends _MatSlideToggleMixinBase {\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, tabIndex, defaults, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.defaults = defaults;\n        this._animationMode = _animationMode;\n        this._onChange = (_) => { };\n        this._onTouched = () => { };\n        this._uniqueId = `mat-slide-toggle-${++nextUniqueId}`;\n        this._required = false;\n        this._checked = false;\n        /** Name value will be applied to the input element if present. */\n        this.name = null;\n        /** A unique id for the slide-toggle input. If none is supplied, it will be auto-generated. */\n        this.id = this._uniqueId;\n        /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n        this.labelPosition = 'after';\n        /** Used to set the aria-label attribute on the underlying input element. */\n        this.ariaLabel = null;\n        /** Used to set the aria-labelledby attribute on the underlying input element. */\n        this.ariaLabelledby = null;\n        /** An event will be dispatched each time the slide-toggle changes its value. */\n        this.change = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle input is toggled.\n         * This event is always emitted when the user toggles the slide toggle, but this does not mean\n         * the slide toggle's value has changed.\n         */\n        this.toggleChange = new EventEmitter();\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /** Whether the slide-toggle is required. */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /** Whether the slide-toggle element is checked or not. */\n    get checked() { return this._checked; }\n    set checked(value) {\n        this._checked = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    ngAfterContentInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe(focusOrigin => {\n            // Only forward focus manually when it was received programmatically or through the\n            // keyboard. We should not do this for mouse/touch focus for two reasons:\n            // 1. It can prevent clicks from landing in Chrome (see #18269).\n            // 2. They're already handled by the wrapping `label` element.\n            if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n                this._inputElement.nativeElement.focus();\n            }\n            else if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's 'ng-touched') will cause a changed-after-checked\n                // error. See https://github.com/angular/angular/issues/17793. To work around this,\n                // we defer telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => this._onTouched());\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Method being called whenever the underlying input emits a change event. */\n    _onChangeEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the component's `change` output.\n        event.stopPropagation();\n        this.toggleChange.emit();\n        // When the slide toggle's config disables toggle change event by setting\n        // `disableToggleValue: true`, the slide toggle's value does not change, and the\n        // checked state of the underlying input needs to be changed back.\n        if (this.defaults.disableToggleValue) {\n            this._inputElement.nativeElement.checked = this.checked;\n            return;\n        }\n        // Sync the value from the underlying input element with the component instance.\n        this.checked = this._inputElement.nativeElement.checked;\n        // Emit our custom change event only if the underlying input emitted one. This ensures that\n        // there is no change event, when the checked state changes programmatically.\n        this._emitChangeEvent();\n    }\n    /** Method being called whenever the slide-toggle has been clicked. */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the slide-toggle. */\n    focus(options) {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n    }\n    /** Toggles the checked state of the slide-toggle. */\n    toggle() {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     */\n    _emitChangeEvent() {\n        this._onChange(this.checked);\n        this.change.emit(new MatSlideToggleChange(this, this.checked));\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the\n        // slide-toggle component will be only marked for check, but no actual change detection runs\n        // automatically. Instead of going back into the zone in order to trigger a change detection\n        // which causes *all* components to be checked (if explicitly marked or not using OnPush),\n        // we only trigger an explicit change detection for the slide-toggle view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n}\nMatSlideToggle.ɵfac = function MatSlideToggle_Factory(t) { return new (t || MatSlideToggle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatSlideToggle.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSlideToggle, selectors: [[\"mat-slide-toggle\"]], viewQuery: function MatSlideToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbBarEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, hostAttrs: [1, \"mat-slide-toggle\"], hostVars: 12, hostBindings: function MatSlideToggle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : -1)(\"aria-label\", null)(\"aria-labelledby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checked\", ctx.checked)(\"mat-disabled\", ctx.disabled)(\"mat-slide-toggle-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", name: \"name\", id: \"id\", labelPosition: \"labelPosition\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], required: \"required\", checked: \"checked\" }, outputs: { change: \"change\", toggleChange: \"toggleChange\" }, exportAs: [\"matSlideToggle\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 16, vars: 18, consts: [[1, \"mat-slide-toggle-label\"], [\"label\", \"\"], [1, \"mat-slide-toggle-bar\"], [\"toggleBar\", \"\"], [\"type\", \"checkbox\", \"role\", \"switch\", 1, \"mat-slide-toggle-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"tabIndex\", \"checked\", \"disabled\", \"change\", \"click\"], [\"input\", \"\"], [1, \"mat-slide-toggle-thumb-container\"], [\"thumbContainer\", \"\"], [1, \"mat-slide-toggle-thumb\"], [\"mat-ripple\", \"\", 1, \"mat-slide-toggle-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-slide-toggle-persistent-ripple\"], [1, \"mat-slide-toggle-content\", 3, \"cdkObserveContent\"], [\"labelContent\", \"\"], [2, \"display\", \"none\"]], template: function MatSlideToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2, 3);\n        ɵngcc0.ɵɵelementStart(4, \"input\", 4, 5);\n        ɵngcc0.ɵɵlistener(\"change\", function MatSlideToggle_Template_input_change_4_listener($event) { return ctx._onChangeEvent($event); })(\"click\", function MatSlideToggle_Template_input_click_4_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 6, 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelement(10, \"div\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11, 12);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatSlideToggle_Template_span_cdkObserveContent_11_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(13, \"span\", 13);\n        ɵngcc0.ɵɵtext(14, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(15);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        const _r4 = ɵngcc0.ɵɵreference(12);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-slide-toggle-bar-no-side-margin\", !_r4.textContent || !_r4.textContent.trim());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"tabIndex\", ctx.tabIndex)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"aria-checked\", ctx.checked.toString())(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(17, _c3));\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSlideToggle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatSlideToggle.propDecorators = {\n    _thumbEl: [{ type: ViewChild, args: ['thumbContainer',] }],\n    _thumbBarEl: [{ type: ViewChild, args: ['toggleBar',] }],\n    name: [{ type: Input }],\n    id: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    required: [{ type: Input }],\n    checked: [{ type: Input }],\n    change: [{ type: Output }],\n    toggleChange: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slide-toggle',\n                exportAs: 'matSlideToggle',\n                host: {\n                    'class': 'mat-slide-toggle',\n                    '[id]': 'id',\n                    // Needs to be `-1` so it can still receive programmatic focus.\n                    '[attr.tabindex]': 'disabled ? null : -1',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[class.mat-checked]': 'checked',\n                    '[class.mat-disabled]': 'disabled',\n                    '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-slide-toggle-label\\\" #label>\\n  <div #toggleBar class=\\\"mat-slide-toggle-bar\\\"\\n       [class.mat-slide-toggle-bar-no-side-margin]=\\\"!labelContent.textContent || !labelContent.textContent.trim()\\\">\\n\\n    <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           role=\\\"switch\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.aria-checked]=\\\"checked.toString()\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           (change)=\\\"_onChangeEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n\\n    <div class=\\\"mat-slide-toggle-thumb-container\\\" #thumbContainer>\\n      <div class=\\\"mat-slide-toggle-thumb\\\"></div>\\n      <div class=\\\"mat-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n           [matRippleTrigger]=\\\"label\\\"\\n           [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n           [matRippleCentered]=\\\"true\\\"\\n           [matRippleRadius]=\\\"20\\\"\\n           [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n        <div class=\\\"mat-ripple-element mat-slide-toggle-persistent-ripple\\\"></div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <span class=\\\"mat-slide-toggle-content\\\" #labelContent (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR],\n                inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { name: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], change: [{\n            type: Output\n        }], toggleChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], _thumbEl: [{\n            type: ViewChild,\n            args: ['thumbContainer']\n        }], _thumbBarEl: [{\n            type: ViewChild,\n            args: ['toggleBar']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatSlideToggleRequiredValidator),\n    multi: true\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n */\nclass MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n}\nMatSlideToggleRequiredValidator.ɵfac = function MatSlideToggleRequiredValidator_Factory(t) { return ɵMatSlideToggleRequiredValidator_BaseFactory(t || MatSlideToggleRequiredValidator); };\nMatSlideToggleRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSlideToggleRequiredValidator, selectors: [[\"mat-slide-toggle\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"formControl\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatSlideToggleRequiredValidator_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatSlideToggleRequiredValidator);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggleRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-slide-toggle[required][formControlName],\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]`,\n                providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** This module is used by both original and MDC-based slide-toggle implementations. */\nclass _MatSlideToggleRequiredValidatorModule {\n}\n_MatSlideToggleRequiredValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatSlideToggleRequiredValidatorModule });\n_MatSlideToggleRequiredValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatSlideToggleRequiredValidatorModule_Factory(t) { return new (t || _MatSlideToggleRequiredValidatorModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatSlideToggleRequiredValidatorModule, { declarations: [MatSlideToggleRequiredValidator], exports: [MatSlideToggleRequiredValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatSlideToggleRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatSlideToggleRequiredValidator],\n                declarations: [MatSlideToggleRequiredValidator]\n            }]\n    }], null, null); })();\nclass MatSlideToggleModule {\n}\nMatSlideToggleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSlideToggleModule });\nMatSlideToggleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSlideToggleModule_Factory(t) { return new (t || MatSlideToggleModule)(); }, imports: [[\n            _MatSlideToggleRequiredValidatorModule,\n            MatRippleModule,\n            MatCommonModule,\n            ObserversModule,\n        ], _MatSlideToggleRequiredValidatorModule, MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSlideToggleModule, { declarations: function () { return [MatSlideToggle]; }, imports: function () { return [_MatSlideToggleRequiredValidatorModule, MatRippleModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [_MatSlideToggleRequiredValidatorModule, MatSlideToggle, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatRippleModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatSlideToggle,\n                    MatCommonModule\n                ],\n                declarations: [MatSlideToggle]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n\n//# sourceMappingURL=slide-toggle.js.map","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","import {Params, Router} from '@angular/router';\r\nimport {BehaviorSubject, of, Subscription} from 'rxjs';\r\nimport {map, switchMap, tap} from 'rxjs/operators';\r\nimport {PaginationResponse} from '@common/core/types/pagination/pagination-response';\r\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\r\nimport {PaginatedBackendResponse} from '@common/core/types/pagination/paginated-backend-response';\r\nimport {PaginationParams} from '@common/core/types/pagination/pagination-params';\r\nimport {Injectable} from '@angular/core';\r\nimport {LocalStorage} from '@common/core/services/local-storage.service';\r\n\r\n@Injectable()\r\nexport class Paginator<T> {\r\n    private subscription: Subscription;\r\n    private params$ = new BehaviorSubject<PaginationParams>({});\r\n    public paginatedOnce$ = new BehaviorSubject<boolean>(false);\r\n    public loading$ = new BehaviorSubject(false);\r\n    public response$ = new BehaviorSubject<{pagination: PaginationResponse<T>, [key: string]: any}>(null);\r\n    public dontUpdateQueryParams = false;\r\n    public perPageCacheKey: string = null;\r\n    /** only true if data was already loaded from backend and it was empty */\r\n    public noResults$ = this.response$.pipe(map(r => this.paginatedOnce$.value && r.pagination.data.length === 0));\r\n\r\n    get params(): PaginationParams {\r\n        return this.params$.value;\r\n    }\r\n\r\n    get currentPage(): number {\r\n        return this.response$.value?.pagination?.current_page;\r\n    }\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private http: AppHttpClient,\r\n        private localStorage?: LocalStorage,\r\n    ) {}\r\n\r\n    public paginate(userParams: object = {}, url?: string, initialData?: PaginationResponse<T>) {\r\n        // only use query params on first pagination, so query params can be removed via user params\r\n        const queryParams = !this.subscription ? this.currentQueryParams() : {};\r\n        const paginationParams = this.response$.value ? {\r\n            perPage: this.response$.value.pagination.per_page,\r\n            page: this.response$.value.pagination.current_page\r\n        } : {};\r\n        this.params$.next({...paginationParams, ...queryParams, ...userParams});\r\n\r\n        if ( ! this.subscription) {\r\n            this.init(url, initialData);\r\n        }\r\n    }\r\n\r\n    public nextPage() {\r\n        const current = this.response$.value.pagination.current_page;\r\n        const total = this.response$.value.pagination.total;\r\n        const next = current + 1;\r\n        this.paginate({\r\n            ...this.params$.value,\r\n            page: !current || next > total ? current : next\r\n        });\r\n    }\r\n\r\n    public previousPage() {\r\n        const current = this.response$.value.pagination.current_page;\r\n        this.paginate({\r\n            ...this.params$.value,\r\n            page: (current - 1) || 1\r\n        });\r\n    }\r\n\r\n    public changePerPage(newPerPage: number) {\r\n        if (newPerPage !== this.params$.value?.perPage) {\r\n            if (this.perPageCacheKey) {\r\n                this.localStorage.set(this.perPageCacheKey, newPerPage);\r\n            }\r\n            this.paginate({\r\n                ...this.params$.value,\r\n                perPage: newPerPage\r\n            });\r\n        }\r\n    }\r\n\r\n    public currentQueryParams(): Params {\r\n        return this.router.routerState.root.snapshot.queryParams;\r\n    }\r\n\r\n    private init(uri: string, initialData?: PaginationResponse<T>) {\r\n        this.subscription = this.params$.pipe(\r\n            switchMap(params => {\r\n                this.loading$.next(true);\r\n                const firstPagination = !this.paginatedOnce$.value;\r\n                if (firstPagination && this.perPageCacheKey && this.localStorage.get(this.perPageCacheKey)) {\r\n                    params = {perPage: this.localStorage.get(this.perPageCacheKey), ...params};\r\n                }\r\n\r\n                // if we got initial pagination response (of 1st page)\r\n                // return that instead of making 1st page http request\r\n                const request = firstPagination && initialData ?\r\n                    of({pagination: initialData}) :\r\n                    this.http.get(uri, params);\r\n\r\n                return (request as PaginatedBackendResponse<T>).pipe(\r\n                    // can't use \"finalize\" here as it will complete after loading$.next(true)\r\n                    // call above, which will prevent loading bar from showing\r\n                    // if pagination request is cancelled and new one is queued\r\n                    tap(() => {\r\n                        this.updateQueryParams(params);\r\n                        this.loading$.next(false);\r\n                        this.paginatedOnce$.next(true);\r\n                    }, () => {\r\n                        this.loading$.next(false);\r\n                        this.paginatedOnce$.next(true);\r\n                    })\r\n                ) as PaginatedBackendResponse<T>;\r\n            })\r\n        ).subscribe(response => {\r\n            this.response$.next(response);\r\n        });\r\n    }\r\n\r\n    private updateQueryParams(params = {}) {\r\n        if (this.dontUpdateQueryParams) return;\r\n        for (const key in params) {\r\n            if (Array.isArray(params[key])) {\r\n                params[key] = params[key].join(',');\r\n            }\r\n        }\r\n        this.router.navigate([], {queryParams: params, replaceUrl: true});\r\n    }\r\n\r\n    public canLoadNextPage() {\r\n        return this.response$.value &&\r\n            this.currentPage < this.response$.value?.pagination?.last_page;\r\n    }\r\n}\r\n","import * as Dot from \"dot-object\";\r\nimport {_isNumberValue} from '@angular/cdk/coercion';\r\nimport {Model} from '@common/core/types/models/model';\r\n\r\nconst MAX_SAFE_INTEGER = 9007199254740991;\r\n\r\nexport function sortDatatableData<T extends Model>(data: T[], orderBy: string, orderDir: string): T[] {\r\n    return data.sort((a, b) => {\r\n        let valueA = sortingDataAccessor(a, orderBy);\r\n        let valueB = sortingDataAccessor(b, orderBy);\r\n\r\n        // If there are data in the column that can be converted to a number,\r\n        // it must be ensured that the rest of the data\r\n        // is of the same type so as not to order incorrectly.\r\n        const valueAType = typeof valueA;\r\n        const valueBType = typeof valueB;\r\n\r\n        if (valueAType !== valueBType) {\r\n            if (valueAType === 'number') {\r\n                valueA += '';\r\n            }\r\n            if (valueBType === 'number') {\r\n                valueB += '';\r\n            }\r\n        }\r\n\r\n        // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\r\n        // one value exists while the other doesn't. In this case, existing value should come last.\r\n        // This avoids inconsistent results when comparing values to undefined/null.\r\n        // If neither value exists, return 0 (equal).\r\n        let comparatorResult = 0;\r\n        if (valueA != null && valueB != null) {\r\n            // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\r\n            if (valueA > valueB) {\r\n                comparatorResult = 1;\r\n            } else if (valueA < valueB) {\r\n                comparatorResult = -1;\r\n            }\r\n        } else if (valueA != null) {\r\n            comparatorResult = 1;\r\n        } else if (valueB != null) {\r\n            comparatorResult = -1;\r\n        }\r\n\r\n        return comparatorResult * (orderDir === 'asc' ? 1 : -1);\r\n    });\r\n}\r\n\r\n/**\r\n * Data accessor function that is used for accessing data properties for sorting through\r\n * the default sortData function.\r\n * This default function assumes that the sort header IDs (which defaults to the column name)\r\n * matches the data's properties (e.g. column Xyz represents data['Xyz']).\r\n * May be set to a custom function for different behavior.\r\n */\r\nfunction sortingDataAccessor(data: object, sortHeaderId: string): string {\r\n    const value = Dot.pick(sortHeaderId, data);\r\n\r\n    if (_isNumberValue(value)) {\r\n        const numberValue = Number(value);\r\n\r\n        // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\r\n        // leave them as strings. For more info: https://goo.gl/y5vbSg\r\n        return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\r\n    }\r\n\r\n    // if (Array.isArray(value)) {\r\n    //     return value.reduce((prev, curr) => prev += objectToStr(curr));\r\n    // }\r\n\r\n    return value;\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Subscription} from 'rxjs';\nimport {Paginator} from '../shared/paginator.service';\nimport {debounceTime, filter, map, pairwise, skip, tap} from 'rxjs/operators';\nimport {DatatableFilters, DatatableFilterValue} from './types/datatable-filters';\nimport {DatatableSort} from './types/datatable-sort';\nimport {PaginationParams} from '../core/types/pagination/pagination-params';\nimport {removeNullFromObject} from '../core/utils/remove-null-from-object';\nimport {ComponentType} from '@angular/cdk/portal';\nimport {MatDialogConfig} from '@angular/material/dialog';\nimport {Modal} from '../core/ui/dialogs/modal.service';\nimport {ConfirmModalComponent} from '../core/ui/confirm-modal/confirm-modal.component';\nimport {DELETE_RESOURCE_MESSAGE} from './delete-resource-message';\nimport {PaginationResponse} from '../core/types/pagination/pagination-response';\nimport {sortDatatableData} from '@common/datatable/utils/sort-datatable-data';\nimport {Model} from '@common/core/types/models/model';\nimport {filterDatatableData} from '@common/datatable/utils/filter-datatable-data';\nimport {Router} from '@angular/router';\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\nimport {LocalStorage} from '../core/services/local-storage.service';\n\nexport type DatatableStaticParams = Record<string, string|number|boolean|string[]>;\n\ninterface DatatableConfig<T> {\n    uri?: string;\n    staticParams?: DatatableStaticParams;\n    initialData?: PaginationResponse<T>|T[];\n    disableSort?: boolean;\n    infiniteScroll?: boolean;\n}\n\n@Injectable()\nexport class DatatableService<T extends Model> {\n    public sort$ = new BehaviorSubject<DatatableSort>({});\n    public filters$ = new BehaviorSubject<DatatableFilters>({});\n    public staticParams$ = new BehaviorSubject<DatatableStaticParams>({});\n    public paginator = new Paginator<T>(this.router, this.http, this.localStorage);\n    private paginatorSub: Subscription;\n    private mainSub: Subscription;\n    private ignoreNextParamChange = false;\n    private originalData$ = new BehaviorSubject<T[]>([]);\n    public data$ = new BehaviorSubject<T[]>([]);\n    public selectedRows$ = new BehaviorSubject<number[]>([]);\n    public config: DatatableConfig<T>;\n\n    constructor(\n        protected modal: Modal,\n        protected router: Router,\n        protected http: AppHttpClient,\n        protected localStorage: LocalStorage,\n    ) {}\n\n    get data() {\n        return this.data$.value;\n    }\n\n    set data(data: T[]) {\n        const tableData = [...data];\n        this.originalData$.next(tableData);\n        this.data$.next(tableData);\n\n        // Reset filters and sort without trigger data reload via pagination\n        this.ignoreNextParamChange = true;\n        this.reset();\n    }\n\n    public init(config: DatatableConfig<T> = {}) {\n        this.config = config;\n        this.staticParams$.next({...this.staticParams$.value, ...config.staticParams});\n        if (config.uri) {\n            this.connectToPaginator();\n        } else if (config.initialData) {\n            this.data = config.initialData as T[];\n        }\n\n        this.mainSub = combineLatest([this.sort$, this.filters$, this.staticParams$])\n            .pipe(debounceTime(0), map(params => Object.assign({}, ...params))).subscribe((params: PaginationParams) => {\n                if (this.ignoreNextParamChange) {\n                    return this.ignoreNextParamChange = false;\n                }\n                params = removeNullFromObject(params);\n                Object.entries(params).forEach(([key, value]) => {\n                    if (typeof value === 'object' && value.id) {\n                        params[`${key}Id`] = value.id;\n                        delete params[key];\n                    }\n                });\n                if (this.config.uri) {\n                    this.paginator.paginate(params, this.config.uri, this.config.initialData as PaginationResponse<T>);\n                } else if (Object.keys(params).length && this.data.length) {\n                    this.applyLocalTransforms(params);\n                }\n            });\n\n        return this;\n    }\n\n    private connectToPaginator() {\n        this.paginatorSub = this.paginator.response$.pipe(pairwise()).subscribe(([prev, current]) => {\n            // append data instead of overriding with next page data (infinite scroll).\n            // if page did not change, we can assume that it was filter or sort\n            // change and we should use only new data, even on infinite scroll\n            const data = this.config.infiniteScroll && prev?.pagination?.current_page !== current.pagination.current_page ?\n                [...this.data$.value, ...current.pagination.data] :\n                current.pagination.data;\n            this.data$.next(data);\n        });\n    }\n\n    private applyLocalTransforms(params: PaginationParams) {\n        let data = [...this.originalData$.value];\n        if (params.query) {\n            data = filterDatatableData<T>(data, params.query);\n        }\n        if (params.orderBy && params.orderDir) {\n            data = sortDatatableData<T>(data, params.orderBy, params.orderDir);\n        }\n        this.data$.next(data);\n    }\n\n    public addFilter(key: keyof DatatableFilters, value: DatatableFilterValue) {\n        this.filters$.next({\n            ...this.filters$.value,\n            [key]: value,\n        });\n    }\n\n    public removeFilter(key: keyof DatatableFilters) {\n        const filters = {...this.filters$.value};\n        delete filters[key];\n        this.filters$.next(filters);\n    }\n\n    public reset(staticParams: DatatableStaticParams = null) {\n        this.filters$.next({});\n        this.sort$.next({});\n        this.selectedRows$.next([]);\n        if (staticParams) {\n            this.staticParams$.next(staticParams);\n        }\n    }\n\n    public openCrupdateResourceModal(cmp: ComponentType<any>, data?: object, config?: MatDialogConfig) {\n        return this.modal.open(cmp, data, config).beforeClosed()\n            .pipe(\n                filter(modifiedResource => !!modifiedResource),\n                tap(() => this.reset())\n            );\n    }\n\n    public confirmResourceDeletion(resource: string) {\n        const data = {...DELETE_RESOURCE_MESSAGE, replacements: {resource}};\n        return this.modal.open(ConfirmModalComponent, data).afterClosed()\n            .pipe(filter(confirmed => confirmed));\n    }\n\n    public getCurrentParams() {\n        return {\n            ...this.sort$.value,\n            ...this.filters$.value,\n            ...this.staticParams$.value,\n            ...this.paginator.params,\n        };\n    }\n\n    public destroy() {\n        this.paginatorSub?.unsubscribe();\n        this.mainSub?.unsubscribe();\n    }\n}\n","import {Model} from '../../core/types/models/model';\r\n\r\nexport function filterDatatableData<T extends Model>(data: T[], filter: string): T[] {\r\n    return data.filter(obj => filterPredicate(obj, filter));\r\n}\r\n/**\r\n * Checks if a data object matches the data source's filter string. By default, each data object\r\n * is converted to a string of its properties and returns true if the filter has\r\n * at least one occurrence in that string. By default, the filter string has its whitespace\r\n * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\r\n * filter matching.\r\n * @param data Data object used to check against the filter.\r\n * @param filter Filter string that has been set on the data source.\r\n * @returns Whether the filter matches against the data\r\n */\r\nfunction filterPredicate(data: object, filter: string): boolean {\r\n    // Transform the data into a lowercase string of all property values.\r\n    const dataStr = objectToStr(data);\r\n\r\n    // Transform the filter by converting it to lowercase and removing whitespace.\r\n    const transformedFilter = filter.trim().toLowerCase();\r\n\r\n    return dataStr.indexOf(transformedFilter) !== -1;\r\n}\r\n\r\nexport function objectToStr(obj: object) {\r\n    return Object.keys(obj).reduce((currentTerm: string, key: string) => {\r\n        // Use an obscure Unicode character to delimit the words in the concatenated string.\r\n        // This avoids matches where the values of two columns combined will match the user's query\r\n        // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\r\n        // that has a very low chance of being typed in by somebody in a text field. This one in\r\n        // particular is \"White up-pointing triangle with dot\" from\r\n        // https://en.wikipedia.org/wiki/List_of_Unicode_characters\r\n        const term = (obj[key] && typeof obj[key] === 'object') ?\r\n            objectToStr(obj[key]) :\r\n            obj[key];\r\n        return currentTerm + term + '◬';\r\n    }, '').toLowerCase();\r\n}\r\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","var baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","var root = require('./_root');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;\n","import {ChangeDetectionStrategy, Component, ElementRef, Inject, TemplateRef} from '@angular/core';\nimport {OVERLAY_PANEL_DATA} from '../../core/ui/overlay-panel/overlay-panel-data';\nimport {OverlayPanelRef} from '../../core/ui/overlay-panel/overlay-panel-ref';\nimport {matDialogAnimations} from '@angular/material/dialog';\n\n@Component({\n    selector: 'datatable-filters-panel',\n    templateUrl: './datatable-filters-panel.component.html',\n    styleUrls: ['./datatable-filters-panel.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[@dialogContainer]': `'enter'`\n    },\n    animations: [\n        matDialogAnimations.dialogContainer,\n    ]\n})\nexport class DatatableFiltersPanelComponent {\n\n    constructor(\n        @Inject(OVERLAY_PANEL_DATA) public data: {filters: TemplateRef<ElementRef>},\n        private overlayPanelRef: OverlayPanelRef,\n    ) {}\n\n    public close() {\n        this.overlayPanelRef.close();\n    }\n}\n","<header>\n    <mat-icon svgIcon=\"filter-list\"></mat-icon>\n    <span trans>Filters</span>\n</header>\n\n<form class=\"body\" (ngSubmit)=\"close()\">\n    <ng-container *ngTemplateOutlet=\"data.filters\"></ng-container>\n</form>\n\n<footer>\n    <button (click)=\"close()\" type=\"button\" mat-button color=\"accent\" trans>Close</button>\n</footer>\n","import { UploadedFile } from '../../uploaded-file';\r\nimport { UploadValidation } from './upload-validation';\r\nimport { Translations } from '../../../core/translations/translations.service';\r\n\r\nexport class AllowedExtensionsValidation extends UploadValidation {\r\n    constructor(\r\n        protected params: {extensions: string[]},\r\n        protected i18n: Translations\r\n    ) {\r\n        super();\r\n\r\n        this.errorMessage = this.i18n.t(\r\n            'Only these file types are allowed: :extensions',\r\n            {extensions: this.params.extensions.join(', ')}\r\n        );\r\n    }\r\n\r\n    public fails(file: UploadedFile) {\r\n        return ! this.params.extensions.some(extension => {\r\n            return extension.toLowerCase() === file.extension.toLowerCase();\r\n        });\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { prettyBytes } from '../core/utils/pretty-bytes';\r\n\r\n@Pipe({\r\n    name: 'formattedFileSize',\r\n    pure: true,\r\n})\r\nexport class FormattedFileSizePipe implements PipeTransform {\r\n    transform(bytes: number = 0, precision?: number|string): string {\r\n        if (isNaN(parseFloat(String(bytes))) || ! isFinite(bytes)) return '-';\r\n        return prettyBytes(bytes, precision);\r\n    }\r\n}\r\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n","var ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport interface WorkspaceConfig {\r\n    description: string;\r\n}\r\n\r\nexport const WORKSPACE_CONFIG = new InjectionToken<WorkspaceConfig>('WORKSPACE_CONFIG');\r\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","import { SPACE, BACKSPACE, DELETE, TAB, hasModifierKey, ENTER } from '@angular/cdk/keycodes';\nimport { InjectionToken, Directive, EventEmitter, ElementRef, NgZone, Optional, Inject, ChangeDetectorRef, Attribute, ContentChild, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, Self, ContentChildren, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, RippleRenderer, MAT_RIPPLE_GLOBAL_OPTIONS, mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, merge } from 'rxjs';\nimport { take, takeUntil, startWith } from 'rxjs/operators';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material/form-field';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Event object emitted by MatChip when selected or deselected. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/forms';\nimport * as ɵngcc4 from '@angular/material/core';\n\nconst _c0 = [\"*\"];\nclass MatChipSelectionChange {\n    constructor(\n    /** Reference to the chip that emitted the event. */\n    source, \n    /** Whether the chip that emitted the event is selected. */\n    selected, \n    /** Whether the selection change was a result of a user interaction. */\n    isUserInput = false) {\n        this.source = source;\n        this.selected = selected;\n        this.isUserInput = isUserInput;\n    }\n}\n/**\n * Injection token that can be used to reference instances of `MatChipRemove`. It serves as\n * alternative token to the actual `MatChipRemove` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_REMOVE = new InjectionToken('MatChipRemove');\n/**\n * Injection token that can be used to reference instances of `MatChipAvatar`. It serves as\n * alternative token to the actual `MatChipAvatar` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_AVATAR = new InjectionToken('MatChipAvatar');\n/**\n * Injection token that can be used to reference instances of `MatChipTrailingIcon`. It serves as\n * alternative token to the actual `MatChipTrailingIcon` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_TRAILING_ICON = new InjectionToken('MatChipTrailingIcon');\n// Boilerplate for applying mixins to MatChip.\n/** @docs-private */\nclass MatChipBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatChipMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(MatChipBase), 'primary'), -1);\n/**\n * Dummy directive to add CSS class to chip avatar.\n * @docs-private\n */\nclass MatChipAvatar {\n}\nMatChipAvatar.ɵfac = function MatChipAvatar_Factory(t) { return new (t || MatChipAvatar)(); };\nMatChipAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipAvatar, selectors: [[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]], hostAttrs: [1, \"mat-chip-avatar\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar }])] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipAvatar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-chip-avatar, [matChipAvatar]',\n                host: { 'class': 'mat-chip-avatar' },\n                providers: [{ provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar }]\n            }]\n    }], null, null); })();\n/**\n * Dummy directive to add CSS class to chip trailing icon.\n * @docs-private\n */\nclass MatChipTrailingIcon {\n}\nMatChipTrailingIcon.ɵfac = function MatChipTrailingIcon_Factory(t) { return new (t || MatChipTrailingIcon)(); };\nMatChipTrailingIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipTrailingIcon, selectors: [[\"mat-chip-trailing-icon\"], [\"\", \"matChipTrailingIcon\", \"\"]], hostAttrs: [1, \"mat-chip-trailing-icon\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon }])] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipTrailingIcon, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n                host: { 'class': 'mat-chip-trailing-icon' },\n                providers: [{ provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon }]\n            }]\n    }], null, null); })();\n/**\n * Material design styled Chip component. Used inside the MatChipList component.\n */\nclass MatChip extends _MatChipMixinBase {\n    constructor(_elementRef, _ngZone, platform, globalRippleOptions, \n    // @breaking-change 8.0.0 `animationMode` parameter to become required.\n    animationMode, \n    // @breaking-change 9.0.0 `_changeDetectorRef` parameter to become required.\n    _changeDetectorRef, tabIndex, \n    // @breaking-change 11.0.0 `_document` parameter to become required.\n    _document) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Whether the chip has focus. */\n        this._hasFocus = false;\n        /** Whether the chip list is selectable */\n        this.chipListSelectable = true;\n        /** Whether the chip list is in multi-selection mode. */\n        this._chipListMultiple = false;\n        /** Whether the chip list as a whole is disabled. */\n        this._chipListDisabled = false;\n        this._selected = false;\n        this._selectable = true;\n        this._disabled = false;\n        this._removable = true;\n        /** Emits when the chip is focused. */\n        this._onFocus = new Subject();\n        /** Emits when the chip is blured. */\n        this._onBlur = new Subject();\n        /** Emitted when the chip is selected or deselected. */\n        this.selectionChange = new EventEmitter();\n        /** Emitted when the chip is destroyed. */\n        this.destroyed = new EventEmitter();\n        /** Emitted when a chip is to be removed. */\n        this.removed = new EventEmitter();\n        this._addHostClassName();\n        // Dynamically create the ripple target, append it within the chip, and use it as the\n        // chip's ripple target. Adding the class '.mat-chip-ripple' ensures that it will have\n        // the proper styles.\n        this._chipRippleTarget = (_document || document).createElement('div');\n        this._chipRippleTarget.classList.add('mat-chip-ripple');\n        this._elementRef.nativeElement.appendChild(this._chipRippleTarget);\n        this._chipRipple = new RippleRenderer(this, _ngZone, this._chipRippleTarget, platform);\n        this._chipRipple.setupTriggerEvents(_elementRef);\n        this.rippleConfig = globalRippleOptions || {};\n        this._animationsDisabled = animationMode === 'NoopAnimations';\n        this.tabIndex = tabIndex != null ? (parseInt(tabIndex) || -1) : -1;\n    }\n    /**\n     * Whether ripples are disabled on interaction\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || !!this.rippleConfig.disabled;\n    }\n    /** Whether the chip is selected. */\n    get selected() { return this._selected; }\n    set selected(value) {\n        const coercedValue = coerceBooleanProperty(value);\n        if (coercedValue !== this._selected) {\n            this._selected = coercedValue;\n            this._dispatchSelectionChange();\n        }\n    }\n    /** The value of the chip. Defaults to the content inside `<mat-chip>` tags. */\n    get value() {\n        return this._value !== undefined\n            ? this._value\n            : this._elementRef.nativeElement.textContent;\n    }\n    set value(value) { this._value = value; }\n    /**\n     * Whether or not the chip is selectable. When a chip is not selectable,\n     * changes to its selected state are always ignored. By default a chip is\n     * selectable, and it becomes non-selectable if its parent chip list is\n     * not selectable.\n     */\n    get selectable() { return this._selectable && this.chipListSelectable; }\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n    }\n    /** Whether the chip is disabled. */\n    get disabled() { return this._chipListDisabled || this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * Determines whether or not the chip displays the remove styling and emits (removed) events.\n     */\n    get removable() { return this._removable; }\n    set removable(value) {\n        this._removable = coerceBooleanProperty(value);\n    }\n    /** The ARIA selected applied to the chip. */\n    get ariaSelected() {\n        // Remove the `aria-selected` when the chip is deselected in single-selection mode, because\n        // it adds noise to NVDA users where \"not selected\" will be read out for each chip.\n        return this.selectable && (this._chipListMultiple || this.selected) ?\n            this.selected.toString() : null;\n    }\n    _addHostClassName() {\n        const basicChipAttrName = 'mat-basic-chip';\n        const element = this._elementRef.nativeElement;\n        if (element.hasAttribute(basicChipAttrName) ||\n            element.tagName.toLowerCase() === basicChipAttrName) {\n            element.classList.add(basicChipAttrName);\n            return;\n        }\n        else {\n            element.classList.add('mat-standard-chip');\n        }\n    }\n    ngOnDestroy() {\n        this.destroyed.emit({ chip: this });\n        this._chipRipple._removeTriggerEvents();\n    }\n    /** Selects the chip. */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._dispatchSelectionChange();\n            this._markForCheck();\n        }\n    }\n    /** Deselects the chip. */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._dispatchSelectionChange();\n            this._markForCheck();\n        }\n    }\n    /** Select this chip and emit selected event */\n    selectViaInteraction() {\n        if (!this._selected) {\n            this._selected = true;\n            this._dispatchSelectionChange(true);\n            this._markForCheck();\n        }\n    }\n    /** Toggles the current selected state of this chip. */\n    toggleSelected(isUserInput = false) {\n        this._selected = !this.selected;\n        this._dispatchSelectionChange(isUserInput);\n        this._markForCheck();\n        return this.selected;\n    }\n    /** Allows for programmatic focusing of the chip. */\n    focus() {\n        if (!this._hasFocus) {\n            this._elementRef.nativeElement.focus();\n            this._onFocus.next({ chip: this });\n        }\n        this._hasFocus = true;\n    }\n    /**\n     * Allows for programmatic removal of the chip. Called by the MatChipList when the DELETE or\n     * BACKSPACE keys are pressed.\n     *\n     * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n     */\n    remove() {\n        if (this.removable) {\n            this.removed.emit({ chip: this });\n        }\n    }\n    /** Handles click events on the chip. */\n    _handleClick(event) {\n        if (this.disabled) {\n            event.preventDefault();\n        }\n        else {\n            event.stopPropagation();\n        }\n    }\n    /** Handle custom key presses. */\n    _handleKeydown(event) {\n        if (this.disabled) {\n            return;\n        }\n        switch (event.keyCode) {\n            case DELETE:\n            case BACKSPACE:\n                // If we are removable, remove the focused chip\n                this.remove();\n                // Always prevent so page navigation does not occur\n                event.preventDefault();\n                break;\n            case SPACE:\n                // If we are selectable, toggle the focused chip\n                if (this.selectable) {\n                    this.toggleSelected(true);\n                }\n                // Always prevent space from scrolling the page since the list has focus\n                event.preventDefault();\n                break;\n        }\n    }\n    _blur() {\n        // When animations are enabled, Angular may end up removing the chip from the DOM a little\n        // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n        // that moves focus not the next item. To work around the issue, we defer marking the chip\n        // as not focused until the next time the zone stabilizes.\n        this._ngZone.onStable\n            .pipe(take(1))\n            .subscribe(() => {\n            this._ngZone.run(() => {\n                this._hasFocus = false;\n                this._onBlur.next({ chip: this });\n            });\n        });\n    }\n    _dispatchSelectionChange(isUserInput = false) {\n        this.selectionChange.emit({\n            source: this,\n            isUserInput,\n            selected: this._selected\n        });\n    }\n    _markForCheck() {\n        // @breaking-change 9.0.0 Remove this method once the _changeDetectorRef is a required param.\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n}\nMatChip.ɵfac = function MatChip_Factory(t) { return new (t || MatChip)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nMatChip.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChip, selectors: [[\"mat-basic-chip\"], [\"\", \"mat-basic-chip\", \"\"], [\"mat-chip\"], [\"\", \"mat-chip\", \"\"]], contentQueries: function MatChip_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_CHIP_AVATAR, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_CHIP_TRAILING_ICON, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_CHIP_REMOVE, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trailingIcon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.removeIcon = _t.first);\n    } }, hostAttrs: [\"role\", \"option\", 1, \"mat-chip\", \"mat-focus-indicator\"], hostVars: 14, hostBindings: function MatChip_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatChip_click_HostBindingHandler($event) { return ctx._handleClick($event); })(\"keydown\", function MatChip_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatChip_focus_HostBindingHandler() { return ctx.focus(); })(\"blur\", function MatChip_blur_HostBindingHandler() { return ctx._blur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : ctx.tabIndex)(\"disabled\", ctx.disabled || null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-selected\", ctx.ariaSelected);\n        ɵngcc0.ɵɵclassProp(\"mat-chip-selected\", ctx.selected)(\"mat-chip-with-avatar\", ctx.avatar)(\"mat-chip-with-trailing-icon\", ctx.trailingIcon || ctx.removeIcon)(\"mat-chip-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationsDisabled);\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", selected: \"selected\", value: \"value\", selectable: \"selectable\", disabled: \"disabled\", removable: \"removable\" }, outputs: { selectionChange: \"selectionChange\", destroyed: \"destroyed\", removed: \"removed\" }, exportAs: [\"matChip\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatChip.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nMatChip.propDecorators = {\n    avatar: [{ type: ContentChild, args: [MAT_CHIP_AVATAR,] }],\n    trailingIcon: [{ type: ContentChild, args: [MAT_CHIP_TRAILING_ICON,] }],\n    removeIcon: [{ type: ContentChild, args: [MAT_CHIP_REMOVE,] }],\n    selected: [{ type: Input }],\n    value: [{ type: Input }],\n    selectable: [{ type: Input }],\n    disabled: [{ type: Input }],\n    removable: [{ type: Input }],\n    selectionChange: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    removed: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChip, [{\n        type: Directive,\n        args: [{\n                selector: `mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]`,\n                inputs: ['color', 'disableRipple', 'tabIndex'],\n                exportAs: 'matChip',\n                host: {\n                    'class': 'mat-chip mat-focus-indicator',\n                    '[attr.tabindex]': 'disabled ? null : tabIndex',\n                    'role': 'option',\n                    '[class.mat-chip-selected]': 'selected',\n                    '[class.mat-chip-with-avatar]': 'avatar',\n                    '[class.mat-chip-with-trailing-icon]': 'trailingIcon || removeIcon',\n                    '[class.mat-chip-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationsDisabled',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-selected]': 'ariaSelected',\n                    '(click)': '_handleClick($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': 'focus()',\n                    '(blur)': '_blur()'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { selectionChange: [{\n            type: Output\n        }], destroyed: [{\n            type: Output\n        }], removed: [{\n            type: Output\n        }], selected: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selectable: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], removable: [{\n            type: Input\n        }], avatar: [{\n            type: ContentChild,\n            args: [MAT_CHIP_AVATAR]\n        }], trailingIcon: [{\n            type: ContentChild,\n            args: [MAT_CHIP_TRAILING_ICON]\n        }], removeIcon: [{\n            type: ContentChild,\n            args: [MAT_CHIP_REMOVE]\n        }] }); })();\n/**\n * Applies proper (click) support and adds styling for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n *     `<mat-chip>\n *       <mat-icon matChipRemove>cancel</mat-icon>\n *     </mat-chip>`\n *\n * You *may* use a custom icon, but you may need to override the `mat-chip-remove` positioning\n * styles to properly center the icon within the chip.\n */\nclass MatChipRemove {\n    constructor(_parentChip, \n    // @breaking-change 11.0.0 `elementRef` parameter to be made required.\n    elementRef) {\n        this._parentChip = _parentChip;\n        // @breaking-change 11.0.0 Remove null check for `elementRef`.\n        if (elementRef && elementRef.nativeElement.nodeName === 'BUTTON') {\n            elementRef.nativeElement.setAttribute('type', 'button');\n        }\n    }\n    /** Calls the parent chip's public `remove()` method if applicable. */\n    _handleClick(event) {\n        const parentChip = this._parentChip;\n        if (parentChip.removable && !parentChip.disabled) {\n            parentChip.remove();\n        }\n        // We need to stop event propagation because otherwise the event will bubble up to the\n        // form field and cause the `onContainerClick` method to be invoked. This method would then\n        // reset the focused chip that has been focused after chip removal. Usually the parent\n        // the parent click listener of the `MatChip` would prevent propagation, but it can happen\n        // that the chip is being removed before the event bubbles up.\n        event.stopPropagation();\n    }\n}\nMatChipRemove.ɵfac = function MatChipRemove_Factory(t) { return new (t || MatChipRemove)(ɵngcc0.ɵɵdirectiveInject(MatChip), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatChipRemove.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipRemove, selectors: [[\"\", \"matChipRemove\", \"\"]], hostAttrs: [1, \"mat-chip-remove\", \"mat-chip-trailing-icon\"], hostBindings: function MatChipRemove_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatChipRemove_click_HostBindingHandler($event) { return ctx._handleClick($event); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove }])] });\nMatChipRemove.ctorParameters = () => [\n    { type: MatChip },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipRemove, [{\n        type: Directive,\n        args: [{\n                selector: '[matChipRemove]',\n                host: {\n                    'class': 'mat-chip-remove mat-chip-trailing-icon',\n                    '(click)': '_handleClick($event)'\n                },\n                providers: [{ provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove }]\n            }]\n    }], function () { return [{ type: MatChip }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for the chips module. */\nconst MAT_CHIPS_DEFAULT_OPTIONS = new InjectionToken('mat-chips-default-options');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatChipList.\n/** @docs-private */\nclass MatChipListBase {\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, \n    /** @docs-private */\n    ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nconst _MatChipListMixinBase = mixinErrorState(MatChipListBase);\n// Increasing integer for generating unique ids for chip-list components.\nlet nextUniqueId = 0;\n/** Change event object that is emitted when the chip list value has changed. */\nclass MatChipListChange {\n    constructor(\n    /** Chip list that emitted the event. */\n    source, \n    /** Value of the chip list when the event was emitted. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * A material design chips component (named ChipList for its similarity to the List component).\n */\nclass MatChipList extends _MatChipListMixinBase {\n    constructor(_elementRef, _changeDetectorRef, _dir, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, \n    /** @docs-private */\n    ngControl) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this.ngControl = ngControl;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.controlType = 'mat-chip-list';\n        /**\n         * When a chip is destroyed, we store the index of the destroyed chip until the chips\n         * query list notifies about the update. This is necessary because we cannot determine an\n         * appropriate chip that should receive focus until the array of chips updated completely.\n         */\n        this._lastDestroyedChipIndex = null;\n        /** Subject that emits when the component has been destroyed. */\n        this._destroyed = new Subject();\n        /** Uid of the chip list */\n        this._uid = `mat-chip-list-${nextUniqueId++}`;\n        /** Tab index for the chip list. */\n        this._tabIndex = 0;\n        /**\n         * User defined tab index.\n         * When it is not null, use user defined tab index. Otherwise use _tabIndex\n         */\n        this._userTabIndex = null;\n        /** Function when touched */\n        this._onTouched = () => { };\n        /** Function when changed */\n        this._onChange = () => { };\n        this._multiple = false;\n        this._compareWith = (o1, o2) => o1 === o2;\n        this._required = false;\n        this._disabled = false;\n        /** Orientation of the chip list. */\n        this.ariaOrientation = 'horizontal';\n        this._selectable = true;\n        /** Event emitted when the selected chip list value has been changed by the user. */\n        this.change = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the chip-list changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            this.ngControl.valueAccessor = this;\n        }\n    }\n    /** The array of selected chips inside chip list. */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /** The ARIA role applied to the chip list. */\n    get role() { return this.empty ? null : 'listbox'; }\n    /** Whether the user should be allowed to select multiple chips. */\n    get multiple() { return this._multiple; }\n    set multiple(value) {\n        this._multiple = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * A function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    get compareWith() { return this._compareWith; }\n    set compareWith(fn) {\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() { return this._value; }\n    set value(value) {\n        this.writeValue(value);\n        this._value = value;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() {\n        return this._chipInput ? this._chipInput.id : this._uid;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() { return this._required; }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get placeholder() {\n        return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n    }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /** Whether any chips or the matChipInput inside of this chip-list has focus. */\n    get focused() {\n        return (this._chipInput && this._chipInput.focused) || this._hasFocusedChip();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return (!this._chipInput || this._chipInput.empty) && (!this.chips || this.chips.length === 0);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() { return !this.empty || this.focused; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() { return this.ngControl ? !!this.ngControl.disabled : this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * Whether or not this chip list is selectable. When a chip list is not selectable,\n     * the selected states for all the chips inside the chip list are always ignored.\n     */\n    get selectable() { return this._selectable; }\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n        if (this.chips) {\n            this.chips.forEach(chip => chip.chipListSelectable = this._selectable);\n        }\n    }\n    set tabIndex(value) {\n        this._userTabIndex = value;\n        this._tabIndex = value;\n    }\n    /** Combined stream of all of the child chips' selection change events. */\n    get chipSelectionChanges() {\n        return merge(...this.chips.map(chip => chip.selectionChange));\n    }\n    /** Combined stream of all of the child chips' focus change events. */\n    get chipFocusChanges() {\n        return merge(...this.chips.map(chip => chip._onFocus));\n    }\n    /** Combined stream of all of the child chips' blur change events. */\n    get chipBlurChanges() {\n        return merge(...this.chips.map(chip => chip._onBlur));\n    }\n    /** Combined stream of all of the child chips' remove change events. */\n    get chipRemoveChanges() {\n        return merge(...this.chips.map(chip => chip.destroyed));\n    }\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager(this.chips)\n            .withWrap()\n            .withVerticalOrientation()\n            .withHomeAndEnd()\n            .withHorizontalOrientation(this._dir ? this._dir.value : 'ltr');\n        if (this._dir) {\n            this._dir.change\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(dir => this._keyManager.withHorizontalOrientation(dir));\n        }\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._allowFocusEscape();\n        });\n        // When the list changes, re-subscribe\n        this.chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            if (this.disabled) {\n                // Since this happens after the content has been\n                // checked, we need to defer it to the next tick.\n                Promise.resolve().then(() => {\n                    this._syncChipsState();\n                });\n            }\n            this._resetChips();\n            // Reset chips selected/deselected status\n            this._initializeSelection();\n            // Check to see if we need to update our tab index\n            this._updateTabIndex();\n            // Check to see if we have a destroyed chip and need to refocus\n            this._updateFocusForDestroyedChips();\n            this.stateChanges.next();\n        });\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n        this.stateChanges.next();\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n            if (this.ngControl.disabled !== this._disabled) {\n                this.disabled = !!this.ngControl.disabled;\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.stateChanges.complete();\n        this._dropSubscriptions();\n    }\n    /** Associates an HTML input element with this chip list. */\n    registerInput(inputElement) {\n        this._chipInput = inputElement;\n        // We use this attribute to match the chip list to its input in test harnesses.\n        // Set the attribute directly here to avoid \"changed after checked\" errors.\n        this._elementRef.nativeElement.setAttribute('data-mat-chip-input', inputElement.id);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) { this._ariaDescribedby = ids.join(' '); }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        if (this.chips) {\n            this._setSelectionByValue(value, false);\n        }\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick(event) {\n        if (!this._originatesFromChip(event)) {\n            this.focus();\n        }\n    }\n    /**\n     * Focuses the first non-disabled chip in this chip list, or the associated input when there\n     * are no eligible chips.\n     */\n    focus(options) {\n        if (this.disabled) {\n            return;\n        }\n        // TODO: ARIA says this should focus the first `selected` chip if any are selected.\n        // Focus on first element if there's no chipInput inside chip-list\n        if (this._chipInput && this._chipInput.focused) {\n            // do nothing\n        }\n        else if (this.chips.length > 0) {\n            this._keyManager.setFirstItemActive();\n            this.stateChanges.next();\n        }\n        else {\n            this._focusInput(options);\n            this.stateChanges.next();\n        }\n    }\n    /** Attempt to focus an input if we have one. */\n    _focusInput(options) {\n        if (this._chipInput) {\n            this._chipInput.focus(options);\n        }\n    }\n    /**\n     * Pass events to the keyboard manager. Available here for tests.\n     */\n    _keydown(event) {\n        const target = event.target;\n        // If they are on an empty input and hit backspace, focus the last chip\n        if (event.keyCode === BACKSPACE && this._isInputEmpty(target)) {\n            this._keyManager.setLastItemActive();\n            event.preventDefault();\n        }\n        else if (target && target.classList.contains('mat-chip')) {\n            this._keyManager.onKeydown(event);\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Check the tab index as you should not be allowed to focus an empty list.\n     */\n    _updateTabIndex() {\n        // If we have 0 chips, we should not allow keyboard focus\n        this._tabIndex = this._userTabIndex || (this.chips.length === 0 ? -1 : 0);\n    }\n    /**\n     * If the amount of chips changed, we need to update the\n     * key manager state and focus the next closest chip.\n     */\n    _updateFocusForDestroyedChips() {\n        // Move focus to the closest chip. If no other chips remain, focus the chip-list itself.\n        if (this._lastDestroyedChipIndex != null) {\n            if (this.chips.length) {\n                const newChipIndex = Math.min(this._lastDestroyedChipIndex, this.chips.length - 1);\n                this._keyManager.setActiveItem(newChipIndex);\n            }\n            else {\n                this.focus();\n            }\n        }\n        this._lastDestroyedChipIndex = null;\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     *\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of chips.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.chips.length;\n    }\n    _isInputEmpty(element) {\n        if (element && element.nodeName.toLowerCase() === 'input') {\n            let input = element;\n            return !input.value;\n        }\n        return false;\n    }\n    _setSelectionByValue(value, isUserInput = true) {\n        this._clearSelection();\n        this.chips.forEach(chip => chip.deselect());\n        if (Array.isArray(value)) {\n            value.forEach(currentValue => this._selectValue(currentValue, isUserInput));\n            this._sortValues();\n        }\n        else {\n            const correspondingChip = this._selectValue(value, isUserInput);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what chip the user interacted with last.\n            if (correspondingChip) {\n                if (isUserInput) {\n                    this._keyManager.setActiveItem(correspondingChip);\n                }\n            }\n        }\n    }\n    /**\n     * Finds and selects the chip based on its value.\n     * @returns Chip that has the corresponding value.\n     */\n    _selectValue(value, isUserInput = true) {\n        const correspondingChip = this.chips.find(chip => {\n            return chip.value != null && this._compareWith(chip.value, value);\n        });\n        if (correspondingChip) {\n            isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n            this._selectionModel.select(correspondingChip);\n        }\n        return correspondingChip;\n    }\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            if (this.ngControl || this._value) {\n                this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value, false);\n                this.stateChanges.next();\n            }\n        });\n    }\n    /**\n     * Deselects every chip in the list.\n     * @param skip Chip that should not be deselected.\n     */\n    _clearSelection(skip) {\n        this._selectionModel.clear();\n        this.chips.forEach(chip => {\n            if (chip !== skip) {\n                chip.deselect();\n            }\n        });\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the model values, ensuring that they keep the same\n     * order that they have in the panel.\n     */\n    _sortValues() {\n        if (this._multiple) {\n            this._selectionModel.clear();\n            this.chips.forEach(chip => {\n                if (chip.selected) {\n                    this._selectionModel.select(chip);\n                }\n            });\n            this.stateChanges.next();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges(fallbackValue) {\n        let valueToEmit = null;\n        if (Array.isArray(this.selected)) {\n            valueToEmit = this.selected.map(chip => chip.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.change.emit(new MatChipListChange(this, valueToEmit));\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** When blurred, mark the field as touched when focus moved outside the chip list. */\n    _blur() {\n        if (!this._hasFocusedChip()) {\n            this._keyManager.setActiveItem(-1);\n        }\n        if (!this.disabled) {\n            if (this._chipInput) {\n                // If there's a chip input, we should check whether the focus moved to chip input.\n                // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n                // to chip input, do nothing.\n                // Timeout is needed to wait for the focus() event trigger on chip input.\n                setTimeout(() => {\n                    if (!this.focused) {\n                        this._markAsTouched();\n                    }\n                });\n            }\n            else {\n                // If there's no chip input, then mark the field as touched.\n                this._markAsTouched();\n            }\n        }\n    }\n    /** Mark the field as touched */\n    _markAsTouched() {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Removes the `tabindex` from the chip list and resets it back afterwards, allowing the\n     * user to tab out of it. This prevents the list from capturing focus and redirecting\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\n     */\n    _allowFocusEscape() {\n        if (this._tabIndex !== -1) {\n            this._tabIndex = -1;\n            setTimeout(() => {\n                this._tabIndex = this._userTabIndex || 0;\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    _resetChips() {\n        this._dropSubscriptions();\n        this._listenToChipsFocus();\n        this._listenToChipsSelection();\n        this._listenToChipsRemoved();\n    }\n    _dropSubscriptions() {\n        if (this._chipFocusSubscription) {\n            this._chipFocusSubscription.unsubscribe();\n            this._chipFocusSubscription = null;\n        }\n        if (this._chipBlurSubscription) {\n            this._chipBlurSubscription.unsubscribe();\n            this._chipBlurSubscription = null;\n        }\n        if (this._chipSelectionSubscription) {\n            this._chipSelectionSubscription.unsubscribe();\n            this._chipSelectionSubscription = null;\n        }\n        if (this._chipRemoveSubscription) {\n            this._chipRemoveSubscription.unsubscribe();\n            this._chipRemoveSubscription = null;\n        }\n    }\n    /** Listens to user-generated selection events on each chip. */\n    _listenToChipsSelection() {\n        this._chipSelectionSubscription = this.chipSelectionChanges.subscribe(event => {\n            event.source.selected\n                ? this._selectionModel.select(event.source)\n                : this._selectionModel.deselect(event.source);\n            // For single selection chip list, make sure the deselected value is unselected.\n            if (!this.multiple) {\n                this.chips.forEach(chip => {\n                    if (!this._selectionModel.isSelected(chip) && chip.selected) {\n                        chip.deselect();\n                    }\n                });\n            }\n            if (event.isUserInput) {\n                this._propagateChanges();\n            }\n        });\n    }\n    /** Listens to user-generated selection events on each chip. */\n    _listenToChipsFocus() {\n        this._chipFocusSubscription = this.chipFocusChanges.subscribe(event => {\n            let chipIndex = this.chips.toArray().indexOf(event.chip);\n            if (this._isValidIndex(chipIndex)) {\n                this._keyManager.updateActiveItem(chipIndex);\n            }\n            this.stateChanges.next();\n        });\n        this._chipBlurSubscription = this.chipBlurChanges.subscribe(() => {\n            this._blur();\n            this.stateChanges.next();\n        });\n    }\n    _listenToChipsRemoved() {\n        this._chipRemoveSubscription = this.chipRemoveChanges.subscribe(event => {\n            const chip = event.chip;\n            const chipIndex = this.chips.toArray().indexOf(event.chip);\n            // In case the chip that will be removed is currently focused, we temporarily store\n            // the index in order to be able to determine an appropriate sibling chip that will\n            // receive focus.\n            if (this._isValidIndex(chipIndex) && chip._hasFocus) {\n                this._lastDestroyedChipIndex = chipIndex;\n            }\n        });\n    }\n    /** Checks whether an event comes from inside a chip element. */\n    _originatesFromChip(event) {\n        let currentElement = event.target;\n        while (currentElement && currentElement !== this._elementRef.nativeElement) {\n            if (currentElement.classList.contains('mat-chip')) {\n                return true;\n            }\n            currentElement = currentElement.parentElement;\n        }\n        return false;\n    }\n    /** Checks whether any of the chips is focused. */\n    _hasFocusedChip() {\n        return this.chips && this.chips.some(chip => chip._hasFocus);\n    }\n    /** Syncs the list's state with the individual chips. */\n    _syncChipsState() {\n        if (this.chips) {\n            this.chips.forEach(chip => {\n                chip._chipListDisabled = this._disabled;\n                chip._chipListMultiple = this.multiple;\n            });\n        }\n    }\n}\nMatChipList.ɵfac = function MatChipList_Factory(t) { return new (t || MatChipList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NgControl, 10)); };\nMatChipList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatChipList, selectors: [[\"mat-chip-list\"]], contentQueries: function MatChipList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChip, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chips = _t);\n    } }, hostAttrs: [1, \"mat-chip-list\"], hostVars: 15, hostBindings: function MatChipList_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatChipList_focus_HostBindingHandler() { return ctx.focus(); })(\"blur\", function MatChipList_blur_HostBindingHandler() { return ctx._blur(); })(\"keydown\", function MatChipList_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx._uid);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : ctx._tabIndex)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-required\", ctx.role ? ctx.required : null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-multiselectable\", ctx.multiple)(\"role\", ctx.role)(\"aria-orientation\", ctx.ariaOrientation);\n        ɵngcc0.ɵɵclassProp(\"mat-chip-list-disabled\", ctx.disabled)(\"mat-chip-list-invalid\", ctx.errorState)(\"mat-chip-list-required\", ctx.required);\n    } }, inputs: { ariaOrientation: [\"aria-orientation\", \"ariaOrientation\"], multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", required: \"required\", placeholder: \"placeholder\", disabled: \"disabled\", selectable: \"selectable\", tabIndex: \"tabIndex\", errorStateMatcher: \"errorStateMatcher\" }, outputs: { change: \"change\", valueChange: \"valueChange\" }, exportAs: [\"matChipList\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatChipList }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-chip-list-wrapper\"]], template: function MatChipList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\\\"\\\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatChipList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] }\n];\nMatChipList.propDecorators = {\n    errorStateMatcher: [{ type: Input }],\n    multiple: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    required: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    disabled: [{ type: Input }],\n    ariaOrientation: [{ type: Input, args: ['aria-orientation',] }],\n    selectable: [{ type: Input }],\n    tabIndex: [{ type: Input }],\n    change: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    chips: [{ type: ContentChildren, args: [MatChip, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-chip-list',\n                template: `<div class=\"mat-chip-list-wrapper\"><ng-content></ng-content></div>`,\n                exportAs: 'matChipList',\n                host: {\n                    '[attr.tabindex]': 'disabled ? null : _tabIndex',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-required]': 'role ? required : null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.role]': 'role',\n                    '[class.mat-chip-list-disabled]': 'disabled',\n                    '[class.mat-chip-list-invalid]': 'errorState',\n                    '[class.mat-chip-list-required]': 'required',\n                    '[attr.aria-orientation]': 'ariaOrientation',\n                    'class': 'mat-chip-list',\n                    '(focus)': 'focus()',\n                    '(blur)': '_blur()',\n                    '(keydown)': '_keydown($event)',\n                    '[id]': '_uid'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatChipList }],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\\\"\\\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.ErrorStateMatcher }, { type: ɵngcc3.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }]; }, { ariaOrientation: [{\n            type: Input,\n            args: ['aria-orientation']\n        }], change: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], selectable: [{\n            type: Input\n        }], tabIndex: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }], chips: [{\n            type: ContentChildren,\n            args: [MatChip, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids.\nlet nextUniqueId$1 = 0;\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of an `<mat-chip-list>`.\n */\nclass MatChipInput {\n    constructor(_elementRef, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._defaultOptions = _defaultOptions;\n        /** Whether the control is focused. */\n        this.focused = false;\n        this._addOnBlur = false;\n        /**\n         * The list of key codes that will trigger a chipEnd event.\n         *\n         * Defaults to `[ENTER]`.\n         */\n        this.separatorKeyCodes = this._defaultOptions.separatorKeyCodes;\n        /** Emitted when a chip is to be added. */\n        this.chipEnd = new EventEmitter();\n        /** The input's placeholder text. */\n        this.placeholder = '';\n        /** Unique id for the input. */\n        this.id = `mat-chip-list-input-${nextUniqueId$1++}`;\n        this._disabled = false;\n        this._inputElement = this._elementRef.nativeElement;\n    }\n    /** Register input for chip list */\n    set chipList(value) {\n        if (value) {\n            this._chipList = value;\n            this._chipList.registerInput(this);\n        }\n    }\n    /**\n     * Whether or not the chipEnd event will be emitted when the input is blurred.\n     */\n    get addOnBlur() { return this._addOnBlur; }\n    set addOnBlur(value) { this._addOnBlur = coerceBooleanProperty(value); }\n    /** Whether the input is disabled. */\n    get disabled() { return this._disabled || (this._chipList && this._chipList.disabled); }\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /** Whether the input is empty. */\n    get empty() { return !this._inputElement.value; }\n    ngOnChanges() {\n        this._chipList.stateChanges.next();\n    }\n    /** Utility method to make host definition/tests more clear. */\n    _keydown(event) {\n        // Allow the user's focus to escape when they're tabbing forward. Note that we don't\n        // want to do this when going backwards, because focus should go back to the first chip.\n        if (event && event.keyCode === TAB && !hasModifierKey(event, 'shiftKey')) {\n            this._chipList._allowFocusEscape();\n        }\n        this._emitChipEnd(event);\n    }\n    /** Checks to see if the blur should emit the (chipEnd) event. */\n    _blur() {\n        if (this.addOnBlur) {\n            this._emitChipEnd();\n        }\n        this.focused = false;\n        // Blur the chip list if it is not focused\n        if (!this._chipList.focused) {\n            this._chipList._blur();\n        }\n        this._chipList.stateChanges.next();\n    }\n    _focus() {\n        this.focused = true;\n        this._chipList.stateChanges.next();\n    }\n    /** Checks to see if the (chipEnd) event needs to be emitted. */\n    _emitChipEnd(event) {\n        if (!this._inputElement.value && !!event) {\n            this._chipList._keydown(event);\n        }\n        if (!event || this._isSeparatorKey(event)) {\n            this.chipEnd.emit({ input: this._inputElement, value: this._inputElement.value });\n            if (event) {\n                event.preventDefault();\n            }\n        }\n    }\n    _onInput() {\n        // Let chip list know whenever the value changes.\n        this._chipList.stateChanges.next();\n    }\n    /** Focuses the input. */\n    focus(options) {\n        this._inputElement.focus(options);\n    }\n    /** Checks whether a keycode is one of the configured separators. */\n    _isSeparatorKey(event) {\n        return !hasModifierKey(event) && new Set(this.separatorKeyCodes).has(event.keyCode);\n    }\n}\nMatChipInput.ɵfac = function MatChipInput_Factory(t) { return new (t || MatChipInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_CHIPS_DEFAULT_OPTIONS)); };\nMatChipInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipInput, selectors: [[\"input\", \"matChipInputFor\", \"\"]], hostAttrs: [1, \"mat-chip-input\", \"mat-input-element\"], hostVars: 5, hostBindings: function MatChipInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatChipInput_keydown_HostBindingHandler($event) { return ctx._keydown($event); })(\"blur\", function MatChipInput_blur_HostBindingHandler() { return ctx._blur(); })(\"focus\", function MatChipInput_focus_HostBindingHandler() { return ctx._focus(); })(\"input\", function MatChipInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.disabled || null)(\"placeholder\", ctx.placeholder || null)(\"aria-invalid\", ctx._chipList && ctx._chipList.ngControl ? ctx._chipList.ngControl.invalid : null)(\"aria-required\", ctx._chipList && ctx._chipList.required || null);\n    } }, inputs: { separatorKeyCodes: [\"matChipInputSeparatorKeyCodes\", \"separatorKeyCodes\"], placeholder: \"placeholder\", id: \"id\", chipList: [\"matChipInputFor\", \"chipList\"], addOnBlur: [\"matChipInputAddOnBlur\", \"addOnBlur\"], disabled: \"disabled\" }, outputs: { chipEnd: \"matChipInputTokenEnd\" }, exportAs: [\"matChipInput\", \"matChipInputFor\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nMatChipInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_CHIPS_DEFAULT_OPTIONS,] }] }\n];\nMatChipInput.propDecorators = {\n    chipList: [{ type: Input, args: ['matChipInputFor',] }],\n    addOnBlur: [{ type: Input, args: ['matChipInputAddOnBlur',] }],\n    separatorKeyCodes: [{ type: Input, args: ['matChipInputSeparatorKeyCodes',] }],\n    chipEnd: [{ type: Output, args: ['matChipInputTokenEnd',] }],\n    placeholder: [{ type: Input }],\n    id: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipInput, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matChipInputFor]',\n                exportAs: 'matChipInput, matChipInputFor',\n                host: {\n                    'class': 'mat-chip-input mat-input-element',\n                    '(keydown)': '_keydown($event)',\n                    '(blur)': '_blur()',\n                    '(focus)': '_focus()',\n                    '(input)': '_onInput()',\n                    '[id]': 'id',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.placeholder]': 'placeholder || null',\n                    '[attr.aria-invalid]': '_chipList && _chipList.ngControl ? _chipList.ngControl.invalid : null',\n                    '[attr.aria-required]': '_chipList && _chipList.required || null'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_CHIPS_DEFAULT_OPTIONS]\n            }] }]; }, { separatorKeyCodes: [{\n            type: Input,\n            args: ['matChipInputSeparatorKeyCodes']\n        }], chipEnd: [{\n            type: Output,\n            args: ['matChipInputTokenEnd']\n        }], placeholder: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], chipList: [{\n            type: Input,\n            args: ['matChipInputFor']\n        }], addOnBlur: [{\n            type: Input,\n            args: ['matChipInputAddOnBlur']\n        }], disabled: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst CHIP_DECLARATIONS = [\n    MatChipList,\n    MatChip,\n    MatChipInput,\n    MatChipRemove,\n    MatChipAvatar,\n    MatChipTrailingIcon,\n];\nconst ɵ0 = {\n    separatorKeyCodes: [ENTER]\n};\nclass MatChipsModule {\n}\nMatChipsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatChipsModule });\nMatChipsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatChipsModule_Factory(t) { return new (t || MatChipsModule)(); }, providers: [\n        ErrorStateMatcher,\n        {\n            provide: MAT_CHIPS_DEFAULT_OPTIONS,\n            useValue: ɵ0\n        }\n    ] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatChipsModule, { declarations: [MatChipList, MatChip, MatChipInput, MatChipRemove, MatChipAvatar, MatChipTrailingIcon], exports: [MatChipList, MatChip, MatChipInput, MatChipRemove, MatChipAvatar, MatChipTrailingIcon] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipsModule, [{\n        type: NgModule,\n        args: [{\n                exports: CHIP_DECLARATIONS,\n                declarations: CHIP_DECLARATIONS,\n                providers: [\n                    ErrorStateMatcher,\n                    {\n                        provide: MAT_CHIPS_DEFAULT_OPTIONS,\n                        useValue: ɵ0\n                    }\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHIPS_DEFAULT_OPTIONS, MAT_CHIP_AVATAR, MAT_CHIP_REMOVE, MAT_CHIP_TRAILING_ICON, MatChip, MatChipAvatar, MatChipInput, MatChipList, MatChipListChange, MatChipRemove, MatChipSelectionChange, MatChipTrailingIcon, MatChipsModule, ɵ0 };\n\n//# sourceMappingURL=chips.js.map","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","import { Directive, ElementRef, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { openUploadWindow } from '../utils/open-upload-window';\r\nimport { UploadInputConfig } from '../upload-input-config';\r\nimport {UploadedFile} from '@common/uploads/uploaded-file';\r\n\r\n@Directive({\r\n    selector: '[uploadButton]'\r\n})\r\nexport class UploadButtonDirective implements OnInit {\r\n    @Input('uploadButton') config: UploadInputConfig = {};\r\n    @Output() filesSelected = new EventEmitter<UploadedFile[]>();\r\n\r\n    constructor(private el: ElementRef) {}\r\n\r\n    ngOnInit() {\r\n        this.el.nativeElement.addEventListener('click', e => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            openUploadWindow(this.config).then(files => {\r\n                if (files && files.length) {\r\n                    this.filesSelected.emit(files);\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","import { ConnectedPosition } from '@angular/cdk/overlay';\r\n\r\nexport const LEFT_POSITION: ConnectedPosition[] = [\r\n    {originX: 'start', originY: 'center', overlayX: 'end', overlayY: 'center', offsetX: 50},\r\n    {originX: 'end', originY: 'center', overlayX: 'start', overlayY: 'center', offsetX: 50},\r\n];\r\n","<mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"datatable.paginator && datatable.paginator.loading$ | async\"></mat-progress-bar>\n<div class=\"left-column\">\n    <div class=\"default-left-content\" *ngIf=\"!showSelectedActions || !numberOfRowsSelected\">\n        <ng-content select=\"[leftContent]\"></ng-content>\n    </div>\n    <div class=\"selected-left-content capitalize\" *ngIf=\"showSelectedActions && numberOfRowsSelected\">\n        {{ ':count :resource selected' | trans:{count: numberOfRowsSelected, resource: pluralResourceName} }}\n    </div>\n</div>\n<div class=\"right-column\">\n    <div class=\"default-right-content\" *ngIf=\"!showSelectedActions || !numberOfRowsSelected\">\n        <ng-container *ngIf=\"filterPanelTemplate\">\n            <mat-chip-list aria-label=\"Active Filters\" class=\"filter-chip-list\">\n                <mat-chip *ngFor=\"let filter of filters$ | async | keyvalue\" [removable]=\"true\" [selectable]=\"false\" (removed)=\"datatable.removeFilter(filter.key)\">\n                    {{filter.key | trans}}: {{isModel(filter.value) ? (filter.value.name || filter.value.display_name) : filter.value}}\n                    <mat-icon matChipRemove svgIcon=\"cancel\"></mat-icon>\n                </mat-chip>\n            </mat-chip-list>\n            <button (click)=\"openFiltersPanel()\" class=\"filter-button\" [class.active]=\"filterPanelRef\" #filterButton mat-icon-button>\n                <mat-icon svgIcon=\"filter-list\"></mat-icon>\n            </button>\n        </ng-container>\n        <datatable-header-search-input placeholder=\"Search {{ pluralResourceName }}\"></datatable-header-search-input>\n    </div>\n    <div class=\"selected-right-actions\" *ngIf=\"showSelectedActions && numberOfRowsSelected\">\n        <ng-content select=\"[rightContent]\"></ng-content>\n    </div>\n</div>\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    TemplateRef,\n    ViewChild\n} from '@angular/core';\nimport {DatatableService} from '../datatable.service';\nimport {Model} from '../../core/types/models/model';\nimport {Subscription} from 'rxjs';\nimport {OverlayPanel} from '../../core/ui/overlay-panel/overlay-panel.service';\nimport {LEFT_POSITION} from '../../core/ui/overlay-panel/positions/left-position';\nimport {OverlayPanelRef} from '../../core/ui/overlay-panel/overlay-panel-ref';\nimport {DatatableFiltersPanelComponent} from '../datatable-filters-panel/datatable-filters-panel.component';\nimport {map} from 'rxjs/operators';\nimport {removeNullFromObject} from '../../core/utils/remove-null-from-object';\nimport {DatatableFilterValue} from '../types/datatable-filters';\n\n@Component({\n    selector: 'datatable-header',\n    templateUrl: './datatable-header.component.html',\n    styleUrls: ['./datatable-header.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DatatableHeaderComponent implements OnInit, OnDestroy {\n    @HostBinding('class.rows-selected') public numberOfRowsSelected: number;\n    @ContentChild('tableFilters') filterPanelTemplate: TemplateRef<ElementRef>;\n    @ViewChild('filterButton', { read: ElementRef }) filterButton: ElementRef<HTMLButtonElement>;\n    @Input() pluralResourceName: string;\n    @Input() showSelectedActions = true;\n    private subscriptions: Subscription[] = [];\n    public filterPanelRef: OverlayPanelRef<any>;\n\n    public filters$ = this.datatable.filters$\n        .pipe(map(v => {\n            const filters = removeNullFromObject(v);\n            delete filters.query;\n            return filters;\n        }));\n\n    constructor(\n        public datatable: DatatableService<Model>,\n        private cd: ChangeDetectorRef,\n        private overlayPanel: OverlayPanel,\n    ) {}\n\n    ngOnInit() {\n        // close filter panel when any filter is selected.\n        const filterSub = this.datatable.filters$.subscribe(() => {\n            this.filterPanelRef && this.filterPanelRef.close();\n        });\n        const changeSub = this.datatable.selectedRows$.subscribe(value => {\n            this.numberOfRowsSelected = value.length;\n            this.cd.markForCheck();\n        });\n        this.subscriptions = [filterSub, changeSub];\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n    }\n\n    public openFiltersPanel() {\n        if (this.filterPanelRef) {\n            this.filterPanelRef.close();\n        } else {\n            const position = LEFT_POSITION.slice();\n            position[0].offsetY = 40;\n            position[1].offsetY = 40;\n            this.filterPanelRef = this.overlayPanel.open(DatatableFiltersPanelComponent, {\n                origin: this.filterButton,\n                position,\n                mobilePosition: 'center',\n                data: {filters: this.filterPanelTemplate},\n                maxWidth: '90%',\n            });\n            this.filterButton.nativeElement.classList.add('active');\n            this.filterPanelRef.afterClosed().subscribe(() => {\n                this.filterPanelRef = null;\n                this.filterButton.nativeElement.classList.remove('active');\n            });\n        }\n    }\n\n    public isModel(value: DatatableFilterValue) {\n        return typeof value === 'object' && value.id;\n    }\n}\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","export function removeNullFromObject<T>(obj: T): T {\r\n    const copy = {...obj};\r\n    Object.keys(copy).forEach(key => (copy[key] == null || copy[key] === '') && delete copy[key]);\r\n    return copy;\r\n}\r\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {UploadButtonDirective} from './directives/upload-button.directive';\r\nimport {UploadDropzoneDirective} from './directives/upload-dropzone.directive';\r\nimport {UploadProgressBarComponent} from './upload-progress-bar/upload-progress-bar.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n\r\n        // material\r\n        MatButtonModule,\r\n        MatProgressBarModule,\r\n        MatIconModule,\r\n    ],\r\n    declarations: [\r\n        UploadDropzoneDirective,\r\n        UploadButtonDirective,\r\n        UploadProgressBarComponent,\r\n    ],\r\n    exports: [\r\n        UploadDropzoneDirective,\r\n        UploadButtonDirective,\r\n        UploadProgressBarComponent,\r\n    ],\r\n})\r\nexport class UploadsModule {\r\n}\r\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","import {\r\n    AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, HostBinding, Input, OnInit, TemplateRef, ViewChild, ViewEncapsulation\r\n} from '@angular/core';\r\nimport {ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {BehaviorSubject, Observable, of} from 'rxjs';\r\nimport {MatAutocomplete} from '@angular/material/autocomplete';\r\nimport {catchError, debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\r\nimport {Model} from '../../../types/models/model';\r\n\r\ntype ChipValue = 'string' | Model;\r\n\r\n@Component({\r\n    selector: 'chip-input',\r\n    templateUrl: './chip-input.component.html',\r\n    styleUrls: ['./chip-input.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: ChipInputComponent,\r\n        multi: true,\r\n    }]\r\n})\r\nexport class ChipInputComponent implements ControlValueAccessor, OnInit, AfterViewInit {\r\n    @Input() placeholder: string;\r\n    @Input() type = 'text';\r\n    @Input() emailsInput = false;\r\n    @Input() suggestFn: (query: string) => Observable<ChipValue[]>;\r\n    @Input() @HostBinding('class.select-mode') selectMode = false;\r\n    @ViewChild('auto') matAutocomplete: MatAutocomplete;\r\n    @ViewChild('inputEl') inputEl: ElementRef<HTMLInputElement>;\r\n    @ViewChild('selectModeTemplate') selectModeTemplate: TemplateRef<any>;\r\n\r\n    public formControl = new FormControl();\r\n\r\n    public propagateChange: (items: ChipValue[]) => void;\r\n    public items$ = new BehaviorSubject<ChipValue[]>([]);\r\n    public suggestedValues$ = new BehaviorSubject<ChipValue[]>([]);\r\n    @Input() set suggestedValues(values: ChipValue[]) {\r\n        this.suggestedValues$.next(values);\r\n    }\r\n\r\n    constructor(\r\n        public el: ElementRef<HTMLElement>,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        if (this.suggestFn) {\r\n            this.bindToSearchControl();\r\n        }\r\n        if (this.selectMode) {\r\n           // TODO: implement\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.emailsInput) {\r\n            this.parseEmailsOnPaste();\r\n        }\r\n    }\r\n\r\n    public remove(index: number) {\r\n        const items = [...this.items$.value];\r\n        items.splice(index, 1);\r\n        this.items$.next(items);\r\n        this.propagateChange(this.items$.value);\r\n    }\r\n\r\n    public addFromChipInput(value: ChipValue, propagate = true) {\r\n        if (value && !this.matAutocomplete.isOpen && !this.selectMode) {\r\n            this.add(value, propagate);\r\n        }\r\n    }\r\n\r\n    public addFromAutocomplete(value: ChipValue, propagate = true) {\r\n        this.add(value, propagate);\r\n    }\r\n\r\n    private add(value: ChipValue, propagate = true) {\r\n        value = (typeof value === 'string' ? value.trim() : value) as ChipValue;\r\n        const duplicate = this.findValueIndex(value) > -1;\r\n        if (value && !duplicate) {\r\n            this.items$.next([...this.items$.value, value]);\r\n            if (propagate) {\r\n                this.propagateChange(this.items$.value);\r\n            }\r\n        }\r\n        if (this.inputEl) {\r\n            this.inputEl.nativeElement.value = '';\r\n        }\r\n        this.formControl.setValue(null);\r\n        this.suggestedValues$.next([]);\r\n    }\r\n\r\n    private findValueIndex(value: ChipValue) {\r\n        if (typeof value === 'string') {\r\n            return this.items$.value.indexOf(value);\r\n        } else {\r\n            return this.items$.value.findIndex(v => (v as Model).id === value.id);\r\n        }\r\n    }\r\n\r\n    public writeValue(value: ChipValue[] = []) {\r\n        if (value && value.length) {\r\n            value.forEach(item => this.add(item, false));\r\n        } else if (this.items$.value.length) {\r\n            while (this.items$.value.length !== 0) {\r\n                this.remove(0);\r\n            }\r\n        }\r\n    }\r\n\r\n    public registerOnChange(fn: (items: ChipValue[]) => void) {\r\n        this.propagateChange = fn;\r\n    }\r\n\r\n    public registerOnTouched() {}\r\n\r\n    private bindToSearchControl() {\r\n        this.formControl.valueChanges.pipe(\r\n            debounceTime(150),\r\n            distinctUntilChanged(),\r\n            switchMap(query => query ? this.suggestFn(query) : of([])),\r\n            catchError(() => of([])),\r\n        ).subscribe(values => {\r\n            const filtered = values.filter(v => this.findValueIndex(v) === -1);\r\n            this.suggestedValues$.next(filtered);\r\n        });\r\n    }\r\n\r\n    public displayChipValue(value: ChipValue): string {\r\n        return typeof value === 'object' ? value.name : value;\r\n    }\r\n\r\n    private parseEmailsOnPaste() {\r\n        this.inputEl.nativeElement.addEventListener('paste', e => {\r\n            const paste = (e.clipboardData || window['clipboardData']).getData('text');\r\n            const emails = paste.match(/([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+)/gi);\r\n            if (emails) {\r\n                e.preventDefault();\r\n                const selection = window.getSelection();\r\n                if (selection.rangeCount) {\r\n                    selection.deleteFromDocument();\r\n                    emails.forEach(email => this.add(email));\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n","<mat-chip-list #chipList [selectable]=\"false\">\r\n    <mat-chip\r\n        *ngFor=\"let item of items$ | async; index as i\"\r\n        [selectable]=\"false\"\r\n        [removable]=\"!selectMode\"\r\n        (removed)=\"remove(i)\"\r\n    >\r\n        {{displayChipValue(item)}}\r\n        <mat-icon matChipRemove svgIcon=\"cancel\"></mat-icon>\r\n    </mat-chip>\r\n    <input [placeholder]=\"placeholder | trans\"\r\n           *ngIf=\"!selectMode\"\r\n           #inputEl\r\n           [type]=\"type\"\r\n           class=\"mat-chip-input mat-input-element\"\r\n           [matChipInputFor]=\"chipList\"\r\n           [matChipInputAddOnBlur]=\"true\"\r\n           [matAutocomplete]=\"auto\"\r\n           [matAutocompleteConnectedTo]=\"{elementRef: el}\"\r\n           [formControl]=\"formControl\"\r\n           (matChipInputTokenEnd)=\"addFromChipInput($event.value)\" />\r\n</mat-chip-list>\r\n\r\n<mat-autocomplete class=\"chip-input-autocomplete-panel\" #auto=\"matAutocomplete\" (optionSelected)=\"addFromAutocomplete($event.option.value)\" [autoActiveFirstOption]=\"true\">\r\n    <mat-option *ngFor=\"let value of suggestedValues$ | async\" [value]=\"value\">{{displayChipValue(value)}}</mat-option>\r\n</mat-autocomplete>\r\n\r\n<ng-template #selectModeTemplate let-suggestions=\"suggestions\">\r\n    <mat-option *ngFor=\"let value of suggestions\" [value]=\"value\">{{displayChipValue(value)}}</mat-option>\r\n</ng-template>\r\n","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit} from '@angular/core';\nimport {DatatableService} from '../datatable.service';\nimport {Subscription} from 'rxjs';\nimport {Model} from '../../core/types/models/model';\n\n@Component({\n    selector: '[table-header-checkbox]',\n    template: `\n        <mat-checkbox\n            (change)=\"$event ? toggleAllRows() : null\"\n            [checked]=\"allRowsSelected()\"\n            [indeterminate]=\"anyRowsSelected() && ! allRowsSelected()\">\n        </mat-checkbox>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {'class': 'table-checkbox'},\n})\nexport class TableHeaderCheckboxComponent implements OnInit, OnDestroy{\n    private changeRef: Subscription;\n    constructor(\n        public datatable: DatatableService<Model>,\n        private cd: ChangeDetectorRef,\n    ) {}\n\n    ngOnInit() {\n        this.changeRef = this.datatable.selectedRows$.subscribe(() => {\n            this.cd.markForCheck();\n        });\n    }\n\n    ngOnDestroy() {\n        this.changeRef.unsubscribe();\n    }\n\n    public anyRowsSelected(): boolean {\n        return !!this.datatable.selectedRows$.value.length;\n    }\n\n    public allRowsSelected() {\n        return this.datatable.selectedRows$.value.length &&\n            this.datatable.selectedRows$.value.length === this.datatable.data$.value?.length;\n    }\n\n    public toggleAllRows() {\n        if (this.allRowsSelected()) {\n            this.datatable.selectedRows$.next([]);\n        } else {\n            this.datatable.selectedRows$.next(\n                this.datatable.data$.value.map(v => v.id)\n            );\n        }\n    }\n}\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n","import {ChangeDetectionStrategy, Component, HostBinding, Input} from '@angular/core';\nimport {ThemeService} from '../../theme.service';\n\n@Component({\n    selector: 'skeleton',\n    templateUrl: './skeleton.component.html',\n    styleUrls: ['./skeleton.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        'aria-busy': 'true',\n        'aria-valuemin': '0',\n        'aria-valuemax': '100',\n        'aria-valuetext': 'Loading...',\n        'role': 'progressbar',\n    }\n})\nexport class SkeletonComponent {\n    @Input() animation: 'pulsate' | 'wave' = 'wave';\n    @Input() variant: 'avatar' | 'text' | 'rect' = 'text';\n    @HostBinding('class.dark') dark = this.theme.isDarkMode();\n\n    @HostBinding('class.pulsate') get pulsate() {\n        return this.animation === 'pulsate';\n    }\n\n    @HostBinding('class.wave') get wave() {\n        return this.animation === 'wave';\n    }\n\n    @HostBinding('class.avatar') get avatar() {\n        return this.variant === 'avatar';\n    }\n\n    @HostBinding('class.text') get text() {\n        return this.variant === 'text';\n    }\n\n    @HostBinding('class.rect') get rect() {\n        return this.variant === 'rect';\n    }\n\n    constructor(private theme: ThemeService) {}\n}\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n","var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","export function hasKey<K extends string>(key: K, val: any): val is {[P in K]: any} {\r\n    return key in val;\r\n}\r\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys'),\n    keysIn = require('./keysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n","import { UploadedFile } from '../../uploaded-file';\r\nimport { UploadValidation } from './upload-validation';\r\nimport {Translations} from '@common/core/translations/translations.service';\r\n\r\nexport class BlockedExtensionsValidation extends UploadValidation {\r\n    constructor(\r\n        protected params: {extensions: string[]},\r\n        protected i18n: Translations\r\n    ) {\r\n        super();\r\n\r\n        this.errorMessage = this.i18n.t(\r\n            'These file types are not allowed: :extensions',\r\n            {extensions: this.params.extensions.join(', ')}\r\n        );\r\n    }\r\n\r\n    public fails(file: UploadedFile) {\r\n        return this.params.extensions.some(extension => {\r\n            return extension === file.extension;\r\n        });\r\n    }\r\n}\r\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n","var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n","<ng-container *ngIf=\"user\">\n    <img [src]=\"user.avatar\" alt=\"\">\n    <div class=\"content\">\n        <div>{{user.display_name}}</div>\n        <div class=\"email secondary\">{{user.email}}</div>\n    </div>\n</ng-container>\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {User} from '@common/core/types/models/User';\n\n@Component({\n    selector: 'user-column',\n    templateUrl: './user-column.component.html',\n    styleUrls: ['./user-column.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {'class': 'column-with-image'},\n})\nexport class UserColumnComponent {\n    @Input() user: User;\n    @Input() showEmail = false;\n}\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    ViewChild\n} from '@angular/core';\nimport {DatatableService} from '../datatable.service';\nimport {Subscription} from 'rxjs';\nimport {Model} from '../../core/types/models/model';\nimport {FocusMonitor} from '@angular/cdk/a11y';\nimport {filter} from 'rxjs/operators';\nimport {ENTER, SPACE} from '@angular/cdk/keycodes';\nimport {slugifyString} from '../../core/utils/slugify-string';\n\n@Component({\n    selector: '[table-sort-header]',\n    templateUrl: './table-sort-header.component.html',\n    styleUrls: ['./table-sort-header.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        'tabindex': '0',\n        '(click)': 'handleClick()',\n        '(keydown)': 'handleKeydown($event)',\n        '(mouseenter)': 'onMouseEnter()',\n        '(mouseleave)': 'onMouseLeave()',\n    }\n})\nexport class TableSortHeaderComponent implements OnInit, AfterViewInit, OnDestroy {\n    @ViewChild('columnName', {static: true}) columnName: ElementRef<HTMLElement>;\n    @Input('table-sort-header') public orderBy: string;\n\n    @HostBinding('class.active')\n    public orderDir: 'desc'|'asc'|null = null;\n\n    @HostBinding('class.sort-disabled') get sortDisabled() {\n        return this.datable.config?.disableSort;\n    }\n\n    private sortSub: Subscription;\n    public arrowVisible = false;\n    public arrowDirection: 'down'|'up' = 'down';\n\n    constructor(\n        public datable: DatatableService<Model>,\n        private cd: ChangeDetectorRef,\n        private focusMonitor: FocusMonitor,\n        private el: ElementRef<HTMLElement>,\n    ) {}\n\n    ngOnInit() {\n        // get column name from <ng-content> if none is explicitly provided\n        if ( ! this.orderBy) {\n            this.orderBy = slugifyString(this.columnName.nativeElement.textContent, '_');\n        }\n\n        // hide arrow when sort column is changed to different column\n        this.sortSub = this.datable.sort$\n            .pipe(filter(sort => (sort.orderBy !== this.orderBy)))\n            .subscribe(() => {\n                this.orderDir = null;\n                this.onMouseLeave();\n                this.cd.markForCheck();\n            });\n    }\n\n    ngAfterViewInit() {\n        // add '.cdk-keyboard-focused' when tabbing to other sort headers\n        this.focusMonitor.monitor(this.el).subscribe();\n    }\n\n    ngOnDestroy() {\n        this.sortSub.unsubscribe();\n        this.focusMonitor.stopMonitoring(this.el);\n    }\n\n    public changeSort() {\n        this.datable.sort$.next({\n            orderBy: this.orderBy,\n            orderDir: this.getDirection(this.orderDir),\n        });\n    }\n\n    private getDirection(current: string) {\n        switch (current) {\n            case 'asc':\n                this.arrowVisible = false;\n                return this.orderDir = null;\n            case 'desc':\n                this.arrowVisible = true;\n                this.arrowDirection = 'up';\n                return this.orderDir = 'asc';\n            default:\n                this.arrowVisible = true;\n                this.arrowDirection = 'down';\n                return this.orderDir = 'desc';\n        }\n    }\n\n    public onMouseEnter() {\n        if ( ! this.datable.config?.disableSort) {\n            this.arrowVisible = true;\n        }\n    }\n\n    public onMouseLeave() {\n        this.arrowVisible = false;\n        if ( ! this.orderDir) {\n            this.arrowDirection = 'down';\n        }\n    }\n\n    public handleClick() {\n        if ( ! this.datable.config?.disableSort) {\n            this.changeSort();\n        }\n    }\n\n    public handleKeydown(e: KeyboardEvent) {\n        if ( !this.datable.config?.disableSort && (e.keyCode === SPACE || e.keyCode === ENTER)) {\n            e.preventDefault();\n            this.changeSort();\n        }\n    }\n}\n","<span class=\"text\" #columnName>\n    <ng-content></ng-content>\n</span>\n<span class=\"icon-wrapper\" [ngClass]=\"arrowDirection\">\n    <mat-icon svgIcon=\"arrow-downward\" class=\"sort-icon\" [class.hint-visible]=\"arrowVisible\"></mat-icon>\n</span>\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n","import { Injectable } from '@angular/core';\nimport { Workspace } from './types/workspace';\nimport { PaginationParams } from '@common/core/types/pagination/pagination-params';\nimport { PaginatedBackendResponse } from '@common/core/types/pagination/paginated-backend-response';\nimport { BackendResponse } from '@common/core/types/backend-response';\nimport { AppHttpClient } from '@common/core/http/app-http-client.service';\nimport { WorkspaceMember } from './types/workspace-member';\nimport { WorkspaceInvite } from './types/workspace-invite';\nimport { filter, tap } from 'rxjs/operators';\nimport { CurrentUser } from '@common/auth/current-user';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { PaginationResponse } from '@common/core/types/pagination/pagination-response';\nimport { hasKey } from '@common/core/utils/has-key';\nimport { CookieService } from '../core/services/cookie.service';\nimport { NotificationService } from '../notifications/notification-list/notification.service';\nimport { WORKSPACE_INVITE_NOTIF_TYPE, WorkspaceInviteNotif } from './types/workspace-invite-notif';\nimport { Toast } from '../core/ui/toast.service';\nimport {BackendErrorResponse} from '../core/types/backend-error-response';\nimport {DatabaseNotification} from '../notifications/database-notification';\nimport {HttpErrors} from '../core/http/errors/http-errors.enum';\n\nconst PERSONAL_WORKSPACE = {name: 'Default', default: true, id: null};\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class WorkspacesService {\n    static BASE_URI = 'workspace';\n    public available$ = new BehaviorSubject<Workspace[]>([PERSONAL_WORKSPACE]);\n    public activeId$ = new BehaviorSubject<number>(this.getIdFromCookie());\n    public activeWorkspace$ = new BehaviorSubject<Workspace>(this.getIdFromCookie() ? null : PERSONAL_WORKSPACE);\n\n    constructor(\n        private http: AppHttpClient,\n        private currentUser: CurrentUser,\n        private cookie: CookieService,\n        private notifications: NotificationService,\n        private toast: Toast,\n    ) {}\n\n    public currentUserCan(permission: string): boolean {\n        const member = this.activeWorkspace$.value?.currentUser;\n        return member && (member.is_owner || member.permissions.findIndex(p => p.name === permission) > -1);\n    }\n\n    public select(workspaceId: number) {\n        if (workspaceId !== this.activeId$.value) {\n            this.cookie.set(this.cookieName(), workspaceId);\n            this.activeId$.next(workspaceId);\n        }\n        const workspace = this.available$.value.find(w => w.id === this.activeId$.value);\n        this.activeWorkspace$.next(workspace || this.available$.value[0]);\n    }\n\n    public pushAndSelect(workspace: Workspace) {\n        this.available$.next([...this.available$.value, workspace]);\n        this.select(workspace.id);\n    }\n\n    public replace(workspace: Workspace) {\n        const workspaces = [...this.available$.value];\n        const i = workspaces.findIndex(w => w.id === workspace.id);\n        if (i) {\n            workspaces[i] = workspace;\n        }\n        this.available$.next(workspaces);\n    }\n\n    public remove(ids: number[]) {\n        const workspaces = [...this.available$.value];\n        ids.forEach(id => {\n            const i = workspaces.findIndex(w => w.id === id);\n            if (i) {\n                workspaces.splice(i, 1);\n            }\n        });\n        this.available$.next(workspaces);\n        if (ids.includes(this.activeId$.value)) {\n            this.select(null);\n        }\n    }\n\n    public index(params: {userId?: number} & PaginationParams): PaginatedBackendResponse<Workspace> {\n        return this.http.get<{pagination: PaginationResponse<Workspace>}>(`${WorkspacesService.BASE_URI}`, params)\n            .pipe(tap(response => {\n                this.available$.next([...this.available$.value, ...response.pagination.data]);\n                this.select(this.activeId$.value);\n            }));\n    }\n\n    public get(workspaceId: number): BackendResponse<{workspace: Workspace}> {\n        return this.http.get(`${WorkspacesService.BASE_URI}/${workspaceId}`);\n    }\n\n    public delete(ids: number[]): BackendResponse<unknown> {\n        return this.http.delete(`${WorkspacesService.BASE_URI}/${ids}`)\n            .pipe(tap(() => {\n                this.remove(ids);\n            }));\n    }\n\n    public create(payload: Partial<Workspace>): BackendResponse<{workspace: Workspace}> {\n        return this.http.post<{workspace: Workspace}>(`${WorkspacesService.BASE_URI}`, payload)\n            .pipe(tap(response => this.pushAndSelect(response.workspace)));\n    }\n\n    public update(id: number, payload: Partial<Workspace>): BackendResponse<{workspace: Workspace}> {\n        return this.http.put<{workspace: Workspace}>(`${WorkspacesService.BASE_URI}/${id}`, payload)\n            .pipe(tap(response => this.replace(response.workspace)));\n    }\n\n    public invitePeople(workspaceId: number, params: {emails: string[], roleId: number}): BackendResponse<{invites: WorkspaceInvite[]}> {\n        return this.http.post(`${WorkspacesService.BASE_URI}/${workspaceId}/invite`, params);\n    }\n\n    public resendInvite(workspaceId: number, inviteId: string): BackendResponse<{invite: WorkspaceInvite}> {\n        return this.http.post(`${WorkspacesService.BASE_URI}/${workspaceId}/${inviteId}/resend`);\n    }\n\n    public deleteMember(workspaceId: number, userId: number): BackendResponse<unknown> {\n        return this.http.delete(`${WorkspacesService.BASE_URI}/${workspaceId}/member/${userId}`)\n            .pipe(tap(() => {\n                if (userId === this.currentUser.get('id')) {\n                    this.remove([workspaceId]);\n                }\n            }));\n    }\n\n    public deleteInvite(inviteId: string): BackendResponse<void> {\n        return this.http.delete(`${WorkspacesService.BASE_URI}/invite/${inviteId}`);\n    }\n\n    public changeRole(workspaceId: number, member: WorkspaceMember|WorkspaceInvite, roleId: number): BackendResponse<void> {\n        const memberId = hasKey('member_id', member) ? member.member_id : member.id;\n        return this.http.post(`${WorkspacesService.BASE_URI}/${workspaceId}/${member.model_type}/${memberId}/change-role`, {roleId});\n    }\n\n    public join(inviteId: string): BackendResponse<{workspace: Workspace}> {\n        return this.http.get(`workspace/join/${inviteId}`);\n    }\n\n    public bindToNotificationClick(): Subscription {\n        return this.notifications.clickedOnNotification$\n            .pipe(filter(data => data.notification.type === WORKSPACE_INVITE_NOTIF_TYPE))\n            .subscribe(data => {\n                const inviteId = (data.notification as WorkspaceInviteNotif).data.inviteId;\n                if (data.action.action === 'join') {\n                    this.join(inviteId).subscribe(response => {\n                        this.notifications.delete([data.notification]).subscribe();\n                        this.pushAndSelect(response.workspace);\n                        this.toast.open('Joined workspace.');\n                    }, (err: BackendErrorResponse) => {\n                        this.handleWorkspaceInviteClickError(err, data.notification);\n                    });\n                } else if (data.action.action === 'decline') {\n                    this.deleteInvite(inviteId).subscribe(() => {\n                        this.notifications.delete([data.notification]).subscribe();\n                        this.toast.open('Declined workspace invite.');\n                    }, (err: BackendErrorResponse) => {\n                        this.handleWorkspaceInviteClickError(err, data.notification);\n                    });\n                }\n            });\n    }\n\n    private handleWorkspaceInviteClickError(err: BackendErrorResponse, notif: DatabaseNotification) {\n        if (err.status === 404) {\n            this.notifications.delete([notif]).subscribe();\n            this.toast.open('That invite is no longer valid.');\n        } else {\n            this.toast.open(HttpErrors.Default);\n        }\n    }\n\n    private getIdFromCookie() {\n        const workspaceId = this.cookie.get(this.cookieName());\n        return typeof workspaceId === 'string' ? parseInt(workspaceId) : workspaceId;\n    }\n\n    private cookieName() {\n        return `${this.currentUser.get('id')}_activeWorkspace`;\n    }\n}\n","import { DatabaseNotification, DatabaseNotificationData } from '../../notifications/database-notification';\r\n\r\nexport const WORKSPACE_INVITE_NOTIF_TYPE = 'Common\\\\Workspaces\\\\Notifications\\\\WorkspaceInvitation';\r\n\r\nexport interface WorkspaceInviteNotif extends DatabaseNotification {\r\n    data: DatabaseNotificationData & {inviteId: string};\r\n}\r\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","import { Subscriber } from '../Subscriber';\nexport function mapTo(value) {\n    return (source) => source.lift(new MapToOperator(value));\n}\nclass MapToOperator {\n    constructor(value) {\n        this.value = value;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new MapToSubscriber(subscriber, this.value));\n    }\n}\nclass MapToSubscriber extends Subscriber {\n    constructor(destination, value) {\n        super(destination);\n        this.value = value;\n    }\n    _next(x) {\n        this.destination.next(this.value);\n    }\n}\n//# sourceMappingURL=mapTo.js.map","import { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { CdkScrollable, ScrollDispatcher, ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Inject, forwardRef, ElementRef, NgZone, EventEmitter, Optional, Input, HostBinding, Output, HostListener, QueryList, ContentChildren, ContentChild, ViewChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { FocusTrapFactory, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, map, mapTo, takeUntil, distinctUntilChanged, take, startWith, debounceTime } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material drawers.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/a11y';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/bidi';\nimport * as ɵngcc5 from '@angular/common';\n\nconst _c0 = [\"*\"];\nfunction MatDrawerContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatDrawerContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2._onBackdropClicked(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n} }\nfunction MatDrawerContainer_mat_drawer_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-drawer-content\");\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c1 = [[[\"mat-drawer\"]], [[\"mat-drawer-content\"]], \"*\"];\nconst _c2 = [\"mat-drawer\", \"mat-drawer-content\", \"*\"];\nfunction MatSidenavContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatSidenavContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2._onBackdropClicked(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n} }\nfunction MatSidenavContainer_mat_sidenav_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-sidenav-content\", 3);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c3 = [[[\"mat-sidenav\"]], [[\"mat-sidenav-content\"]], \"*\"];\nconst _c4 = [\"mat-sidenav\", \"mat-sidenav-content\", \"*\"];\nconst _c5 = \".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\";\nconst matDrawerAnimations = {\n    /** Animation that slides a drawer in and out. */\n    transformDrawer: trigger('transform', [\n        // We remove the `transform` here completely, rather than setting it to zero, because:\n        // 1. Having a transform can cause elements with ripples or an animated\n        //    transform to shift around in Chrome with an RTL layout (see #10023).\n        // 2. 3d transforms causes text to appear blurry on IE and Edge.\n        state('open, open-instant', style({\n            'transform': 'none',\n            'visibility': 'visible',\n        })),\n        state('void', style({\n            // Avoids the shadow showing up when closed in SSR.\n            'box-shadow': 'none',\n            'visibility': 'hidden',\n        })),\n        transition('void => open-instant', animate('0ms')),\n        transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n    ])\n};\n\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * @docs-private\n */\nfunction throwMatDuplicatedDrawerError(position) {\n    throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/** Configures whether drawers should use auto sizing by default. */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n    providedIn: 'root',\n    factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY,\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * @docs-private\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/** @docs-private */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n    return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n    constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n        super(elementRef, scrollDispatcher, ngZone);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._container = _container;\n    }\n    ngAfterContentInit() {\n        this._container._contentMarginChanges.subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n}\nMatDrawerContent.ɵfac = function MatDrawerContent_Factory(t) { return new (t || MatDrawerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatDrawerContainer)), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatDrawerContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContent, selectors: [[\"mat-drawer-content\"]], hostAttrs: [1, \"mat-drawer-content\"], hostVars: 4, hostBindings: function MatDrawerContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatDrawerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\nMatDrawerContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatDrawerContainer, decorators: [{ type: Inject, args: [forwardRef(() => MatDrawerContainer),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawerContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatDrawerContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatDrawerContainer)]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n    constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _doc, _container) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._focusMonitor = _focusMonitor;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._doc = _doc;\n        this._container = _container;\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        /** Whether the drawer is initialized. Used for disabling the initial animation. */\n        this._enableAnimations = false;\n        this._position = 'start';\n        this._mode = 'over';\n        this._disableClose = false;\n        this._opened = false;\n        /** Emits whenever the drawer has started animating. */\n        this._animationStarted = new Subject();\n        /** Emits whenever the drawer is done animating. */\n        this._animationEnd = new Subject();\n        /** Current state of the sidenav animation. */\n        // @HostBinding is used in the class as it is expected to be extended.  Since @Component decorator\n        // metadata is not inherited by child classes, instead the host binding data is defined in a way\n        // that can be inherited.\n        // tslint:disable:no-host-decorator-in-concrete\n        this._animationState = 'void';\n        /** Event emitted when the drawer open state is changed. */\n        this.openedChange = \n        // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n        new EventEmitter(/* isAsync */ true);\n        /** Event emitted when the drawer has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the drawer has started opening. */\n        this.openedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState.indexOf('open') === 0), mapTo(undefined));\n        /** Event emitted when the drawer has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the drawer has started closing. */\n        this.closedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState === 'void'), mapTo(undefined));\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Event emitted when the drawer's position changes. */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onPositionChanged = new EventEmitter();\n        /**\n         * An observable that emits when the drawer mode changes. This is used by the drawer container to\n         * to know when to when the mode changes so it can adapt the margins on the content.\n         */\n        this._modeChanged = new Subject();\n        this.openedChange.subscribe((opened) => {\n            if (opened) {\n                if (this._doc) {\n                    this._elementFocusedBeforeDrawerWasOpened = this._doc.activeElement;\n                }\n                this._takeFocus();\n            }\n            else if (this._isFocusWithinDrawer()) {\n                this._restoreFocus();\n            }\n        });\n        /**\n         * Listen to `keydown` events outside the zone so that change detection is not run every\n         * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n         * and we don't have close disabled.\n         */\n        this._ngZone.runOutsideAngular(() => {\n            fromEvent(this._elementRef.nativeElement, 'keydown').pipe(filter(event => {\n                return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n            }), takeUntil(this._destroyed)).subscribe(event => this._ngZone.run(() => {\n                this.close();\n                event.stopPropagation();\n                event.preventDefault();\n            }));\n        });\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._animationEnd.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe((event) => {\n            const { fromState, toState } = event;\n            if ((toState.indexOf('open') === 0 && fromState === 'void') ||\n                (toState === 'void' && fromState.indexOf('open') === 0)) {\n                this.openedChange.emit(this._opened);\n            }\n        });\n    }\n    /** The side that the drawer is attached to. */\n    get position() { return this._position; }\n    set position(value) {\n        // Make sure we have a valid value.\n        value = value === 'end' ? 'end' : 'start';\n        if (value != this._position) {\n            this._position = value;\n            this.onPositionChanged.emit();\n        }\n    }\n    /** Mode of the drawer; one of 'over', 'push' or 'side'. */\n    get mode() { return this._mode; }\n    set mode(value) {\n        this._mode = value;\n        this._updateFocusTrapState();\n        this._modeChanged.next();\n    }\n    /** Whether the drawer can be closed with the escape key or by clicking on the backdrop. */\n    get disableClose() { return this._disableClose; }\n    set disableClose(value) { this._disableClose = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n     * enabled, focus will be moved into the sidenav in `side` mode as well.\n     */\n    get autoFocus() {\n        const value = this._autoFocus;\n        // Note that usually we disable auto focusing in `side` mode, because we don't know how the\n        // sidenav is being used, but in some cases it still makes sense to do it. If the consumer\n        // explicitly enabled `autoFocus`, we take it as them always wanting to enable it.\n        return value == null ? this.mode !== 'side' : value;\n    }\n    set autoFocus(value) { this._autoFocus = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     */\n    get opened() { return this._opened; }\n    set opened(value) { this.toggle(coerceBooleanProperty(value)); }\n    /**\n     * Moves focus into the drawer. Note that this works even if\n     * the focus trap is disabled in `side` mode.\n     */\n    _takeFocus() {\n        if (!this.autoFocus || !this._focusTrap) {\n            return;\n        }\n        this._focusTrap.focusInitialElementWhenReady().then(hasMovedFocus => {\n            // If there were no focusable elements, focus the sidenav itself so the keyboard navigation\n            // still works. We need to check that `focus` is a function due to Universal.\n            if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n                this._elementRef.nativeElement.focus();\n            }\n        });\n    }\n    /**\n     * Restores focus to the element that was originally focused when the drawer opened.\n     * If no element was focused at that time, the focus will be restored to the drawer.\n     */\n    _restoreFocus() {\n        if (!this.autoFocus) {\n            return;\n        }\n        // Note that we don't check via `instanceof HTMLElement` so that we can cover SVGs as well.\n        if (this._elementFocusedBeforeDrawerWasOpened) {\n            this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia);\n        }\n        else {\n            this._elementRef.nativeElement.blur();\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        this._openedVia = null;\n    }\n    /** Whether focus is currently within the drawer. */\n    _isFocusWithinDrawer() {\n        var _a;\n        const activeEl = (_a = this._doc) === null || _a === void 0 ? void 0 : _a.activeElement;\n        return !!activeEl && this._elementRef.nativeElement.contains(activeEl);\n    }\n    ngAfterContentInit() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._updateFocusTrapState();\n    }\n    ngAfterContentChecked() {\n        // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n        // drawers that are open by default. When we're on the server, we shouldn't enable the\n        // animations, because we don't want the drawer to animate the first time the user sees\n        // the page.\n        if (this._platform.isBrowser) {\n            this._enableAnimations = true;\n        }\n    }\n    ngOnDestroy() {\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n        this._animationStarted.complete();\n        this._animationEnd.complete();\n        this._modeChanged.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Open the drawer.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    open(openedVia) {\n        return this.toggle(true, openedVia);\n    }\n    /** Close the drawer. */\n    close() {\n        return this.toggle(false);\n    }\n    /** Closes the drawer with context that the backdrop was clicked. */\n    _closeViaBackdropClick() {\n        // If the drawer is closed upon a backdrop click, we always want to restore focus. We\n        // don't need to check whether focus is currently in the drawer, as clicking on the\n        // backdrop causes blurring of the active element.\n        return this._setOpen(/* isOpen */ false, /* restoreFocus */ true);\n    }\n    /**\n     * Toggle this drawer.\n     * @param isOpen Whether the drawer should be open.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    toggle(isOpen = !this.opened, openedVia) {\n        // If the focus is currently inside the drawer content and we are closing the drawer,\n        // restore the focus to the initially focused element (when the drawer opened).\n        return this._setOpen(isOpen, /* restoreFocus */ !isOpen && this._isFocusWithinDrawer(), openedVia);\n    }\n    /**\n     * Toggles the opened state of the drawer.\n     * @param isOpen Whether the drawer should open or close.\n     * @param restoreFocus Whether focus should be restored on close.\n     * @param openedVia Focus origin that can be optionally set when opening a drawer. The\n     *   origin will be used later when focus is restored on drawer close.\n     */\n    _setOpen(isOpen, restoreFocus, openedVia = 'program') {\n        this._opened = isOpen;\n        if (isOpen) {\n            this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n            this._openedVia = openedVia;\n        }\n        else {\n            this._animationState = 'void';\n            if (restoreFocus) {\n                this._restoreFocus();\n            }\n        }\n        this._updateFocusTrapState();\n        return new Promise(resolve => {\n            this.openedChange.pipe(take(1)).subscribe(open => resolve(open ? 'open' : 'close'));\n        });\n    }\n    _getWidth() {\n        return this._elementRef.nativeElement ? (this._elementRef.nativeElement.offsetWidth || 0) : 0;\n    }\n    /** Updates the enabled state of the focus trap. */\n    _updateFocusTrapState() {\n        if (this._focusTrap) {\n            // The focus trap is only enabled when the drawer is open in any mode other than side.\n            this._focusTrap.enabled = this.opened && this.mode !== 'side';\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationStartListener(event) {\n        this._animationStarted.next(event);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationDoneListener(event) {\n        this._animationEnd.next(event);\n    }\n}\nMatDrawer.ɵfac = function MatDrawer_Factory(t) { return new (t || MatDrawer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_CONTAINER, 8)); };\nMatDrawer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawer, selectors: [[\"mat-drawer\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\"], hostVars: 12, hostBindings: function MatDrawer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵsyntheticHostListener(\"@transform.start\", function MatDrawer_animation_transform_start_HostBindingHandler($event) { return ctx._animationStartListener($event); })(\"@transform.done\", function MatDrawer_animation_transform_done_HostBindingHandler($event) { return ctx._animationDoneListener($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@transform\", ctx._animationState);\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened);\n    } }, inputs: { position: \"position\", mode: \"mode\", disableClose: \"disableClose\", autoFocus: \"autoFocus\", opened: \"opened\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", openedStart: \"openedStart\", _closedStream: \"closed\", closedStart: \"closedStart\", onPositionChanged: \"positionChanged\" }, exportAs: [\"matDrawer\"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-drawer-inner-container\"]], template: function MatDrawer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\nMatDrawer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: FocusMonitor },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDrawerContainer, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DRAWER_CONTAINER,] }] }\n];\nMatDrawer.propDecorators = {\n    position: [{ type: Input }],\n    mode: [{ type: Input }],\n    disableClose: [{ type: Input }],\n    autoFocus: [{ type: Input }],\n    opened: [{ type: Input }],\n    _animationState: [{ type: HostBinding, args: ['@transform',] }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    openedStart: [{ type: Output }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    closedStart: [{ type: Output }],\n    onPositionChanged: [{ type: Output, args: ['positionChanged',] }],\n    _animationStartListener: [{ type: HostListener, args: ['@transform.start', ['$event'],] }],\n    _animationDoneListener: [{ type: HostListener, args: ['@transform.done', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer',\n                exportAs: 'matDrawer',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    'tabIndex': '-1'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.FocusTrapFactory }, { type: ɵngcc2.FocusMonitor }, { type: ɵngcc3.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatDrawerContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DRAWER_CONTAINER]\n            }] }]; }, { _animationState: [{\n            type: HostBinding,\n            args: ['@transform']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], openedStart: [{\n            type: Output\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], closedStart: [{\n            type: Output\n        }], onPositionChanged: [{\n            type: Output,\n            args: ['positionChanged']\n        }], position: [{\n            type: Input\n        }], mode: [{\n            type: Input\n        }], disableClose: [{\n            type: Input\n        }], autoFocus: [{\n            type: Input\n        }], opened: [{\n            type: Input\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationStartListener: [{\n            type: HostListener,\n            args: ['@transform.start', ['$event']]\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationDoneListener: [{\n            type: HostListener,\n            args: ['@transform.done', ['$event']]\n        }] }); })();\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n    constructor(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize = false, _animationMode) {\n        this._dir = _dir;\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** Drawers that belong to this container. */\n        this._drawers = new QueryList();\n        /** Event emitted when the drawer backdrop is clicked. */\n        this.backdropClick = new EventEmitter();\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Emits on every ngDoCheck. Used for debouncing reflows. */\n        this._doCheckSubject = new Subject();\n        /**\n         * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n         * drawer is open. We use margin rather than transform even for push mode because transform breaks\n         * fixed position elements inside of the transformed element.\n         */\n        this._contentMargins = { left: null, right: null };\n        this._contentMarginChanges = new Subject();\n        // If a `Dir` directive exists up the tree, listen direction changes\n        // and update the left/right properties to point to the proper start/end.\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                this._validateDrawers();\n                this.updateContentMargins();\n            });\n        }\n        // Since the minimum width of the sidenav depends on the viewport width,\n        // we need to recompute the margins if the viewport changes.\n        viewportRuler.change()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this.updateContentMargins());\n        this._autosize = defaultAutosize;\n    }\n    /** The drawer child with the `start` position. */\n    get start() { return this._start; }\n    /** The drawer child with the `end` position. */\n    get end() { return this._end; }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     */\n    get autosize() { return this._autosize; }\n    set autosize(value) { this._autosize = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     */\n    get hasBackdrop() {\n        if (this._backdropOverride == null) {\n            return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n        }\n        return this._backdropOverride;\n    }\n    set hasBackdrop(value) {\n        this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    /** Reference to the CdkScrollable instance that wraps the scrollable content. */\n    get scrollable() {\n        return this._userContent || this._content;\n    }\n    ngAfterContentInit() {\n        this._allDrawers.changes\n            .pipe(startWith(this._allDrawers), takeUntil(this._destroyed))\n            .subscribe((drawer) => {\n            this._drawers.reset(drawer.filter(item => !item._container || item._container === this));\n            this._drawers.notifyOnChanges();\n        });\n        this._drawers.changes.pipe(startWith(null)).subscribe(() => {\n            this._validateDrawers();\n            this._drawers.forEach((drawer) => {\n                this._watchDrawerToggle(drawer);\n                this._watchDrawerPosition(drawer);\n                this._watchDrawerMode(drawer);\n            });\n            if (!this._drawers.length ||\n                this._isDrawerOpen(this._start) ||\n                this._isDrawerOpen(this._end)) {\n                this.updateContentMargins();\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n        // Avoid hitting the NgZone through the debounce timeout.\n        this._ngZone.runOutsideAngular(() => {\n            this._doCheckSubject.pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n            takeUntil(this._destroyed)).subscribe(() => this.updateContentMargins());\n        });\n    }\n    ngOnDestroy() {\n        this._contentMarginChanges.complete();\n        this._doCheckSubject.complete();\n        this._drawers.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Calls `open` of both start and end drawers */\n    open() {\n        this._drawers.forEach(drawer => drawer.open());\n    }\n    /** Calls `close` of both start and end drawers */\n    close() {\n        this._drawers.forEach(drawer => drawer.close());\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     */\n    updateContentMargins() {\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        let left = 0;\n        let right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._getWidth();\n            }\n            else if (this._left.mode == 'push') {\n                const width = this._left._getWidth();\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._getWidth();\n            }\n            else if (this._right.mode == 'push') {\n                const width = this._right._getWidth();\n                right += width;\n                left -= width;\n            }\n        }\n        // If either `right` or `left` is zero, don't set a style to the element. This\n        // allows users to specify a custom size via CSS class in SSR scenarios where the\n        // measured widths will always be zero. Note that we reset to `null` here, rather\n        // than below, in order to ensure that the types in the `if` below are consistent.\n        left = left || null;\n        right = right || null;\n        if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n            this._contentMargins = { left, right };\n            // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n            // to do it only when something changed, otherwise we can end up hitting the zone too often.\n            this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins));\n        }\n    }\n    ngDoCheck() {\n        // If users opted into autosizing, do a check every change detection cycle.\n        if (this._autosize && this._isPushed()) {\n            // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n            this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());\n        }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     */\n    _watchDrawerToggle(drawer) {\n        drawer._animationStarted.pipe(filter((event) => event.fromState !== event.toState), takeUntil(this._drawers.changes))\n            .subscribe((event) => {\n            // Set the transition class on the container so that the animations occur. This should not\n            // be set initially because animations should only be triggered via a change in state.\n            if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n                this._element.nativeElement.classList.add('mat-drawer-transition');\n            }\n            this.updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (drawer.mode !== 'side') {\n            drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe(() => this._setContainerClass(drawer.opened));\n        }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     */\n    _watchDrawerPosition(drawer) {\n        if (!drawer) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n            this._ngZone.onMicrotaskEmpty.pipe(take(1)).subscribe(() => {\n                this._validateDrawers();\n            });\n        });\n    }\n    /** Subscribes to changes in drawer mode so we can run change detection. */\n    _watchDrawerMode(drawer) {\n        if (drawer) {\n            drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n                .subscribe(() => {\n                this.updateContentMargins();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /** Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element. */\n    _setContainerClass(isAdd) {\n        const classList = this._element.nativeElement.classList;\n        const className = 'mat-drawer-container-has-open';\n        if (isAdd) {\n            classList.add(className);\n        }\n        else {\n            classList.remove(className);\n        }\n    }\n    /** Validate the state of the drawer children components. */\n    _validateDrawers() {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach(drawer => {\n            if (drawer.position == 'end') {\n                if (this._end != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                this._end = drawer;\n            }\n            else {\n                if (this._start != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                this._start = drawer;\n            }\n        });\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir && this._dir.value === 'rtl') {\n            this._left = this._end;\n            this._right = this._start;\n        }\n        else {\n            this._left = this._start;\n            this._right = this._end;\n        }\n    }\n    /** Whether the container is being pushed to the side by one of the drawers. */\n    _isPushed() {\n        return (this._isDrawerOpen(this._start) && this._start.mode != 'over') ||\n            (this._isDrawerOpen(this._end) && this._end.mode != 'over');\n    }\n    _onBackdropClicked() {\n        this.backdropClick.emit();\n        this._closeModalDrawersViaBackdrop();\n    }\n    _closeModalDrawersViaBackdrop() {\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter(drawer => drawer && !drawer.disableClose && this._canHaveBackdrop(drawer))\n            .forEach(drawer => drawer._closeViaBackdropClick());\n    }\n    _isShowingBackdrop() {\n        return (this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start)) ||\n            (this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end));\n    }\n    _canHaveBackdrop(drawer) {\n        return drawer.mode !== 'side' || !!this._backdropOverride;\n    }\n    _isDrawerOpen(drawer) {\n        return drawer != null && drawer.opened;\n    }\n}\nMatDrawerContainer.ɵfac = function MatDrawerContainer_Factory(t) { return new (t || MatDrawerContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_DEFAULT_AUTOSIZE), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatDrawerContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContainer, selectors: [[\"mat-drawer-container\"]], contentQueries: function MatDrawerContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawerContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawer, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, viewQuery: function MatDrawerContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatDrawerContent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._userContent = _t.first);\n    } }, hostAttrs: [1, \"mat-drawer-container\"], hostVars: 2, hostBindings: function MatDrawerContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, inputs: { autosize: \"autosize\", hasBackdrop: \"hasBackdrop\" }, outputs: { backdropClick: \"backdropClick\" }, exportAs: [\"matDrawerContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatDrawerContainer\n            }])], ngContentSelectors: _c2, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]], template: function MatDrawerContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵtemplate(0, MatDrawerContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatDrawerContainer_mat_drawer_content_3_Template, 2, 0, \"mat-drawer-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, directives: [ɵngcc5.NgIf, MatDrawerContent], styles: [_c5], encapsulation: 2, changeDetection: 0 });\nMatDrawerContainer.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DRAWER_DEFAULT_AUTOSIZE,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatDrawerContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatDrawerContent,] }],\n    _userContent: [{ type: ViewChild, args: [MatDrawerContent,] }],\n    autosize: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    backdropClick: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawerContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer-container',\n                exportAs: 'matDrawerContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n<mat-drawer-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-drawer-content>\\n\",\n                host: {\n                    'class': 'mat-drawer-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatDrawerContainer\n                    }],\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc4.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { backdropClick: [{\n            type: Output\n        }], autosize: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], _allDrawers: [{\n            type: ContentChildren,\n            args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatDrawerContent]\n        }], _userContent: [{\n            type: ViewChild,\n            args: [MatDrawerContent]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSidenavContent extends MatDrawerContent {\n    constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n        super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n    }\n}\nMatSidenavContent.ɵfac = function MatSidenavContent_Factory(t) { return new (t || MatSidenavContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatSidenavContainer)), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatSidenavContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContent, selectors: [[\"mat-sidenav-content\"]], hostAttrs: [1, \"mat-drawer-content\", \"mat-sidenav-content\"], hostVars: 4, hostBindings: function MatSidenavContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSidenavContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\nMatSidenavContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatSidenavContainer, decorators: [{ type: Inject, args: [forwardRef(() => MatSidenavContainer),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content mat-sidenav-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatSidenavContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatSidenavContainer)]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nclass MatSidenav extends MatDrawer {\n    constructor() {\n        super(...arguments);\n        this._fixedInViewport = false;\n        this._fixedTopGap = 0;\n        this._fixedBottomGap = 0;\n    }\n    /** Whether the sidenav is fixed in the viewport. */\n    get fixedInViewport() { return this._fixedInViewport; }\n    set fixedInViewport(value) { this._fixedInViewport = coerceBooleanProperty(value); }\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     */\n    get fixedTopGap() { return this._fixedTopGap; }\n    set fixedTopGap(value) { this._fixedTopGap = coerceNumberProperty(value); }\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     */\n    get fixedBottomGap() { return this._fixedBottomGap; }\n    set fixedBottomGap(value) { this._fixedBottomGap = coerceNumberProperty(value); }\n}\nMatSidenav.ɵfac = function MatSidenav_Factory(t) { return ɵMatSidenav_BaseFactory(t || MatSidenav); };\nMatSidenav.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenav, selectors: [[\"mat-sidenav\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\", \"mat-sidenav\"], hostVars: 17, hostBindings: function MatSidenav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵstyleProp(\"top\", ctx.fixedInViewport ? ctx.fixedTopGap : null, \"px\")(\"bottom\", ctx.fixedInViewport ? ctx.fixedBottomGap : null, \"px\");\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened)(\"mat-sidenav-fixed\", ctx.fixedInViewport);\n    } }, inputs: { fixedInViewport: \"fixedInViewport\", fixedTopGap: \"fixedTopGap\", fixedBottomGap: \"fixedBottomGap\" }, exportAs: [\"matSidenav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-drawer-inner-container\"]], template: function MatSidenav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\nMatSidenav.propDecorators = {\n    fixedInViewport: [{ type: Input }],\n    fixedTopGap: [{ type: Input }],\n    fixedBottomGap: [{ type: Input }]\n};\nconst ɵMatSidenav_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatSidenav);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenav, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav',\n                exportAs: 'matSidenav',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer mat-sidenav',\n                    'tabIndex': '-1',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    '[class.mat-sidenav-fixed]': 'fixedInViewport',\n                    '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n                    '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, { fixedInViewport: [{\n            type: Input\n        }], fixedTopGap: [{\n            type: Input\n        }], fixedBottomGap: [{\n            type: Input\n        }] }); })();\nclass MatSidenavContainer extends MatDrawerContainer {\n}\nMatSidenavContainer.ɵfac = function MatSidenavContainer_Factory(t) { return ɵMatSidenavContainer_BaseFactory(t || MatSidenavContainer); };\nMatSidenavContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContainer, selectors: [[\"mat-sidenav-container\"]], contentQueries: function MatSidenavContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenavContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenav, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, hostAttrs: [1, \"mat-drawer-container\", \"mat-sidenav-container\"], hostVars: 2, hostBindings: function MatSidenavContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, exportAs: [\"matSidenavContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatSidenavContainer\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [\"cdkScrollable\", \"\", 4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"], [\"cdkScrollable\", \"\"]], template: function MatSidenavContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵtemplate(0, MatSidenavContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatSidenavContainer_mat_sidenav_content_3_Template, 2, 0, \"mat-sidenav-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, directives: [ɵngcc5.NgIf, MatSidenavContent, ɵngcc1.CdkScrollable], styles: [_c5], encapsulation: 2, changeDetection: 0 });\nMatSidenavContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatSidenavContent,] }]\n};\nconst ɵMatSidenavContainer_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatSidenavContainer);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav-container',\n                exportAs: 'matSidenavContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n<mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable>\\n  <ng-content></ng-content>\\n</mat-sidenav-content>\\n\",\n                host: {\n                    'class': 'mat-drawer-container mat-sidenav-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatSidenavContainer\n                    }],\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n            }]\n    }], null, { _allDrawers: [{\n            type: ContentChildren,\n            args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatSidenavContent]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSidenavModule {\n}\nMatSidenavModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSidenavModule });\nMatSidenavModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSidenavModule_Factory(t) { return new (t || MatSidenavModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            PlatformModule,\n            CdkScrollableModule,\n        ], CdkScrollableModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSidenavModule, { declarations: function () { return [MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PlatformModule,\n        CdkScrollableModule]; }, exports: function () { return [CdkScrollableModule,\n        MatCommonModule, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PlatformModule,\n                    CdkScrollableModule,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    MatCommonModule,\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ],\n                declarations: [\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError, MAT_DRAWER_CONTAINER as ɵangular_material_src_material_sidenav_sidenav_a };\n\n//# sourceMappingURL=sidenav.js.map","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","import {ChangeDetectionStrategy, Component, Input, OnInit} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\nimport {DatatableService} from '../../datatable.service';\nimport {Model} from '@common/core/types/models/model';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n    selector: 'datatable-header-search-input',\n    templateUrl: './datatable-header-search-input.component.html',\n    styleUrls: ['./datatable-header-search-input.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DatatableHeaderSearchInputComponent implements OnInit {\n    public searchControl = new FormControl(this.route.snapshot.queryParams.query);\n    @Input() placeholder: string;\n    @Input() hideIcon = false;\n\n    constructor(\n        public datatable: DatatableService<Model>,\n        private route: ActivatedRoute,\n    ) {}\n\n    ngOnInit() {\n        this.searchControl.valueChanges\n            .pipe(debounceTime(400), distinctUntilChanged())\n            .subscribe(query => {\n                this.datatable.addFilter('query', query);\n            });\n    }\n}\n","<div class=\"input-container search-input-container\">\n    <input type=\"text\" class=\"search-input\" [placeholder]=\"placeholder | trans\" [formControl]=\"searchControl\">\n    <mat-icon svgIcon=\"search\" *ngIf=\"!hideIcon\"></mat-icon>\n</div>\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n","var isObject = require('./isObject');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {DatatableService} from '../datatable.service';\nimport {Subscription} from 'rxjs';\nimport {Model} from '../../core/types/models/model';\n\n@Component({\n    selector: '[table-body-checkbox]',\n    template: `\n        <mat-checkbox (click)=\"$event.stopPropagation()\"\n                      (change)=\"$event ? toggleRow(rowId) : null\"\n                      [checked]=\"isRowSelected(rowId)\">\n        </mat-checkbox>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {'class': 'table-checkbox'}\n})\nexport class TableBodyCheckboxComponent implements OnInit, OnDestroy {\n    @Input('table-body-checkbox') rowId: number;\n    private changeRef: Subscription;\n\n    constructor(\n        public datatable: DatatableService<Model>,\n        private cd: ChangeDetectorRef,\n    ) {}\n\n    ngOnInit() {\n        this.changeRef = this.datatable.selectedRows$.subscribe(value => {\n            this.cd.markForCheck();\n        });\n    }\n\n    ngOnDestroy() {\n        this.changeRef.unsubscribe();\n    }\n\n    public isRowSelected(id: number): boolean {\n        return this.datatable.selectedRows$.value.indexOf(id) > -1;\n    }\n\n    public toggleRow(id: number) {\n        if (this.isRowSelected(id)) {\n            const array = this.datatable.selectedRows$.value.slice();\n            const i = this.datatable.selectedRows$.value.indexOf(id);\n            array.splice(i, 1);\n            this.datatable.selectedRows$.next(array);\n        } else {\n            this.datatable.selectedRows$.next(\n                [...this.datatable.selectedRows$.value, id]\n            );\n        }\n    }\n}\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport const defaultThrottleConfig = {\n    leading: true,\n    trailing: false\n};\nexport function throttle(durationSelector, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleOperator(durationSelector, !!config.leading, !!config.trailing));\n}\nclass ThrottleOperator {\n    constructor(durationSelector, leading, trailing) {\n        this.durationSelector = durationSelector;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n    }\n}\nclass ThrottleSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, durationSelector, _leading, _trailing) {\n        super(destination);\n        this.destination = destination;\n        this.durationSelector = durationSelector;\n        this._leading = _leading;\n        this._trailing = _trailing;\n        this._hasValue = false;\n    }\n    _next(value) {\n        this._hasValue = true;\n        this._sendValue = value;\n        if (!this._throttled) {\n            if (this._leading) {\n                this.send();\n            }\n            else {\n                this.throttle(value);\n            }\n        }\n    }\n    send() {\n        const { _hasValue, _sendValue } = this;\n        if (_hasValue) {\n            this.destination.next(_sendValue);\n            this.throttle(_sendValue);\n        }\n        this._hasValue = false;\n        this._sendValue = undefined;\n    }\n    throttle(value) {\n        const duration = this.tryDurationSelector(value);\n        if (!!duration) {\n            this.add(this._throttled = innerSubscribe(duration, new SimpleInnerSubscriber(this)));\n        }\n    }\n    tryDurationSelector(value) {\n        try {\n            return this.durationSelector(value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return null;\n        }\n    }\n    throttlingDone() {\n        const { _throttled, _trailing } = this;\n        if (_throttled) {\n            _throttled.unsubscribe();\n        }\n        this._throttled = undefined;\n        if (_trailing) {\n            this.send();\n        }\n    }\n    notifyNext() {\n        this.throttlingDone();\n    }\n    notifyComplete() {\n        this.throttlingDone();\n    }\n}\n//# sourceMappingURL=throttle.js.map","import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { defaultThrottleConfig } from './throttle';\nexport function throttleTime(duration, scheduler = async, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\nclass ThrottleTimeOperator {\n    constructor(duration, scheduler, leading, trailing) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n    }\n}\nclass ThrottleTimeSubscriber extends Subscriber {\n    constructor(destination, duration, scheduler, leading, trailing) {\n        super(destination);\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n        this._hasTrailingValue = false;\n        this._trailingValue = null;\n    }\n    _next(value) {\n        if (this.throttled) {\n            if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n        else {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n            if (this.leading) {\n                this.destination.next(value);\n            }\n            else if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n    }\n    _complete() {\n        if (this._hasTrailingValue) {\n            this.destination.next(this._trailingValue);\n            this.destination.complete();\n        }\n        else {\n            this.destination.complete();\n        }\n    }\n    clearThrottle() {\n        const throttled = this.throttled;\n        if (throttled) {\n            if (this.trailing && this._hasTrailingValue) {\n                this.destination.next(this._trailingValue);\n                this._trailingValue = null;\n                this._hasTrailingValue = false;\n            }\n            throttled.unsubscribe();\n            this.remove(throttled);\n            this.throttled = null;\n        }\n    }\n}\nfunction dispatchNext(arg) {\n    const { subscriber } = arg;\n    subscriber.clearThrottle();\n}\n//# sourceMappingURL=throttleTime.js.map","import { BehaviorSubject, ReplaySubject, Subject } from 'rxjs';\r\nimport { randomString } from '../../core/utils/random-string';\r\nimport { UploadedFile } from '../uploaded-file';\r\nimport { FileEntry } from '../types/file-entry';\r\nimport { UploadFileResponse } from '@common/uploads/uploads-api.service';\r\n\r\nexport interface UploadQueueItemProgress {\r\n    percentage?: number;\r\n    speed?: string;\r\n    eta?: string;\r\n    totalBytes?: number;\r\n    completedBytes?: number;\r\n}\r\n\r\nexport class UploadQueueItem {\r\n    id: string;\r\n    canceled$: Subject<boolean> = new Subject();\r\n    processing$ = new BehaviorSubject<boolean>(false);\r\n\r\n    // file info (static)\r\n    uploadedFile: UploadedFile;\r\n\r\n    // backend response once file is uploaded\r\n    uploadedResponse$ = new ReplaySubject<UploadFileResponse>(1);\r\n\r\n    // uploaded file entry (only available on completed uploads)\r\n    fileEntry: FileEntry;\r\n\r\n    // upload progress information (will change)\r\n    progress$ = new BehaviorSubject<UploadQueueItemProgress>({percentage: 0});\r\n\r\n    error$ = new BehaviorSubject<string>(null);\r\n\r\n    // custom data that can be attached to queue item\r\n    public customData: object = {};\r\n\r\n    get completed(): boolean {\r\n        return !this.processing$.value && this.progress$.value.percentage === 100;\r\n    }\r\n\r\n    get inProgress(): boolean {\r\n        return !this.error$.value && !this.completed;\r\n    }\r\n\r\n    constructor(file: UploadedFile, queueId?: string) {\r\n        this.uploadedFile = file;\r\n        this.id = queueId || randomString();\r\n    }\r\n\r\n    public cancel() {\r\n        // cancelling before finalizing might cause infinite loop\r\n        this.canceled$.next(true);\r\n        this.finalize();\r\n    }\r\n\r\n    public complete() {\r\n        this.setProgress({percentage: 100, eta: null});\r\n        this.finalize();\r\n    }\r\n\r\n    public finalize() {\r\n        this.uploadedResponse$.complete();\r\n        this.canceled$.complete();\r\n        this.progress$.complete();\r\n    }\r\n\r\n    public finishProcessing() {\r\n        this.processing$.next(false);\r\n        this.processing$.complete();\r\n    }\r\n\r\n    public addError(message: string) {\r\n        this.error$.next(message);\r\n    }\r\n\r\n    public setProgress(data: Partial<UploadQueueItemProgress>) {\r\n        this.progress$.next({\r\n            ...this.progress$.value,\r\n            ...data,\r\n        });\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {UploadValidator} from './upload-validator';\r\nimport {FileSizeValidation} from './validations/file-size-validation';\r\nimport {AllowedExtensionsValidation} from './validations/allowed-extensions-validation';\r\nimport {BlockedExtensionsValidation} from './validations/blocked-extensions-validation';\r\nimport {convertToBytes} from '../../core/utils/convertToBytes';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DefaultUploadValidator extends UploadValidator {\r\n    protected readonly DEFAULT_MAX_FILE_SIZE_MB = 8;\r\n    public showToast = true;\r\n\r\n    protected initValidations() {\r\n        this.validations.push(\r\n            new FileSizeValidation(\r\n                {maxSize: this.getMaxFileSize()},\r\n                this.i18n\r\n            )\r\n        );\r\n\r\n        const allowedExtensions = this.getAllowedExtensions(),\r\n            blockedExtensions = this.getBlockedExtensions();\r\n\r\n        if (allowedExtensions && allowedExtensions.length) {\r\n            this.validations.push(new AllowedExtensionsValidation(\r\n                {extensions: allowedExtensions}, this.i18n\r\n            ));\r\n        }\r\n\r\n        if (blockedExtensions && blockedExtensions.length) {\r\n            this.validations.push(new BlockedExtensionsValidation(\r\n                {extensions: blockedExtensions}, this.i18n\r\n            ));\r\n        }\r\n    }\r\n\r\n    protected getMaxFileSize(): number {\r\n        return this.settings.get(\r\n            'uploads.max_size',\r\n            convertToBytes(this.DEFAULT_MAX_FILE_SIZE_MB, 'MB')\r\n        );\r\n    }\r\n\r\n    protected getAllowedExtensions() {\r\n        return this.settings.getJson('uploads.allowed_extensions');\r\n    }\r\n\r\n    protected getBlockedExtensions() {\r\n        return this.settings.getJson('uploads.blocked_extensions');\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {UploadQueueItem} from './upload-queue-item';\r\nimport {BehaviorSubject, EMPTY, from, ReplaySubject, Subject, throwError} from 'rxjs';\r\nimport {catchError, filter, map, mergeMap, takeUntil} from 'rxjs/operators';\r\nimport {UploadedFile} from '../uploaded-file';\r\nimport {UploadCompletedEvent, UploadEvent, UploadEventTypes, UploadProgressEvent} from '../utils/upload-progress-event';\r\nimport {UploadFileResponse, UploadsApiService} from '../uploads-api.service';\r\nimport {FileEntry} from '../types/file-entry';\r\nimport {UploadValidator} from '../validation/upload-validator';\r\nimport {BackendErrorResponse} from '../../core/types/backend-error-response';\r\nimport {DefaultUploadValidator} from '../validation/default-upload-validator';\r\nimport {BackendResponse} from '@common/core/types/backend-response';\r\nimport {Toast} from '@common/core/ui/toast.service';\r\nimport {HttpErrors, UPLOAD_FAIL_LEARN_MORE_LINK} from '@common/core/http/errors/http-errors.enum';\r\nimport {UploadApiConfig} from '@common/uploads/types/upload-api-config';\r\nimport {CurrentUser} from '@common/auth/current-user';\r\nimport {Settings} from '@common/core/config/settings.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UploadQueueService {\r\n    public uploads$ = new BehaviorSubject<UploadQueueItem[]>([]);\r\n    public totalProgress$ = new ReplaySubject<number>(1);\r\n    public uploadsAdded$ = new Subject<UploadQueueItem[]>();\r\n    public count$ = new BehaviorSubject<{pending: number, completed: number}>({pending: 0, completed: 0});\r\n\r\n    constructor(\r\n        private api: UploadsApiService,\r\n        private defaultValidator: DefaultUploadValidator,\r\n        private toast: Toast,\r\n        private currentUser: CurrentUser,\r\n        private settings: Settings,\r\n    ) {}\r\n\r\n    public isEmpty(): boolean {\r\n        return !this.uploads$.value.length;\r\n    }\r\n\r\n    public getAllCompleted(): FileEntry[] {\r\n        return this.uploads$.value\r\n            .filter(queueItem => queueItem.completed)\r\n            .map(queueItem => queueItem.fileEntry);\r\n    }\r\n\r\n    public updateTotalProgress() {\r\n        const progress = this.uploads$.value.map(upload => upload.progress$.value.percentage || 0);\r\n        this.totalProgress$.next(progress.reduce((p, c) => p + c, 0) / progress.length);\r\n    }\r\n\r\n    public totalProgress() {\r\n        return this.totalProgress$.asObservable();\r\n    }\r\n\r\n    public start(files: UploadedFile[]|{[key: string]: UploadedFile}, config: UploadApiConfig = {}): BackendResponse<UploadFileResponse> {\r\n        const validator = config.validator || this.defaultValidator;\r\n        let uploadQueueItems = [] as UploadQueueItem[];\r\n\r\n        // push new uploads onto existing queue\r\n        if (Array.isArray(files)) {\r\n            uploadQueueItems = this.transformUploads(files, validator);\r\n            this.uploads$.next(this.uploads$.value.concat(uploadQueueItems));\r\n            this.uploadsAdded$.next(uploadQueueItems);\r\n\r\n        // replace existing uploads in the queue with new upload by specified upload ID\r\n        } else {\r\n            const replacements = this.uploads$.value.map(queueItem => {\r\n                if (files[queueItem.id]) {\r\n                    const transformed = this.transformUploads([files[queueItem.id]], validator, queueItem.id)[0];\r\n                    uploadQueueItems.push(transformed);\r\n                    return transformed;\r\n                } else {\r\n                    return queueItem;\r\n                }\r\n            });\r\n            this.uploads$.next(replacements);\r\n        }\r\n\r\n        this.updateCount();\r\n\r\n        return from(uploadQueueItems.filter(u => !u.error$.value))\r\n            .pipe(\r\n                mergeMap(uploadQueueItem => {\r\n                    return this.api.upload(uploadQueueItem.uploadedFile, config).pipe(\r\n                        catchError((errResponse: BackendErrorResponse) => {\r\n                            this.handleUploadFailure(errResponse, uploadQueueItem, validator);\r\n                            // if one item in the queue fails, either continue uploading other items\r\n                            // or immediately stop uploading and bubble up error to subscribers\r\n                            return config.bubbleError ? throwError(errResponse) : EMPTY;\r\n                        }),\r\n                        takeUntil(uploadQueueItem.canceled$),\r\n                        map(response => {\r\n                            this.handleUploadEvent(response, uploadQueueItem, config.willProcessFiles);\r\n                            // assign queue item ID to upload completed response so\r\n                            // file entry can be matched to specific upload queue item\r\n                            if (response.name === UploadEventTypes.COMPLETED) {\r\n                                response.body.queueItemId = uploadQueueItem.id;\r\n                            }\r\n                            return response;\r\n                        }),\r\n                    );\r\n                }, 1),\r\n                filter(e => e.name === UploadEventTypes.COMPLETED),\r\n                map((e: UploadCompletedEvent) => e.body)\r\n            );\r\n    }\r\n\r\n    public updateProgress(id: string, e: UploadProgressEvent) {\r\n        const queueItem = this.find(id);\r\n        if ( ! queueItem) return;\r\n\r\n        queueItem.setProgress({\r\n            eta: e.eta,\r\n            speed: e.speed,\r\n            percentage: e.progress,\r\n            totalBytes: e.totalBytes,\r\n            completedBytes: e.completedBytes,\r\n        });\r\n\r\n        this.updateTotalProgress();\r\n    }\r\n\r\n    public completeUpload(id: string, response: UploadFileResponse) {\r\n        const queueItem = this.find(id);\r\n        if ( ! queueItem) return;\r\n\r\n        queueItem.uploadedResponse$.next(response);\r\n        queueItem.fileEntry = response.fileEntry;\r\n        queueItem.complete();\r\n        this.updateTotalProgress();\r\n    }\r\n\r\n    public errorUpload(id: string, message?: string) {\r\n        this.find(id).addError(message);\r\n    }\r\n\r\n    public reset() {\r\n        this.uploads$.value.forEach(u => u.cancel());\r\n        this.uploads$.next([]);\r\n    }\r\n\r\n    public remove(id: string) {\r\n        const i = this.uploads$.value.findIndex(u => u.id === id),\r\n            upload = this.uploads$.value[i];\r\n        upload.completed ? upload.finalize() : upload.cancel();\r\n        this.uploads$.value.splice(i, 1);\r\n        this.uploads$.next(this.uploads$.value);\r\n    }\r\n\r\n    public find(id: string): UploadQueueItem {\r\n        return this.uploads$.value.find(u => u.id === id);\r\n    }\r\n\r\n    /**\r\n     * Transform specified files into upload queue items.\r\n     */\r\n    protected transformUploads(files: UploadedFile[], validator: UploadValidator, queueId?: string) {\r\n        return files.map(file => {\r\n            const activeUpload = new UploadQueueItem(file, queueId);\r\n\r\n            // validate upload\r\n            if (validator) {\r\n                const result = validator.validate(file);\r\n                if (result.failed) activeUpload.addError(result.errorMessage);\r\n            }\r\n\r\n            return activeUpload;\r\n        });\r\n    }\r\n\r\n    protected handleUploadEvent(event: UploadEvent, upload: UploadQueueItem, willProcessFiles = false) {\r\n        if (event.name === UploadEventTypes.PROGRESS) {\r\n            // upload is considered complete when progress equals 100\r\n            // but file processing for large files might take some time\r\n            // after file is fully uploaded so we should only set\r\n            // progress as 100 on final completed response\r\n            if (event.progress === 100) {\r\n                // TODO: implement processing functionality for chunked upploading\r\n                event = {...event, progress: 99};\r\n                if (willProcessFiles) {\r\n                    upload.processing$.next(true);\r\n                }\r\n            }\r\n            this.updateProgress(upload.id, event);\r\n        } else if (event.name === UploadEventTypes.COMPLETED) {\r\n            this.completeUpload(upload.id, event.body);\r\n            this.updateCount();\r\n        }\r\n    }\r\n\r\n    protected handleUploadFailure(response: BackendErrorResponse, upload: UploadQueueItem, validator: UploadValidator) {\r\n        let msg = response?.errors?.file,\r\n            showLearnMoreButton = null;\r\n        if ( ! msg) {\r\n            msg = HttpErrors.DefaultUpload;\r\n            showLearnMoreButton = this.currentUser.isAdmin() && !this.settings.get('site.hide_docs_buttons');\r\n        }\r\n\r\n        this.errorUpload(upload.id, msg);\r\n        this.updateCount();\r\n        this.updateTotalProgress();\r\n\r\n        if (validator.showToast) {\r\n            this.toast.open(msg, {action: showLearnMoreButton ? 'Learn More' : null})\r\n                .onAction()\r\n                .subscribe(() => {\r\n                    window.open(UPLOAD_FAIL_LEARN_MORE_LINK);\r\n                });\r\n        }\r\n    }\r\n\r\n    private updateCount() {\r\n        const pending = this.uploads$.value.filter(u => u.inProgress).length;\r\n        this.count$.next({pending, completed: this.uploads$.value.length - pending});\r\n    }\r\n}\r\n","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","import {ConfirmModalData} from '../core/ui/confirm-modal/confirm-modal.component';\r\n\r\nexport const DELETE_RESOURCE_MESSAGE: ConfirmModalData = {\r\n    title: `Delete :resource`,\r\n    body:  `Are you sure you want to delete selected :resource?`,\r\n    ok:    'Delete'\r\n};\r\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","import { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Inject, NgZone, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MAT_LABEL_GLOBAL_OPTIONS, MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"underline\"];\nconst _c1 = [\"connectionContainer\"];\nconst _c2 = [\"inputContainer\"];\nconst _c3 = [\"label\"];\nfunction MatFormField_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵelement(3, \"div\", 16);\n    ɵngcc0.ɵɵelement(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15);\n    ɵngcc0.ɵɵelement(7, \"div\", 16);\n    ɵngcc0.ɵɵelement(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nfunction MatFormField_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r10._control.placeholder);\n} }\nfunction MatFormField_label_9_ng_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatFormField_label_9_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.updateOutlineGap(); });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_ng_content_3_Template, 1, 0, \"ng-content\", 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat())(\"mat-form-field-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat())(\"mat-accent\", ctx_r4.color == \"accent\")(\"mat-warn\", ctx_r4.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r4.appearance != \"outline\")(\"id\", ctx_r4._labelId)(\"ngSwitch\", ctx_r4._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r4._control.id)(\"aria-owns\", ctx_r4._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r4.hideRequiredMarker && ctx_r4._control.required && !ctx_r4._control.disabled);\n} }\nfunction MatFormField_div_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_div_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r6.color == \"accent\")(\"mat-warn\", ctx_r6.color == \"warn\");\n} }\nfunction MatFormField_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r7._subscriptAnimationState);\n} }\nfunction MatFormField_div_14_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r16._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r16.hintLabel);\n} }\nfunction MatFormField_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r8._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r8.hintLabel);\n} }\nconst _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet nextUniqueId = 0;\n/**\n * Injection token that can be used to reference instances of `MatError`. It serves as\n * alternative token to the actual `MatError` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_ERROR = new InjectionToken('MatError');\n/** Single error message to be shown underneath the form field. */\nclass MatError {\n    constructor() {\n        this.id = `mat-error-${nextUniqueId++}`;\n    }\n}\nMatError.ɵfac = function MatError_Factory(t) { return new (t || MatError)(); };\nMatError.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatError, selectors: [[\"mat-error\"]], hostAttrs: [\"role\", \"alert\", 1, \"mat-error\"], hostVars: 1, hostBindings: function MatError_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_ERROR, useExisting: MatError }])] });\nMatError.propDecorators = {\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatError, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    'role': 'alert',\n                    '[attr.id]': 'id'\n                },\n                providers: [{ provide: MAT_ERROR, useExisting: MatError }]\n            }]\n    }], function () { return []; }, { id: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the MatFormField.\n * @docs-private\n */\nconst matFormFieldAnimations = {\n    /** Animation that transitions the form field's error and hint messages. */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-100%)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** An interface which allows a control to work inside of a `MatFormField`. */\nclass MatFormFieldControl {\n}\nMatFormFieldControl.ɵfac = function MatFormFieldControl_Factory(t) { return new (t || MatFormFieldControl)(); };\nMatFormFieldControl.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFormFieldControl });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldControl, [{\n        type: Directive\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/** @docs-private */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/** @docs-private */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `MatHint`. It serves as\n * alternative token to the actual `MatHint` class which could cause unnecessary\n * retention of the class and its directive metadata.\n *\n * *Note*: This is not part of the public API as the MDC-based form-field will not\n * need a lightweight token for `MatHint` and we want to reduce breaking changes.\n */\nconst _MAT_HINT = new InjectionToken('MatHint');\n/** Hint text to be shown underneath the form field control. */\nclass MatHint {\n    constructor() {\n        /** Whether to align the hint label at the start or end of the line. */\n        this.align = 'start';\n        /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = function MatHint_Factory(t) { return new (t || MatHint)(); };\nMatHint.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHint, selectors: [[\"mat-hint\"]], hostAttrs: [1, \"mat-hint\"], hostVars: 4, hostBindings: function MatHint_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-right\", ctx.align == \"end\");\n    } }, inputs: { align: \"align\", id: \"id\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: _MAT_HINT, useExisting: MatHint }])] });\nMatHint.propDecorators = {\n    align: [{ type: Input }],\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHint, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-right]': 'align == \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null'\n                },\n                providers: [{ provide: _MAT_HINT, useExisting: MatHint }]\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The floating label for a `mat-form-field`. */\nclass MatLabel {\n}\nMatLabel.ɵfac = function MatLabel_Factory(t) { return new (t || MatLabel)(); };\nMatLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLabel, selectors: [[\"mat-label\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-label'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * @breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) { return new (t || MatPlaceholder)(); };\nMatPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPlaceholder, selectors: [[\"mat-placeholder\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-placeholder'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatPrefix`. It serves as\n * alternative token to the actual `MatPrefix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_PREFIX = new InjectionToken('MatPrefix');\n/** Prefix to be placed in front of the form field. */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = function MatPrefix_Factory(t) { return new (t || MatPrefix)(); };\nMatPrefix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPrefix, selectors: [[\"\", \"matPrefix\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_PREFIX, useExisting: MatPrefix }])] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n        type: Directive,\n        args: [{\n                selector: '[matPrefix]',\n                providers: [{ provide: MAT_PREFIX, useExisting: MatPrefix }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatSuffix`. It serves as\n * alternative token to the actual `MatSuffix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SUFFIX = new InjectionToken('MatSuffix');\n/** Suffix to be placed at the end of the form field. */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = function MatSuffix_Factory(t) { return new (t || MatSuffix)(); };\nMatSuffix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSuffix, selectors: [[\"\", \"matSuffix\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_SUFFIX, useExisting: MatSuffix }])] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n        type: Directive,\n        args: [{\n                selector: '[matSuffix]',\n                providers: [{ provide: MAT_SUFFIX, useExisting: MatSuffix }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$2 = 0;\nconst floatingLabelScale = 0.75;\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * @docs-private\n */\nclass MatFormFieldBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/**\n * Base class to which we're applying the form field mixins.\n * @docs-private\n */\nconst _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/** Container for form controls that applies Material Design styling and behavior. */\nclass MatFormField extends _MatFormFieldMixinBase {\n    constructor(_elementRef, _changeDetectorRef, labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /** Whether the outline gap needs to be calculated next time the zone has stabilized. */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /** Override for the logic that disables the label animation in certain cases. */\n        this._showAlwaysAnimate = false;\n        /** State of the mat-hint and mat-error animations. */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId$2++}`;\n        // Unique id for the label element.\n        this._labelId = `mat-form-field-label-${nextUniqueId$2++}`;\n        this._labelOptions = labelOptions ? labelOptions : {};\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n            _defaults.hideRequiredMarker : false;\n    }\n    /** The form-field appearance style. */\n    get appearance() { return this._appearance; }\n    set appearance(value) {\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /** Whether the required marker should be hidden. */\n    get hideRequiredMarker() { return this._hideRequiredMarker; }\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /** Whether the floating label should always float or not. */\n    _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /** Whether the label can float or not. */\n    _canLabelFloat() { return this.floatLabel !== 'never'; }\n    /** Text for the form field hint. */\n    get hintLabel() { return this._hintLabel; }\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * Gets the id of the label element. If no label is present, returns `null`.\n     */\n    getLabelId() {\n        return this._hasFloatingLabel() ? this._labelId : null;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    ngAfterContentInit() {\n        this._validateControlChild();\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith(null)).subscribe(() => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            });\n        });\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        });\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular(() => {\n                        requestAnimationFrame(() => this.updateOutlineGap());\n                    });\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            });\n        }\n    }\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop) {\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    _hasPlaceholder() {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n    _hasLabel() {\n        return !!(this._labelChildNonStatic || this._labelChildStatic);\n    }\n    _shouldLabelFloat() {\n        return this._canLabelFloat() &&\n            ((this._control && this._control.shouldLabelFloat) || this._shouldAlwaysFloat());\n    }\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() ||\n            this._hasLabel() && !this._shouldLabelFloat();\n    }\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /** Determines whether to display hints or errors. */\n    _getDisplayedMessages() {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    }\n    /** Animates the placeholder up and locks it in position. */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat()) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled && this._label) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe(() => {\n                    this._showAlwaysAnimate = false;\n                });\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /** Does any extra processing that is required when handling the hints. */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     */\n    _validateHints() {\n        if (this._hintChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            let startHint;\n            let endHint;\n            this._hintChildren.forEach((hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            });\n        }\n    }\n    /** Gets the default float label state. */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || this._labelOptions.float || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            let ids = [];\n            // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.\n            if (this._control.userAriaDescribedBy &&\n                typeof this._control.userAriaDescribedBy === 'string') {\n                ids.push(...this._control.userAriaDescribedBy.split(' '));\n            }\n            if (this._getDisplayedMessages() === 'hint') {\n                const startHint = this._hintChildren ?\n                    this._hintChildren.find(hint => hint.align === 'start') : null;\n                const endHint = this._hintChildren ?\n                    this._hintChildren.find(hint => hint.align === 'end') : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids.push(...this._errorChildren.map(error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /** Throws an error if the form field's control is missing. */\n    _validateControlChild() {\n        if (!this._control && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     */\n    updateOutlineGap() {\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        let startWidth = 0;\n        let gapWidth = 0;\n        const container = this._connectionContainerRef.nativeElement;\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            const containerStart = this._getStartEnd(containerRect);\n            const labelChildren = labelEl.children;\n            const labelStart = this._getStartEnd(labelChildren[0].getBoundingClientRect());\n            let labelWidth = 0;\n            for (let i = 0; i < labelChildren.length; i++) {\n                labelWidth += labelChildren[i].offsetWidth;\n            }\n            startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable =\n            this._outlineGapCalculationNeededImmediately = false;\n    }\n    /** Gets the start end of the rect considering the current directionality. */\n    _getStartEnd(rect) {\n        return (this._dir && this._dir.value === 'rtl') ? rect.right : rect.left;\n    }\n    /** Checks whether the form field is attached to the DOM. */\n    _isAttachedToDOM() {\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return document.documentElement.contains(element);\n    }\n}\nMatFormField.ɵfac = function MatFormField_Factory(t) { return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_LABEL_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatFormField.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFormField, selectors: [[\"mat-form-field\"]], contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_ERROR, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, _MAT_HINT, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_PREFIX, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_SUFFIX, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    } }, viewQuery: function MatFormField_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    } }, hostAttrs: [1, \"mat-form-field\"], hostVars: 44, hostBindings: function MatFormField_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat())(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"mat-accent\", ctx.color == \"accent\")(\"mat-warn\", ctx.color == \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    } }, inputs: { color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\" }, exportAs: [\"matFormField\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 15, vars: 8, consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]], template: function MatFormField_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) { return ctx._control.onContainerClick && ctx._control.onContainerClick($event); });\n        ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n        ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc4.CdkObserveContent], styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"], encapsulation: 2, data: { animation: [matFormFieldAnimations.transitionMessages] }, changeDetection: 0 });\nMatFormField.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LABEL_GLOBAL_OPTIONS,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n    { type: Platform },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatFormField.propDecorators = {\n    appearance: [{ type: Input }],\n    hideRequiredMarker: [{ type: Input }],\n    hintLabel: [{ type: Input }],\n    floatLabel: [{ type: Input }],\n    underlineRef: [{ type: ViewChild, args: ['underline',] }],\n    _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer', { static: true },] }],\n    _inputContainerRef: [{ type: ViewChild, args: ['inputContainer',] }],\n    _label: [{ type: ViewChild, args: ['label',] }],\n    _controlNonStatic: [{ type: ContentChild, args: [MatFormFieldControl,] }],\n    _controlStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: true },] }],\n    _labelChildNonStatic: [{ type: ContentChild, args: [MatLabel,] }],\n    _labelChildStatic: [{ type: ContentChild, args: [MatLabel, { static: true },] }],\n    _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder,] }],\n    _errorChildren: [{ type: ContentChildren, args: [MAT_ERROR, { descendants: true },] }],\n    _hintChildren: [{ type: ContentChildren, args: [_MAT_HINT, { descendants: true },] }],\n    _prefixChildren: [{ type: ContentChildren, args: [MAT_PREFIX, { descendants: true },] }],\n    _suffixChildren: [{ type: ContentChildren, args: [MAT_SUFFIX, { descendants: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n        type: Component,\n        args: [{\n                selector: 'mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\" #underline\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\",\n                animations: [matFormFieldAnimations.transitionMessages],\n                host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat()',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.mat-accent]': 'color == \"accent\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled'\n                },\n                inputs: ['color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n                ],\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_LABEL_GLOBAL_OPTIONS]\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n            }] }, { type: ɵngcc2.Platform }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { floatLabel: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], hideRequiredMarker: [{\n            type: Input\n        }], hintLabel: [{\n            type: Input\n        }], underlineRef: [{\n            type: ViewChild,\n            args: ['underline']\n        }], _connectionContainerRef: [{\n            type: ViewChild,\n            args: ['connectionContainer', { static: true }]\n        }], _inputContainerRef: [{\n            type: ViewChild,\n            args: ['inputContainer']\n        }], _label: [{\n            type: ViewChild,\n            args: ['label']\n        }], _controlNonStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl]\n        }], _controlStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: true }]\n        }], _labelChildNonStatic: [{\n            type: ContentChild,\n            args: [MatLabel]\n        }], _labelChildStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: true }]\n        }], _placeholderChild: [{\n            type: ContentChild,\n            args: [MatPlaceholder]\n        }], _errorChildren: [{\n            type: ContentChildren,\n            args: [MAT_ERROR, { descendants: true }]\n        }], _hintChildren: [{\n            type: ContentChildren,\n            args: [_MAT_HINT, { descendants: true }]\n        }], _prefixChildren: [{\n            type: ContentChildren,\n            args: [MAT_PREFIX, { descendants: true }]\n        }], _suffixChildren: [{\n            type: ContentChildren,\n            args: [MAT_SUFFIX, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatFormFieldModule });\nMatFormFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatFormFieldModule_Factory(t) { return new (t || MatFormFieldModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            ObserversModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, { declarations: function () { return [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [MatCommonModule, MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_ERROR, MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MAT_PREFIX, MAT_SUFFIX, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, _MAT_HINT, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n\n//# sourceMappingURL=form-field.js.map","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SkeletonComponent} from './skeleton.component';\n\n@NgModule({\n    declarations: [\n        SkeletonComponent,\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        SkeletonComponent,\n    ]\n})\nexport class SkeletonModule {\n}\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n","var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, HostBinding, OnDestroy } from '@angular/core';\r\nimport { UploadQueueService } from '../upload-queue/upload-queue.service';\r\nimport { animationFrameScheduler, Subscription } from 'rxjs';\r\nimport { throttleTime } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'upload-progress-bar',\r\n    templateUrl: './upload-progress-bar.component.html',\r\n    styleUrls: ['./upload-progress-bar.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UploadProgressBarComponent implements OnDestroy {\r\n    @HostBinding('class.hidden') hidden = true;\r\n    private subscription: Subscription;\r\n    public progress: number;\r\n\r\n    constructor(\r\n        private el: ElementRef,\r\n        public uploadQueue: UploadQueueService,\r\n        private cd: ChangeDetectorRef,\r\n    ) {\r\n        this.subscription = this.uploadQueue.totalProgress()\r\n            // material progress bar animation lasts 250ms\r\n            .pipe(throttleTime(260, animationFrameScheduler, {leading: true, trailing: true}))\r\n            .subscribe(progress => {\r\n                this.progress = progress;\r\n                this.hidden = progress === 100 || this.uploadQueue.count$.value.pending === 0;\r\n                this.cd.markForCheck();\r\n            });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscription.unsubscribe();\r\n    }\r\n}\r\n\r\n","<mat-progress-bar mode=\"determinate\" [value]=\"progress\" color=\"accent\"></mat-progress-bar>\r\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {DatatableService} from '../datatable.service';\nimport {Subscription} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\n\n@Component({\n    selector: 'datatable-footer',\n    templateUrl: './datatable-footer.component.html',\n    styleUrls: ['./datatable-footer.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DatatableFooterComponent implements OnInit, OnDestroy {\n    @Input() hidePerPage = false;\n    public perPageControl = new FormControl(15);\n    public from: number;\n    public to: number;\n    public totalRecords: number;\n    public havePrevious: boolean;\n    public haveNext: boolean;\n    private changeRef: Subscription;\n\n    constructor(\n        public datable: DatatableService<any>,\n        private cd: ChangeDetectorRef,\n    ) {}\n\n    ngOnInit() {\n        this.changeRef = this.datable.paginator.response$\n            .pipe(filter(r => !!r?.pagination), map(r => r.pagination))\n            .subscribe(pagination => {\n                this.to = pagination.per_page * pagination.current_page;\n                this.from = (this.to - pagination.per_page) || 1;\n                this.totalRecords = pagination.total;\n                this.havePrevious = pagination.current_page > 1;\n                this.haveNext = pagination.current_page < pagination.last_page;\n                this.perPageControl.setValue(parseInt('' + pagination.per_page), {emitEvent: false});\n                this.cd.markForCheck();\n            });\n\n        this.perPageControl.valueChanges\n            .subscribe(perPage => {\n                this.datable.paginator.changePerPage(perPage);\n            });\n    }\n\n    ngOnDestroy() {\n        this.changeRef.unsubscribe();\n        this.datable.destroy();\n    }\n\n    public previousPage() {\n        this.datable.paginator.previousPage();\n    }\n\n    public nextPage() {\n        this.datable.paginator.nextPage();\n    }\n}\n","<div class=\"page-size\" *ngIf=\"!hidePerPage\">\n    <div class=\"page-size-label\" trans>Items per page</div>\n    <div class=\"input-container\">\n        <select class=\"page-size-input\" [formControl]=\"perPageControl\">\n            <option [ngValue]=\"10\">10</option>\n            <option [ngValue]=\"15\">15</option>\n            <option [ngValue]=\"20\">20</option>\n            <option [ngValue]=\"50\">50</option>\n            <option [ngValue]=\"100\">100</option>\n        </select>\n    </div>\n</div>\n<div class=\"range-actions\">\n    <div class=\"range-label\" *ngIf=\"from && to && totalRecords\">\n        {{from}} - {{to}} {{'of' | trans}} {{totalRecords}}\n    </div>\n    <button type=\"button\" [disabled]=\"!havePrevious || (datable.paginator.loading$ | async)\" class=\"range-button\" (click)=\"previousPage()\" mat-icon-button>\n        <mat-icon svgIcon=\"chevron-left\"></mat-icon>\n    </button>\n    <button type=\"button\" [disabled]=\"!haveNext || (datable.paginator.loading$ | async)\" class=\"range-button\" (click)=\"nextPage()\" mat-icon-button>\n        <mat-icon svgIcon=\"chevron-right\"></mat-icon>\n    </button>\n</div>\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {getFaviconFromUrl} from '@common/core/utils/get-favicon-from-url';\n\n@Pipe({\n    name: 'favicon'\n})\nexport class FaviconPipe implements PipeTransform {\n    transform(url: string): string {\n        if (!url) {\n            return null;\n        }\n        if (url.includes('youtube')) {\n            return 'https://www.youtube.com/s/desktop/ca54e1bd/img/favicon.ico';\n        } else {\n            return getFaviconFromUrl(url);\n        }\n    }\n}\n","import {isAbsoluteUrl} from '@common/core/utils/is-absolute-url';\r\n\r\nexport function getFaviconFromUrl(url: string) {\r\n    if ( ! url) {\r\n        return null;\r\n    }\r\n    // relative url to current site\r\n    if ( ! isAbsoluteUrl(url)) {\r\n        url = window.location.protocol + '//' + window.location.host;\r\n    }\r\n    const domain = new URL(url).origin;\r\n    return 'https://www.google.com/s2/favicons?domain=' + domain;\r\n}\r\n","var getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","import { DriveFolder } from '../../folders/models/driveFolder';\r\nimport { DriveEntry } from '../../files/models/drive-entry';\r\nimport { ConfirmModalData } from '@common/core/ui/confirm-modal/confirm-modal.component';\r\nimport { ComponentType } from '@angular/cdk/portal';\r\nimport { UploadedFile } from '@common/uploads/uploaded-file';\r\nimport { SortColumn, SortDirection } from '../../entries/available-sorts';\r\nimport { LoadEntriesAction } from './events';\r\nimport { DriveApiIndexParams } from '../../drive-entry-api.service';\r\nimport { FileEntry } from '@common/uploads/types/file-entry';\r\nimport { ShareableLink } from '../../sharing/links/models/shareable-link';\r\nimport { MatDialogConfig } from '@angular/material/dialog';\r\nimport { User } from '../../../../common/core/types/models/User';\r\nimport { Workspace } from '../../../../common/workspaces/types/workspace';\r\nimport { DrivePage } from '../models/drive-page';\r\n\r\nexport class LoadUserFolders {\r\n    static readonly type = '[Drive] Load User Folders';\r\n}\r\n\r\nexport class LoadUserSpaceUsage {\r\n    static readonly type = '[Drive] Load User Space Usage';\r\n}\r\n\r\nexport class BuildFolderTree {\r\n    static readonly type = '[Drive] Build Folder Tree';\r\n    constructor(public folders?: DriveFolder[]) {}\r\n}\r\n\r\nexport class OpenFolder {\r\n    static readonly type = '[Drive] Open Folder';\r\n    constructor(public folder?: DriveFolder) {}\r\n}\r\n\r\nexport class OpenSearchPage {\r\n    static readonly type = '[Drive] Open Search Page';\r\n    constructor(public queryParams: {\r\n        type?: string,\r\n        query?: string,\r\n    }) {}\r\n}\r\n\r\nexport class SelectEntries {\r\n    static readonly type = '[Drive] Select Entries';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class SelectAllEntries {\r\n    static readonly type = '[Drive] Select All Entries';\r\n}\r\n\r\nexport class DeselectAllEntries {\r\n    static readonly type = '[Drive] Deselect All Entries';\r\n}\r\n\r\nexport class DeleteSelectedEntries {\r\n    static readonly type = '[Drive] Delete Selected Entries';\r\n}\r\n\r\nexport class OpenUploadsPanel {\r\n    static readonly type = '[Drive] Open UploadsApiService Panel';\r\n}\r\n\r\nexport class CloseUploadsPanel {\r\n    static readonly type = '[Drive] Close UploadsApiService Panel';\r\n}\r\n\r\nexport class AddEntries {\r\n    static readonly type = '[Drive] Add Entries';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class MoveEntries {\r\n    static readonly type = '[Drive API] Move Entries';\r\n    constructor(public destination: DriveFolder, public entries?: DriveEntry[]) {}\r\n}\r\n\r\nexport class OpenDialog {\r\n    static readonly type = '[Drive] Open Dialog';\r\n    constructor(public dialog: ComponentType<any>, public data?: object, public config?: MatDialogConfig) {}\r\n}\r\n\r\nexport class OpenConfirmDialog {\r\n    static readonly type = '[Drive] Open Confirm Dialog';\r\n    constructor(public data: ConfirmModalData, public confirmAction: any) {}\r\n}\r\n\r\nexport class SetViewMode {\r\n    static readonly type = '[Drive] Set View Mode';\r\n    constructor(public mode: 'list'|'grid') {}\r\n}\r\n\r\nexport class ToggleDetailsSidebar {\r\n    static readonly type = '[Drive] Toggle Details';\r\n}\r\n\r\nexport class ToggleSidebar {\r\n    static readonly type = '[Drive] Toggle Sidebar';\r\n}\r\n\r\nexport class UploadFiles {\r\n    static readonly type = '[Drive] Upload Files';\r\n    constructor(public files: UploadedFile[]) {}\r\n}\r\n\r\nexport class RestoreTrashedEntries {\r\n    static readonly type = '[Drive] Restore Trashed Entries';\r\n    constructor(public entries?: DriveEntry[]) {}\r\n}\r\n\r\nexport class DeleteTrashedEntriesForever {\r\n    static readonly type = '[Drive] Delete Trashed Entries Forever';\r\n}\r\n\r\nexport class EmptyTrash {\r\n    static readonly type = '[Drive] Empty Trash';\r\n}\r\n\r\nexport class OpenFilePreview {\r\n    static readonly type = '[Drive] Open File Preview Overlay';\r\n    constructor(public entries?: DriveEntry[]) {}\r\n}\r\n\r\nexport class DownloadEntries {\r\n    static readonly type = '[Drive] Download Files';\r\n    constructor(public entries?: FileEntry[], public link?: ShareableLink, public password?: string) {}\r\n}\r\n\r\nexport class AddStar {\r\n    static readonly type = '[Drive] Add a Star';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class RemoveStar {\r\n    static readonly type = '[Drive] Remove Star';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class RemoveEntries {\r\n    static readonly type = '[Drive] Remove Entries';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class ChangeSort {\r\n    static readonly type = '[Drive] Change Sort';\r\n    constructor(public sort: SortColumn, public direction: SortDirection = 'desc') {}\r\n}\r\n\r\nexport class LoadMoreEntries implements LoadEntriesAction {\r\n    static readonly type = '[Drive Infinite Scroll] Load More Entries';\r\n    public loadMore = true;\r\n    constructor(public queryParams: DriveApiIndexParams = {}) {}\r\n}\r\n\r\nexport class ReloadPageEntries implements LoadEntriesAction {\r\n    static readonly type = '[Drive] Reload Page Entries';\r\n    constructor(public queryParams: DriveApiIndexParams = {}, public page?: DrivePage) {}\r\n}\r\n\r\nexport class CopySelectedEntries {\r\n    static readonly type = '[Drive] Copy Selected Entries';\r\n}\r\n\r\nexport class OpenUploadWindow {\r\n    static readonly type = '[Drive] Open Upload Window';\r\n    constructor(public type: 'file'|'directory') {}\r\n}\r\n\r\nexport class ShowLoadingToast {\r\n    static readonly type = '[Drive] Show Loading Toast';\r\n    constructor(public message: string) {}\r\n}\r\n\r\nexport class HideLoadingToast {\r\n    static readonly type = '[Drive] Hide Loading Toast';\r\n}\r\n\r\nexport class ResetState {\r\n    static readonly type = '[Drive] Reset State';\r\n}\r\n\r\nexport class UpdateEntries {\r\n    static readonly type = '[Drive] Update Entries';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class SetCurrentUser {\r\n    static readonly type = '[Drive] Set Current User';\r\n    constructor(public user: User) {}\r\n}\r\n\r\nexport class SetWorkspace {\r\n    static readonly type = '[Drive] Set Workspace';\r\n    constructor(public workspace: Workspace) {}\r\n}\r\n\r\nexport class UpdateEntryDescription {\r\n    static readonly type = '[Drive] Update Entry Description';\r\n    constructor(public entry: FileEntry, public description: string) {}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { DrivePageType } from './available-pages';\r\nimport { DriveFolder } from '../../folders/models/driveFolder';\r\nimport { SortColumn, SortDirection } from '../../entries/available-sorts';\r\n\r\nexport const DRIVE_PAGE_NAMES: {[key: string]: DrivePageType} = {\r\n    FOLDER: 'folder',\r\n    RECENT: 'recent',\r\n    TRASH: 'trash',\r\n    SHARES: 'shares',\r\n    STARRED: 'starred',\r\n    SEARCH: 'search',\r\n    WORKSPACES: 'workspaces',\r\n};\r\n\r\nexport interface DrivePageParams {\r\n    name: DrivePageType;\r\n    viewName: string;\r\n    folder?: DriveFolder;\r\n    folderHash?: string;\r\n    hasActions?: boolean;\r\n    disableSort?: boolean;\r\n    sortColumn?: SortColumn;\r\n    queryParams?: object;\r\n    sortDirection?: SortDirection;\r\n}\r\n\r\nexport class DrivePage implements DrivePageParams {\r\n    name = null;\r\n    viewName = null;\r\n    folder = null;\r\n    folderHash = null;\r\n    hasActions = false;\r\n    sortColumn = 'updated_at' as SortColumn;\r\n    sortDirection = 'desc' as SortDirection;\r\n    queryParams = {};\r\n\r\n    constructor(params: DrivePageParams) {\r\n        Object.keys(params).forEach(key => {\r\n            this[key] = params[key];\r\n        });\r\n    }\r\n}\r\n\r\nexport const RECENT_PAGE = new DrivePage({\r\n    name: DRIVE_PAGE_NAMES.RECENT,\r\n    viewName: 'Recent',\r\n    disableSort: true,\r\n    sortColumn: 'created_at',\r\n    sortDirection: 'desc',\r\n    queryParams: {\r\n        recentOnly: true,\r\n    }\r\n});\r\n\r\nexport const SEARCH_PAGE = new DrivePage({\r\n    name: DRIVE_PAGE_NAMES.SEARCH,\r\n    viewName: 'Search results',\r\n});\r\n\r\nexport const SHARES_PAGE = new DrivePage({\r\n    name: DRIVE_PAGE_NAMES.SHARES,\r\n    viewName: 'Shared',\r\n    queryParams: {\r\n        sharedOnly: true,\r\n    }\r\n});\r\n\r\nexport const TRASH_PAGE = new DrivePage({\r\n    name: DRIVE_PAGE_NAMES.TRASH,\r\n    viewName: 'Trash',\r\n    hasActions: true,\r\n    queryParams: {\r\n        deletedOnly: true,\r\n    }\r\n});\r\n\r\nexport const WORKSPACE_INDEX_PAGE = new DrivePage({\r\n    name: DRIVE_PAGE_NAMES.WORKSPACES,\r\n    viewName: 'Workspaces',\r\n});\r\n\r\nexport const STARRED_PAGE = new DrivePage({\r\n    name: DRIVE_PAGE_NAMES.STARRED,\r\n    viewName: 'Starred',\r\n    queryParams: {\r\n        starredOnly: true,\r\n    }\r\n});\r\n\r\nexport class FolderPage extends DrivePage {\r\n    constructor(folder?: DriveFolder) {\r\n        super({\r\n            name: DRIVE_PAGE_NAMES.FOLDER,\r\n            viewName: folder?.name,\r\n            folder,\r\n            folderHash: folder?.hash,\r\n            hasActions: true\r\n        });\r\n    }\r\n}\r\n","import { DriveEntry } from '../../files/models/drive-entry';\r\nimport { DriveFolder } from '../../folders/models/driveFolder';\r\nimport { DriveApiIndexParams } from '../../drive-entry-api.service';\r\nimport { SortColumn } from '../../entries/available-sorts';\r\nimport {\r\n    DrivePage,\r\n    FolderPage,\r\n    RECENT_PAGE,\r\n    SEARCH_PAGE,\r\n    SHARES_PAGE,\r\n    STARRED_PAGE,\r\n    TRASH_PAGE,\r\n    WORKSPACE_INDEX_PAGE,\r\n} from '../models/drive-page';\r\n\r\nexport interface LoadEntriesAction {\r\n    queryParams: DriveApiIndexParams;\r\n    page?: DrivePage;\r\n    folder?: DriveFolder;\r\n    loadMore?: boolean;\r\n}\r\n\r\nexport class RecentEntriesPageOpened implements LoadEntriesAction {\r\n    static readonly type = '[Drive] Recent Entries Page Opened';\r\n    public page = RECENT_PAGE;\r\n    public queryParams = {orderBy: 'created_at' as SortColumn, recentOnly: true};\r\n}\r\n\r\nexport class FolderPageOpened implements LoadEntriesAction {\r\n    static readonly type = '[Drive] Folder Page Opened';\r\n    public page: DrivePage;\r\n    public queryParams = {};\r\n    constructor(folderHash: string|null) {\r\n        this.page = new FolderPage({hash: folderHash} as DriveFolder);\r\n    }\r\n}\r\n\r\nexport class SharesFolderOpened implements LoadEntriesAction {\r\n    static readonly type = '[Drive] Shared folder opened';\r\n    public page = SHARES_PAGE;\r\n    public queryParams = {sharedOnly: true};\r\n}\r\n\r\nexport class TrashPageOpened implements LoadEntriesAction {\r\n    static readonly type = '[Drive] Trash Page Opened';\r\n    public page = TRASH_PAGE;\r\n    public queryParams = {deletedOnly: true};\r\n}\r\n\r\nexport class WorkspacesIndexPageOpened {\r\n    static readonly type = '[Drive] Workspaces Index Page Opened';\r\n    public page = WORKSPACE_INDEX_PAGE;\r\n}\r\n\r\nexport class SearchPageOpened implements LoadEntriesAction {\r\n    static readonly type = '[Drive] Search Page Opened';\r\n    public page = SEARCH_PAGE;\r\n    constructor(public queryParams: {\r\n        type?: string;\r\n        query?: string;\r\n    } = {}) {}\r\n}\r\n\r\nexport class StarredPageOpened implements LoadEntriesAction {\r\n    static readonly type = '[Drive] Starred Entries Page Opened';\r\n    public page = STARRED_PAGE;\r\n    public queryParams = {starredOnly: true};\r\n}\r\n\r\nexport class EntriesSelectedViaDrag {\r\n    static readonly type = '[Drive] Entries Selected Via Drag';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class EntrySelectedViaContextMenu {\r\n    static readonly type = '[Drive] File Selected Via ContextMenu';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class EntryTapped {\r\n    static readonly type = '[Drive] User Tapped File';\r\n    constructor(public entry: DriveEntry, public ctrlKey = false) {}\r\n}\r\n\r\nexport class EntryDoubleTapped {\r\n    static readonly type = '[Drive] User Double Tapped Entry';\r\n    constructor(public entry: DriveEntry) {}\r\n}\r\n\r\nexport class FileDeleteSuccess {\r\n    static readonly type = '[Drive] Successfully Deleted Files';\r\n    constructor(public deletedFiles: DriveEntry[]) {}\r\n}\r\n\r\nexport class EntryContextMenuOpened {\r\n    static readonly type = '[Drive] Entry Context Menu Opened';\r\n    constructor(public entry: DriveEntry) {}\r\n}\r\n\r\nexport class NewFolderCreated {\r\n    static readonly type = '[Drive] New Folder Created';\r\n    constructor(public folder: DriveFolder) {}\r\n}\r\n\r\nexport class EntryRenamed {\r\n    static readonly type = '[Drive] Entry Renamed';\r\n    constructor(public entry: DriveEntry, public newName: string) {}\r\n}\r\n\r\nexport class StartedDragging {\r\n    static readonly type = '[Drive] Started Dragging';\r\n}\r\n\r\nexport class StoppedDragging {\r\n    static readonly type = '[Drive] Stopped Dragging';\r\n}\r\n\r\nexport class MoveEntriesSuccess {\r\n    static readonly type = '[Drive API] Move Entries Success';\r\n    constructor(\r\n        public destination: number,\r\n        public oldLocation: number,\r\n        public entries: DriveEntry[]\r\n    ) {}\r\n}\r\n\r\nexport class MoveEntriesFailed {\r\n    static readonly type = '[Drive API] Move Entries Failed';\r\n    constructor(public messages: object) {}\r\n}\r\n\r\nexport class TrashedEntriesDeleteSuccess {\r\n    static readonly type = '[Drive API] Trashed Entries Delete Forever Success';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class TrashedEntriesRestoreSuccess {\r\n    static readonly type = '[Drive API] Trashed Entries Restore Success';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class NotEnoughSpaceError {\r\n    static readonly type = '[Drive] Not Enough Space Error';\r\n}\r\n\r\nexport class UserSpaceUsageChanged {\r\n    static readonly type = '[Drive] User Space Usage Changed';\r\n}\r\n\r\nexport class BreakpointChanged {\r\n    static readonly type = '[Drive] BreakpointChanged';\r\n    constructor(public status: {isMobile: boolean}) {}\r\n}\r\n\r\n\r\n","import { SortColumn, SortDirection } from '../../entries/available-sorts';\r\nimport { DriveEntry } from '../../files/models/drive-entry';\r\nimport { DriveFolder } from '../../folders/models/driveFolder';\r\nimport { DrivePage } from './drive-page';\r\nimport { UserSpaceUsage } from './user-space-usage';\r\nimport { User } from '@common/core/types/models/User';\r\nimport { Workspace } from '../../../../common/workspaces/types/workspace';\r\n\r\nexport interface DriveStateModel {\r\n    isMobile: boolean;\r\n    activePage: DrivePage;\r\n    folderTree: DriveFolder[];\r\n    flatFolders: DriveFolder[];\r\n    userFoldersLoaded: boolean;\r\n    entries: DriveEntry[];\r\n    selectedEntries: DriveEntry[];\r\n    spaceUsage: UserSpaceUsage;\r\n    rootFolder?: DriveFolder;\r\n    meta: {\r\n        currentPage: number;\r\n        lastPage: number;\r\n        sortColumn: SortColumn;\r\n        sortDirection: SortDirection;\r\n        type?: string|null,\r\n        query?: string|null\r\n    };\r\n    dragging: boolean;\r\n    loading: boolean;\r\n    uploadsPanelOpen: boolean;\r\n    viewMode: 'list'|'grid';\r\n    detailsVisible: boolean;\r\n    sidebarOpen: boolean;\r\n    currentUser: User|null;\r\n    activeWorkspace: Workspace|null;\r\n}\r\n\r\nexport const VIEW_MODE_KEY = 'bedrive.viewMode';\r\n","import { DriveStateModel } from './drive-state-model';\r\n\r\nexport const DRIVE_STATE_MODEL_DEFAULTS: DriveStateModel = {\r\n    isMobile: false,\r\n    activePage: null,\r\n    folderTree: [],\r\n    flatFolders: [],\r\n    userFoldersLoaded: false,\r\n    entries: [],\r\n    selectedEntries: [],\r\n    dragging: false,\r\n    loading: false,\r\n    uploadsPanelOpen: false,\r\n    viewMode: 'grid' as 'grid'|'list',\r\n    detailsVisible: true,\r\n    sidebarOpen: true,\r\n    currentUser: null,\r\n    activeWorkspace: null,\r\n    spaceUsage: {\r\n        available: null,\r\n        used: null,\r\n    },\r\n    meta: {\r\n        sortColumn: 'updated_at',\r\n        sortDirection: 'desc',\r\n        currentPage: 0,\r\n        lastPage: 0,\r\n    },\r\n};\r\n","export enum LoadingToastMessages {\r\n    copyEntries =  'Copying items...',\r\n    emptyTrash = 'Emptying trash...',\r\n    moveEntries = 'Moving items...',\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\nimport { UploadInputConfig } from '../../common/uploads/upload-input-config';\r\n\r\nexport const DRIVE_UPLOAD_INPUT_CONFIG = new InjectionToken<UploadInputConfig>('DRIVE_UPLOAD_INPUT_CONFIG');","export enum FOLDERS_API_ROUTES {\r\n    GET_ALL = 'drive/folders',\r\n    CREATE = 'drive/folders',\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\nimport {FOLDERS_API_ROUTES} from './folders-api-routes.enum';\nimport {DriveFolder} from '../models/driveFolder';\nimport {CurrentUser} from '@common/auth/current-user';\nimport { BackendResponse } from '@common/core/types/backend-response';\nimport { PaginatedBackendResponse } from '@common/core/types/pagination/paginated-backend-response';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FoldersApiService {\n\n    constructor(\n        private http: AppHttpClient,\n        private currentUser: CurrentUser\n    ) {}\n\n    public getAll(params?: {userId?: number}): PaginatedBackendResponse<DriveFolder> {\n        return this.http.get(FOLDERS_API_ROUTES.GET_ALL, params);\n    }\n\n    public getAllForCurrentUser(): BackendResponse<{folders: DriveFolder[], rootFolder: DriveFolder}> {\n        return this.http.get('drive/users/' + this.currentUser.get('id') + '/folders');\n    }\n\n    public create(params: {name: string, parentId: number|null}): BackendResponse<{folder: DriveFolder}> {\n        return this.http.post(FOLDERS_API_ROUTES.CREATE, params);\n    }\n\n    public getByHash(hash: string): BackendResponse<{folder: DriveFolder}> {\n        return this.http.get('drive/folders/find', {hash});\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AppHttpClient } from '@common/core/http/app-http-client.service';\nimport { DriveEntry } from './files/models/drive-entry';\nimport { BackendResponse } from '@common/core/types/backend-response';\nimport { DriveFolder } from './folders/models/driveFolder';\nimport { Observable } from 'rxjs';\nimport { CurrentUser } from '@common/auth/current-user';\nimport { Tag } from '@common/core/types/models/Tag';\nimport { SortColumn, SortDirection } from './entries/available-sorts';\nimport { UserSpaceUsage } from './state/models/user-space-usage';\nimport { PaginationResponse } from '@common/core/types/pagination/pagination-response';\n\nexport interface DriveApiIndexParams {\n    orderBy?: SortColumn;\n    orderDir?: SortDirection;\n    folderId?: number;\n    userId?: number;\n    query?: string;\n    type?: string;\n    deletedOnly?: boolean;\n    starredOnly?: boolean;\n    sharedOnly?: boolean;\n    per_page?: number;\n    page?: number;\n    recentOnly?: boolean;\n}\n\nexport interface DriveEntriesPaginationResponse extends PaginationResponse<DriveFolder> {\n    folder: DriveFolder;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DriveEntryApiService {\n    constructor(private http: AppHttpClient, private currentUser: CurrentUser) {}\n\n    public getEntriesForFolder(params: DriveApiIndexParams = {}): Observable<DriveEntriesPaginationResponse> {\n        return this.http.get('drive/entries', params);\n    }\n\n    public getCurrentUserEntries(params: DriveApiIndexParams): Observable<DriveEntriesPaginationResponse> {\n        params.userId = this.currentUser.get('id');\n        return this.http.get('drive/entries', params);\n    }\n\n    public update(entryId: number, params: {name?: string, description?: string}): BackendResponse<{fileEntry: DriveEntry}> {\n        return this.http.put('uploads/' + entryId, params);\n    }\n\n    public delete(params: {entryIds?: number[], deleteForever?: boolean, emptyTrash?: boolean}): BackendResponse<void> {\n        return this.http.delete('drive/entries', params);\n    }\n\n    public copy(params: {entryIds: number[]}): BackendResponse<{entries: DriveEntry[]}> {\n        return this.http.post('drive/entries/copy', params);\n    }\n\n    public restore(params: {entryIds: number[]}): BackendResponse<void> {\n        return this.http.post('drive/entries/restore', params);\n    }\n\n    public emptyTrash(): BackendResponse<void> {\n        return this.delete({emptyTrash: true});\n    }\n\n    public moveEntries(params: {entryIds: number[], destination: number}): BackendResponse<{entries: DriveEntry[]}> {\n        return this.http.post('drive/entries/move', params);\n    }\n\n    public addStar(entryIds: number[]): BackendResponse<{tag: Tag}> {\n        return this.http.post('drive/entries/star', {entryIds});\n    }\n\n    public removeStar(entryIds: number[]): BackendResponse<{tag: Tag}> {\n        return this.http.post('drive/entries/unstar', {entryIds});\n    }\n\n    public getSpaceUsage(): BackendResponse<UserSpaceUsage> {\n        return this.http.get('drive/user/space-usage');\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { DriveFolder } from './folders/models/driveFolder';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DriveUrlsService {\n    public driveRoot() {\n        return '/drive';\n    }\n\n    public folder(folder: DriveFolder) {\n        if ( ! folder?.id) {\n            return this.driveRoot();\n        } else {\n            return `/drive/folders/${(folder as DriveFolder).hash}`;\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { UploadValidator } from '@common/uploads/validation/upload-validator';\nimport { FileSizeValidation } from '@common/uploads/validation/validations/file-size-validation';\nimport { convertToBytes } from '@common/core/utils/convertToBytes';\nimport { AllowedExtensionsValidation } from '@common/uploads/validation/validations/allowed-extensions-validation';\nimport { BlockedExtensionsValidation } from '@common/uploads/validation/validations/blocked-extensions-validation';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DriveUploadValidator extends UploadValidator {\n    protected readonly DEFAULT_MAX_FILE_SIZE_MB = 8;\n\n    protected initValidations() {\n        this.validations.push(\n            new FileSizeValidation(\n                {maxSize: this.getMaxFileSize()},\n                this.i18n\n            )\n        );\n\n        const allowedExtensions = this.getAllowedExtensions(),\n            blockedExtensions = this.getBlockedExtensions();\n\n        if (allowedExtensions && allowedExtensions.length) {\n            this.validations.push(new AllowedExtensionsValidation(\n                {extensions: allowedExtensions}, this.i18n\n            ));\n        }\n\n        if (blockedExtensions && blockedExtensions.length) {\n            this.validations.push(new BlockedExtensionsValidation(\n                {extensions: blockedExtensions}, this.i18n\n            ));\n        }\n    }\n\n    protected getMaxFileSize(): number {\n        return this.settings.get(\n            'uploads.max_size',\n            convertToBytes(this.DEFAULT_MAX_FILE_SIZE_MB, 'MB')\n        );\n    }\n\n    protected getAllowedExtensions() {\n        return this.settings.getJson('uploads.allowed_extensions');\n    }\n\n    protected getBlockedExtensions() {\n        return this.settings.getJson('uploads.blocked_extensions');\n    }\n}\n","import { DriveFolder } from '../folders/models/driveFolder';\r\nimport { DriveEntry } from '../files/models/drive-entry';\r\nimport { Action, Selector, State, StateContext, Store } from '@ngxs/store';\r\nimport { FoldersApiService } from '../folders/api/folders-api.service';\r\nimport { finalize, tap } from 'rxjs/operators';\r\nimport { DriveApiIndexParams, DriveEntryApiService } from '../drive-entry-api.service';\r\nimport { Router } from '@angular/router';\r\nimport { DriveUrlsService } from '../drive-urls.service';\r\nimport { RouterState } from '@ngxs/router-plugin';\r\nimport isEqual from 'lodash/isEqual';\r\nimport {\r\n    AddEntries,\r\n    AddStar,\r\n    BuildFolderTree,\r\n    CopySelectedEntries,\r\n    DeleteSelectedEntries,\r\n    DeleteTrashedEntriesForever,\r\n    DeselectAllEntries,\r\n    EmptyTrash,\r\n    HideLoadingToast,\r\n    LoadMoreEntries,\r\n    LoadUserFolders,\r\n    LoadUserSpaceUsage,\r\n    MoveEntries,\r\n    OpenConfirmDialog,\r\n    OpenFilePreview,\r\n    OpenFolder,\r\n    OpenSearchPage,\r\n    OpenUploadsPanel,\r\n    OpenUploadWindow,\r\n    ReloadPageEntries,\r\n    RemoveEntries,\r\n    RemoveStar,\r\n    ResetState,\r\n    RestoreTrashedEntries,\r\n    SelectAllEntries,\r\n    SelectEntries,\r\n    SetCurrentUser,\r\n    SetViewMode,\r\n    SetWorkspace,\r\n    ShowLoadingToast,\r\n    ToggleDetailsSidebar,\r\n    ToggleSidebar,\r\n    UpdateEntries,\r\n    UpdateEntryDescription,\r\n    UploadFiles,\r\n} from './actions/commands';\r\nimport {\r\n    BreakpointChanged,\r\n    EntriesSelectedViaDrag,\r\n    EntryContextMenuOpened,\r\n    EntryDoubleTapped,\r\n    EntryRenamed,\r\n    EntrySelectedViaContextMenu,\r\n    EntryTapped,\r\n    FileDeleteSuccess,\r\n    FolderPageOpened,\r\n    LoadEntriesAction,\r\n    MoveEntriesFailed,\r\n    MoveEntriesSuccess,\r\n    NewFolderCreated,\r\n    NotEnoughSpaceError,\r\n    RecentEntriesPageOpened,\r\n    SearchPageOpened,\r\n    SharesFolderOpened,\r\n    StarredPageOpened,\r\n    StartedDragging,\r\n    StoppedDragging,\r\n    TrashedEntriesDeleteSuccess,\r\n    TrashedEntriesRestoreSuccess,\r\n    TrashPageOpened,\r\n    UserSpaceUsageChanged,\r\n    WorkspacesIndexPageOpened,\r\n} from './actions/events';\r\nimport { DriveStateModel, VIEW_MODE_KEY } from './models/drive-state-model';\r\nimport { DRIVE_STATE_MODEL_DEFAULTS } from './models/drive-state-model-defaults';\r\nimport { LocalStorage } from '@common/core/services/local-storage.service';\r\nimport { UploadQueueService } from '@common/uploads/upload-queue/upload-queue.service';\r\nimport { DriveUploadValidator } from '../uploads/drive-upload-validator';\r\nimport { openUploadWindow } from '@common/uploads/utils/open-upload-window';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { UploadInputConfig } from '@common/uploads/upload-input-config';\r\nimport { UploadedFile } from '@common/uploads/uploaded-file';\r\nimport { UserSpaceUsage } from './models/user-space-usage';\r\nimport { LoadingToastMessages } from '../messages/loading-toast/loading-toast-messages';\r\nimport { User } from '@common/core/types/models/User';\r\nimport { DRIVE_PAGE_NAMES, DrivePage, TRASH_PAGE } from './models/drive-page';\r\nimport { DRIVE_UPLOAD_INPUT_CONFIG } from '../upload-input-config';\r\nimport { Tag } from '@common/core/types/models/Tag';\r\nimport { FileEntry } from '@common/uploads/types/file-entry';\r\nimport { hasKey } from '@common/core/utils/has-key';\r\nimport { BackendErrorResponse } from '../../../common/core/types/backend-error-response';\r\nimport { buildFolderTree } from '../sidebar/folders-tree/build-folder-tree';\r\nimport { WorkspacesService } from '../../../common/workspaces/workspaces.service';\r\nimport { Workspace } from '../../../common/workspaces/types/workspace';\r\nimport { Toast } from '../../../common/core/ui/toast.service';\r\n\r\n@State<DriveStateModel>({\r\n    name: 'drive',\r\n    defaults: DRIVE_STATE_MODEL_DEFAULTS,\r\n})\r\n@Injectable()\r\nexport class DriveState {\r\n    constructor(\r\n        private foldersApi: FoldersApiService,\r\n        private entriesApi: DriveEntryApiService,\r\n        private router: Router,\r\n        private driveUrls: DriveUrlsService,\r\n        private uploads: UploadQueueService,\r\n        private store: Store,\r\n        private localStore: LocalStorage,\r\n        private validator: DriveUploadValidator,\r\n        private workspaces: WorkspacesService,\r\n        private toast: Toast,\r\n        @Inject(DRIVE_UPLOAD_INPUT_CONFIG) private uploadInputConfig: UploadInputConfig,\r\n    ) {}\r\n\r\n    @Selector()\r\n    static flatFolders(state: DriveStateModel) {\r\n        return state.flatFolders;\r\n    }\r\n\r\n    @Selector()\r\n    static userFoldersLoaded(state: DriveStateModel) {\r\n        return state.userFoldersLoaded;\r\n    }\r\n\r\n    @Selector()\r\n    static activePage(state: DriveStateModel) {\r\n        return state.activePage;\r\n    }\r\n\r\n    @Selector()\r\n    static activePageName(state: DriveStateModel) {\r\n        return state.activePage.name;\r\n    }\r\n\r\n    @Selector()\r\n    static userFolders(state: DriveStateModel) {\r\n        return state.folderTree;\r\n    }\r\n\r\n    @Selector()\r\n    static selectedEntries(state: DriveStateModel) {\r\n        return state.selectedEntries;\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries])\r\n    static selectedEntryIds(state: DriveStateModel, selectedEntries: DriveEntry[]) {\r\n        return selectedEntries.map(entry => entry.id);\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries])\r\n    static selectedEntry(state: DriveStateModel, selected: DriveEntry[]) {\r\n        return selected ? selected[selected.length - 1] : null;\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntry])\r\n    static selectedEntryOrActiveFolder(state: DriveStateModel, selected: DriveEntry[]) {\r\n        return selected || state.activePage.folder;\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntryOrActiveFolder, DriveState.flatFolders])\r\n    static selectedEntryParent(state: DriveStateModel, selected: DriveFolder, folders: DriveFolder[]) {\r\n        if ( ! selected || ! folders || ! selected.parent_id) {\r\n            return state.rootFolder;\r\n        }\r\n        return folders.find(f => f.id === selected.parent_id);\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries])\r\n    static anythingSelected(state: DriveStateModel, selectedEntries: DriveEntry[]) {\r\n        return selectedEntries.length > 0;\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries])\r\n    static allSelectedEntriesStarred(state: DriveStateModel, selectedEntries: DriveEntry[]) {\r\n        return selectedEntries.every(entry => !!entry.tags.find(tag => tag.name === 'starred'));\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries])\r\n    static onlyFoldersSelected(state: DriveStateModel, selectedEntries: DriveEntry[]) {\r\n        return selectedEntries.every(entry => entry.type === 'folder');\r\n    }\r\n\r\n    @Selector()\r\n    static entries(state: DriveStateModel) {\r\n        return state.entries;\r\n    }\r\n\r\n    @Selector()\r\n    static entriesEmpty(state: DriveStateModel) {\r\n        // only return true if entries have already loaded\r\n        return state.meta.currentPage && ! state.loading && state.entries.length === 0;\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries])\r\n    static multipleEntriesSelected(state: DriveStateModel, selectedEntries: DriveEntry[]) {\r\n        return selectedEntries.length > 1;\r\n    }\r\n\r\n    @Selector()\r\n    static activeFolder(state: DriveStateModel) {\r\n        return state.activePage.folder;\r\n    }\r\n\r\n    @Selector()\r\n    static rootFolder(state: DriveStateModel) {\r\n        return state.rootFolder;\r\n    }\r\n\r\n    @Selector()\r\n    static meta(state: DriveStateModel) {\r\n        return state.meta;\r\n    }\r\n\r\n    @Selector()\r\n    static dragging(state: DriveStateModel) {\r\n        return state.dragging;\r\n    }\r\n\r\n    @Selector()\r\n    static loading(state: DriveStateModel) {\r\n        return state.loading;\r\n    }\r\n\r\n    @Selector()\r\n    static currentPage(state: DriveStateModel) {\r\n        return state.meta.currentPage;\r\n    }\r\n\r\n    @Selector()\r\n    static viewMode(state: DriveStateModel) {\r\n        return state.viewMode;\r\n    }\r\n\r\n    @Selector()\r\n    static detailsOpen(state: DriveStateModel) {\r\n        return state.detailsVisible;\r\n    }\r\n\r\n    @Selector()\r\n    static sidebarOpen(state: DriveStateModel) {\r\n        return state.sidebarOpen;\r\n    }\r\n\r\n    @Selector()\r\n    static sortColumn(state: DriveStateModel) {\r\n        return state.meta.sortColumn;\r\n    }\r\n\r\n    @Selector()\r\n    static sortDirection(state: DriveStateModel) {\r\n        return state.meta.sortDirection;\r\n    }\r\n\r\n    @Selector()\r\n    static canLoadMoreEntries(state: DriveStateModel) {\r\n        return state.meta.currentPage < state.meta.lastPage;\r\n    }\r\n\r\n    @Selector()\r\n    static userSpaceUsed(state: DriveStateModel) {\r\n        return state.spaceUsage.used;\r\n    }\r\n\r\n    @Selector()\r\n    static userSpaceAvailable(state: DriveStateModel) {\r\n        return state.spaceUsage.available;\r\n    }\r\n\r\n    @Selector([DriveState.userSpaceUsed, DriveState.userSpaceAvailable])\r\n    static spaceUsedPercent(state: DriveStateModel, spaceUsed: number, spaceAvail: number) {\r\n        // null means that user has unlimited space available\r\n        return spaceAvail === null ? 0 : ((spaceUsed * 100) / spaceAvail);\r\n    }\r\n\r\n    @Selector()\r\n    static isMobile(state: DriveStateModel) {\r\n        return state.isMobile;\r\n    }\r\n\r\n    static userHasPermission(permission: 'edit'|'owner', folder: DriveEntry, user: User) {\r\n        // we are not in a folder view, can bail\r\n        if ( ! folder || ! user) return false;\r\n\r\n        // check if user is the owner of currently open folder\r\n        const folderUser = (folder as DriveEntry).users.find(u => u.id === user.id);\r\n        if (folderUser.owns_entry || folderUser.entry_permissions[permission]) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    @Selector()\r\n    static currentUser(state: DriveStateModel) {\r\n        return state.currentUser;\r\n    }\r\n\r\n    @Selector()\r\n    static activeWorkspace(state: DriveStateModel) {\r\n        return state.activeWorkspace;\r\n    }\r\n\r\n    @Selector([DriveState.activeFolder, DriveState.currentUser])\r\n    static userOwnsActiveFolder(state: DriveStateModel, activeFolder: DriveEntry, currentUser: User) {\r\n       return DriveState.userHasPermission('owner', activeFolder, currentUser);\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries, DriveState.currentUser])\r\n    static userOwnsSelectedEntries(state: DriveStateModel, selectedEntries: DriveEntry[], currentUser: User) {\r\n        return selectedEntries.every(entry => {\r\n            return DriveState.userHasPermission('owner', entry, currentUser);\r\n        });\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries, DriveState.currentUser])\r\n    static userCanEditSelectedEntries(state: DriveStateModel, entries: DriveEntry[], currentUser: User) {\r\n        return entries.every(entry => {\r\n            const user = entry.users.find(u => u.id === currentUser.id);\r\n            return user && (user.owns_entry || user.entry_permissions.edit);\r\n        });\r\n    }\r\n\r\n    @Selector([DriveState.activePage, DriveState.currentUser, DriveState.activeWorkspace])\r\n    static canUpload(state: DriveStateModel, page: DrivePage, currentUser: User, workspace: Workspace) {\r\n        if (!page.folder || !currentUser || !workspace) {\r\n            return false;\r\n        }\r\n\r\n        // check if user can create files in this workspace\r\n        if (workspace?.id && page.folder.workspace_id === workspace.id) {\r\n            const member = workspace.currentUser;\r\n            return member && (member.is_owner || member.permissions.findIndex(p => p.name === 'files.create') > -1);\r\n\r\n        // check if user has \"edit\" permission for folder if it's not part of workspace\r\n        } else {\r\n            return DriveState.userHasPermission('edit', page.folder, currentUser);\r\n        }\r\n    }\r\n\r\n    @Action(LoadUserFolders)\r\n    loadUserFolders(ctx: StateContext<DriveStateModel>) {\r\n        return this.foldersApi.getAllForCurrentUser().pipe(tap(response => {\r\n            ctx.patchState({rootFolder: response.rootFolder});\r\n            return ctx.dispatch(new BuildFolderTree(response.folders));\r\n        }));\r\n    }\r\n\r\n    @Action(BuildFolderTree)\r\n    buildFolderTree(ctx: StateContext<DriveStateModel>, action: BuildFolderTree) {\r\n        const flatFolders = action.folders || ctx.getState().flatFolders;\r\n        const tree = buildFolderTree(flatFolders);\r\n        ctx.patchState({\r\n            folderTree: tree,\r\n            flatFolders,\r\n            userFoldersLoaded: true,\r\n        });\r\n    }\r\n\r\n    @Action(WorkspacesIndexPageOpened)\r\n    workspacesIndexPageOpened(ctx: StateContext<DriveStateModel>, action: WorkspacesIndexPageOpened) {\r\n        ctx.patchState({activePage: action.page});\r\n    }\r\n\r\n    @Action(FolderPageOpened)\r\n    @Action(RecentEntriesPageOpened)\r\n    @Action(TrashPageOpened)\r\n    @Action(StarredPageOpened)\r\n    @Action(SearchPageOpened)\r\n    @Action(SharesFolderOpened)\r\n    @Action(ReloadPageEntries)\r\n    @Action(LoadMoreEntries)\r\n    loadDriveEntries(ctx: StateContext<DriveStateModel>, action: LoadEntriesAction) {\r\n        const oldState = ctx.getState();\r\n        const newState = {loading: true, meta: {...oldState.meta}} as Partial<DriveStateModel>;\r\n\r\n        // only replace active page if it's actually specified, this way\r\n        // \"Reload\" and \"LoadMore\" actions will not remove active page\r\n        newState.activePage = action.page ? action.page : oldState.activePage;\r\n\r\n        // set sorting from specified query params or specified page or currently active page\r\n        newState.meta.sortColumn = action.queryParams.orderBy || oldState.meta.sortColumn || newState.activePage.sortColumn;\r\n        newState.meta.sortDirection = action.queryParams.orderDir || oldState.meta.sortDirection || newState.activePage.sortDirection;\r\n\r\n        // if it's not search page, clear type and query\r\n        if (newState.activePage.name !== 'search') {\r\n            newState.meta.query = null;\r\n            newState.meta.type = null;\r\n        }\r\n\r\n        newState.meta.query = action.queryParams.query || newState.meta.query;\r\n        newState.meta.type = action.queryParams.type || newState.meta.type;\r\n\r\n        ctx.patchState(newState);\r\n        const params = this.transformQueryParams({\r\n            ...action.queryParams,\r\n            ...newState.activePage.queryParams,\r\n        });\r\n\r\n        return this.entriesApi.getEntriesForFolder(params).pipe(tap(response => {\r\n            const entries = action.loadMore ? oldState.entries : [];\r\n\r\n            const state = {\r\n                entries: entries.concat(response.data),\r\n                meta: {\r\n                    ...newState.meta,\r\n                    lastPage: response.last_page,\r\n                    currentPage: response.current_page\r\n                },\r\n                loading: false\r\n            } as Partial<DriveStateModel>;\r\n\r\n            state.activePage = {\r\n                ...newState.activePage,\r\n                folder: response.folder,\r\n            };\r\n\r\n            return ctx.patchState(state);\r\n        }, () => {\r\n            return ctx.patchState({loading: false});\r\n        }));\r\n    }\r\n\r\n    @Action(OpenFolder, {cancelUncompleted: true})\r\n    openFolder(ctx: StateContext<DriveStateModel>, action: OpenFolder) {\r\n        const currentFolder = ctx.getState().activePage.folder;\r\n        if (currentFolder && action.folder.id === currentFolder.id) return;\r\n\r\n        if (action.folder && action.folder.deleted_at) {\r\n            return ctx.dispatch(new OpenConfirmDialog({\r\n                title: 'Folder is in trash',\r\n                body: 'To view this folder, you need to restore it first.',\r\n                ok: 'Restore'\r\n            }, new RestoreTrashedEntries([action.folder as DriveFolder])));\r\n        } else {\r\n            ctx.patchState({loading: true});\r\n            return this.router.navigate([this.driveUrls.folder(action.folder)]);\r\n        }\r\n    }\r\n\r\n    @Action(OpenSearchPage, {cancelUncompleted: true})\r\n    openSearchPage(ctx: StateContext<DriveStateModel>, action: OpenSearchPage) {\r\n        const oldParams = this.store.selectSnapshot(RouterState.state).root.queryParams;\r\n        if (isEqual(oldParams, action.queryParams)) return;\r\n        ctx.patchState({loading: true});\r\n        return this.router.navigate(['/drive/search'], {queryParams: action.queryParams});\r\n    }\r\n\r\n    @Action(EntriesSelectedViaDrag)\r\n    @Action(EntrySelectedViaContextMenu)\r\n    @Action(SelectEntries)\r\n    selectEntries(ctx: StateContext<DriveStateModel>, action: EntriesSelectedViaDrag | EntrySelectedViaContextMenu | SelectEntries) {\r\n        ctx.patchState({selectedEntries: action.entries});\r\n    }\r\n\r\n    @Action(DeselectAllEntries)\r\n    deselectAllEntries(ctx: StateContext<DriveStateModel>) {\r\n        if ( ! ctx.getState().selectedEntries.length) return;\r\n        ctx.patchState({selectedEntries: []});\r\n    }\r\n\r\n    @Action(SelectAllEntries)\r\n    SelectAllEntries(ctx: StateContext<DriveStateModel>) {\r\n        ctx.patchState({selectedEntries: ctx.getState().entries.slice()});\r\n    }\r\n\r\n    @Action(EntryTapped)\r\n    entryTapped(ctx: StateContext<DriveStateModel>, action: EntryTapped) {\r\n        const current = ctx.getState().selectedEntries.slice();\r\n        let alreadySelected = false;\r\n\r\n        // remove entry with matching ID (if exists) to avoid duplicates\r\n        const i = current.findIndex(curr => curr.id === action.entry.id);\r\n        if (i > -1) {\r\n            current.splice(i, 1);\r\n            alreadySelected = true;\r\n        }\r\n\r\n        if (action.ctrlKey) {\r\n            if (alreadySelected) {\r\n                ctx.patchState({selectedEntries: current});\r\n            } else {\r\n                ctx.patchState({selectedEntries: [...current, action.entry]});\r\n            }\r\n        } else {\r\n            ctx.patchState({selectedEntries: [action.entry]});\r\n        }\r\n\r\n        if (ctx.getState().isMobile) {\r\n            this.entryDoubleTapped(ctx, action);\r\n        }\r\n    }\r\n\r\n    @Action(EntryDoubleTapped)\r\n    entryDoubleTapped(ctx: StateContext<DriveStateModel>, action: EntryDoubleTapped) {\r\n        if (action.entry.type === 'folder') {\r\n            return ctx.dispatch(new OpenFolder(action.entry as DriveFolder));\r\n        } else {\r\n            return ctx.dispatch(new OpenFilePreview([action.entry]));\r\n        }\r\n    }\r\n\r\n    @Action(DeleteSelectedEntries)\r\n    deleteSelectedEntries(ctx: StateContext<DriveStateModel>) {\r\n        const entries = this.store.selectSnapshot(DriveState.selectedEntries),\r\n            entryIds = this.store.selectSnapshot(DriveState.selectedEntryIds),\r\n            flatFolders = this.store.selectSnapshot(DriveState.flatFolders),\r\n            activePage = ctx.getState().activePage;\r\n\r\n        return this.entriesApi.delete({entryIds}).pipe(tap(() => {\r\n            // filter out deleted entries\r\n            const newEntries = ctx.getState().entries\r\n                .filter(entry => entryIds.indexOf(entry.id) === -1);\r\n\r\n            const newState = {entries: newEntries} as Partial<DriveStateModel>,\r\n                actions = [new FileDeleteSuccess(entries)] as any[];\r\n\r\n            // clear selected entries\r\n            newState.selectedEntries = [];\r\n\r\n            // if selected folder was active, navigate to its parent\r\n            if (activePage.folder && entryIds.indexOf(activePage.folder.id) > -1) {\r\n                this.store.dispatch(new OpenFolder(this.store.selectSnapshot(DriveState.selectedEntryParent)));\r\n            }\r\n\r\n            // rebuild folders tree\r\n            const folders = entries.filter(entry => entry.type === 'folder');\r\n            if (folders.length) {\r\n                folders.forEach(folder => delete flatFolders[folder.id]);\r\n                newState.flatFolders = flatFolders;\r\n                actions.push(new BuildFolderTree());\r\n            }\r\n\r\n            ctx.patchState(newState);\r\n            return ctx.dispatch(actions);\r\n        }));\r\n    }\r\n\r\n    @Action(EntryContextMenuOpened)\r\n    fileContextMenuOpened(ctx: StateContext<DriveStateModel>, action: EntryContextMenuOpened) {\r\n        if ( ! action?.entry?.id) return;\r\n\r\n        const fileAlreadySelected = ctx.getState().selectedEntries\r\n            .find(entry => entry.id === action.entry.id);\r\n\r\n        if ( ! fileAlreadySelected) {\r\n            return ctx.dispatch(new EntrySelectedViaContextMenu([action.entry]));\r\n        }\r\n    }\r\n\r\n    @Action(NewFolderCreated)\r\n    newFolderCreated(ctx: StateContext<DriveStateModel>, action: NewFolderCreated) {\r\n        const state = ctx.getState();\r\n        const parentFolderId = action.folder.parent_id;\r\n\r\n        // start new folder into user folders cache\r\n        const newState: Partial<DriveStateModel> = {\r\n            flatFolders: [...state.flatFolders, action.folder]\r\n        };\r\n\r\n        // push new folder into parent folder entries, if parent is currently open\r\n        if (parentFolderId === state.activePage.folder.id) {\r\n            newState.entries = [action.folder, ...state.entries];\r\n        }\r\n\r\n        ctx.patchState(newState);\r\n\r\n        // rebuild folder tree\r\n        return ctx.dispatch(new BuildFolderTree());\r\n    }\r\n\r\n    @Action(EntryRenamed)\r\n    entryRenamed(ctx: StateContext<DriveStateModel>, action: EntryRenamed) {\r\n        const state = ctx.getState(),\r\n            newState = {entries: state.entries.slice()} as Partial<DriveStateModel>,\r\n            i = newState.entries.findIndex(curr => curr.id === action.entry.id);\r\n\r\n        // rename entry inside main entries array\r\n        if (i > -1) {\r\n            newState.entries[i] = {...newState.entries[i], name: action.newName};\r\n        }\r\n\r\n        // rename entry inside selected entries array\r\n        newState.selectedEntries = [{...state.selectedEntries[0], name: action.newName}];\r\n\r\n        // rename active folder\r\n        if (state.activePage.folder && state.activePage.folder.id === action.entry.id) {\r\n            newState.activePage = {...state.activePage, folder: action.entry};\r\n        }\r\n\r\n        // rebuild folder tree\r\n        if (action.entry.type === 'folder') {\r\n            const flatFolders = {...state.flatFolders};\r\n            flatFolders[action.entry.id] = {...flatFolders[action.entry.id], name: action.newName};\r\n            newState.flatFolders = flatFolders;\r\n            ctx.dispatch(new BuildFolderTree());\r\n        }\r\n\r\n        ctx.patchState(newState);\r\n    }\r\n\r\n    @Action(StartedDragging)\r\n    startedDragging(ctx: StateContext<DriveStateModel>) {\r\n        ctx.patchState({dragging: true});\r\n    }\r\n\r\n    @Action(StoppedDragging)\r\n    stoppedDragging(ctx: StateContext<DriveStateModel>) {\r\n        ctx.patchState({dragging: false});\r\n    }\r\n\r\n    @Action(MoveEntries)\r\n    movieEntries(ctx: StateContext<DriveStateModel>, action: MoveEntries) {\r\n        const entries = action.entries || ctx.getState().selectedEntries;\r\n\r\n        if ( ! DriveState.canMoveEntriesTo(entries, action.destination)) return;\r\n\r\n        ctx.dispatch(new ShowLoadingToast(LoadingToastMessages.moveEntries));\r\n\r\n        const oldLocation = entries[0].parent_id;\r\n\r\n        return this.entriesApi.moveEntries({entryIds: entries.map(entry => entry.id), destination: action.destination?.id}).pipe(\r\n            finalize(() => ctx.dispatch(new HideLoadingToast())),\r\n            tap(response => {\r\n                return ctx.dispatch(new MoveEntriesSuccess(action.destination?.id, oldLocation, response.entries));\r\n            }, (errResponse: BackendErrorResponse) => {\r\n                return ctx.dispatch(new MoveEntriesFailed(errResponse.errors));\r\n            })\r\n        );\r\n    }\r\n\r\n    @Action(MoveEntriesSuccess)\r\n    moveEntriesSuccess(ctx: StateContext<DriveStateModel>, action: MoveEntriesSuccess) {\r\n        const state = ctx.getState(),\r\n            entryIds = action.entries.map(entry => entry.id),\r\n            folders = action.entries.filter(entry => entry.type === 'folder');\r\n\r\n        // remove moved entries from old folder\r\n        const newState = {\r\n            selectedEntries: [],\r\n            entries: state.entries.filter(entry => entryIds.indexOf(entry.id) === -1)\r\n        } as Partial<DriveStateModel>;\r\n\r\n        // rebuild folder tree\r\n        if (folders.length) {\r\n            newState.flatFolders = {...state.flatFolders};\r\n            action.entries\r\n                .filter(entry => entry.type === 'folder')\r\n                .forEach(entry => newState.flatFolders[entry.id] = entry as DriveFolder);\r\n        }\r\n\r\n        // update active folder\r\n        if (state.activePage.folder) {\r\n            const folder = action.entries.find(entry => state.activePage.folder.id === entry.id);\r\n            if (folder) newState.activePage = {...state.activePage, folder};\r\n        }\r\n\r\n        ctx.patchState(newState);\r\n        return ctx.dispatch(new BuildFolderTree());\r\n    }\r\n\r\n    @Action(SetViewMode)\r\n    setViewMode(ctx: StateContext<DriveStateModel>, action: SetViewMode) {\r\n        this.localStore.set(VIEW_MODE_KEY, action.mode);\r\n        ctx.patchState({viewMode: action.mode});\r\n    }\r\n\r\n    @Action(ToggleDetailsSidebar)\r\n    toggleDetailsSidebar(ctx: StateContext<DriveStateModel>) {\r\n        ctx.patchState({\r\n            detailsVisible: !ctx.getState().detailsVisible\r\n        });\r\n    }\r\n\r\n    @Action(ToggleSidebar)\r\n    toggleSidebar(ctx: StateContext<DriveStateModel>) {\r\n        ctx.patchState({\r\n            sidebarOpen: !ctx.getState().sidebarOpen\r\n        });\r\n    }\r\n\r\n    @Action(AddEntries)\r\n    addEntries(ctx: StateContext<DriveStateModel>, action: AddEntries) {\r\n        const currentEntries = ctx.getState().entries,\r\n            spaceUsage = ctx.getState().spaceUsage;\r\n\r\n        const newEntries = action.entries\r\n            .filter(entry => !currentEntries.find(curr => curr.id === entry.id));\r\n\r\n        const newSize = newEntries.filter(entry => entry.type !== 'folder')\r\n            .reduce((sum, entry) => sum + entry.file_size, 0);\r\n\r\n        ctx.patchState({\r\n            entries: [...newEntries, ...currentEntries],\r\n            spaceUsage: {...spaceUsage, used: spaceUsage.used + newSize}\r\n        });\r\n    }\r\n\r\n    @Action(UploadFiles)\r\n    uploadFiles(ctx: StateContext<DriveStateModel>, action: UploadFiles) {\r\n        if ( ! this.enoughSpaceLeftToUpload(ctx.getState().spaceUsage, action.files)) {\r\n            return ctx.dispatch(new NotEnoughSpaceError());\r\n        }\r\n\r\n        if ( ! action.files.length) return;\r\n\r\n        ctx.dispatch(new OpenUploadsPanel());\r\n\r\n        const state = ctx.getState();\r\n        const destinationPage = state.activePage;\r\n        const destinationId = destinationPage.folder.id || null;\r\n\r\n        const config = {\r\n            httpParams: {parentId: destinationId},\r\n            validator: this.validator,\r\n        };\r\n\r\n        return this.uploads.start(action.files, config).pipe(\r\n            tap(response => {\r\n                // get parent folders, if user has uploaded folders and not single files\r\n                const entries = [...response.fileEntry.all_parents, response.fileEntry];\r\n\r\n                // remove all entries that are not direct child of currently open folder\r\n                const newEntries = entries.filter(newEntry => newEntry && newEntry.parent_id === destinationId);\r\n                const currentPage = ctx.getState().activePage;\r\n\r\n                // add newly uploaded files and created folders\r\n                if (currentPage.folder && currentPage.folder.id === destinationId) {\r\n                    ctx.dispatch(new AddEntries(newEntries as DriveEntry[]));\r\n                }\r\n\r\n                // rebuild folder tree, if there are any folders\r\n                const folders = entries.filter(entry => entry && entry.type === 'folder');\r\n                if (folders.length) {\r\n                    const flatFolders = [...ctx.getState().flatFolders, ...folders] as DriveFolder[];\r\n                    ctx.patchState({flatFolders});\r\n                    ctx.dispatch(new BuildFolderTree());\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    @Action(DeleteTrashedEntriesForever)\r\n    deleteTrashedEntriesForever(ctx: StateContext<DriveStateModel>) {\r\n        const selectedEntries = this.store.selectSnapshot(DriveState.selectedEntries),\r\n            entryIds = selectedEntries.map(entry => entry.id);\r\n\r\n        const newEntries = ctx.getState().entries\r\n                .filter(entry => entryIds.indexOf(entry.id) === -1);\r\n\r\n        return this.entriesApi.delete({entryIds, deleteForever: true}).pipe(tap(() => {\r\n            ctx.patchState({\r\n                entries: newEntries,\r\n                selectedEntries: [],\r\n            });\r\n\r\n            return ctx.dispatch([\r\n                new TrashedEntriesDeleteSuccess(selectedEntries),\r\n                new UserSpaceUsageChanged(),\r\n            ]);\r\n        }));\r\n    }\r\n\r\n    @Action(RestoreTrashedEntries)\r\n    restoreTrashedEntries(ctx: StateContext<DriveStateModel>, action: RestoreTrashedEntries) {\r\n        const activePage = this.store.selectSnapshot(DriveState.activePage);\r\n        const restoredEntries = action.entries || this.store.selectSnapshot(DriveState.selectedEntries);\r\n        const entryIds = restoredEntries.map(entry => entry.id);\r\n        let newEntries: DriveEntry[];\r\n\r\n        if (activePage.name === TRASH_PAGE.name) {\r\n            newEntries = ctx.getState().entries\r\n                .filter(entry => entryIds.indexOf(entry.id) === -1);\r\n        } else {\r\n            newEntries = [...ctx.getState().entries, ...action.entries];\r\n        }\r\n\r\n        return this.entriesApi.restore({entryIds}).pipe(tap(() => {\r\n            ctx.patchState({\r\n                entries: newEntries,\r\n                selectedEntries: [],\r\n            });\r\n\r\n            return ctx.dispatch(new TrashedEntriesRestoreSuccess(restoredEntries));\r\n        }));\r\n    }\r\n\r\n    @Action(EmptyTrash, {cancelUncompleted: true})\r\n    emptyTrash(ctx: StateContext<DriveStateModel>) {\r\n        ctx.dispatch(new ShowLoadingToast(LoadingToastMessages.emptyTrash));\r\n\r\n        return this.entriesApi.emptyTrash().pipe(\r\n            finalize(() => ctx.dispatch(new HideLoadingToast())),\r\n            tap(() => {\r\n                ctx.patchState({\r\n                    entries: [],\r\n                    selectedEntries: [],\r\n                });\r\n\r\n                return ctx.dispatch(new UserSpaceUsageChanged());\r\n            })\r\n        );\r\n    }\r\n\r\n    @Action(AddStar, {cancelUncompleted: true})\r\n    addStar(ctx: StateContext<DriveStateModel>, action: AddStar) {\r\n        const state = ctx.getState(),\r\n            ids = action.entries.map(entry => entry.id);\r\n\r\n        return this.entriesApi.addStar(ids).pipe(tap(response => {\r\n            const newEntries = state.entries.map(entry => {\r\n                if (ids.indexOf(entry.id) > -1) {\r\n                    if ( ! entry.tags) entry.tags = [];\r\n                    entry.tags.push(response.tag);\r\n                }\r\n                return entry;\r\n            });\r\n\r\n            const selectedEntries = state.selectedEntries.map(entry => {\r\n                entry.tags.push(response.tag);\r\n                return entry;\r\n            });\r\n\r\n            ctx.patchState({\r\n                entries: newEntries,\r\n                selectedEntries: selectedEntries,\r\n            });\r\n        }));\r\n    }\r\n\r\n    @Action(RemoveStar, {cancelUncompleted: true})\r\n    removeStar(ctx: StateContext<DriveStateModel>, action: RemoveStar) {\r\n        const state = ctx.getState(),\r\n            ids = action.entries.map(entry => entry.id);\r\n\r\n        return this.entriesApi.removeStar(ids).pipe(tap(response => {\r\n            const newEntries = state.entries.map(entry => {\r\n                if (ids.indexOf(entry.id) > -1) this.removeTag(entry, response.tag);\r\n                return entry;\r\n            });\r\n\r\n            const selectedEntries = state.selectedEntries\r\n                .map(entry => this.removeTag(entry, response.tag));\r\n\r\n            ctx.patchState({\r\n                entries: newEntries,\r\n                selectedEntries: selectedEntries\r\n            });\r\n        }));\r\n    }\r\n\r\n    @Action(RemoveEntries)\r\n    removeEntries(ctx: StateContext<DriveStateModel>, action: RemoveEntries) {\r\n        const ids = action.entries.map(entry => entry.id);\r\n        const newEntries = ctx.getState().entries\r\n            .filter(entry => ids.indexOf(entry.id) === -1);\r\n        ctx.patchState({\r\n            entries: newEntries\r\n        });\r\n        this.toast.open({message: 'Removed :count items.', replacements: {count: ids.length}});\r\n    }\r\n\r\n    @Action(CopySelectedEntries)\r\n    copySelectedEntries(ctx: StateContext<DriveStateModel>) {\r\n        const entries = this.store.selectSnapshot(DriveState.selectedEntries),\r\n            entryIds = entries.map(entry => entry.id),\r\n            folders = entries.filter(entry => entry.type === 'folder'),\r\n            oldState = ctx.getState();\r\n\r\n        if ( ! this.enoughSpaceLeftToUpload(ctx.getState().spaceUsage, entries)) {\r\n            return ctx.dispatch(new NotEnoughSpaceError());\r\n        }\r\n\r\n        ctx.dispatch(new ShowLoadingToast(LoadingToastMessages.copyEntries));\r\n\r\n        return this.entriesApi.copy({entryIds}).pipe(\r\n            finalize(() => ctx.dispatch(new HideLoadingToast())),\r\n            tap(response => {\r\n                const newState = {} as Partial<DriveStateModel>;\r\n\r\n                // show copied entries, if we are in a folder view\r\n                if (ctx.getState().activePage.folder) {\r\n                    newState.entries = oldState.entries.concat(response.entries);\r\n                }\r\n\r\n                // rebuild folder tree\r\n                if (folders.length) {\r\n                    newState.flatFolders = {...oldState.flatFolders};\r\n                    response.entries\r\n                        .filter(folder => folder.type === 'folder')\r\n                        .forEach(folder => newState.flatFolders.push(folder as DriveFolder));\r\n                }\r\n\r\n                ctx.patchState(newState);\r\n\r\n                // update user space usage\r\n                ctx.dispatch(new UserSpaceUsageChanged());\r\n\r\n                // rebuild folder tree\r\n                if (folders.length) ctx.dispatch(new BuildFolderTree());\r\n\r\n                const activePage = this.store.selectSnapshot(DriveState.activePage);\r\n                const location = activePage.name === DRIVE_PAGE_NAMES.SHARES ? `${this.workspaces.activeWorkspace$.value.name} workspace` : activePage.folder.name;\r\n                this.toast.open({message: `Copied :count file(s) into :location.`, replacements: {count: entryIds.length, location}});\r\n            })\r\n        );\r\n    }\r\n\r\n    @Action(OpenUploadWindow)\r\n    openUploadWindow(ctx: StateContext<DriveStateModel>, action: OpenUploadWindow) {\r\n        const config = {\r\n            ...this.uploadInputConfig,\r\n            directory: action.type === 'directory'\r\n        };\r\n\r\n        openUploadWindow(config).then(files => {\r\n            if ( ! files || ! files.length) return;\r\n            ctx.dispatch(new UploadFiles(files));\r\n        });\r\n    }\r\n\r\n    @Action(LoadUserSpaceUsage)\r\n    @Action(UserSpaceUsageChanged)\r\n    loadUserSpaceUsage(ctx: StateContext<DriveStateModel>) {\r\n        return this.entriesApi.getSpaceUsage().pipe(tap(spaceUsage => {\r\n            ctx.patchState({spaceUsage: {used: spaceUsage.used, available: spaceUsage.available}});\r\n        }));\r\n    }\r\n\r\n    @Action(UpdateEntries)\r\n    updateEntries(ctx: StateContext<DriveStateModel>, action: UpdateEntries) {\r\n        const mainEntries = ctx.getState().entries.slice(),\r\n            selectedEntries = ctx.getState().selectedEntries.slice();\r\n\r\n        action.entries.forEach(updatedEntry => {\r\n            // update main entries\r\n            const mainIndex = mainEntries.findIndex(entry => updatedEntry.id === entry.id);\r\n            mainEntries[mainIndex] = {...mainEntries[mainIndex], ...updatedEntry};\r\n\r\n            // update selected entries\r\n            const selectedIndex = selectedEntries.findIndex(entry => updatedEntry.id === entry.id);\r\n            if (selectedIndex > -1) {\r\n                selectedEntries[selectedIndex] = {...selectedEntries[selectedIndex], ...updatedEntry};\r\n            }\r\n        });\r\n\r\n        ctx.patchState({entries: mainEntries, selectedEntries});\r\n    }\r\n\r\n    @Action(UpdateEntryDescription)\r\n    updateEntryDescription(ctx: StateContext<DriveStateModel>, {entry, description}: UpdateEntryDescription) {\r\n        return this.entriesApi.update(entry.id, {description})\r\n            .pipe(tap(response => {\r\n                ctx.dispatch(new UpdateEntries([response.fileEntry]));\r\n            }));\r\n    }\r\n\r\n    @Action(BreakpointChanged)\r\n    breakpointChanged(ctx: StateContext<DriveStateModel>, action: BreakpointChanged) {\r\n        ctx.patchState({\r\n            isMobile: action.status.isMobile,\r\n            sidebarOpen: !action.status.isMobile,\r\n            detailsVisible: !action.status.isMobile,\r\n        });\r\n    }\r\n\r\n    @Action(SetCurrentUser)\r\n    setCurrentUser(ctx: StateContext<DriveStateModel>, action: SetCurrentUser) {\r\n        ctx.patchState({currentUser: action.user});\r\n    }\r\n\r\n    @Action(SetWorkspace)\r\n    setWorkspace(ctx: StateContext<DriveStateModel>, action: SetWorkspace) {\r\n        ctx.patchState({activeWorkspace: action.workspace});\r\n    }\r\n\r\n    @Action(ResetState)\r\n    resetState(ctx: StateContext<DriveStateModel>) {\r\n        ctx.setState({...DRIVE_STATE_MODEL_DEFAULTS, viewMode: ctx.getState().viewMode});\r\n    }\r\n\r\n    private transformQueryParams(params: DriveApiIndexParams): DriveApiIndexParams {\r\n        const page = this.store.selectSnapshot(DriveState.activePage),\r\n            meta = this.store.selectSnapshot(DriveState.meta);\r\n\r\n        const queryParams = {\r\n            orderBy: meta.sortColumn,\r\n            orderDir: meta.sortDirection,\r\n            ...params\r\n        };\r\n\r\n        if (page.name === DRIVE_PAGE_NAMES.FOLDER) {\r\n            queryParams.folderId = page.folderHash;\r\n        }\r\n        if (meta.query) queryParams.query = meta.query;\r\n        if (meta.type) queryParams.type = meta.type;\r\n\r\n        return queryParams;\r\n    }\r\n\r\n    /**\r\n     * Check if user has enough space left to upload all specified files.\r\n     */\r\n    private enoughSpaceLeftToUpload(spaceUsage: UserSpaceUsage, files: (UploadedFile|FileEntry)[]) {\r\n        const newSize = files.reduce((sum, file) => {\r\n            const size = hasKey('size', file) ? file.size : file.file_size;\r\n            return sum + size;\r\n        }, 0);\r\n        const currentlyUsing = spaceUsage.used;\r\n        const availableSpace = spaceUsage.available;\r\n        return (newSize + currentlyUsing) < availableSpace;\r\n    }\r\n\r\n    private removeTag(entry: DriveEntry, tag: Tag) {\r\n        entry.tags = entry.tags.filter(t => t.id !== tag.id);\r\n        return entry;\r\n    }\r\n\r\n    static canMoveEntriesTo(movingEntries: DriveEntry[], destination?: DriveFolder) {\r\n        if (destination && destination.type !== 'folder') return false;\r\n\r\n        // should not be able to move folder into it's\r\n        // own child or same folder it's already in\r\n        return movingEntries.every(entry => {\r\n            // entry is already in this folder\r\n            if (destination?.id === entry.parent_id) return false;\r\n\r\n            // trying to move folder into it's own child\r\n            if (destination && destination.path.startsWith(entry.path)) return false;\r\n\r\n            return true;\r\n        });\r\n    }\r\n}\r\n","import { DriveFolder } from '../../folders/models/driveFolder';\r\n\r\nexport function buildFolderTree(folders: DriveFolder[]) {\r\n    const hashTable = {}; const tree = [];\r\n\r\n    for (let i = 0, len = folders.length; i < len; i++) {\r\n        const folder = folders[i];\r\n        // clear children from previous builds, to prevent duplicates\r\n        folder.children = [];\r\n        hashTable[folder.id] = folder;\r\n    }\r\n\r\n    for (const treeHash in hashTable) {\r\n        if ( ! hashTable.hasOwnProperty(treeHash)) continue;\r\n        const folder = hashTable[treeHash];\r\n        if (folder.parent_id) {\r\n            const parent = hashTable[folder.parent_id];\r\n            if (parent) {\r\n                parent.children.push(folder);\r\n            }\r\n        } else {\r\n            tree.push(folder);\r\n        }\r\n    }\r\n\r\n    return tree;\r\n}\r\n","export const SUPPORTED_ENTRY_TYPES = [\r\n    'audio',\r\n    'video',\r\n    'text',\r\n    'pdf',\r\n    'archive',\r\n    'folder',\r\n    'shared-folder',\r\n    'image',\r\n    'powerPoint',\r\n    'word',\r\n    'spreadsheet',\r\n];\r\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, OnChanges } from '@angular/core';\nimport { SUPPORTED_ENTRY_TYPES } from '../../../entries/supported-entry-types';\nimport { kebabCase } from '@common/core/utils/kebab-case';\n\n@Component({\n    selector: 'file-icon',\n    templateUrl: './file-icon.component.html',\n    styleUrls: ['./file-icon.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FileIconComponent implements OnChanges {\n    @Input() type: string;\n    @Input() mime: string;\n\n    ngOnChanges() {\n        if ( ! this.type && this.mime) {\n            this.type = this.mime.split('/')[0];\n        }\n        if ( ! SUPPORTED_ENTRY_TYPES.includes(this.type)) {\n            this.type = 'default';\n        }\n    }\n\n    public getType() {\n        return kebabCase(this.type);\n    }\n}\n","import { snakeCase } from './snake-case';\r\n\r\nexport function kebabCase(text: string) {\r\n    return snakeCase(text).replace('_', '-');\r\n}\r\n","<mat-icon\n        [svgIcon]=\"getType() + '-file-custom'\"\n        class=\"file-color\"\n        [ngClass]=\"getType() + '-file'\"\n></mat-icon>","<ng-container *ngIf=\"entries | async as selectedEntries\">\n    <ng-container *ngIf=\"selectedEntries[0]\">\n        <file-icon [type]=\"selectedEntries[0].type\"></file-icon>\n        <div class=\"text\">{{selectedEntries[0].name}}</div>\n        <div class=\"selected-entry-count\" *ngIf=\"selectedEntries.length > 1\">{{selectedEntries.length}}</div>\n    </ng-container>\n</ng-container>","import { Component, ViewEncapsulation, ChangeDetectionStrategy, HostBinding } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { Observable } from 'rxjs';\nimport { DriveEntry } from '../../files/models/drive-entry';\n\n@Component({\n    selector: 'entry-drag-preview',\n    templateUrl: './entry-drag-preview.component.html',\n    styleUrls: ['./entry-drag-preview.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EntryDragPreviewComponent {\n    @Select(DriveState.selectedEntries) entries: Observable<DriveEntry[]>;\n    @HostBinding('class') className = 'files-grid-item-footer';\n    @HostBinding('class.hidden') get dragging() {\n        return !this.store.selectSnapshot(DriveState.dragging);\n    }\n\n    constructor(private store: Store) {}\n}\n","export interface DriveEntryPermissions {\r\n    edit?: boolean;\r\n    view?: boolean;\r\n    download?: boolean;\r\n}\r\n\r\nexport const DRIVE_ENTRY_FULL_PERMISSIONS = {\r\n    edit: true,\r\n    view: true,\r\n    download: true,\r\n};\r\n","import { Injectable } from '@angular/core';\nimport { AppHttpClient } from '@common/core/http/app-http-client.service';\nimport { DriveEntryUser } from '../files/models/drive-entry';\nimport { DriveEntryPermissions } from '../permissions/drive-entry-permissions';\nimport { BackendResponse } from '@common/core/types/backend-response';\nimport { FileEntry } from '@common/uploads/types/file-entry';\n\nexport interface DriveEntryApiParams {\n    entries: FileEntry[];\n    emails: string[];\n    permissions: DriveEntryPermissions;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SharesApiService {\n    constructor(private http: AppHttpClient) {}\n\n    public changePermissions(userId: number, entryIds: number[], permissions: DriveEntryPermissions): BackendResponse<{users: DriveEntryUser[]}> {\n        return this.http.put(`drive/shares/change-permissions/${userId}`, {permissions, entryIds});\n    }\n\n    /**\n     * Attach specified users to entries.\n     */\n    public shareEntries(params: DriveEntryApiParams): BackendResponse<{users: DriveEntryUser[]}> {\n        return this.http.post('drive/shares/add-users', {\n            ...params,\n            entryIds: params.entries.map(entry => entry.id)\n        });\n    }\n\n    /**\n     * Detach specified user from entries.\n     */\n    public detachUser(userId: number, entryIds: number[]): BackendResponse<{users: DriveEntryUser[]}> {\n        return this.http.post('drive/shares/remove-user/' + userId, {entryIds});\n    }\n}\n","import { Action, Selector, State, StateContext, Store } from '@ngxs/store';\r\nimport { DriveState } from '../../state/drive-state';\r\nimport { DriveEntryUser } from '../../files/models/drive-entry';\r\nimport { DriveEntryPermissions } from '../../permissions/drive-entry-permissions';\r\nimport { finalize, tap } from 'rxjs/operators';\r\nimport { SharesApiService } from '../shares-api.service';\r\nimport isEqual from 'lodash/isEqual';\r\nimport cloneDeep from 'lodash/cloneDeep';\r\nimport uniqBy from 'lodash/uniqBy';\r\nimport {\r\n    BackendErrorMessages, BackendErrorResponse\r\n} from '@common/core/types/backend-error-response';\r\nimport { ShareDialogEntryPermissions } from '../share-dialog/types/ShareDialogEntryPermissions';\r\nimport { UpdateEntries } from '../../state/actions/commands';\r\nimport { Injectable } from '@angular/core';\r\n\r\nexport class SetInitialUsers {\r\n    static readonly type = '[ShareDialog] Set Initial Users';\r\n}\r\n\r\nexport class UpdateUserPermissions {\r\n    static readonly type = '[ShareDialog] Update User Permissions';\r\n    constructor(public user: DriveEntryUser, public permissions: DriveEntryPermissions) {}\r\n}\r\n\r\nexport class RemoveUser {\r\n    static readonly type = '[ShareDialog] Remove User';\r\n    constructor(public user: DriveEntryUser) {}\r\n}\r\n\r\nexport class SetUsers {\r\n    static readonly type = '[ShareDialog] Set Users';\r\n    constructor(public users: DriveEntryUser[]) {}\r\n}\r\n\r\nexport class ResetState {\r\n    static readonly type = '[ShareDialog] Reset';\r\n}\r\n\r\nexport class ShareEntries {\r\n    static readonly type = '[ShareDialog] Share Entries';\r\n    constructor(public payload: {emails: string[], permissions: DriveEntryPermissions}) {}\r\n}\r\n\r\nexport class ShareEntriesFailed {\r\n    static readonly type = '[ShareDialog] Share Entries Failed';\r\n    constructor(public messages: BackendErrorMessages) {}\r\n}\r\n\r\nexport interface ShareDialogEntryUser extends DriveEntryUser {\r\n    removed?: boolean;\r\n    entry_permissions: ShareDialogEntryPermissions;\r\n}\r\n\r\nexport interface ShareDialogStateModel {\r\n    loading: boolean;\r\n    loadingUsers: number[];\r\n    original: ShareDialogEntryUser[];\r\n    usersWithAccess: ShareDialogEntryUser[];\r\n}\r\n\r\n@State<ShareDialogStateModel>({\r\n    name: 'shareDialog',\r\n    defaults: {\r\n        usersWithAccess: [],\r\n        original: [],\r\n        loading: false,\r\n        loadingUsers: [],\r\n    }\r\n})\r\n@Injectable()\r\nexport class ShareDialogState {\r\n    constructor(\r\n        private store: Store,\r\n        private sharesApi: SharesApiService\r\n    ) {}\r\n\r\n    @Selector()\r\n    static usersWithAccess(state: ShareDialogStateModel) {\r\n        return state.usersWithAccess;\r\n    }\r\n\r\n    @Selector()\r\n    static dirty(state: ShareDialogStateModel) {\r\n        return !isEqual(state.original, state.usersWithAccess);\r\n    }\r\n\r\n    @Selector()\r\n    static loading(state: ShareDialogStateModel) {\r\n        return state.loading;\r\n    }\r\n\r\n    @Selector()\r\n    static loadingUsers(state: ShareDialogStateModel) {\r\n        return state.loadingUsers;\r\n    }\r\n\r\n    @Action(SetInitialUsers)\r\n    setInitialUsers(ctx: StateContext<ShareDialogStateModel>) {\r\n        const entries = this.store.selectSnapshot(DriveState.selectedEntries);\r\n\r\n        let users = entries\r\n            .map(entry => entry.users)\r\n            .reduce((all, curr) => all.concat(curr), []);\r\n\r\n        // make sure we don't override anything in main drive store\r\n        users = cloneDeep(users);\r\n        users = users.filter(user => !!user);\r\n\r\n        // multiple entries might contain same users\r\n        const uniqueUsers = uniqBy(users, user => user.id) as ShareDialogEntryUser[];\r\n\r\n        // if permissions for same user are not same on\r\n        // all selected entries, show \"varies\" permission\r\n        if (entries.length > 1) {\r\n            uniqueUsers.forEach(user => {\r\n                const permissions = entries\r\n                    .map(entry => entry.users.find(u => u.id === user.id))\r\n                    .filter(u => !!u)\r\n                    .map(u => Object.assign({}, u.entry_permissions));\r\n\r\n                if (entries.length !== permissions.length || permissions.some(p => !isEqual(p, permissions[0]))) {\r\n                    user.entry_permissions = {varies: true};\r\n                }\r\n            });\r\n        }\r\n\r\n        ctx.patchState({\r\n            usersWithAccess: cloneDeep(uniqueUsers),\r\n            original: uniqueUsers,\r\n        });\r\n    }\r\n\r\n    @Action(SetUsers)\r\n    setUsers(ctx: StateContext<ShareDialogStateModel>, action: SetUsers) {\r\n        ctx.patchState({\r\n            usersWithAccess: action.users,\r\n            original: cloneDeep(action.users)\r\n        });\r\n    }\r\n\r\n    @Action(UpdateUserPermissions)\r\n    updateUserPermissions(ctx: StateContext<ShareDialogStateModel>, action: UpdateUserPermissions) {\r\n        this.toggleUserLoading(ctx, action.user.id, true);\r\n        const entryIds = this.store.selectSnapshot(DriveState.selectedEntries).map(e => e.id);\r\n        const userId = action.user.id;\r\n        return this.sharesApi.changePermissions(userId, entryIds, action.permissions).pipe(\r\n            finalize(() => this.toggleUserLoading(ctx, action.user.id, false)),\r\n            tap(response => this.updateUsers(ctx, response.users))\r\n        );\r\n    }\r\n\r\n    @Action(RemoveUser)\r\n    removeUser(ctx: StateContext<ShareDialogStateModel>, action: RemoveUser) {\r\n        this.toggleUserLoading(ctx, action.user.id, true);\r\n        return this.sharesApi.detachUser(\r\n            action.user.id,\r\n            this.store.selectSnapshot(DriveState.selectedEntries).map(e => e.id)\r\n        ).pipe(\r\n            finalize(() => this.toggleUserLoading(ctx, action.user.id, false)),\r\n            tap(response => this.updateUsers(ctx, response.users))\r\n        );\r\n    }\r\n\r\n    @Action(ResetState)\r\n    resetState(ctx: StateContext<ShareDialogStateModel>) {\r\n       ctx.setState({\r\n           loading: false,\r\n           usersWithAccess: [],\r\n           original: [],\r\n           loadingUsers: [],\r\n       });\r\n    }\r\n\r\n    @Action(ShareEntries, {cancelUncompleted: true})\r\n    shareEntries(ctx: StateContext<ShareDialogStateModel>, action: ShareEntries) {\r\n        ctx.patchState({loading: true});\r\n\r\n        const payload = {\r\n            ...action.payload,\r\n            entries: this.store.selectSnapshot(DriveState.selectedEntries)\r\n        };\r\n\r\n        return this.sharesApi.shareEntries(payload)\r\n            .pipe(\r\n                finalize(() => ctx.patchState({loading: false})),\r\n                tap(response => {\r\n                    ctx.dispatch(new SetUsers(response.users));\r\n                    this.updateEntriesInDriveStore(response.users);\r\n                }, (errorResponse: BackendErrorResponse) => {\r\n                    ctx.dispatch(new ShareEntriesFailed(errorResponse.errors));\r\n                })\r\n            );\r\n    }\r\n\r\n    private toggleUserLoading(ctx: StateContext<ShareDialogStateModel>, userId: number, isLoading: boolean) {\r\n        if (isLoading) {\r\n            ctx.patchState({loadingUsers: [...ctx.getState().loadingUsers, userId]});\r\n        } else {\r\n            ctx.patchState({loadingUsers: ctx.getState().loadingUsers.filter(u => u !== userId)});\r\n        }\r\n    }\r\n\r\n    private updateUsers(ctx, newUsers: DriveEntryUser[]) {\r\n        ctx.patchState({\r\n            usersWithAccess: newUsers,\r\n            original: cloneDeep(newUsers),\r\n        });\r\n        this.updateEntriesInDriveStore(newUsers);\r\n    }\r\n\r\n    private updateEntriesInDriveStore(newUsers: DriveEntryUser[]) {\r\n        const entries = this.store.selectSnapshot(DriveState.selectedEntries);\r\n\r\n        // update permissions in main drive store, otherwise we'll get old\r\n        // permissions if user re-opens share dialog without page reload\r\n        const updatedEntries = entries.map(entry => {\r\n            entry.users = newUsers;\r\n            return entry;\r\n        });\r\n\r\n        this.store.dispatch(new UpdateEntries(updatedEntries));\r\n    }\r\n}\r\n","<button mat-flat-button color=\"gray\" [matMenuTriggerFor]=\"shareMenu\" [disabled]=\"(loadingUsers$ | async).includes(user?.id)\">\n    <ng-container *ngIf=\"overallPermission() === 'varies'\">\n        <mat-icon class=\"button-icon\" svgIcon=\"priority-high\"></mat-icon>\n        <span class=\"button-text\" trans>Varies</span>\n    </ng-container>\n\n    <ng-container *ngIf=\"overallPermission() === 'edit'\">\n        <mat-icon class=\"button-icon\" svgIcon=\"edit\"></mat-icon>\n        <span class=\"button-text\" trans>Can edit</span>\n    </ng-container>\n\n    <ng-container *ngIf=\"overallPermission() === 'view'\">\n        <mat-icon class=\"button-icon\" svgIcon=\"remove-red-eye\"></mat-icon>\n        <span class=\"button-text\" trans>Can View</span>\n    </ng-container>\n\n    <ng-container *ngIf=\"overallPermission() === 'download'\">\n        <mat-icon class=\"button-icon\" svgIcon=\"file-download\"></mat-icon>\n        <span class=\"button-text\" trans>Can Download</span>\n    </ng-container>\n\n    <mat-icon class=\"dropdown-icon\" svgIcon=\"arrow-drop-down\"></mat-icon>\n</button>\n\n<mat-menu #shareMenu=\"matMenu\" classList=\"mat-menu-with-description\">\n    <div mat-menu-item (click)=\"selectPermission('edit')\">\n        <mat-icon class=\"mat-icon\" svgIcon=\"check\" [class.visually-hidden]=\"overallPermission() !== 'edit'\"></mat-icon>\n        <div>\n            <div trans>Can edit</div>\n            <div class=\"description\" trans>People can edit, delete and copy the item to their own drive.</div>\n        </div>\n    </div>\n    <div mat-menu-item (click)=\"selectPermission('download')\">\n        <mat-icon class=\"mat-icon\" svgIcon=\"check\" [class.visually-hidden]=\"overallPermission() !== 'download'\"></mat-icon>\n        <div>\n            <div trans>Can download</div>\n            <div class=\"description\" trans>People can view and download the item.</div>\n        </div>\n    </div>\n\n    <div mat-menu-item (click)=\"selectPermission('view')\">\n        <mat-icon class=\"mat-icon\" svgIcon=\"check\" [class.visually-hidden]=\"overallPermission() !== 'view'\"></mat-icon>\n        <div>\n            <div trans>Can view</div>\n            <div class=\"description\" trans>People can view the item.</div>\n        </div>\n    </div>\n</mat-menu>\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    HostBinding,\n    Input,\n    Output,\n    ViewEncapsulation\n} from '@angular/core';\nimport {\n    DRIVE_ENTRY_FULL_PERMISSIONS, DriveEntryPermissions\n} from '../../permissions/drive-entry-permissions';\nimport { ShareDialogEntryPermissions } from '../share-dialog/types/ShareDialogEntryPermissions';\nimport { Select, Store } from '@ngxs/store';\nimport { SharesApiService } from '../shares-api.service';\nimport { Toast } from '../../../../common/core/ui/toast.service';\nimport {\n    ShareDialogEntryUser, ShareDialogState, UpdateUserPermissions\n} from '../state/share-dialog.state';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'sharing-permissions-button',\n    templateUrl: './sharing-permissions-button.component.html',\n    styleUrls: ['./sharing-permissions-button.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SharingPermissionsButtonComponent {\n    @Input() permissions: ShareDialogEntryPermissions = DRIVE_ENTRY_FULL_PERMISSIONS;\n    @Input() user: ShareDialogEntryUser;\n    @Output() change: EventEmitter<DriveEntryPermissions> = new EventEmitter();\n    @Input() @HostBinding('class.compact') compact = false;\n    @Select(ShareDialogState.loadingUsers) loadingUsers$: Observable<number[]>;\n\n    constructor(\n        private store: Store,\n        private api: SharesApiService,\n        private toast: Toast,\n    ) {}\n\n    public overallPermission(): keyof ShareDialogEntryPermissions {\n        if (this.permissions.varies) {\n            return 'varies';\n        } else if (this.permissions.edit) {\n            return 'edit';\n        } else if (this.permissions.download) {\n            return 'download';\n        } else {\n            return 'view';\n        }\n    }\n\n    public selectPermission(permission: keyof ShareDialogEntryPermissions) {\n        if (permission === 'edit') {\n            this.permissions = {...DRIVE_ENTRY_FULL_PERMISSIONS};\n        } else if (permission === 'download') {\n            this.permissions = {...DRIVE_ENTRY_FULL_PERMISSIONS, edit: false};\n        } else {\n            this.permissions = {...DRIVE_ENTRY_FULL_PERMISSIONS, edit: false, download: false};\n        }\n\n        if (this.user) {\n            this.updateUserPermissions(this.permissions);\n        } else {\n            this.change.emit(this.permissions);\n        }\n    }\n\n    public updateUserPermissions(newPermissions: DriveEntryPermissions) {\n        this.store.dispatch(new UpdateUserPermissions(this.user, newPermissions))\n            .subscribe(() => {\n                this.toast.open('Changed permissions.');\n            });\n    }\n}\n","<div class=\"header\" trans>Who has access</div>\n<div class=\"users-list\">\n    <div class=\"list-item\" *ngIf=\"activeWorkspace$ | async as workspace\">\n        <mat-icon svgIcon=\"groups\" class=\"list-item-img\"></mat-icon>\n        <div class=\"text\">\n            <div class=\"display_name\" [transValues]=\"{workspace: workspace.name}\" trans>Everyone at \":workspace\" workspace</div>\n            <div class=\"email\">{{workspace.members_count}} {{ 'members' | trans }}</div>\n        </div>\n    </div>\n    <div class=\"list-item\" *ngFor=\"let user of users | async; trackBy: trackByUser\" [class.removed]=\"user.removed\" [@flyInOut]=\"'in'\">\n        <img [src]=\"user.avatar\" class=\"list-item-img\" alt=\"\">\n        <div class=\"text\">\n            <div class=\"display_name\">{{user.display_name}}</div>\n            <div class=\"email\">{{user.email}}</div>\n        </div>\n        <div class=\"actions\">\n            <span class=\"owner-label\" *ngIf=\"user.owns_entry || (currentUser.getModel().id === user.id); else permissionSelector\" trans>\n                {{ user.owns_entry ? 'Owner' : 'You' }}\n            </span>\n\n            <ng-template #permissionSelector>\n                <sharing-permissions-button [permissions]=\"user.entry_permissions\" [user]=\"user\"></sharing-permissions-button>\n                <button mat-icon-button [disabled]=\"(loadingUsers$ | async).includes(user.id)\" (click)=\"removeUser(user)\">\n                    <mat-icon svgIcon=\"close\"></mat-icon>\n                </button>\n            </ng-template>\n        </div>\n    </div>\n</div>\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { DriveEntryUser } from '../../files/models/drive-entry';\nimport {\n    RemoveUser, ShareDialogEntryUser, ShareDialogState\n} from '../state/share-dialog.state';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { CurrentUser } from '../../../../common/auth/current-user';\nimport { WorkspacesService } from '../../../../common/workspaces/workspaces.service';\nimport { DriveState } from '../../state/drive-state';\nimport { filter, map, switchMap } from 'rxjs/operators';\n\n@Component({\n    selector: 'entries-access-table',\n    templateUrl: './entries-access-table.component.html',\n    styleUrls: ['./entries-access-table.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [\n        trigger('flyInOut', [\n            state('in', style({transform: 'translateX(0)'})),\n            transition('void => *', [\n                style({transform: 'translateX(-100%)'}),\n                animate(100)\n            ]),\n            transition('* => void', [\n                animate(100, style({transform: 'translateX(100%)'}))\n            ])\n        ])\n    ]\n})\nexport class EntriesAccessTableComponent {\n    @Select(ShareDialogState.usersWithAccess) users: Observable<ShareDialogEntryUser[]>;\n    @Select(ShareDialogState.loadingUsers) loadingUsers$: Observable<number[]>;\n    public activeWorkspace$ = this.store.select(DriveState.selectedEntries)\n        .pipe(\n            map(entries => entries.every(e => e.workspace_id)),\n            filter(x => !!x),\n            switchMap(() => this.workspaces.activeWorkspace$)\n        );\n\n    constructor(\n        private store: Store,\n        public currentUser: CurrentUser,\n        public workspaces: WorkspacesService,\n    ) {}\n\n    public removeUser(user: DriveEntryUser) {\n        this.store.dispatch(new RemoveUser(user));\n    }\n\n    trackByUser(index: number, user: DriveEntryUser): number { return user.id; }\n}\n","<div class=\"modal-header\">\r\n    <h2 mat-dialog-title trans>Add people</h2>\r\n    <button type=\"button\" mat-icon-button (click)=\"dialogRef.close()\" class=\"close-button\" tabindex=\"-1\">\r\n        <mat-icon svgIcon=\"close\"></mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n    <div class=\"emails-container\">\r\n        <chip-input [formControl]=\"shareModel.emails\" [emailsInput]=\"true\" [suggestFn]=\"settings.get('share.suggest_emails') ? suggestUserEmails : null\" placeholder=\"Enter email addresses...\" email required></chip-input>\r\n        <sharing-permissions-button [compact]=\"true\" (change)=\"shareModel.permissions = $event\"></sharing-permissions-button>\r\n    </div>\r\n\r\n    <div class=\"errors\">\r\n        <div class=\"error\" *ngFor=\"let error of errors | async | keyvalue\">{{error.value}}</div>\r\n    </div>\r\n\r\n    <entries-access-table></entries-access-table>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions>\r\n    <button type=\"button\" mat-button (click)=\"dialogRef.close()\" [disabled]=\"loading$ | async\" trans>Close</button>\r\n    <button type=\"submit\" mat-raised-button color=\"accent\" (click)=\"share()\" [disabled]=\"(loading$ | async)\" *ngIf=\"shareModel.emails.value?.length\" trans>Share</button>\r\n</mat-dialog-actions>\r\n\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Actions, ofActionDispatched, Select, Store } from '@ngxs/store';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { DRIVE_ENTRY_FULL_PERMISSIONS, DriveEntryPermissions } from '../../permissions/drive-entry-permissions';\nimport { ResetState, SetInitialUsers, ShareDialogState, ShareEntries, ShareEntriesFailed } from '../state/share-dialog.state';\nimport { FormControl } from '@angular/forms';\nimport { BackendErrorMessages } from '@common/core/types/backend-error-response';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { Users } from '@common/auth/users.service';\nimport { Settings } from '@common/core/config/settings.service';\n\n@Component({\n    selector: 'share-dialog',\n    templateUrl: './share-dialog.component.html',\n    styleUrls: ['./share-dialog.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ShareDialogComponent implements OnDestroy {\n    @Select(ShareDialogState.loading) loading$: Observable<boolean>;\n\n    private destroyed$ = new Subject();\n    public errors: BehaviorSubject<BackendErrorMessages> = new BehaviorSubject({});\n    public shareModel: { emails: FormControl, permissions: DriveEntryPermissions};\n\n    constructor(\n        public dialogRef: MatDialogRef<ShareDialogComponent>,\n        public settings: Settings,\n        private store: Store,\n        private actions$: Actions,\n        private users: Users,\n    ) {\n        this.resetModel();\n        this.store.dispatch(new SetInitialUsers());\n\n        this.bindToShareError();\n        this.bindToShareModel();\n    }\n\n    ngOnDestroy() {\n        this.store.dispatch(new ResetState());\n        this.destroyed$.next();\n        this.destroyed$.complete();\n    }\n\n    public share() {\n        const payload = {\n            emails: this.shareModel.emails.value,\n            permissions: this.shareModel.permissions,\n        };\n\n        this.store.dispatch(new ShareEntries(payload)).subscribe(() => {\n            this.setErrorMessages();\n            this.resetModel();\n        });\n    }\n\n    private resetModel() {\n        this.shareModel = {\n            emails: new FormControl([]),\n            permissions: DRIVE_ENTRY_FULL_PERMISSIONS\n        };\n    }\n\n    private setErrorMessages(messages?: BackendErrorMessages) {\n        this.errors.next(messages || {});\n    }\n\n    private bindToShareModel() {\n        this.shareModel.emails.valueChanges\n            .pipe(takeUntil(this.destroyed$))\n            .subscribe(() => this.setErrorMessages());\n    }\n\n    private bindToShareError() {\n        this.actions$.pipe(\n            takeUntil(this.destroyed$),\n            ofActionDispatched(ShareEntriesFailed)\n        ).subscribe((action: ShareEntriesFailed) => {\n            this.setErrorMessages(action.messages);\n        });\n    }\n\n    suggestUserEmails = (query: string): Observable<string[]> => {\n        return this.users.getAll({query, perPage: 7})\n            .pipe(map(users => users.map(u => u.email)));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BackendResponse } from '@common/core/types/backend-response';\nimport { ShareableLink } from './models/shareable-link';\nimport { AppHttpClient } from '@common/core/http/app-http-client.service';\nimport { ShareableLinkOptions } from './models/shareable-link-options';\nimport { User } from '@common/core/types/models/User';\nimport { PaginationResponse } from '@common/core/types/pagination/pagination-response';\nimport { FileEntry } from '@common/uploads/types/file-entry';\n\nexport interface GetLinkData {\n    link: ShareableLink;\n    folderChildren: PaginationResponse<FileEntry>;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ShareableLinksApiService {\n    constructor(private http: AppHttpClient) {}\n\n    public findByEntryId(entryId: number, params: {autoCreate?: boolean}): BackendResponse<{ link: ShareableLink }> {\n        return this.http.get(`drive/entries/${entryId}/shareable-link`, params);\n    }\n\n    public findByHash(hash: string, params?: {withEntries?: boolean, page?: number, order?: string}): BackendResponse<GetLinkData> {\n        return this.http.get(`drive/shareable-links/${hash}`, params);\n    }\n\n    public create(entryId: number, params: Partial<ShareableLinkOptions>): BackendResponse<{ link: ShareableLink }> {\n        return this.http.post(`drive/entries/${entryId}/shareable-link`, params);\n    }\n\n    public update(id: number, params: Partial<ShareableLinkOptions>): BackendResponse<{ link: ShareableLink }> {\n        return this.http.put(`drive/shareable-links/${id}`, params);\n    }\n\n    public delete(id: number): BackendResponse<void> {\n        return this.http.delete(`drive/shareable-links/${id})`);\n    }\n\n    public checkPassword(linkId: number, password: string): BackendResponse<{matches: boolean}> {\n        return this.http.post(`drive/shareable-links/${linkId}/check-password`, {password});\n    }\n\n    /**\n     * Import shareable link entry into current user's drive.\n     */\n    public importEntry(linkId: number, password?: string): BackendResponse<{users: User[]}> {\n        return this.http.post(`drive/shareable-links/${linkId}/import`, {password});\n    }\n}\n","import { Action, Selector, State, StateContext, Store } from '@ngxs/store';\r\nimport { ShareableLinkOptions } from './models/shareable-link-options';\r\nimport { ShareableLinksApiService } from './shareable-links-api.service';\r\nimport { ShareableLink } from './models/shareable-link';\r\nimport { finalize, tap } from 'rxjs/operators';\r\nimport { DriveState } from '../../state/drive-state';\r\nimport { Settings } from '@common/core/config/settings.service';\r\nimport {\r\n    BackendErrorMessages, BackendErrorResponse\r\n} from '@common/core/types/backend-error-response';\r\nimport { Injectable } from '@angular/core';\r\n\r\nexport interface ShareLinkStateModel {\r\n    cache: {[key: number]: ShareableLink};\r\n    backendErrors: BackendErrorMessages;\r\n    link: ShareableLink;\r\n    loading: boolean;\r\n    linkOptions: ShareableLinkOptions;\r\n    optionsPanelVisible: boolean;\r\n}\r\n\r\nexport class LoadShareableLink {\r\n    static readonly type = '[Shareable Link] Load From Backend';\r\n    constructor(public options: {autoCreate?: boolean} = {}) {}\r\n}\r\n\r\nexport class UpdateShareableLink {\r\n    static readonly type = '[Shareable Link] Update';\r\n    constructor(public options: ShareableLinkOptions) {}\r\n}\r\n\r\nexport class CreateShareableLink {\r\n    static readonly type = '[Shareable Link] Create';\r\n    constructor(public options: ShareableLinkOptions) {}\r\n}\r\n\r\nexport class DeleteShareableLink {\r\n    static readonly type = '[Shareable Link] Delete';\r\n}\r\n\r\nexport class ToggleOptionsPanel {\r\n    static readonly type = '[Shareable Link] Toggle Options Panel Visibility';\r\n}\r\n\r\nexport class LinkCopySuccess {\r\n    static readonly type = '[Shareable Link] Copy To Clipboard Success';\r\n}\r\n\r\nexport class ResetShareLinkState {\r\n    static readonly type = '[Shareable Link] Reset State';\r\n}\r\n\r\nconst defaultState = {\r\n    link: null,\r\n    loading: false,\r\n    optionsPanelVisible: true,\r\n    backendErrors: {},\r\n    cache: {},\r\n    linkOptions: {\r\n        allowDownload: false,\r\n        allowEdit: false,\r\n        expiresAt: null,\r\n        password: null,\r\n    }\r\n};\r\n\r\n@State<ShareLinkStateModel>({\r\n    name: 'shareLink',\r\n    defaults: defaultState\r\n})\r\n@Injectable()\r\nexport class ShareLinkState {\r\n    constructor(\r\n        private store: Store,\r\n        private settings: Settings,\r\n        private linksApi: ShareableLinksApiService\r\n    ) {}\r\n\r\n    @Selector()\r\n    static loading(state: ShareLinkStateModel) {\r\n        return state.loading;\r\n    }\r\n\r\n    @Selector()\r\n    static link(state: ShareLinkStateModel) {\r\n        return state.link;\r\n    }\r\n\r\n    @Selector()\r\n    static optionsVisible(state: ShareLinkStateModel) {\r\n        return ! state.loading && state.optionsPanelVisible;\r\n    }\r\n\r\n    @Selector()\r\n    static backendErrors(state: ShareLinkStateModel) {\r\n        return state.backendErrors;\r\n    }\r\n\r\n    @Action(CreateShareableLink)\r\n    createShareableLink(ctx: StateContext<ShareLinkStateModel>, action: UpdateShareableLink) {\r\n        const entryId = this.store.selectSnapshot(DriveState.selectedEntryIds)[0];\r\n\r\n        ctx.patchState({loading: true});\r\n\r\n        return this.linksApi.create(entryId, action.options)\r\n            .pipe(\r\n                finalize(() => ctx.patchState({loading: false, backendErrors: {}})),\r\n                tap(response => {\r\n                    const link = response.link;\r\n                    ctx.patchState({\r\n                        cache: {...ctx.getState().cache, [link.entry_id]: link},\r\n                        link: response.link,\r\n                        optionsPanelVisible: false\r\n                    });\r\n                }, (errorResponse: BackendErrorResponse) => {\r\n                    ctx.patchState({backendErrors: errorResponse.errors});\r\n                })\r\n            );\r\n    }\r\n\r\n    @Action(UpdateShareableLink)\r\n    updateLink(ctx: StateContext<ShareLinkStateModel>, action: UpdateShareableLink) {\r\n        const link = ctx.getState().link;\r\n\r\n        ctx.patchState({loading: true});\r\n\r\n        return this.linksApi.update(link.id, action.options)\r\n            .pipe(\r\n                finalize(() => ctx.patchState({loading: false, backendErrors: {}})),\r\n                tap(response => ctx.patchState({\r\n                    link: response.link,\r\n                    cache: {...ctx.getState().cache, [link.entry_id]: response.link},\r\n                    optionsPanelVisible: false\r\n                }), (errorResponse: BackendErrorResponse) => {\r\n                    ctx.patchState({backendErrors: errorResponse.errors});\r\n                })\r\n            );\r\n    }\r\n\r\n    @Action(LoadShareableLink)\r\n    loadShareableLink(ctx: StateContext<ShareLinkStateModel>, action: LoadShareableLink) {\r\n        const entryId = this.store.selectSnapshot(DriveState.selectedEntryIds)[0],\r\n            cachedLink = ctx.getState().cache[entryId];\r\n\r\n        if (cachedLink) {\r\n            return ctx.patchState({link: cachedLink, optionsPanelVisible: false});\r\n        }\r\n\r\n        ctx.patchState({loading: true});\r\n\r\n        return this.linksApi.findByEntryId(entryId, {autoCreate: action.options.autoCreate})\r\n            .pipe(\r\n                finalize(() => ctx.patchState({loading: false})),\r\n                tap(response => ctx.patchState({\r\n                    link: response.link,\r\n                    optionsPanelVisible: false,\r\n                    cache: {...ctx.getState().cache, [response.link.entry_id]: response.link},\r\n                }), () => {})\r\n            );\r\n    }\r\n\r\n    @Action(DeleteShareableLink)\r\n    deleteShareableLink(ctx: StateContext<ShareLinkStateModel>) {\r\n        const link = ctx.getState().link;\r\n\r\n        ctx.patchState({loading: true});\r\n\r\n        return this.linksApi.delete(link.id)\r\n            .pipe(\r\n                finalize(() => ctx.patchState({loading: false})),\r\n                tap(() => {\r\n                    const cache = ctx.getState().cache;\r\n                    delete cache[link.entry_id];\r\n\r\n                    ctx.patchState({\r\n                        link: null,\r\n                        cache: cache,\r\n                    });\r\n                })\r\n            );\r\n    }\r\n\r\n    @Action(ToggleOptionsPanel)\r\n    toggleOptionsPanel(ctx: StateContext<ShareLinkStateModel>) {\r\n        ctx.patchState({\r\n           optionsPanelVisible: !ctx.getState().optionsPanelVisible\r\n        });\r\n    }\r\n\r\n    @Action(ResetShareLinkState, {cancelUncompleted: true})\r\n    resetShareLinkState(ctx: StateContext<ShareLinkStateModel>) {\r\n        return ctx.patchState({...ctx.getState(), ...defaultState});\r\n    }\r\n}\r\n","<form class=\"update-link-panel\" [formGroup]=\"form\" (ngSubmit)=\"saveChanges()\">\n    <div class=\"link-options\">\n        <div class=\"link-option\">\n            <div class=\"label\" trans>Link expiration</div>\n            <div class=\"content\">\n                <mat-checkbox color=\"accent\" [formControl]=\"expirationVisible\" trans>Link is valid until:</mat-checkbox>\n                <div class=\"input-container expiration-input-container\" formGroupName=\"expiresAt\"  [class.hidden]=\"!expirationVisible.value\">\n                    <div class=\"date-input-container\">\n                        <input type=\"date\" formControlName=\"date\" class=\"date-input\" placeholder=\"Expiration date...\" trans-placeholder [min]=\"getMinDate()\">\n                    </div>\n                    <input type=\"time\" class=\"time-input\" formControlName=\"time\" placeholder=\"Expiration time...\" trans-placeholder>\n                </div>\n                <div class=\"error\" *ngIf=\"(backendErrors$ | async)?.expiresAt as error\">{{error}}</div>\n            </div>\n        </div>\n        <div class=\"link-option\">\n            <div class=\"label\" trans>Password Protect</div>\n            <div class=\"content\">\n                <mat-checkbox color=\"accent\" [formControl]=\"passwordVisible\" trans>Require password:</mat-checkbox>\n                <ng-container *ngIf=\"passwordVisible.value\">\n                    <div class=\"input-container password-input-container\">\n                        <input type=\"password\" formControlName=\"password\" placeholder=\"Enter new password...\" trans-placeholder>\n                    </div>\n                </ng-container>\n            </div>\n        </div>\n        <div class=\"link-option\">\n            <div class=\"label\" trans>Allow editing</div>\n            <mat-checkbox color=\"accent\" formControlName=\"allowEdit\" trans>Users with link can modify this item.</mat-checkbox>\n        </div>\n        <div class=\"link-option\">\n            <div class=\"label\" trans>Allow download</div>\n            <mat-checkbox color=\"accent\" formControlName=\"allowDownload\" trans>Users with link can download this item.</mat-checkbox>\n        </div>\n    </div>\n\n    <button type=\"button\" (click)=\"toggleOptionsPanel()\" mat-button trans>Cancel</button>\n\n    <button type=\"submit\" class=\"update-button\" mat-raised-button color=\"accent\" [disabled]=\"loading$ | async\">\n        {{ ((link$ | async) ? 'Update Link' : 'Create Link') | trans }}\n    </button>\n</form>\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Select, Store } from '@ngxs/store';\nimport { CreateShareableLink, ShareLinkState, ToggleOptionsPanel, UpdateShareableLink } from '../share-link.state';\nimport { Observable } from 'rxjs';\nimport { ShareableLink } from '../models/shareable-link';\nimport { filter } from 'rxjs/operators';\nimport { ShareableLinkOptions } from '../models/shareable-link-options';\nimport { BackendErrorMessages } from '@common/core/types/backend-error-response';\n\n@Component({\n    selector: 'link-options',\n    templateUrl: './link-options.component.html',\n    styleUrls: ['./link-options.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LinkOptionsComponent implements OnInit {\n    @Select(ShareLinkState.link) link$: Observable<ShareableLink>;\n    @Select(ShareLinkState.loading) loading$: Observable<boolean>;\n    @Select(ShareLinkState.backendErrors) backendErrors$: Observable<BackendErrorMessages>;\n\n    public form = new FormGroup({\n        password: new FormControl(),\n        expiresAt: new FormGroup({\n            date: new FormControl(),\n            time: new FormControl(),\n        }),\n        allowEdit: new FormControl(false),\n        allowDownload: new FormControl(true)\n    });\n\n    public passwordVisible = new FormControl(false);\n    public expirationVisible = new FormControl(false);\n\n    constructor(private store: Store) {}\n\n    ngOnInit() {\n        this.bindToLinkChange();\n    }\n\n    public toggleOptionsPanel() {\n        this.store.dispatch(new ToggleOptionsPanel());\n    }\n\n    public saveChanges() {\n        if (this.store.selectSnapshot(ShareLinkState.link)) {\n            this.store.dispatch(new UpdateShareableLink(this.getPayload()));\n        } else {\n            this.store.dispatch(new CreateShareableLink(this.getPayload()));\n        }\n    }\n\n    private getPayload() {\n        const payload = {\n            allowEdit: this.form.get('allowEdit').value,\n            allowDownload: this.form.get('allowDownload').value,\n        } as ShareableLinkOptions;\n\n        if (this.expirationVisible.value) {\n            payload.expiresAt = this.form.get('expiresAt.date').value;\n            if (this.form.get('expiresAt.time').value) {\n                payload.expiresAt += ' ' + this.form.get('expiresAt.time').value;\n            }\n        }\n\n        // not sending \"password\" with request will remove it from link\n        if (this.passwordVisible.value) {\n            payload.password = this.form.get('password').value;\n        }\n\n        return payload;\n    }\n\n    private bindToLinkChange() {\n        this.link$.pipe(filter(link => !!link))\n            .subscribe(link => {\n                this.hydrateExpirationForm(link);\n\n                // show or hide password form field\n                this.passwordVisible.setValue(!!link.password);\n                this.expirationVisible.setValue(!!link.expires_at);\n\n                this.form.patchValue({\n                    allowEdit: link.allow_edit,\n                    allowDownload: link.allow_download\n                });\n            });\n    }\n\n    private hydrateExpirationForm(link: ShareableLink) {\n        if ( ! link || ! link.expires_at) return;\n\n        const parts = link.expires_at.split(/[ T]/);\n\n        this.form.get('expiresAt').setValue({\n            date: parts[0],\n            time: parts[1] ? parts[1].substr(0, 5) : '',\n        });\n    }\n\n    public getMinDate(): string {\n        return new Date().toJSON().split('T')[0];\n    }\n}\n","<div class=\"modal-header\">\n    <h2 mat-dialog-title trans>Shareable link</h2>\n    <button type=\"button\" mat-icon-button (click)=\"close()\" class=\"close-button\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<mat-dialog-content>\n    <ng-container *ngIf=\"link$ | async\">\n        <div class=\"title\">\n            <div class=\"left\">\n                {{ 'Link sharing is' | trans}} <span class=\"state on\"><button class=\"on-text text no-style\" (click)=\"deleteLink()\" trans>on</button></span>\n            </div>\n            <div class=\"right\">\n                <button type=\"button\" mat-icon-button (click)=\"deleteLink()\">\n                    <mat-icon svgIcon=\"delete\"></mat-icon>\n                </button>\n                <button type=\"button\" mat-icon-button (click)=\"toggleOptionsPanel()\">\n                    <mat-icon svgIcon=\"settings\"></mat-icon>\n                </button>\n            </div>\n        </div>\n\n        <div class=\"link-container\">\n            <div class=\"link-input-container input-container\">\n                <input type=\"text\" id=\"link-input\" readonly (click)=\"focusInput()\" (change)=\"focusInput()\" [value]=\"shareableLink$ | async\" tabindex=\"1\">\n                <button mat-flat-button color=\"accent\" (click)=\"copyLinkToClipboard()\" trans>Copy</button>\n            </div>\n            <div class=\"social-icons\">\n                <button type=\"button\" mat-icon-button class=\"social-icon no-style facebook\" (click)=\"shareLink('facebook')\">\n                    <mat-icon svgIcon=\"facebook\"></mat-icon>\n                </button>\n                <button type=\"button\" mat-icon-button class=\"social-icon no-style twitter\" (click)=\"shareLink('twitter')\">\n                    <mat-icon svgIcon=\"twitter\"></mat-icon>\n                </button>\n                <button type=\"button\" mat-icon-button class=\"social-icon no-style mail\" (click)=\"shareLink('mail')\">\n                    <mat-icon svgIcon=\"mail\"></mat-icon>\n                </button>\n            </div>\n        </div>\n    </ng-container>\n\n    <link-options [@visibility]=\"optionsVisible$ | async\"></link-options>\n    <loading-indicator [isVisible]=\"loading$ | async\" class=\"overlay-transparent\"></loading-indicator>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n    <button type=\"button\" mat-button class=\"submit-button\" (click)=\"close()\" [disabled]=\"loading$ | async\" trans>Close</button>\n</mat-dialog-actions>\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, OnInit, OnDestroy, AfterViewInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Actions, ofActionDispatched, Select, Store } from '@ngxs/store';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport {\n    DeleteShareableLink,\n    LinkCopySuccess,\n    LoadShareableLink, ResetShareLinkState,\n    ShareLinkState,\n    ToggleOptionsPanel\n} from '../links/share-link.state';\nimport { Settings } from '@common/core/config/settings.service';\nimport { ShareableLink } from '../links/models/shareable-link';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport copy from 'copy-to-clipboard';\nimport { Toast } from '@common/core/ui/toast.service';\nimport { ShareableNetworks, shareLinkSocially } from '@common/core/utils/share-link-socially';\n\n@Component({\n    selector: 'share-link-dialog',\n    templateUrl: './share-link-dialog.component.html',\n    styleUrls: ['./share-link-dialog.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [\n        trigger('visibility', [\n            state('true', style({\n                height: '*',\n                padding: '*',\n                opacity: '1',\n                overflow: '*',\n            })),\n            state('false', style({\n                height: '0',\n                padding: '0',\n                opacity: '0',\n                overflow: 'hidden',\n            })),\n            transition('true <=> false', animate('225ms cubic-bezier(.4,0,.2,1)'))\n        ]),\n    ],\n})\nexport class ShareLinkDialogComponent implements AfterViewInit, OnInit, OnDestroy {\n    @Select(ShareLinkState.loading) loading$: Observable<boolean>;\n    @Select(ShareLinkState.link) link$: Observable<ShareableLink>;\n    @Select(ShareLinkState.optionsVisible) optionsVisible$: Observable<boolean>;\n    public shareableLink$ = new BehaviorSubject(null);\n    private subscriptions: Subscription[] = [];\n\n    constructor(\n        protected store: Store,\n        protected toast: Toast,\n        protected actions$: Actions,\n        protected settings: Settings,\n        protected dialogRef: MatDialogRef<ShareLinkDialogComponent>,\n    ) {}\n\n    ngOnInit() {\n        this.store.dispatch(new LoadShareableLink());\n        this.bindToOptionsPanelToggle();\n    }\n\n    ngAfterViewInit() {\n        this.bindToLinkChange();\n    }\n\n    ngOnDestroy() {\n        this.store.dispatch(new ResetShareLinkState());\n        this.subscriptions.forEach(s => s.unsubscribe());\n    }\n\n    public toggleOptionsPanel() {\n        this.store.dispatch(new ToggleOptionsPanel());\n    }\n\n    public deleteLink() {\n        this.store.dispatch(new DeleteShareableLink()).subscribe(() => {\n            this.toast.open('Link deleted.');\n            this.dialogRef.close();\n        });\n    }\n\n    public copyLinkToClipboard() {\n        this.focusInput();\n        const success = copy(this.shareableLink$.value);\n\n        if (success) {\n            this.store.dispatch(new LinkCopySuccess());\n        }\n    }\n\n    private bindToLinkChange() {\n        this.link$.subscribe(link => {\n            if ( ! link) return;\n            this.shareableLink$.next(this.settings.getBaseUrl() + 'drive/s/' + link.hash);\n            setTimeout(() => this.focusInput());\n        });\n    }\n\n    private bindToOptionsPanelToggle() {\n        const sub = this.actions$.pipe(ofActionDispatched(ToggleOptionsPanel))\n            .subscribe(() => {\n                // close dialog if user canceled link creation\n                if ( ! this.store.selectSnapshot(ShareLinkState.optionsVisible) && ! this.shareableLink$.value) {\n                    this.close();\n                }\n            });\n        this.subscriptions.push(sub);\n    }\n\n    public shareLink(network: ShareableNetworks) {\n        shareLinkSocially(network, this.shareableLink$.value);\n    }\n\n    public focusInput() {\n        const input = document.getElementById('link-input') as HTMLInputElement;\n        input.focus();\n        input.select();\n    }\n\n    public close() {\n        this.dialogRef.close();\n    }\n}\n","export type ShareableNetworks = 'facebook'|'twitter'|'pinterest'|'tumblr'|'blogger'|'mail';\r\n\r\nexport function shareLinkSocially(network: ShareableNetworks, link: string, name?: string, image?: string) {\r\n    const url = generateShareUrl(network, link, name, image);\r\n\r\n    if (network === 'mail') {\r\n        window.location.href = url;\r\n    } else {\r\n        openNewWindow(url);\r\n    }\r\n}\r\n\r\nfunction openNewWindow(url: string) {\r\n    const width  = 575,\r\n        height = 400,\r\n        left   = (window.innerWidth  - width)  / 2,\r\n        top    = (window.innerHeight - height) / 2,\r\n        opts   = 'status=1, scrollbars=1' + ',width=' + width + ',height=' + height + ',top=' + top + ',left=' + left;\r\n\r\n    window.open(url, 'share', opts);\r\n}\r\n\r\nfunction generateShareUrl(type: string, link: string, name?: string, image?: string) {\r\n    switch (type) {\r\n        case 'facebook':\r\n            return 'https://www.facebook.com/sharer/sharer.php?u=' + link ;\r\n        case 'twitter':\r\n            return `https://twitter.com/intent/tweet?text=${name}&url=${link}`;\r\n        case 'google-plus':\r\n            return 'https://plus.google.com/share?url=' + link ;\r\n        case 'pinterest':\r\n            return 'https://pinterest.com/pin/create/button/?url=' + link + '&media=' + image;\r\n        case 'tumblr':\r\n            const base = 'https://www.tumblr.com/widgets/share/tool?shareSource=legacy&canonicalUrl=&posttype=photo&title=&caption=';\r\n            return base + name + '&content=' + image + '&url=' + link ;\r\n        case 'blogger':\r\n            return 'https://www.blogger.com/blog_this.pyra?t&u=' + link + '&n=' + name;\r\n        case 'mail':\r\n            return `mailto:?subject=Check out this link.&body=${link}`;\r\n    }\r\n}\r\n","<div class=\"modal-header\">\n    <h2 mat-dialog-title trans>New Folder</h2>\n    <button type=\"button\" mat-icon-button (click)=\"close()\" class=\"close-button\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<form ngNativeValidate (ngSubmit)=\"confirm()\">\n    <mat-dialog-content class=\"many-inputs\">\n        <div class=\"input-container\">\n            <input type=\"text\" [formControl]=\"folderName\" placeholder=\"Folder name...\" trans-placeholder required min=\"3\">\n            <div class=\"error\" *ngIf=\"errors.name\">{{errors.name}}</div>\n        </div>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <button (click)=\"close()\" type=\"button\" mat-button class=\"cancel-button\" trans>Cancel</button>\n        <button type=\"submit\" mat-raised-button color=\"accent\" class=\"submit-button\" [disabled]=\"loading | async\" trans>Create</button>\n    </mat-dialog-actions>\n</form>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { DriveFolder } from '../../models/driveFolder';\nimport { FoldersApiService } from '../../api/folders-api.service';\nimport { Store } from '@ngxs/store';\nimport { BackendErrorResponse } from '@common/core/types/backend-error-response';\nimport { DriveState } from '../../../state/drive-state';\nimport { finalize } from 'rxjs/operators';\nimport { NewFolderCreated } from '../../../state/actions/events';\n\nexport interface CrupdateFolderDialogData {\n    folder?: DriveFolder;\n}\n\nexport interface CrupdateFolderErrors {\n    name?: string;\n}\n\n@Component({\n    selector: 'crupdate-folder-dialog',\n    templateUrl: './crupdate-folder-dialog.component.html',\n    styleUrls: ['./crupdate-folder-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CrupdateFolderDialogComponent {\n    public folderName = new FormControl();\n    public loading = new BehaviorSubject(false);\n    public errors: CrupdateFolderErrors = {};\n\n    constructor(\n        private dialogRef: MatDialogRef<CrupdateFolderDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: CrupdateFolderDialogData,\n        private store: Store,\n        private foldersApi: FoldersApiService,\n        private changeDetection: ChangeDetectorRef,\n    ) {}\n\n    public confirm() {\n        this.loading.next(true);\n\n        const activeFolder = this.data.folder || this.store.selectSnapshot(DriveState.activeFolder);\n        const params = {\n            name: this.folderName.value,\n            parentId: activeFolder?.id || null,\n        };\n\n        return this.foldersApi.create(params)\n            .pipe(finalize(() => this.loading.next(false)))\n            .subscribe(response => {\n                this.setErrors();\n                this.store.dispatch(new NewFolderCreated(response.folder));\n                this.close();\n            }, response => this.setErrors(response));\n    }\n\n    public setErrors(response?: BackendErrorResponse<CrupdateFolderErrors>) {\n        this.errors = response ? response.errors : {};\n        this.changeDetection.detectChanges();\n    }\n\n    public close() {\n        this.dialogRef.close();\n    }\n}\n","import { SelectionModel, isDataSource } from '@angular/cdk/collections';\nimport { isObservable, Subject, BehaviorSubject, of } from 'rxjs';\nimport { take, filter, takeUntil } from 'rxjs/operators';\nimport { InjectionToken, Directive, ViewContainerRef, Inject, Optional, TemplateRef, Component, ViewEncapsulation, ChangeDetectionStrategy, IterableDiffers, ChangeDetectorRef, Input, ViewChild, ContentChildren, ElementRef, Renderer2, HostListener, NgModule } from '@angular/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Base tree control. It has basic toggle/expand/collapse operations on a single data node. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nclass BaseTreeControl {\n    constructor() {\n        /** A selection model with multi-selection to track expansion status. */\n        this.expansionModel = new SelectionModel(true);\n    }\n    /** Toggles one single data node's expanded/collapsed state. */\n    toggle(dataNode) {\n        this.expansionModel.toggle(this._trackByValue(dataNode));\n    }\n    /** Expands one single data node. */\n    expand(dataNode) {\n        this.expansionModel.select(this._trackByValue(dataNode));\n    }\n    /** Collapses one single data node. */\n    collapse(dataNode) {\n        this.expansionModel.deselect(this._trackByValue(dataNode));\n    }\n    /** Whether a given data node is expanded or not. Returns true if the data node is expanded. */\n    isExpanded(dataNode) {\n        return this.expansionModel.isSelected(this._trackByValue(dataNode));\n    }\n    /** Toggles a subtree rooted at `node` recursively. */\n    toggleDescendants(dataNode) {\n        this.expansionModel.isSelected(this._trackByValue(dataNode)) ?\n            this.collapseDescendants(dataNode) :\n            this.expandDescendants(dataNode);\n    }\n    /** Collapse all dataNodes in the tree. */\n    collapseAll() {\n        this.expansionModel.clear();\n    }\n    /** Expands a subtree rooted at given data node recursively. */\n    expandDescendants(dataNode) {\n        let toBeProcessed = [dataNode];\n        toBeProcessed.push(...this.getDescendants(dataNode));\n        this.expansionModel.select(...toBeProcessed.map(value => this._trackByValue(value)));\n    }\n    /** Collapses a subtree rooted at given data node recursively. */\n    collapseDescendants(dataNode) {\n        let toBeProcessed = [dataNode];\n        toBeProcessed.push(...this.getDescendants(dataNode));\n        this.expansionModel.deselect(...toBeProcessed.map(value => this._trackByValue(value)));\n    }\n    _trackByValue(value) {\n        return this.trackBy ? this.trackBy(value) : value;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Flat tree control. Able to expand/collapse a subtree recursively for flattened tree. */\nclass FlatTreeControl extends BaseTreeControl {\n    /** Construct with flat tree data node functions getLevel and isExpandable. */\n    constructor(getLevel, isExpandable, options) {\n        super();\n        this.getLevel = getLevel;\n        this.isExpandable = isExpandable;\n        this.options = options;\n        if (this.options) {\n            this.trackBy = this.options.trackBy;\n        }\n    }\n    /**\n     * Gets a list of the data node's subtree of descendent data nodes.\n     *\n     * To make this working, the `dataNodes` of the TreeControl must be flattened tree nodes\n     * with correct levels.\n     */\n    getDescendants(dataNode) {\n        const startIndex = this.dataNodes.indexOf(dataNode);\n        const results = [];\n        // Goes through flattened tree nodes in the `dataNodes` array, and get all descendants.\n        // The level of descendants of a tree node must be greater than the level of the given\n        // tree node.\n        // If we reach a node whose level is equal to the level of the tree node, we hit a sibling.\n        // If we reach a node whose level is greater than the level of the tree node, we hit a\n        // sibling of an ancestor.\n        for (let i = startIndex + 1; i < this.dataNodes.length && this.getLevel(dataNode) < this.getLevel(this.dataNodes[i]); i++) {\n            results.push(this.dataNodes[i]);\n        }\n        return results;\n    }\n    /**\n     * Expands all data nodes in the tree.\n     *\n     * To make this working, the `dataNodes` variable of the TreeControl must be set to all flattened\n     * data nodes of the tree.\n     */\n    expandAll() {\n        this.expansionModel.select(...this.dataNodes.map(node => this._trackByValue(node)));\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Nested tree control. Able to expand/collapse a subtree recursively for NestedNode type. */\nclass NestedTreeControl extends BaseTreeControl {\n    /** Construct with nested tree function getChildren. */\n    constructor(getChildren, options) {\n        super();\n        this.getChildren = getChildren;\n        this.options = options;\n        if (this.options) {\n            this.trackBy = this.options.trackBy;\n        }\n    }\n    /**\n     * Expands all dataNodes in the tree.\n     *\n     * To make this working, the `dataNodes` variable of the TreeControl must be set to all root level\n     * data nodes of the tree.\n     */\n    expandAll() {\n        this.expansionModel.clear();\n        const allNodes = this.dataNodes.reduce((accumulator, dataNode) => [...accumulator, ...this.getDescendants(dataNode), dataNode], []);\n        this.expansionModel.select(...allNodes.map(node => this._trackByValue(node)));\n    }\n    /** Gets a list of descendant dataNodes of a subtree rooted at given data node recursively. */\n    getDescendants(dataNode) {\n        const descendants = [];\n        this._getDescendants(descendants, dataNode);\n        // Remove the node itself\n        return descendants.splice(1);\n    }\n    /** A helper function to get descendants recursively. */\n    _getDescendants(descendants, dataNode) {\n        descendants.push(dataNode);\n        const childrenNodes = this.getChildren(dataNode);\n        if (Array.isArray(childrenNodes)) {\n            childrenNodes.forEach((child) => this._getDescendants(descendants, child));\n        }\n        else if (isObservable(childrenNodes)) {\n            // TypeScript as of version 3.5 doesn't seem to treat `Boolean` like a function that\n            // returns a `boolean` specifically in the context of `filter`, so we manually clarify that.\n            childrenNodes.pipe(take(1), filter(Boolean))\n                .subscribe(children => {\n                for (const child of children) {\n                    this._getDescendants(descendants, child);\n                }\n            });\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide a `CdkTreeNode` to its outlet.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst CDK_TREE_NODE_OUTLET_NODE = new InjectionToken('CDK_TREE_NODE_OUTLET_NODE');\n/**\n * Outlet for nested CdkNode. Put `[cdkTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\nclass CdkTreeNodeOutlet {\n    constructor(viewContainer, _node) {\n        this.viewContainer = viewContainer;\n        this._node = _node;\n    }\n}\nCdkTreeNodeOutlet.ɵfac = function CdkTreeNodeOutlet_Factory(t) { return new (t || CdkTreeNodeOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_TREE_NODE_OUTLET_NODE, 8)); };\nCdkTreeNodeOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTreeNodeOutlet, selectors: [[\"\", \"cdkTreeNodeOutlet\", \"\"]] });\nCdkTreeNodeOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TREE_NODE_OUTLET_NODE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTreeNodeOutlet, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkTreeNodeOutlet]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TREE_NODE_OUTLET_NODE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Context provided to the tree node component. */\nclass CdkTreeNodeOutletContext {\n    constructor(data) {\n        this.$implicit = data;\n    }\n}\n/**\n * Data node definition for the CdkTree.\n * Captures the node's template and a when predicate that describes when this node should be used.\n */\nclass CdkTreeNodeDef {\n    /** @docs-private */\n    constructor(template) {\n        this.template = template;\n    }\n}\nCdkTreeNodeDef.ɵfac = function CdkTreeNodeDef_Factory(t) { return new (t || CdkTreeNodeDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkTreeNodeDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTreeNodeDef, selectors: [[\"\", \"cdkTreeNodeDef\", \"\"]], inputs: { when: [\"cdkTreeNodeDefWhen\", \"when\"] } });\nCdkTreeNodeDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTreeNodeDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkTreeNodeDef]',\n                inputs: [\n                    'when: cdkTreeNodeDefWhen'\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when there is no usable data.\n * @docs-private\n */\nfunction getTreeNoValidDataSourceError() {\n    return Error(`A valid data source must be provided.`);\n}\n/**\n * Returns an error to be thrown when there are multiple nodes that are missing a when function.\n * @docs-private\n */\nfunction getTreeMultipleDefaultNodeDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching node defs for a particular set of data.\n * @docs-private\n */\nfunction getTreeMissingMatchingNodeDefError() {\n    return Error(`Could not find a matching node definition for the provided node data.`);\n}\n/**\n * Returns an error to be thrown when there are tree control.\n * @docs-private\n */\nfunction getTreeControlMissingError() {\n    return Error(`Could not find a tree control for the tree.`);\n}\n/**\n * Returns an error to be thrown when tree control did not implement functions for flat/nested node.\n * @docs-private\n */\nfunction getTreeControlFunctionsMissingError() {\n    return Error(`Could not find functions for nested/flat tree in tree control.`);\n}\n\n/**\n * CDK tree component that connects with a data source to retrieve data of type `T` and renders\n * dataNodes with hierarchy. Updates the dataNodes when new data is provided by the data source.\n */\nclass CdkTree {\n    constructor(_differs, _changeDetectorRef) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Subject that emits when the component has been destroyed. */\n        this._onDestroy = new Subject();\n        /** Level of nodes */\n        this._levels = new Map();\n        // TODO(tinayuangao): Setup a listener for scrolling, emit the calculated view to viewChange.\n        //     Remove the MAX_VALUE in viewChange\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         */\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\n    }\n    /**\n     * Provides a stream containing the latest data array to render. Influenced by the tree's\n     * stream of view window (what dataNodes are currently on screen).\n     * Data source can be an observable of data array, or a data array to render.\n     */\n    get dataSource() { return this._dataSource; }\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    ngOnInit() {\n        this._dataDiffer = this._differs.find([]).create(this.trackBy);\n        if (!this.treeControl && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeControlMissingError();\n        }\n    }\n    ngOnDestroy() {\n        this._nodeOutlet.viewContainer.clear();\n        this.viewChange.complete();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (this._dataSource && typeof this._dataSource.disconnect === 'function') {\n            this.dataSource.disconnect(this);\n        }\n        if (this._dataSubscription) {\n            this._dataSubscription.unsubscribe();\n            this._dataSubscription = null;\n        }\n    }\n    ngAfterContentChecked() {\n        const defaultNodeDefs = this._nodeDefs.filter(def => !def.when);\n        if (defaultNodeDefs.length > 1 && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeMultipleDefaultNodeDefsError();\n        }\n        this._defaultNodeDef = defaultNodeDefs[0];\n        if (this.dataSource && this._nodeDefs && !this._dataSubscription) {\n            this._observeRenderChanges();\n        }\n    }\n    // TODO(tinayuangao): Work on keyboard traversal and actions, make sure it's working for RTL\n    //     and nested trees.\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the node outlet. Otherwise start listening for new data.\n     */\n    _switchDataSource(dataSource) {\n        if (this._dataSource && typeof this._dataSource.disconnect === 'function') {\n            this.dataSource.disconnect(this);\n        }\n        if (this._dataSubscription) {\n            this._dataSubscription.unsubscribe();\n            this._dataSubscription = null;\n        }\n        // Remove the all dataNodes if there is now no data source\n        if (!dataSource) {\n            this._nodeOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n        if (this._nodeDefs) {\n            this._observeRenderChanges();\n        }\n    }\n    /** Set up a subscription for the data provided by the data source. */\n    _observeRenderChanges() {\n        let dataStream;\n        if (isDataSource(this._dataSource)) {\n            dataStream = this._dataSource.connect(this);\n        }\n        else if (isObservable(this._dataSource)) {\n            dataStream = this._dataSource;\n        }\n        else if (Array.isArray(this._dataSource)) {\n            dataStream = of(this._dataSource);\n        }\n        if (dataStream) {\n            this._dataSubscription = dataStream.pipe(takeUntil(this._onDestroy))\n                .subscribe(data => this.renderNodeChanges(data));\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getTreeNoValidDataSourceError();\n        }\n    }\n    /** Check for changes made in the data and render each change (node added/removed/moved). */\n    renderNodeChanges(data, dataDiffer = this._dataDiffer, viewContainer = this._nodeOutlet.viewContainer, parentData) {\n        const changes = dataDiffer.diff(data);\n        if (!changes) {\n            return;\n        }\n        changes.forEachOperation((item, adjustedPreviousIndex, currentIndex) => {\n            if (item.previousIndex == null) {\n                this.insertNode(data[currentIndex], currentIndex, viewContainer, parentData);\n            }\n            else if (currentIndex == null) {\n                viewContainer.remove(adjustedPreviousIndex);\n                this._levels.delete(item.item);\n            }\n            else {\n                const view = viewContainer.get(adjustedPreviousIndex);\n                viewContainer.move(view, currentIndex);\n            }\n        });\n        this._changeDetectorRef.detectChanges();\n    }\n    /**\n     * Finds the matching node definition that should be used for this node data. If there is only\n     * one node definition, it is returned. Otherwise, find the node definition that has a when\n     * predicate that returns true with the data. If none return true, return the default node\n     * definition.\n     */\n    _getNodeDef(data, i) {\n        if (this._nodeDefs.length === 1) {\n            return this._nodeDefs.first;\n        }\n        const nodeDef = this._nodeDefs.find(def => def.when && def.when(i, data)) || this._defaultNodeDef;\n        if (!nodeDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeMissingMatchingNodeDefError();\n        }\n        return nodeDef;\n    }\n    /**\n     * Create the embedded view for the data node template and place it in the correct index location\n     * within the data node view container.\n     */\n    insertNode(nodeData, index, viewContainer, parentData) {\n        const node = this._getNodeDef(nodeData, index);\n        // Node context that will be provided to created embedded view\n        const context = new CdkTreeNodeOutletContext(nodeData);\n        // If the tree is flat tree, then use the `getLevel` function in flat tree control\n        // Otherwise, use the level of parent node.\n        if (this.treeControl.getLevel) {\n            context.level = this.treeControl.getLevel(nodeData);\n        }\n        else if (typeof parentData !== 'undefined' && this._levels.has(parentData)) {\n            context.level = this._levels.get(parentData) + 1;\n        }\n        else {\n            context.level = 0;\n        }\n        this._levels.set(nodeData, context.level);\n        // Use default tree nodeOutlet, or nested node's nodeOutlet\n        const container = viewContainer ? viewContainer : this._nodeOutlet.viewContainer;\n        container.createEmbeddedView(node.template, context, index);\n        // Set the data to just created `CdkTreeNode`.\n        // The `CdkTreeNode` created from `createEmbeddedView` will be saved in static variable\n        //     `mostRecentTreeNode`. We get it from static variable and pass the node data to it.\n        if (CdkTreeNode.mostRecentTreeNode) {\n            CdkTreeNode.mostRecentTreeNode.data = nodeData;\n        }\n    }\n}\nCdkTree.ɵfac = function CdkTree_Factory(t) { return new (t || CdkTree)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nCdkTree.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkTree, selectors: [[\"cdk-tree\"]], contentQueries: function CdkTree_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkTreeNodeDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nodeDefs = _t);\n    } }, viewQuery: function CdkTree_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkTreeNodeOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nodeOutlet = _t.first);\n    } }, hostAttrs: [\"role\", \"tree\", 1, \"cdk-tree\"], inputs: { dataSource: \"dataSource\", treeControl: \"treeControl\", trackBy: \"trackBy\" }, exportAs: [\"cdkTree\"], decls: 1, vars: 0, consts: [[\"cdkTreeNodeOutlet\", \"\"]], template: function CdkTree_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkTreeNodeOutlet], encapsulation: 2 });\nCdkTree.ctorParameters = () => [\n    { type: IterableDiffers },\n    { type: ChangeDetectorRef }\n];\nCdkTree.propDecorators = {\n    dataSource: [{ type: Input }],\n    treeControl: [{ type: Input }],\n    trackBy: [{ type: Input }],\n    _nodeOutlet: [{ type: ViewChild, args: [CdkTreeNodeOutlet, { static: true },] }],\n    _nodeDefs: [{ type: ContentChildren, args: [CdkTreeNodeDef, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTree, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-tree',\n                exportAs: 'cdkTree',\n                template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n                host: {\n                    'class': 'cdk-tree',\n                    'role': 'tree'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // The \"OnPush\" status for the `CdkTree` component is effectively a noop, so we are removing it.\n                // The view for `CdkTree` consists entirely of templates declared in other views. As they are\n                // declared elsewhere, they are checked when their declaration points are checked.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return [{ type: ɵngcc0.IterableDiffers }, { type: ɵngcc0.ChangeDetectorRef }]; }, { dataSource: [{\n            type: Input\n        }], treeControl: [{\n            type: Input\n        }], trackBy: [{\n            type: Input\n        }], _nodeOutlet: [{\n            type: ViewChild,\n            args: [CdkTreeNodeOutlet, { static: true }]\n        }], _nodeDefs: [{\n            type: ContentChildren,\n            args: [CdkTreeNodeDef, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }] }); })();\n/**\n * Tree node for CdkTree. It contains the data in the tree node.\n */\nclass CdkTreeNode {\n    constructor(_elementRef, _tree) {\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        /** Subject that emits when the component has been destroyed. */\n        this._destroyed = new Subject();\n        /** Emits when the node's data has changed. */\n        this._dataChanges = new Subject();\n        /**\n         * The role of the node should always be 'treeitem'.\n         */\n        // TODO: mark as deprecated\n        this.role = 'treeitem';\n        CdkTreeNode.mostRecentTreeNode = this;\n    }\n    /** The tree node's data. */\n    get data() { return this._data; }\n    set data(value) {\n        if (value !== this._data) {\n            this._data = value;\n            this._setRoleFromData();\n            this._dataChanges.next();\n        }\n    }\n    get isExpanded() {\n        return this._tree.treeControl.isExpanded(this._data);\n    }\n    get level() {\n        return this._tree.treeControl.getLevel ? this._tree.treeControl.getLevel(this._data) : 0;\n    }\n    ngOnDestroy() {\n        // If this is the last tree node being destroyed,\n        // clear out the reference to avoid leaking memory.\n        if (CdkTreeNode.mostRecentTreeNode === this) {\n            CdkTreeNode.mostRecentTreeNode = null;\n        }\n        this._dataChanges.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Focuses the menu item. Implements for FocusableOption. */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    // TODO: role should eventually just be set in the component host\n    _setRoleFromData() {\n        if (!this._tree.treeControl.isExpandable && !this._tree.treeControl.getChildren &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeControlFunctionsMissingError();\n        }\n        this.role = 'treeitem';\n    }\n}\nCdkTreeNode.ɵfac = function CdkTreeNode_Factory(t) { return new (t || CdkTreeNode)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CdkTree)); };\nCdkTreeNode.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTreeNode, selectors: [[\"cdk-tree-node\"]], hostAttrs: [1, \"cdk-tree-node\"], hostVars: 3, hostBindings: function CdkTreeNode_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.isExpanded)(\"aria-level\", ctx.level + 1)(\"role\", ctx.role);\n    } }, inputs: { role: \"role\" }, exportAs: [\"cdkTreeNode\"] });\n/**\n * The most recently created `CdkTreeNode`. We save it in static variable so we can retrieve it\n * in `CdkTree` and set the data to it.\n */\nCdkTreeNode.mostRecentTreeNode = null;\nCdkTreeNode.ctorParameters = () => [\n    { type: ElementRef },\n    { type: CdkTree }\n];\nCdkTreeNode.propDecorators = {\n    role: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTreeNode, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-tree-node',\n                exportAs: 'cdkTreeNode',\n                host: {\n                    '[attr.aria-expanded]': 'isExpanded',\n                    '[attr.aria-level]': 'level + 1',\n                    '[attr.role]': 'role',\n                    'class': 'cdk-tree-node'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: CdkTree }]; }, { role: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Nested node is a child of `<cdk-tree>`. It works with nested tree.\n * By using `cdk-nested-tree-node` component in tree node template, children of the parent node will\n * be added in the `cdkTreeNodeOutlet` in tree node template.\n * The children of node will be automatically added to `cdkTreeNodeOutlet`.\n */\nclass CdkNestedTreeNode extends CdkTreeNode {\n    constructor(_elementRef, _tree, _differs) {\n        super(_elementRef, _tree);\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        this._differs = _differs;\n    }\n    ngAfterContentInit() {\n        this._dataDiffer = this._differs.find([]).create(this._tree.trackBy);\n        if (!this._tree.treeControl.getChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeControlFunctionsMissingError();\n        }\n        const childrenNodes = this._tree.treeControl.getChildren(this.data);\n        if (Array.isArray(childrenNodes)) {\n            this.updateChildrenNodes(childrenNodes);\n        }\n        else if (isObservable(childrenNodes)) {\n            childrenNodes.pipe(takeUntil(this._destroyed))\n                .subscribe(result => this.updateChildrenNodes(result));\n        }\n        this.nodeOutlet.changes.pipe(takeUntil(this._destroyed))\n            .subscribe(() => this.updateChildrenNodes());\n    }\n    ngOnDestroy() {\n        this._clear();\n        super.ngOnDestroy();\n    }\n    /** Add children dataNodes to the NodeOutlet */\n    updateChildrenNodes(children) {\n        const outlet = this._getNodeOutlet();\n        if (children) {\n            this._children = children;\n        }\n        if (outlet && this._children) {\n            const viewContainer = outlet.viewContainer;\n            this._tree.renderNodeChanges(this._children, this._dataDiffer, viewContainer, this._data);\n        }\n        else {\n            // Reset the data differ if there's no children nodes displayed\n            this._dataDiffer.diff([]);\n        }\n    }\n    /** Clear the children dataNodes. */\n    _clear() {\n        const outlet = this._getNodeOutlet();\n        if (outlet) {\n            outlet.viewContainer.clear();\n            this._dataDiffer.diff([]);\n        }\n    }\n    /** Gets the outlet for the current node. */\n    _getNodeOutlet() {\n        const outlets = this.nodeOutlet;\n        // Note that since we use `descendants: true` on the query, we have to ensure\n        // that we don't pick up the outlet of a child node by accident.\n        return outlets && outlets.find(outlet => !outlet._node || outlet._node === this);\n    }\n}\nCdkNestedTreeNode.ɵfac = function CdkNestedTreeNode_Factory(t) { return new (t || CdkNestedTreeNode)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CdkTree), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\nCdkNestedTreeNode.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkNestedTreeNode, selectors: [[\"cdk-nested-tree-node\"]], contentQueries: function CdkNestedTreeNode_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkTreeNodeOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.nodeOutlet = _t);\n    } }, hostAttrs: [1, \"cdk-tree-node\", \"cdk-nested-tree-node\"], hostVars: 2, hostBindings: function CdkNestedTreeNode_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.isExpanded)(\"role\", ctx.role);\n    } }, exportAs: [\"cdkNestedTreeNode\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkTreeNode, useExisting: CdkNestedTreeNode },\n            { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: CdkNestedTreeNode }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkNestedTreeNode.ctorParameters = () => [\n    { type: ElementRef },\n    { type: CdkTree },\n    { type: IterableDiffers }\n];\nCdkNestedTreeNode.propDecorators = {\n    nodeOutlet: [{ type: ContentChildren, args: [CdkTreeNodeOutlet, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkNestedTreeNode, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-nested-tree-node',\n                exportAs: 'cdkNestedTreeNode',\n                host: {\n                    '[attr.aria-expanded]': 'isExpanded',\n                    '[attr.role]': 'role',\n                    'class': 'cdk-tree-node cdk-nested-tree-node'\n                },\n                providers: [\n                    { provide: CdkTreeNode, useExisting: CdkNestedTreeNode },\n                    { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: CdkNestedTreeNode }\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: CdkTree }, { type: ɵngcc0.IterableDiffers }]; }, { nodeOutlet: [{\n            type: ContentChildren,\n            args: [CdkTreeNodeOutlet, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * Indent for the children tree dataNodes.\n * This directive will add left-padding to the node to show hierarchy.\n */\nclass CdkTreeNodePadding {\n    constructor(_treeNode, _tree, \n    /**\n     * @deprecated _renderer parameter no longer being used. To be removed.\n     * @breaking-change 11.0.0\n     */\n    _renderer, _element, _dir) {\n        this._treeNode = _treeNode;\n        this._tree = _tree;\n        this._element = _element;\n        this._dir = _dir;\n        /** Subject that emits when the component has been destroyed. */\n        this._destroyed = new Subject();\n        /** CSS units used for the indentation value. */\n        this.indentUnits = 'px';\n        this._indent = 40;\n        this._setPadding();\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => this._setPadding(true));\n        }\n        // In Ivy the indentation binding might be set before the tree node's data has been added,\n        // which means that we'll miss the first render. We have to subscribe to changes in the\n        // data to ensure that everything is up to date.\n        _treeNode._dataChanges.subscribe(() => this._setPadding());\n    }\n    /** The level of depth of the tree node. The padding will be `level * indent` pixels. */\n    get level() { return this._level; }\n    set level(value) { this._setLevelInput(value); }\n    /**\n     * The indent for each level. Can be a number or a CSS string.\n     * Default number 40px from material design menu sub-menu spec.\n     */\n    get indent() { return this._indent; }\n    set indent(indent) { this._setIndentInput(indent); }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** The padding indent value for the tree node. Returns a string with px numbers if not null. */\n    _paddingIndent() {\n        const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\n            ? this._tree.treeControl.getLevel(this._treeNode.data)\n            : null;\n        const level = this._level == null ? nodeLevel : this._level;\n        return typeof level === 'number' ? `${level * this._indent}${this.indentUnits}` : null;\n    }\n    _setPadding(forceChange = false) {\n        const padding = this._paddingIndent();\n        if (padding !== this._currentPadding || forceChange) {\n            const element = this._element.nativeElement;\n            const paddingProp = this._dir && this._dir.value === 'rtl' ? 'paddingRight' : 'paddingLeft';\n            const resetProp = paddingProp === 'paddingLeft' ? 'paddingRight' : 'paddingLeft';\n            element.style[paddingProp] = padding || '';\n            element.style[resetProp] = '';\n            this._currentPadding = padding;\n        }\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setLevelInput(value) {\n        // Set to null as the fallback value so that _setPadding can fall back to the node level if the\n        // consumer set the directive as `cdkTreeNodePadding=\"\"`. We still want to take this value if\n        // they set 0 explicitly.\n        this._level = coerceNumberProperty(value, null);\n        this._setPadding();\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setIndentInput(indent) {\n        let value = indent;\n        let units = 'px';\n        if (typeof indent === 'string') {\n            const parts = indent.split(cssUnitPattern);\n            value = parts[0];\n            units = parts[1] || units;\n        }\n        this.indentUnits = units;\n        this._indent = coerceNumberProperty(value);\n        this._setPadding();\n    }\n}\nCdkTreeNodePadding.ɵfac = function CdkTreeNodePadding_Factory(t) { return new (t || CdkTreeNodePadding)(ɵngcc0.ɵɵdirectiveInject(CdkTreeNode), ɵngcc0.ɵɵdirectiveInject(CdkTree), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8)); };\nCdkTreeNodePadding.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTreeNodePadding, selectors: [[\"\", \"cdkTreeNodePadding\", \"\"]], inputs: { level: [\"cdkTreeNodePadding\", \"level\"], indent: [\"cdkTreeNodePaddingIndent\", \"indent\"] } });\nCdkTreeNodePadding.ctorParameters = () => [\n    { type: CdkTreeNode },\n    { type: CdkTree },\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nCdkTreeNodePadding.propDecorators = {\n    level: [{ type: Input, args: ['cdkTreeNodePadding',] }],\n    indent: [{ type: Input, args: ['cdkTreeNodePaddingIndent',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTreeNodePadding, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkTreeNodePadding]'\n            }]\n    }], function () { return [{ type: CdkTreeNode }, { type: CdkTree }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { level: [{\n            type: Input,\n            args: ['cdkTreeNodePadding']\n        }], indent: [{\n            type: Input,\n            args: ['cdkTreeNodePaddingIndent']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Node toggle to expand/collapse the node.\n */\nclass CdkTreeNodeToggle {\n    constructor(_tree, _treeNode) {\n        this._tree = _tree;\n        this._treeNode = _treeNode;\n        this._recursive = false;\n    }\n    /** Whether expand/collapse the node recursively. */\n    get recursive() { return this._recursive; }\n    set recursive(value) { this._recursive = coerceBooleanProperty(value); }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _toggle(event) {\n        this.recursive\n            ? this._tree.treeControl.toggleDescendants(this._treeNode.data)\n            : this._tree.treeControl.toggle(this._treeNode.data);\n        event.stopPropagation();\n    }\n}\nCdkTreeNodeToggle.ɵfac = function CdkTreeNodeToggle_Factory(t) { return new (t || CdkTreeNodeToggle)(ɵngcc0.ɵɵdirectiveInject(CdkTree), ɵngcc0.ɵɵdirectiveInject(CdkTreeNode)); };\nCdkTreeNodeToggle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTreeNodeToggle, selectors: [[\"\", \"cdkTreeNodeToggle\", \"\"]], hostBindings: function CdkTreeNodeToggle_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkTreeNodeToggle_click_HostBindingHandler($event) { return ctx._toggle($event); });\n    } }, inputs: { recursive: [\"cdkTreeNodeToggleRecursive\", \"recursive\"] } });\nCdkTreeNodeToggle.ctorParameters = () => [\n    { type: CdkTree },\n    { type: CdkTreeNode }\n];\nCdkTreeNodeToggle.propDecorators = {\n    recursive: [{ type: Input, args: ['cdkTreeNodeToggleRecursive',] }],\n    _toggle: [{ type: HostListener, args: ['click', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTreeNodeToggle, [{\n        type: Directive,\n        args: [{ selector: '[cdkTreeNodeToggle]' }]\n    }], function () { return [{ type: CdkTree }, { type: CdkTreeNode }]; }, { recursive: [{\n            type: Input,\n            args: ['cdkTreeNodeToggleRecursive']\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _toggle: [{\n            type: HostListener,\n            args: ['click', ['$event']]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    CdkNestedTreeNode,\n    CdkTreeNodeDef,\n    CdkTreeNodePadding,\n    CdkTreeNodeToggle,\n    CdkTree,\n    CdkTreeNode,\n    CdkTreeNodeOutlet,\n];\nclass CdkTreeModule {\n}\nCdkTreeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkTreeModule });\nCdkTreeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkTreeModule_Factory(t) { return new (t || CdkTreeModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkTreeModule, { declarations: [CdkNestedTreeNode, CdkTreeNodeDef, CdkTreeNodePadding, CdkTreeNodeToggle, CdkTree, CdkTreeNode, CdkTreeNodeOutlet], exports: [CdkNestedTreeNode, CdkTreeNodeDef, CdkTreeNodePadding, CdkTreeNodeToggle, CdkTree, CdkTreeNode, CdkTreeNodeOutlet] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTreeModule, [{\n        type: NgModule,\n        args: [{\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseTreeControl, CDK_TREE_NODE_OUTLET_NODE, CdkNestedTreeNode, CdkTree, CdkTreeModule, CdkTreeNode, CdkTreeNodeDef, CdkTreeNodeOutlet, CdkTreeNodeOutletContext, CdkTreeNodePadding, CdkTreeNodeToggle, FlatTreeControl, NestedTreeControl, getTreeControlFunctionsMissingError, getTreeControlMissingError, getTreeMissingMatchingNodeDefError, getTreeMultipleDefaultNodeDefsError, getTreeNoValidDataSourceError };\n\n//# sourceMappingURL=tree.js.map","import { CdkTreeNode, CdkTree, CdkTreeNodeDef, CdkNestedTreeNode, CDK_TREE_NODE_OUTLET_NODE, CdkTreeNodePadding, CdkTreeNodeOutlet, CdkTreeNodeToggle, CdkTreeModule } from '@angular/cdk/tree';\nimport { Directive, ElementRef, Attribute, Input, IterableDiffers, ViewContainerRef, Inject, Optional, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject, merge } from 'rxjs';\nimport { take, map } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/tree';\nconst _MatTreeNodeMixinBase = mixinTabIndex(mixinDisabled(CdkTreeNode));\n/**\n * Wrapper for the CdkTree node with Material design styles.\n */\nclass MatTreeNode extends _MatTreeNodeMixinBase {\n    constructor(_elementRef, _tree, tabIndex) {\n        super(_elementRef, _tree);\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        this.role = 'treeitem';\n        this.tabIndex = Number(tabIndex) || 0;\n    }\n}\nMatTreeNode.ɵfac = function MatTreeNode_Factory(t) { return new (t || MatTreeNode)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkTree), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatTreeNode.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTreeNode, selectors: [[\"mat-tree-node\"]], hostAttrs: [1, \"mat-tree-node\"], hostVars: 3, hostBindings: function MatTreeNode_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.isExpanded)(\"aria-level\", ctx.level + 1)(\"role\", ctx.role);\n    } }, inputs: { disabled: \"disabled\", tabIndex: \"tabIndex\", role: \"role\" }, exportAs: [\"matTreeNode\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkTreeNode, useExisting: MatTreeNode }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTreeNode.ctorParameters = () => [\n    { type: ElementRef },\n    { type: CdkTree },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatTreeNode.propDecorators = {\n    role: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeNode, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-tree-node',\n                exportAs: 'matTreeNode',\n                inputs: ['disabled', 'tabIndex'],\n                host: {\n                    '[attr.aria-expanded]': 'isExpanded',\n                    '[attr.aria-level]': 'level + 1',\n                    '[attr.role]': 'role',\n                    'class': 'mat-tree-node'\n                },\n                providers: [{ provide: CdkTreeNode, useExisting: MatTreeNode }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.CdkTree }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, { role: [{\n            type: Input\n        }] }); })();\n/**\n * Wrapper for the CdkTree node definition with Material design styles.\n */\nclass MatTreeNodeDef extends CdkTreeNodeDef {\n}\nMatTreeNodeDef.ɵfac = function MatTreeNodeDef_Factory(t) { return ɵMatTreeNodeDef_BaseFactory(t || MatTreeNodeDef); };\nMatTreeNodeDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTreeNodeDef, selectors: [[\"\", \"matTreeNodeDef\", \"\"]], inputs: { when: [\"matTreeNodeDefWhen\", \"when\"], data: [\"matTreeNode\", \"data\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkTreeNodeDef, useExisting: MatTreeNodeDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTreeNodeDef.propDecorators = {\n    data: [{ type: Input, args: ['matTreeNode',] }]\n};\nconst ɵMatTreeNodeDef_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatTreeNodeDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeNodeDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matTreeNodeDef]',\n                inputs: [\n                    'when: matTreeNodeDefWhen'\n                ],\n                providers: [{ provide: CdkTreeNodeDef, useExisting: MatTreeNodeDef }]\n            }]\n    }], null, { data: [{\n            type: Input,\n            args: ['matTreeNode']\n        }] }); })();\n/**\n * Wrapper for the CdkTree nested node with Material design styles.\n */\nclass MatNestedTreeNode extends CdkNestedTreeNode {\n    constructor(_elementRef, _tree, _differs, tabIndex) {\n        super(_elementRef, _tree, _differs);\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        this._differs = _differs;\n        this._disabled = false;\n        this.tabIndex = Number(tabIndex) || 0;\n    }\n    /** Whether the node is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /** Tabindex for the node. */\n    get tabIndex() { return this.disabled ? -1 : this._tabIndex; }\n    set tabIndex(value) {\n        // If the specified tabIndex value is null or undefined, fall back to the default value.\n        this._tabIndex = value != null ? value : 0;\n    }\n    // This is a workaround for https://github.com/angular/angular/issues/23091\n    // In aot mode, the lifecycle hooks from parent class are not called.\n    // TODO(tinayuangao): Remove when the angular issue #23091 is fixed\n    ngAfterContentInit() {\n        super.ngAfterContentInit();\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n    }\n}\nMatNestedTreeNode.ɵfac = function MatNestedTreeNode_Factory(t) { return new (t || MatNestedTreeNode)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkTree), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatNestedTreeNode.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatNestedTreeNode, selectors: [[\"mat-nested-tree-node\"]], hostAttrs: [1, \"mat-nested-tree-node\"], hostVars: 2, hostBindings: function MatNestedTreeNode_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.isExpanded)(\"role\", ctx.role);\n    } }, inputs: { tabIndex: \"tabIndex\", disabled: \"disabled\", node: [\"matNestedTreeNode\", \"node\"] }, exportAs: [\"matNestedTreeNode\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkNestedTreeNode, useExisting: MatNestedTreeNode },\n            { provide: CdkTreeNode, useExisting: MatNestedTreeNode },\n            { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: MatNestedTreeNode }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatNestedTreeNode.ctorParameters = () => [\n    { type: ElementRef },\n    { type: CdkTree },\n    { type: IterableDiffers },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatNestedTreeNode.propDecorators = {\n    node: [{ type: Input, args: ['matNestedTreeNode',] }],\n    disabled: [{ type: Input }],\n    tabIndex: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatNestedTreeNode, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-nested-tree-node',\n                exportAs: 'matNestedTreeNode',\n                host: {\n                    '[attr.aria-expanded]': 'isExpanded',\n                    '[attr.role]': 'role',\n                    'class': 'mat-nested-tree-node'\n                },\n                providers: [\n                    { provide: CdkNestedTreeNode, useExisting: MatNestedTreeNode },\n                    { provide: CdkTreeNode, useExisting: MatNestedTreeNode },\n                    { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: MatNestedTreeNode }\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.CdkTree }, { type: ɵngcc0.IterableDiffers }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, { tabIndex: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], node: [{\n            type: Input,\n            args: ['matNestedTreeNode']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Wrapper for the CdkTree padding with Material design styles.\n */\nclass MatTreeNodePadding extends CdkTreeNodePadding {\n    /** The level of depth of the tree node. The padding will be `level * indent` pixels. */\n    get level() { return this._level; }\n    set level(value) { this._setLevelInput(value); }\n    /** The indent for each level. Default number 40px from material design menu sub-menu spec. */\n    get indent() { return this._indent; }\n    set indent(indent) { this._setIndentInput(indent); }\n}\nMatTreeNodePadding.ɵfac = function MatTreeNodePadding_Factory(t) { return ɵMatTreeNodePadding_BaseFactory(t || MatTreeNodePadding); };\nMatTreeNodePadding.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTreeNodePadding, selectors: [[\"\", \"matTreeNodePadding\", \"\"]], inputs: { level: [\"matTreeNodePadding\", \"level\"], indent: [\"matTreeNodePaddingIndent\", \"indent\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkTreeNodePadding, useExisting: MatTreeNodePadding }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTreeNodePadding.propDecorators = {\n    level: [{ type: Input, args: ['matTreeNodePadding',] }],\n    indent: [{ type: Input, args: ['matTreeNodePaddingIndent',] }]\n};\nconst ɵMatTreeNodePadding_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatTreeNodePadding);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeNodePadding, [{\n        type: Directive,\n        args: [{\n                selector: '[matTreeNodePadding]',\n                providers: [{ provide: CdkTreeNodePadding, useExisting: MatTreeNodePadding }]\n            }]\n    }], null, { level: [{\n            type: Input,\n            args: ['matTreeNodePadding']\n        }], indent: [{\n            type: Input,\n            args: ['matTreeNodePaddingIndent']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Outlet for nested CdkNode. Put `[matTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\nclass MatTreeNodeOutlet {\n    constructor(viewContainer, _node) {\n        this.viewContainer = viewContainer;\n        this._node = _node;\n    }\n}\nMatTreeNodeOutlet.ɵfac = function MatTreeNodeOutlet_Factory(t) { return new (t || MatTreeNodeOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_TREE_NODE_OUTLET_NODE, 8)); };\nMatTreeNodeOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTreeNodeOutlet, selectors: [[\"\", \"matTreeNodeOutlet\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkTreeNodeOutlet,\n                useExisting: MatTreeNodeOutlet\n            }])] });\nMatTreeNodeOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TREE_NODE_OUTLET_NODE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeNodeOutlet, [{\n        type: Directive,\n        args: [{\n                selector: '[matTreeNodeOutlet]',\n                providers: [{\n                        provide: CdkTreeNodeOutlet,\n                        useExisting: MatTreeNodeOutlet\n                    }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TREE_NODE_OUTLET_NODE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\nclass MatTree extends CdkTree {\n}\nMatTree.ɵfac = function MatTree_Factory(t) { return ɵMatTree_BaseFactory(t || MatTree); };\nMatTree.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTree, selectors: [[\"mat-tree\"]], viewQuery: function MatTree_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatTreeNodeOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nodeOutlet = _t.first);\n    } }, hostAttrs: [\"role\", \"tree\", 1, \"mat-tree\"], exportAs: [\"matTree\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkTree, useExisting: MatTree }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"matTreeNodeOutlet\", \"\"]], template: function MatTree_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [MatTreeNodeOutlet], styles: [\".mat-tree{display:block}.mat-tree-node{display:flex;align-items:center;flex:1;word-wrap:break-word}.mat-nested-tree-node{border-bottom-width:0}\\n\"], encapsulation: 2 });\nMatTree.propDecorators = {\n    _nodeOutlet: [{ type: ViewChild, args: [MatTreeNodeOutlet, { static: true },] }]\n};\nconst ɵMatTree_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatTree);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTree, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tree',\n                exportAs: 'matTree',\n                template: `<ng-container matTreeNodeOutlet></ng-container>`,\n                host: {\n                    'class': 'mat-tree',\n                    'role': 'tree'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // See note on CdkTree for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                providers: [{ provide: CdkTree, useExisting: MatTree }],\n                styles: [\".mat-tree{display:block}.mat-tree-node{display:flex;align-items:center;flex:1;word-wrap:break-word}.mat-nested-tree-node{border-bottom-width:0}\\n\"]\n            }]\n    }], null, { _nodeOutlet: [{\n            type: ViewChild,\n            args: [MatTreeNodeOutlet, { static: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Wrapper for the CdkTree's toggle with Material design styles.\n */\n// tslint:disable-next-line: coercion-types\nclass MatTreeNodeToggle extends CdkTreeNodeToggle {\n    get recursive() { return this._recursive; }\n    set recursive(value) {\n        // TODO: when we remove support for ViewEngine, change this setter to an input\n        // alias in the decorator metadata.\n        this._recursive = coerceBooleanProperty(value);\n    }\n}\nMatTreeNodeToggle.ɵfac = function MatTreeNodeToggle_Factory(t) { return ɵMatTreeNodeToggle_BaseFactory(t || MatTreeNodeToggle); };\nMatTreeNodeToggle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTreeNodeToggle, selectors: [[\"\", \"matTreeNodeToggle\", \"\"]], inputs: { recursive: [\"matTreeNodeToggleRecursive\", \"recursive\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkTreeNodeToggle, useExisting: MatTreeNodeToggle }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTreeNodeToggle.propDecorators = {\n    recursive: [{ type: Input, args: ['matTreeNodeToggleRecursive',] }]\n};\nconst ɵMatTreeNodeToggle_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatTreeNodeToggle);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeNodeToggle, [{\n        type: Directive,\n        args: [{\n                selector: '[matTreeNodeToggle]',\n                providers: [{ provide: CdkTreeNodeToggle, useExisting: MatTreeNodeToggle }]\n            }]\n    }], null, { recursive: [{\n            type: Input,\n            args: ['matTreeNodeToggleRecursive']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_TREE_DIRECTIVES = [\n    MatNestedTreeNode,\n    MatTreeNodeDef,\n    MatTreeNodePadding,\n    MatTreeNodeToggle,\n    MatTree,\n    MatTreeNode,\n    MatTreeNodeOutlet\n];\nclass MatTreeModule {\n}\nMatTreeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTreeModule });\nMatTreeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTreeModule_Factory(t) { return new (t || MatTreeModule)(); }, imports: [[CdkTreeModule, MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTreeModule, { declarations: function () { return [MatNestedTreeNode, MatTreeNodeDef, MatTreeNodePadding, MatTreeNodeToggle, MatTree, MatTreeNode, MatTreeNodeOutlet]; }, imports: function () { return [CdkTreeModule, MatCommonModule]; }, exports: function () { return [MatCommonModule, MatNestedTreeNode, MatTreeNodeDef, MatTreeNodePadding, MatTreeNodeToggle, MatTree, MatTreeNode, MatTreeNodeOutlet]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CdkTreeModule, MatCommonModule],\n                exports: [MatCommonModule, MAT_TREE_DIRECTIVES],\n                declarations: MAT_TREE_DIRECTIVES\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nclass MatTreeFlattener {\n    constructor(transformFunction, getLevel, isExpandable, getChildren) {\n        this.transformFunction = transformFunction;\n        this.getLevel = getLevel;\n        this.isExpandable = isExpandable;\n        this.getChildren = getChildren;\n    }\n    _flattenNode(node, level, resultNodes, parentMap) {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n        if (this.isExpandable(flatNode)) {\n            const childrenNodes = this.getChildren(node);\n            if (childrenNodes) {\n                if (Array.isArray(childrenNodes)) {\n                    this._flattenChildren(childrenNodes, level, resultNodes, parentMap);\n                }\n                else {\n                    childrenNodes.pipe(take(1)).subscribe(children => {\n                        this._flattenChildren(children, level, resultNodes, parentMap);\n                    });\n                }\n            }\n        }\n        return resultNodes;\n    }\n    _flattenChildren(children, level, resultNodes, parentMap) {\n        children.forEach((child, index) => {\n            let childParentMap = parentMap.slice();\n            childParentMap.push(index != children.length - 1);\n            this._flattenNode(child, level + 1, resultNodes, childParentMap);\n        });\n    }\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData) {\n        let resultNodes = [];\n        structuredData.forEach(node => this._flattenNode(node, 0, resultNodes, []));\n        return resultNodes;\n    }\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes, treeControl) {\n        let results = [];\n        let currentExpand = [];\n        currentExpand[0] = true;\n        nodes.forEach(node => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n            if (expand) {\n                results.push(node);\n            }\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n        return results;\n    }\n}\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `MatTree`.\n * The nested tree nodes of type `T` are flattened through `MatTreeFlattener`, and converted\n * to type `F` for `MatTree` to consume.\n */\nclass MatTreeFlatDataSource extends DataSource {\n    constructor(_treeControl, _treeFlattener, initialData = []) {\n        super();\n        this._treeControl = _treeControl;\n        this._treeFlattener = _treeFlattener;\n        this._flattenedData = new BehaviorSubject([]);\n        this._expandedData = new BehaviorSubject([]);\n        this._data = new BehaviorSubject(initialData);\n    }\n    get data() { return this._data.value; }\n    set data(value) {\n        this._data.next(value);\n        this._flattenedData.next(this._treeFlattener.flattenNodes(this.data));\n        this._treeControl.dataNodes = this._flattenedData.value;\n    }\n    connect(collectionViewer) {\n        const changes = [\n            collectionViewer.viewChange,\n            this._treeControl.expansionModel.changed,\n            this._flattenedData\n        ];\n        return merge(...changes).pipe(map(() => {\n            this._expandedData.next(this._treeFlattener.expandFlattenedNodes(this._flattenedData.value, this._treeControl));\n            return this._expandedData.value;\n        }));\n    }\n    disconnect() {\n        // no op\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by TreeControl and each non-leaf node.\n */\nclass MatTreeNestedDataSource extends DataSource {\n    constructor() {\n        super(...arguments);\n        this._data = new BehaviorSubject([]);\n    }\n    /**\n     * Data for the nested tree\n     */\n    get data() { return this._data.value; }\n    set data(value) { this._data.next(value); }\n    connect(collectionViewer) {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => {\n            return this.data;\n        }));\n    }\n    disconnect() {\n        // no op\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatNestedTreeNode, MatTree, MatTreeFlatDataSource, MatTreeFlattener, MatTreeModule, MatTreeNestedDataSource, MatTreeNode, MatTreeNodeDef, MatTreeNodeOutlet, MatTreeNodePadding, MatTreeNodeToggle };\n\n//# sourceMappingURL=tree.js.map","import { Injectable } from '@angular/core';\nimport { DriveFolder } from '../../folders/models/driveFolder';\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { Observable, of as observableOf } from 'rxjs';\n\n/** Flat node with expandable and level information */\nexport interface FolderFlatNode extends DriveFolder {\n    level: number;\n    expandable: boolean;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FoldersTreeService {\n    public control: FlatTreeControl<FolderFlatNode>;\n    public flattener: MatTreeFlattener<DriveFolder, FolderFlatNode>;\n    public dataSource: MatTreeFlatDataSource<DriveFolder, FolderFlatNode>;\n    public set data(items: DriveFolder[]) {\n        this.dataSource.data = items;\n    }\n\n    constructor() {\n        this.createTreeFlattener();\n        this.createTreeControl();\n        this.createTreeDataSource();\n    }\n\n    private createTreeFlattener() {\n        this.flattener = new MatTreeFlattener(\n            this.transformer,\n            this.getLevel,\n            this.isExpandable, this.getChildren\n        );\n    }\n\n    private createTreeControl() {\n        this.control = new FlatTreeControl<FolderFlatNode>(\n            this.getLevel,\n            this.isExpandable\n        );\n    }\n\n    private createTreeDataSource() {\n        this.dataSource = new MatTreeFlatDataSource(\n            this.control,\n            this.flattener\n        );\n    }\n\n    public transformer(node: DriveFolder, level: number) {\n        const flatNode = Object.assign({}, node) as FolderFlatNode;\n        flatNode.level = level;\n        flatNode.expandable = !!node.children;\n        return flatNode;\n    }\n\n    private getLevel(node: FolderFlatNode): number {\n        return node.level;\n    }\n\n    private isExpandable(node: FolderFlatNode): boolean {\n        return node.expandable;\n    }\n\n    private getChildren(node: DriveFolder): Observable<DriveFolder[]> {\n        return observableOf(node.children);\n    }\n}\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const AVAILABLE_CONTEXT_MENUS = new InjectionToken<any>('AVAILABLE_CONTEXT_MENUS');\r\n","import {OverlayRef} from '@angular/cdk/overlay';\r\n\r\nexport class ContextMenuRef<T> {\r\n    constructor(private overlayRef: OverlayRef) {}\r\n\r\n    public close() {\r\n        if (this.overlayRef) {\r\n            this.overlayRef.dispose();\r\n        }\r\n    }\r\n\r\n    public backdropClick() {\r\n        return this.overlayRef.backdropClick();\r\n    }\r\n\r\n    public attachments() {\r\n        return this.overlayRef.attachments();\r\n    }\r\n\r\n    public detachments() {\r\n        return this.overlayRef.detachments();\r\n    }\r\n\r\n    public backdropElement() {\r\n        return this.overlayRef.backdropElement;\r\n    }\r\n\r\n    public contextMenuElement() {\r\n        return this.overlayRef.overlayElement;\r\n    }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const CONTEXT_MENU_DATA = new InjectionToken<{ [key: string]: any }>('CONTEXT_MENU_DATA');\r\n","import {ComponentFactoryResolver, ElementRef, Injectable, Injector, NgZone} from '@angular/core';\r\nimport {NavigationStart, Router} from '@angular/router';\r\nimport {ComponentPortal, ComponentType, PortalInjector} from '@angular/cdk/portal';\r\nimport {Overlay, PositionStrategy} from '@angular/cdk/overlay';\r\nimport {filter} from 'rxjs/operators';\r\nimport {ContextMenuRef} from './context-menu-ref';\r\nimport {CONTEXT_MENU_DATA} from './context-menu-data';\r\n\r\nexport interface ContextMenuParams {\r\n    data?: { [key: string]: any };\r\n    offsetX?: number;\r\n    offsetY?: number;\r\n    originX?: 'start' | 'center' | 'end';\r\n    originY?: 'top' | 'center' | 'bottom';\r\n    overlayX?: 'start' | 'center' | 'end';\r\n    overlayY?: 'top' | 'center' | 'bottom';\r\n}\r\n\r\ntype MenuOrigin = MouseEvent | EventTarget | HTMLElement;\r\n\r\nconst ORIGIN_ID = 'dynamic-context-menu-origin';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ContextMenu {\r\n    private lastOrigin: HTMLElement;\r\n    private openContextMenu: ContextMenuRef<any>|null;\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private zone: NgZone,\r\n        private injector: Injector,\r\n        private resolver: ComponentFactoryResolver,\r\n        private overlay: Overlay,\r\n    ) {\r\n        this.router.events\r\n            .pipe(filter(e => e instanceof NavigationStart))\r\n            .subscribe(() => this.close());\r\n    }\r\n\r\n    public open<T>(component: ComponentType<T>, e: MenuOrigin, params: ContextMenuParams = {}): ContextMenuRef<T> {\r\n        this.close();\r\n\r\n        if ( ! component) {\r\n            return;\r\n        }\r\n\r\n        const overlayRef = this.createOverlay(e, params);\r\n        this.openContextMenu = new ContextMenuRef(overlayRef);\r\n\r\n        const injector = new PortalInjector(this.injector, new WeakMap<any, any>([\r\n            [CONTEXT_MENU_DATA, params.data],\r\n            [ContextMenuRef, this.openContextMenu],\r\n        ]));\r\n\r\n        const portal = new ComponentPortal(component, null, injector);\r\n\r\n        overlayRef.attach(portal);\r\n        this.bindEventsToOverlay();\r\n\r\n        return this.openContextMenu;\r\n    }\r\n\r\n    /**\r\n     * Close currently open context menu.\r\n     */\r\n    public close() {\r\n        this.removeLastOrigin();\r\n\r\n        if (this.openContextMenu) {\r\n            this.openContextMenu.close();\r\n            this.openContextMenu = null;\r\n        }\r\n    }\r\n\r\n    private createOverlay(e: MenuOrigin, params: ContextMenuParams) {\r\n        return this.overlay.create({\r\n            positionStrategy: this.getMenuPositionStrategy(e, params),\r\n            scrollStrategy: this.overlay.scrollStrategies.close(),\r\n            hasBackdrop: true,\r\n            backdropClass: 'context-menu-backdrop',\r\n            panelClass: 'context-menu-overlay'\r\n        });\r\n    }\r\n\r\n    private bindEventsToOverlay() {\r\n        this.openContextMenu.contextMenuElement().addEventListener('click', () => {\r\n            this.close();\r\n        });\r\n\r\n        this.openContextMenu.backdropClick().subscribe(() => {\r\n            this.close();\r\n        });\r\n\r\n        this.openContextMenu.backdropElement().addEventListener('contextmenu', e => {\r\n            e.preventDefault();\r\n            this.close();\r\n        });\r\n\r\n        this.openContextMenu.detachments().subscribe(() => {\r\n            this.close();\r\n        });\r\n    }\r\n\r\n    private getMenuPositionStrategy(e: MenuOrigin, params: ContextMenuParams): PositionStrategy {\r\n        this.createOriginFromEvent(e, params);\r\n\r\n        const primary = {\r\n            originX: params.originX || 'center',\r\n            originY: params.originY || 'bottom',\r\n            overlayX: params.overlayX || 'center',\r\n            overlayY: params.overlayY || 'top',\r\n        };\r\n\r\n        return this.overlay.position().flexibleConnectedTo(new ElementRef(this.lastOrigin))\r\n            .withPositions([\r\n                primary,\r\n                {originX: 'end', originY: 'bottom', overlayX: 'start', overlayY: 'bottom'},\r\n                {originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top'},\r\n                {originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'bottom'}\r\n            ]);\r\n    }\r\n\r\n    private createOriginFromEvent(e: MenuOrigin, params: ContextMenuParams) {\r\n        this.removeLastOrigin();\r\n\r\n        if (e instanceof HTMLElement || e instanceof EventTarget) {\r\n            this.lastOrigin = e as HTMLElement;\r\n        } else {\r\n            this.lastOrigin = document.createElement('div');\r\n            this.lastOrigin.style.position = 'fixed';\r\n            this.lastOrigin.style.top = e.clientY + (params.offsetY || 0) + 'px';\r\n            this.lastOrigin.style.left = e.clientX + (params.offsetX || 0) + 'px';\r\n            this.lastOrigin.id = ORIGIN_ID;\r\n            document.body.appendChild(this.lastOrigin);\r\n        }\r\n    }\r\n\r\n    private removeLastOrigin() {\r\n        if (this.lastOrigin && this.lastOrigin.id === ORIGIN_ID) {\r\n            this.lastOrigin.remove();\r\n        }\r\n    }\r\n}\r\n","import {Directive, ElementRef, Inject, Input, OnInit} from '@angular/core';\r\nimport {ContextMenu} from './context-menu.service';\r\nimport { AVAILABLE_CONTEXT_MENUS } from './available-context-menus';\r\n\r\n@Directive({\r\n    selector: '[contextMenu]'\r\n})\r\nexport class ContextMenuDirective implements OnInit {\r\n    @Input('contextMenu') params: string|{type: string, [key: string]: any};\r\n    @Input('disableContextMenu') disableContextMenu = false;\r\n\r\n    public availableMenus: object = {};\r\n\r\n    constructor(\r\n        private el: ElementRef,\r\n        private contextMenu: ContextMenu,\r\n        @Inject(AVAILABLE_CONTEXT_MENUS) _availableMenus: object[]\r\n    ) {\r\n        _availableMenus.forEach(config => {\r\n            Object.assign(this.availableMenus, config);\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.el.nativeElement.addEventListener('contextmenu', e => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            if (this.disableContextMenu) return;\r\n\r\n            this.contextMenu.open(\r\n                this.getMenuComponent(),\r\n                e,\r\n                {\r\n                    overlayX: 'start',\r\n                    overlayY: 'top',\r\n                    data: this.getMenuData()\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    private getMenuComponent() {\r\n        if (typeof this.params === 'string') {\r\n            return this.availableMenus[this.params];\r\n        } else {\r\n            return this.availableMenus[this.params.type];\r\n        }\r\n    }\r\n\r\n    private getMenuData() {\r\n        return (typeof this.params === 'string') ? {type: this.params} : this.params;\r\n    }\r\n}\r\n","import { Directive, ElementRef, OnDestroy, OnInit } from '@angular/core';\nimport { Select } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { Observable, fromEvent, Subscription } from 'rxjs';\n\n@Directive()\nexport abstract class BaseDropTarget implements OnInit, OnDestroy {\n    @Select(DriveState.dragging) dragging: Observable<boolean>;\n    protected subs: Subscription[] = [];\n    protected active: boolean;\n    protected abstract el: ElementRef<HTMLElement>;\n\n    ngOnInit() {\n        this.dragging.subscribe(dragging => {\n            if (dragging) {\n                this.onDragStart();\n            } else {\n                this.onDragEnd();\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        this.unsubscribe();\n    }\n\n    protected abstract canDrop();\n    protected abstract executeAction();\n\n    protected onDragStart() {\n        const enter = fromEvent(this.el.nativeElement, 'mouseenter')\n            .subscribe(() => this.onDragEnter());\n\n        const leave = fromEvent(this.el.nativeElement, 'mouseleave')\n            .subscribe(() => this.onDragLeave());\n\n        this.subs.push(enter, leave);\n    }\n\n    protected onDragEnter() {\n        const canDrop = this.canDrop(),\n            classes = ['drag-over'];\n        if (canDrop) {\n            this.active = true;\n            classes.push('can-drop');\n        }\n        this.el.nativeElement.classList.add(...classes);\n    }\n\n    protected onDragLeave() {\n        this.active = false;\n        this.removeDragOverClass();\n    }\n\n    protected onDragEnd() {\n        this.unsubscribe();\n        this.removeDragOverClass();\n\n        // pointer never left element before drag stop,\n        // we can assume that user dropped on this el\n        if (this.active && this.canDrop()) {\n            this.executeAction();\n            this.active = false;\n        }\n    }\n\n    protected unsubscribe() {\n        this.subs.forEach(sub => sub && sub.unsubscribe());\n    }\n\n    protected removeDragOverClass() {\n        this.el.nativeElement.classList.remove(...['drag-over', 'can-drop']);\n    }\n}\n","import { Directive, ElementRef, Input } from '@angular/core';\nimport { BaseDropTarget } from './base-drop-target';\nimport { DriveState} from '../../state/drive-state';\nimport { Store } from '@ngxs/store';\nimport { DriveFolder } from '../../folders/models/driveFolder';\nimport { MoveEntries } from '../../state/actions/commands';\n\n@Directive({\n    selector: '[folderDropTarget]'\n})\nexport class FolderDropTargetDirective extends BaseDropTarget {\n    @Input('folderDropTarget') folder: DriveFolder;\n\n    constructor(\n        protected el: ElementRef,\n        protected store: Store,\n    ) {\n      super();\n    }\n\n    protected canDrop(): boolean {\n        const entries = this.store.selectSnapshot(DriveState.selectedEntries),\n            folder = this.folder as DriveFolder;\n\n        return DriveState.canMoveEntriesTo(entries, folder);\n    }\n\n    protected executeAction() {\n        return this.store.dispatch(new MoveEntries(this.folder));\n    }\n}\n","<div class=\"mat-tree-node root-tree-node\" *ngIf=\"showRootNode\" (click)=\"selectFolder()\" [class.active]=\"!(selectedFolderId$ | async)\">\n    <mat-icon svgIcon=\"network-drive-custom\" class=\"folder-icon\"></mat-icon>\n    <span class=\"text\" trans>My Drive</span>\n</div>\n<mat-tree [dataSource]=\"tree.dataSource\" [treeControl]=\"tree.control\">\n    <mat-tree-node\n            *matTreeNodeDef=\"let node\"\n            matTreeNodePadding\n            [matTreeNodePaddingIndent]=\"showRootNode ? 40 : 24\"\n            [contextMenu]=\"{type: 'entry', entry: node}\"\n            [disableContextMenu]=\"disableContextMenu\"\n            [folderDropTarget]=\"node\"\n            [class.active]=\"(selectedFolderId$ | async) === node.hash\"\n            class=\"tree-node\"\n    >\n        <mat-icon class=\"toggle-expansion-icon\"\n                  matTreeNodeToggle\n                  [class.expanded]=\"tree.control.isExpanded(node)\"\n                  svgIcon=\"arrow-drop-down\"\n        ></mat-icon>\n        <button type=\"button\" class=\"no-style folder-button\" (click)=\"selectFolder(node)\">\n            <mat-icon svgIcon=\"folder\" class=\"folder-icon\"></mat-icon>\n            <span class=\"folder-name text\">{{node.name}}</span>\n        </button>\n    </mat-tree-node>\n</mat-tree>\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FoldersTreeService } from './folders-tree.service';\nimport { DriveFolder } from '../../folders/models/driveFolder';\nimport { Store } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n    selector: 'folders-tree',\n    templateUrl: './folders-tree.component.html',\n    styleUrls: ['./folders-tree.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [FoldersTreeService],\n})\nexport class FoldersTreeComponent implements OnInit, OnDestroy {\n    @HostBinding('class.expanded') @Input() expanded = false;\n    @HostBinding('class.has-root-node') @Input() showRootNode = false;\n    @Input() disableContextMenu = false;\n    @Output() folderSelected: EventEmitter<DriveFolder> = new EventEmitter();\n\n    // TODO: start trackBy function when it's fixed on angular material side\n    private subscriptions: Subscription[] = [];\n    public selectedFolderId$ = new BehaviorSubject<string>(null);\n    constructor(public tree: FoldersTreeService, private store: Store) {}\n\n    public selectFolder(folder?: DriveFolder) {\n        this.selectedFolderId$.next(folder?.hash);\n        this.folderSelected.emit(folder);\n    }\n\n    public toggle() {\n        this.expanded = !this.expanded;\n    }\n\n    ngOnInit() {\n        const sub1 = this.store.select(DriveState.userFolders)\n            .pipe(filter(fs => !!fs))\n            .subscribe(folders => {\n                this.tree.data = folders;\n            });\n\n        const sub2 = this.store.select(DriveState.activePage).subscribe(page => {\n            this.selectedFolderId$.next(page.folderHash);\n        });\n\n        this.subscriptions.push(sub1, sub2);\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n    }\n}\n","import {\n    ChangeDetectionStrategy, Component, OnDestroy, OnInit, ViewEncapsulation\n} from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Actions, ofAction, Select, Store } from '@ngxs/store';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { DriveState } from '../../state/drive-state';\nimport { map, take } from 'rxjs/operators';\nimport { MoveEntries } from '../../state/actions/commands';\nimport { MoveEntriesFailed, MoveEntriesSuccess } from '../../state/actions/events';\nimport { DriveEntry } from '../../files/models/drive-entry';\nimport { DriveFolder } from '../../folders/models/driveFolder';\n\n@Component({\n    selector: 'move-entries-dialog',\n    templateUrl: './move-entries-dialog.component.html',\n    styleUrls: ['./move-entries-dialog.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MoveEntriesDialogComponent implements OnInit, OnDestroy {\n    @Select(DriveState.selectedEntries) selectedEntries$: Observable<DriveEntry[]>;\n    public destination$ = new BehaviorSubject<DriveFolder>(this.store.selectSnapshot(DriveState.activePage).folder);\n    public loading$ = new BehaviorSubject<boolean>(false);\n    private subscriptions: Subscription[] = [];\n    public canMove$ = this.destination$.pipe(map(destination => {\n        const movingEntries = this.store.selectSnapshot(DriveState.selectedEntries);\n        return DriveState.canMoveEntriesTo(movingEntries, destination);\n    }));\n\n    constructor(\n        protected dialogRef: MatDialogRef<MoveEntriesDialogComponent>,\n        protected store: Store,\n        protected actions: Actions,\n    ) {}\n\n    ngOnInit() {\n        const failure = this.actions.pipe(ofAction(MoveEntriesFailed)).subscribe(() => {\n            this.loading$.next(false);\n        });\n        const success = this.actions.pipe(ofAction(MoveEntriesSuccess), take(1))\n            .subscribe(() => {\n                this.close();\n            });\n        this.subscriptions.push(...[success, failure]);\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n    }\n\n    public confirm() {\n        this.loading$.next(true);\n        this.store.dispatch(new MoveEntries(this.destination$.value))\n            .subscribe(() => {\n                this.loading$.next(false);\n            });\n    }\n\n    public close() {\n        this.dialogRef.close();\n    }\n}\n","<div class=\"modal-header\">\n    <h2 mat-dialog-title trans>Move items</h2>\n    <button type=\"button\" mat-icon-button (click)=\"close()\" class=\"close-button\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<form ngNativeValidate (ngSubmit)=\"confirm()\">\n    <mat-dialog-content>\n        <folders-tree\n            [expanded]=\"true\"\n            [disableContextMenu]=\"true\"\n            [showRootNode]=\"true\"\n            (folderSelected)=\"destination$.next($event)\"\n        ></folders-tree>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <button (click)=\"close()\" type=\"button\" mat-button class=\"cancel-button\" trans>Cancel</button>\n        <button type=\"submit\" mat-raised-button color=\"accent\" class=\"submit-button\" [disabled]=\"!(canMove$ | async) || (loading$ | async)\" trans>Move</button>\n    </mat-dialog-actions>\n</form>\n","<div class=\"modal-header\">\n    <h2 mat-dialog-title trans>Rename</h2>\n    <button type=\"button\" mat-icon-button (click)=\"close()\" class=\"close-button\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<form ngNativeValidate (ngSubmit)=\"confirm()\">\n    <mat-dialog-content class=\"many-inputs\">\n        <div class=\"input-container\">\n            <input type=\"text\" [formControl]=\"entryName\" placeholder=\"Enter a name...\" trans-placeholder required min=\"3\">\n            <div class=\"error\" *ngIf=\"errors.name\">{{errors.name}}</div>\n        </div>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <button (click)=\"close()\" type=\"button\" mat-button class=\"cancel-button\" trans>Cancel</button>\n        <button type=\"submit\" mat-raised-button color=\"accent\" class=\"submit-button\" [disabled]=\"loading | async\" trans>Rename</button>\n    </mat-dialog-actions>\n</form>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { FormControl } from '@angular/forms';\nimport { BackendErrorResponse } from '@common/core/types/backend-error-response';\nimport { DriveState } from '../../state/drive-state';\nimport { Store } from '@ngxs/store';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { finalize } from 'rxjs/operators';\nimport { Toast } from '@common/core/ui/toast.service';\nimport { DriveEntry } from '../../files/models/drive-entry';\nimport { DriveEntryApiService } from '../../drive-entry-api.service';\nimport { EntryRenamed } from '../../state/actions/events';\n\nexport interface RenameEntryDialogErrors {\n    name?: string;\n}\n\n@Component({\n    selector: 'rename-entry-dialog',\n    templateUrl: './rename-entry-dialog.component.html',\n    styleUrls: ['./rename-entry-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RenameEntryDialogComponent implements OnInit {\n    public entryName = new FormControl();\n    public loading = new BehaviorSubject(false);\n    public errors: RenameEntryDialogErrors = {};\n    public entry: DriveEntry;\n\n    constructor(\n        private dialogRef: MatDialogRef<RenameEntryDialogComponent>,\n        private store: Store,\n        private toast: Toast,\n        private entriesApi: DriveEntryApiService,\n        private changeDetection: ChangeDetectorRef,\n    ) {}\n\n    ngOnInit() {\n        this.entry = this.store.selectSnapshot(DriveState.selectedEntries)[0];\n        this.entryName.setValue(this.entry.name);\n    }\n\n    public confirm() {\n        const newName = this.entryName.value;\n\n        // entry name was not changed\n        if (newName === this.entry.name) {\n            return this.close();\n        }\n\n        this.loading.next(true);\n\n        return this.entriesApi.update(this.entry.id, {name: newName})\n            .pipe(finalize(() => this.loading.next(false)))\n            .subscribe(() => {\n                this.setErrors();\n                this.store.dispatch(new EntryRenamed(this.entry, newName));\n                this.close();\n            }, response => this.setErrors(response));\n    }\n\n    public setErrors(response?: BackendErrorResponse<RenameEntryDialogErrors>) {\n        this.loading.next(false);\n        this.errors = response ? response.errors : {};\n        this.changeDetection.detectChanges();\n    }\n\n    public close() {\n        this.dialogRef.close();\n    }\n}\n","import { Store } from '@ngxs/store';\r\nimport { DriveState } from '../state/drive-state';\r\nimport { DriveContextAction } from './types/drive-context-action';\r\nimport { Injectable } from '@angular/core';\r\nimport { WorkspacesService } from '../../../common/workspaces/workspaces.service';\r\nimport { OpenUploadWindow } from '../state/actions/commands';\r\nimport { CurrentUser } from '../../../common/auth/current-user';\r\nimport { DriveFolder } from '../folders/models/driveFolder';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport abstract class DriveContextActions {\r\n    protected multipleEntriesSelected: boolean;\r\n    protected allStarred: boolean;\r\n    protected onlyFoldersSelected: boolean;\r\n\r\n    protected abstract actions: DriveContextAction[];\r\n\r\n    constructor(\r\n        protected store: Store,\r\n        protected workspaces: WorkspacesService,\r\n        protected currentUser: CurrentUser,\r\n    ) {}\r\n\r\n    public getActions() {\r\n        this.updateStatus();\r\n        return this.actions;\r\n    }\r\n\r\n    protected getSelectedEntries() {\r\n        return this.store.selectSnapshot(DriveState.selectedEntries);\r\n    }\r\n\r\n    protected updateStatus() {\r\n        this.multipleEntriesSelected = this.store.selectSnapshot(DriveState.multipleEntriesSelected);\r\n        this.allStarred = this.store.selectSnapshot(DriveState.allSelectedEntriesStarred);\r\n        this.onlyFoldersSelected = this.store.selectSnapshot(DriveState.onlyFoldersSelected);\r\n    }\r\n\r\n    protected hasPermission(permission: string): boolean {\r\n        if (permission === 'files.create') {\r\n            const activeFolder = this.store.selectSnapshot(DriveState.activePage).folder;\r\n\r\n            // upload either to the folder user right clicked on or the folder that is currently open\r\n            const target = (!this.multipleEntriesSelected && this.getSelectedFolder()) || activeFolder;\r\n            return (target?.permissions || [])['files.update'];\r\n        } else {\r\n            return this.getSelectedEntries().every(entry => {\r\n                return entry.permissions[permission];\r\n            });\r\n        }\r\n    }\r\n\r\n    protected getSelectedFolder(): DriveFolder {\r\n        return this.getSelectedEntries().find(f => f.type === 'folder') as DriveFolder;\r\n    }\r\n\r\n    protected openUploadWindow(type: 'file'|'directory') {\r\n        this.store.dispatch(new OpenUploadWindow(type));\r\n    }\r\n}\r\n","import {\r\n    AddStar,\r\n    CopySelectedEntries,\r\n    DeleteSelectedEntries,\r\n    DownloadEntries,\r\n    OpenDialog,\r\n    OpenFilePreview,\r\n    RemoveStar\r\n} from '../../state/actions/commands';\r\nimport { ShareDialogComponent } from '../../sharing/share-dialog/share-dialog.component';\r\nimport { ShareLinkDialogComponent } from '../../sharing/share-link-dialog/share-link-dialog.component';\r\nimport { CrupdateFolderDialogComponent } from '../../folders/components/crupdate-folder-dialog/crupdate-folder-dialog.component';\r\nimport { Injectable } from '@angular/core';\r\nimport { MoveEntriesDialogComponent } from '../../entries/move-entries-dialog/move-entries-dialog.component';\r\nimport { RenameEntryDialogComponent } from '../../entries/rename-entry-dialog/rename-entry-dialog.component';\r\nimport { DriveContextActions } from '../drive-context-actions';\r\nimport { DriveState } from '../../state/drive-state';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class EntryActions extends DriveContextActions {\r\n    protected actions = [\r\n        {\r\n            viewName: 'Preview',\r\n            icon: 'visibility',\r\n            showInCompact: true,\r\n            execute: () => {\r\n                this.store.dispatch(new OpenFilePreview());\r\n            },\r\n            visible: () => {\r\n                return !this.onlyFoldersSelected;\r\n            },\r\n        },\r\n        {\r\n            viewName: 'Manage People',\r\n            icon: 'person-add',\r\n            showInCompact: true,\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(ShareDialogComponent));\r\n            },\r\n            visible: () => this.hasPermission('files.update'),\r\n        },\r\n        {\r\n            viewName: 'Get shareable link',\r\n            icon: 'link',\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(ShareLinkDialogComponent, null, {\r\n                    panelClass: 'share-link-dialog-container',\r\n                    autoFocus: false,\r\n                }));\r\n            },\r\n            visible: () => !this.multipleEntriesSelected && this.hasPermission('files.update'),\r\n        },\r\n        {\r\n            viewName: 'Add a star',\r\n            icon: 'star',\r\n            execute: () => {\r\n                this.store.dispatch(new AddStar(this.getSelectedEntries()));\r\n            },\r\n            visible: () => !this.allStarred\r\n        },\r\n        {\r\n            viewName: 'Remove star',\r\n            icon: 'star-border',\r\n            execute: () => {\r\n                this.store.dispatch(new RemoveStar(this.getSelectedEntries()));\r\n            },\r\n            visible: () => this.allStarred\r\n        },\r\n        {\r\n            viewName: 'New Folder',\r\n            icon: 'create-new-folder',\r\n            separatorBefore: this.store.selectSnapshot(DriveState.isMobile),\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(CrupdateFolderDialogComponent, {folder: this.getSelectedFolder()}));\r\n            },\r\n            visible: () => this.hasPermission('files.create')\r\n        },\r\n        {\r\n            viewName: 'Upload Files',\r\n            icon: 'cloud-upload',\r\n            execute: () => {\r\n                this.openUploadWindow('file');\r\n            },\r\n            visible: () => this.hasPermission('files.create') && this.store.selectSnapshot(DriveState.isMobile),\r\n        },\r\n        {\r\n            viewName: 'Upload Folder',\r\n            icon: 'upload-folder-custom',\r\n            execute: () => {\r\n                this.openUploadWindow('directory');\r\n            },\r\n            visible: () => this.hasPermission('files.create') && this.store.selectSnapshot(DriveState.isMobile),\r\n        },\r\n        {\r\n            viewName: 'Move to',\r\n            icon: 'subdirectory-arrow-right',\r\n            separatorBefore: this.store.selectSnapshot(DriveState.isMobile),\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(MoveEntriesDialogComponent, null, {panelClass: 'move-entries-dialog-container'}));\r\n            },\r\n            visible: () => this.hasPermission('files.update'),\r\n        },\r\n        {\r\n            viewName: 'Rename',\r\n            icon: 'edit',\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(RenameEntryDialogComponent));\r\n            },\r\n            visible: () => {\r\n                return !this.multipleEntriesSelected && this.hasPermission('files.update');\r\n            }\r\n        },\r\n        {\r\n            viewName: 'Make a copy',\r\n            icon: 'file-copy',\r\n            execute: () => {\r\n                this.store.dispatch(new CopySelectedEntries());\r\n            },\r\n            visible: () => this.hasPermission('files.create'),\r\n        },\r\n        {\r\n            viewName: 'Download',\r\n            icon: 'file-download',\r\n            execute: () => {\r\n                this.store.dispatch(new DownloadEntries());\r\n            },\r\n            visible: () => this.hasPermission('files.download'),\r\n        },\r\n        {\r\n            viewName: 'Delete',\r\n            icon: 'delete',\r\n            showInCompact: true,\r\n            separatorBefore: true,\r\n            execute: () => {\r\n                this.store.dispatch(new DeleteSelectedEntries());\r\n            },\r\n            visible: () => this.hasPermission('files.delete'),\r\n        },\r\n    ];\r\n}\r\n","import { OpenDialog, } from '../../state/actions/commands';\r\nimport { Injectable } from '@angular/core';\r\nimport { DriveContextActions } from '../drive-context-actions';\r\nimport { CrupdateFolderDialogComponent } from '../../folders/components/crupdate-folder-dialog/crupdate-folder-dialog.component';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FolderActions extends DriveContextActions {\r\n    protected actions = [\r\n        {\r\n            viewName: 'New Folder',\r\n            icon: 'create-new-folder',\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(CrupdateFolderDialogComponent));\r\n            },\r\n            visible: () => this.hasPermission('files.create'),\r\n        },\r\n        {\r\n            viewName: 'Upload Files',\r\n            icon: 'cloud-upload',\r\n            separatorBefore: true,\r\n            execute: () => {\r\n                this.openUploadWindow('file');\r\n            },\r\n            visible: () => this.hasPermission('files.create'),\r\n        },\r\n        {\r\n            viewName: 'Upload Folder',\r\n            icon: 'upload-folder-custom',\r\n            execute: () => {\r\n                this.openUploadWindow('directory');\r\n            },\r\n            visible: () => this.hasPermission('files.create'),\r\n        },\r\n    ];\r\n}\r\n","import {\r\n    CopySelectedEntries, DownloadEntries, OpenDialog, OpenFilePreview, RemoveEntries,\r\n} from '../../state/actions/commands';\r\nimport { Injectable } from '@angular/core';\r\nimport { DriveContextActions } from '../drive-context-actions';\r\nimport { ShareLinkDialogComponent } from '../../sharing/share-link-dialog/share-link-dialog.component';\r\nimport { Store } from '@ngxs/store';\r\nimport { CurrentUser } from '@common/auth/current-user';\r\nimport { SharesApiService } from '../../sharing/shares-api.service';\r\nimport { ShareDialogComponent } from '../../sharing/share-dialog/share-dialog.component';\r\nimport { RenameEntryDialogComponent } from '../../entries/rename-entry-dialog/rename-entry-dialog.component';\r\nimport { WorkspacesService } from '../../../../common/workspaces/workspaces.service';\r\n\r\nconst noopTrue = () => true;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SharesActions extends DriveContextActions {\r\n    protected actions = [\r\n        {\r\n            viewName: 'Preview',\r\n            icon: 'visibility',\r\n            execute: () => {\r\n                this.store.dispatch(new OpenFilePreview());\r\n            },\r\n            visible: () => {\r\n                return !this.onlyFoldersSelected;\r\n            },\r\n        },\r\n        {\r\n            viewName: 'Manage People',\r\n            icon: 'person-add',\r\n            showInCompact: true,\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(ShareDialogComponent));\r\n            },\r\n            visible: () => {\r\n                return this.hasPermission('files.update');\r\n            },\r\n        },\r\n        {\r\n            viewName: 'Get shareable link',\r\n            icon: 'link',\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(ShareLinkDialogComponent, null, {\r\n                    panelClass: 'share-link-dialog-container',\r\n                    autoFocus: false,\r\n                }));\r\n            },\r\n            visible: () => {\r\n                return !this.multipleEntriesSelected && this.hasPermission('files.update');\r\n            }\r\n        },\r\n        {\r\n            viewName: 'Rename',\r\n            icon: 'edit',\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(RenameEntryDialogComponent));\r\n            },\r\n            visible: () => {\r\n                return !this.multipleEntriesSelected && this.hasPermission('files.update');\r\n            }\r\n        },\r\n        {\r\n            viewName: 'Make a copy',\r\n            icon: 'file-copy',\r\n            execute: () => {\r\n                this.store.dispatch(new CopySelectedEntries());\r\n            },\r\n            visible: () => {\r\n                return this.hasPermission('files.download') && this.hasPermission('files.create');\r\n            },\r\n        },\r\n        {\r\n            viewName: 'Download',\r\n            icon: 'file-download',\r\n            execute: () => {\r\n                this.store.dispatch(new DownloadEntries());\r\n            },\r\n            visible: () => {\r\n                return this.hasPermission('files.download');\r\n            },\r\n        },\r\n        {\r\n            viewName: 'Remove',\r\n            icon: 'delete',\r\n            showInCompact: true,\r\n            execute: () => {\r\n                const entries = this.getSelectedEntries();\r\n                this.shares.detachUser(\r\n                    this.currentUser.get('id'),\r\n                    entries.map(e => e.id),\r\n                ).subscribe(() => {\r\n                    this.store.dispatch(new RemoveEntries(entries));\r\n                });\r\n            },\r\n            visible: noopTrue,\r\n        },\r\n    ];\r\n\r\n    constructor(\r\n        protected store: Store,\r\n        protected currentUser: CurrentUser,\r\n        protected shares: SharesApiService,\r\n        protected workspaces: WorkspacesService\r\n    ) {\r\n        super(store, workspaces, currentUser);\r\n    }\r\n}\r\n","import { DeleteTrashedEntriesForever, OpenConfirmDialog, RestoreTrashedEntries, } from '../../state/actions/commands';\r\nimport { Injectable } from '@angular/core';\r\nimport { DriveContextActions } from '../drive-context-actions';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TrashActions extends DriveContextActions {\r\n    protected actions = [\r\n        {\r\n            viewName: 'Restore',\r\n            icon: 'restore',\r\n            showInCompact: true,\r\n            execute: () => {\r\n                this.store.dispatch(new RestoreTrashedEntries());\r\n            },\r\n            visible: () => this.hasPermission('files.update'),\r\n        },\r\n        {\r\n            viewName: 'Delete Forever',\r\n            icon: 'delete-forever',\r\n            showInCompact: true,\r\n            execute: () => {\r\n                this.deleteForever();\r\n            },\r\n            visible: () => this.hasPermission('files.delete'),\r\n        },\r\n    ];\r\n\r\n    public deleteForever() {\r\n        this.store.dispatch(new OpenConfirmDialog({\r\n            title: 'Delete Forever',\r\n            body: 'This will permanently delete selected items.',\r\n            bodyBold: 'This action can not be undone.',\r\n            ok: 'Delete Forever',\r\n        }, new DeleteTrashedEntriesForever()));\r\n    }\r\n}\r\n","import { EmptyTrash, OpenConfirmDialog, } from '../../state/actions/commands';\r\nimport { Injectable } from '@angular/core';\r\nimport { DriveContextActions } from '../drive-context-actions';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TrashPageActions extends DriveContextActions {\r\n    protected actions = [\r\n        {\r\n            viewName: 'Empty Trash',\r\n            icon: 'delete-forever',\r\n            execute: () => {\r\n                this.emptyTrash();\r\n            },\r\n            visible: () => this.hasPermission('files.delete'),\r\n        },\r\n    ];\r\n\r\n    public emptyTrash() {\r\n        this.store.dispatch(new OpenConfirmDialog({\r\n            title: 'Empty Trash',\r\n            body: 'All files and folders in your trash will be permanently deleted.',\r\n            bodyBold: 'This action can not be undone.',\r\n            ok: 'Empty Trash'\r\n        }, new EmptyTrash()));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DriveDomCacheService {\n    public scrollCont: HTMLElement;\n    public filesCont: HTMLElement;\n    public filesContRect: ClientRect;\n    public scrollContRect: ClientRect;\n    public dragPreview: HTMLElement;\n}\n","export const SEARCH_FILE_TYPES = [\r\n    {name: 'Folders', type: 'folder'},\r\n    {name: 'Images', type: 'image'},\r\n    {name: 'Text documents', type: 'text'},\r\n    {name: 'Video', type: 'video'},\r\n    {name: 'Audio', type: 'audio'},\r\n    {name: 'PDFs', type: 'pdf'},\r\n];\r\n","export interface PaginationResponse<T> {\r\n    data: T[];\r\n    from: number;\r\n    to: number;\r\n    total: number;\r\n    per_page: number;\r\n    current_page: number;\r\n    last_page: number;\r\n    path: string;\r\n    next_page_url: string|null;\r\n    prev_page_url: string|null;\r\n}\r\n\r\nexport const EMPTY_PAGINATION_RESPONSE = {\r\n    pagination: {data: []}\r\n};\r\n","<form class=\"input-container\" (ngSubmit)=\"openSearchPage({query: formControl.value})\">\n    <input type=\"text\" [matAutocomplete]=\"auto\" [formControl]=\"formControl\" placeholder=\"Search files and folders...\" #trigger trans-placeholder>\n    <button type=\"button\" mat-icon-button class=\"search-icon\">\n        <mat-icon svgIcon=\"search\"></mat-icon>\n    </button>\n    <button type=\"button\" mat-icon-button class=\"cancel-icon\" *ngIf=\"formControl.value\" (click)=\"resetForm()\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</form>\n\n<mat-autocomplete #auto=\"matAutocomplete\" class=\"file-types-autocomplete mat-elevation-z1\" (optionSelected)=\"executeAction($event)\" [displayWith]=\"displayFn\">\n    <ng-container *ngFor=\"let result of results$ | async\">\n        <mat-option [value]=\"result\">\n            <file-icon [type]=\"result.content.type\"></file-icon>\n            <div class=\"meta\">\n                <div class=\"name\">{{ result.type === 'entryType' ? (result.content.name | trans) : result.content.name}}</div>\n                <div class=\"owner\" *ngIf=\"result.content.users\">{{result.content.users[0]?.display_name}}</div>\n            </div>\n            <div class=\"date\" *ngIf=\"result.content.updated_at\">{{result.content.updated_at | formattedDate}}</div>\n        </mat-option>\n    </ng-container>\n</mat-autocomplete>\n","import {\n    ChangeDetectionStrategy, Component, ElementRef, OnInit, ViewChild, ViewEncapsulation\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { SEARCH_FILE_TYPES } from '../search-file-types';\nimport {\n    MatAutocomplete, MatAutocompleteSelectedEvent, MatAutocompleteTrigger\n} from '@angular/material/autocomplete';\nimport { Store } from '@ngxs/store';\nimport { OpenSearchPage } from '../../state/actions/commands';\nimport { debounceTime, distinctUntilChanged, filter, switchMap } from 'rxjs/operators';\nimport {\n    DriveEntriesPaginationResponse, DriveEntryApiService\n} from '../../drive-entry-api.service';\nimport { BehaviorSubject, Observable, of as observableOf } from 'rxjs';\nimport { DriveEntry } from '../../files/models/drive-entry';\nimport { EntryDoubleTapped } from '../../state/actions/events';\nimport { EMPTY_PAGINATION_RESPONSE } from '@common/core/types/pagination/pagination-response';\n\ninterface SearchResult {\n    type: 'entry'|'entryType';\n    content: DriveEntry|{name: string, type: string};\n}\n\n@Component({\n    selector: 'main-searchbar',\n    templateUrl: './main-searchbar.component.html',\n    styleUrls: ['./main-searchbar.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MainSearchbarComponent implements OnInit {\n    @ViewChild('trigger', { read: MatAutocompleteTrigger }) trigger: MatAutocompleteTrigger;\n    @ViewChild('trigger', { read: ElementRef }) input: ElementRef<HTMLInputElement>;\n    @ViewChild('auto') autocomplete: MatAutocomplete;\n    private defaultResults: SearchResult[] = [];\n    public formControl = new FormControl();\n    public results$: BehaviorSubject<SearchResult[]> = new BehaviorSubject([]);\n    private lastQuery: string;\n\n    constructor(\n        private store: Store,\n        private driveApi: DriveEntryApiService,\n    ) {\n        this.setDefaultResults();\n    }\n\n    ngOnInit() {\n        this.formControl.valueChanges.pipe(\n            debounceTime(300),\n            distinctUntilChanged(),\n            filter(q => typeof q === 'string'),\n            switchMap(query => this.search(query))\n        ).subscribe(response => {\n            this.results$.next((response.data || []).map(entry => {\n                return {type: 'entry', content: entry} as SearchResult;\n            }));\n        });\n    }\n\n    public executeAction(e: MatAutocompleteSelectedEvent) {\n        const value = e.option.value as SearchResult;\n\n        if (value.type === 'entryType') {\n            this.openSearchPage({type: value.content.type});\n            this.resetForm();\n        } else {\n            this.store.dispatch(new EntryDoubleTapped(value.content as DriveEntry));\n        }\n\n        this.closePanelAndBlur();\n    }\n\n    public openSearchPage(params: {type?: string, query?: string}) {\n        this.store.dispatch(new OpenSearchPage(params)).subscribe(() => {\n            this.closePanelAndBlur();\n        });\n    }\n\n    private search(query: string): Observable<DriveEntriesPaginationResponse> {\n        this.lastQuery = query;\n        if ( ! query || query.length < 3) {\n            return observableOf(EMPTY_PAGINATION_RESPONSE) as any;\n        }\n        return this.driveApi.getCurrentUserEntries({query, per_page: 8});\n    }\n\n    private setDefaultResults() {\n        this.defaultResults = SEARCH_FILE_TYPES.map(entryType => {\n            return {type: 'entryType', content: entryType} as SearchResult;\n        });\n\n        this.results$.next(this.defaultResults);\n    }\n\n    public resetForm() {\n        this.formControl.reset();\n        this.setDefaultResults();\n        this.lastQuery = null;\n    }\n\n    private closePanelAndBlur() {\n        this.trigger.closePanel();\n        this.input.nativeElement.blur();\n    }\n\n    displayFn = () => {\n        // always show original user query when\n        // clicking on any autocomplete option\n        return this.lastQuery || '';\n    }\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Inject } from '@angular/core';\nimport { Modal } from '@common/core/ui/dialogs/modal.service';\nimport { CrupdateFolderDialogComponent } from '../../folders/components/crupdate-folder-dialog/crupdate-folder-dialog.component';\nimport { Select, Store } from '@ngxs/store';\nimport { UploadFiles } from '../../state/actions/commands';\nimport { UploadedFile } from '@common/uploads/uploaded-file';\nimport { UploadInputConfig } from '@common/uploads/upload-input-config';\nimport { DriveState } from '../../state/drive-state';\nimport { Observable } from 'rxjs';\nimport { DRIVE_UPLOAD_INPUT_CONFIG } from '../../upload-input-config';\n\n@Component({\n    selector: 'sidebar-action-buttons',\n    templateUrl: './sidebar-action-buttons.component.html',\n    styleUrls: ['./sidebar-action-buttons.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SidebarActionButtonsComponent {\n    @Select(DriveState.canUpload) canUpload$: Observable<boolean>;\n\n    constructor(\n        private dialog: Modal,\n        private store: Store,\n        @Inject(DRIVE_UPLOAD_INPUT_CONFIG) public uploadInputConfig: UploadInputConfig,\n    ) {}\n\n    public openNewFolderDialog() {\n        this.dialog.open(CrupdateFolderDialogComponent);\n    }\n\n    public openUploadsPanel(files: UploadedFile[]) {\n        this.store.dispatch(new UploadFiles(files));\n    }\n}\n","<button mat-raised-button color=\"accent\" class=\"upload-button\" [disabled]=\"!(canUpload$ | async)\" [uploadButton]=\"uploadInputConfig\" (filesSelected)=\"openUploadsPanel($event)\">\n    <mat-icon svgIcon=\"cloud-upload\"></mat-icon>\n    <span trans>Upload</span>\n</button>\n\n<button mat-raised-button color=\"accent\" class=\"new-folder-button\" [disabled]=\"!(canUpload$ | async)\" (click)=\"openNewFolderDialog()\">\n    <mat-icon svgIcon=\"create-new-folder\"></mat-icon>\n</button>\n","import {animate, style, transition, trigger} from '@angular/animations';\r\n\r\nexport const SKELETON_ANIMATIONS = [\r\n    trigger('fadeIn', [\r\n        transition(':enter', [\r\n            style({opacity: 0}),\r\n            animate('325ms ease-in', style({\r\n                opacity: 1,\r\n            }))\r\n        ])\r\n    ]),\r\n    trigger('fadeOut', [\r\n        transition(':leave', [\r\n            style({opacity: 1, position: 'absolute', left: '0', right: '0'}),\r\n            animate('325ms ease-out', style({\r\n                opacity: 0\r\n            }))\r\n        ])\r\n    ])\r\n];\r\n","<mat-progress-bar mode=\"determinate\" color=\"accent\" [value]=\"spaceUsedPercent$ | async\"></mat-progress-bar>\r\n\r\n<div class=\"usage-info\" *ngIf=\"(spaceUsed$ | async) !== null; else skeleton\" @fadeIn>\r\n    {{spaceUsed$ | async | formattedFileSize}} {{'of' | trans}} {{spaceAvailable$ | async | formattedFileSize }} {{'used' | trans}}\r\n</div>\r\n<ng-template #skeleton>\r\n    <skeleton class=\"usage-info\" @fadeOut></skeleton>\r\n</ng-template>\r\n\r\n\r\n<div *ngIf=\"settings.get('billing.enable') && (!(workspaces.activeId$ | async) || (workspaces.activeWorkspace$ | async)?.currentUser?.is_owner)\">\r\n    <a class=\"upgrade-link\" mat-button routerLink=\"/billing/upgrade\" target=\"_blank\" trans>Upgrade Storage</a>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Select } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { Observable } from 'rxjs';\nimport { Settings } from '@common/core/config/settings.service';\nimport { SKELETON_ANIMATIONS } from '../../../../common/core/ui/skeleton/skeleton-animations';\nimport { WorkspacesService } from '../../../../common/workspaces/workspaces.service';\n\n@Component({\n    selector: 'available-space-indicator',\n    templateUrl: './available-space-indicator.component.html',\n    styleUrls: ['./available-space-indicator.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [SKELETON_ANIMATIONS],\n})\nexport class AvailableSpaceIndicatorComponent {\n    @Select(DriveState.userSpaceUsed) spaceUsed$: Observable<number>;\n    @Select(DriveState.userSpaceAvailable) spaceAvailable$: Observable<number>;\n    @Select(DriveState.spaceUsedPercent) spaceUsedPercent$: Observable<number>;\n\n    constructor(public settings: Settings, public workspaces: WorkspacesService) {}\n}\n","<div [matMenuTriggerFor]=\"workspaceMenu\" *ngIf=\"workspaces.activeWorkspace$ | async as selected\">\n    <div class=\"left\">\n        <div class=\"role-name\" trans>{{selected.name}}</div>\n        <div class=\"member-count\">\n            <span *ngIf=\"selected.default\" trans>Personal workspace</span>\n            <span *ngIf=\"!selected.default\" trans>{{ ':count members' | trans:{count: selected?.members_count || 0} }}</span>\n        </div>\n    </div>\n    <div class=\"right\">\n        <mat-icon svgIcon=\"unfold-more\"></mat-icon>\n    </div>\n</div>\n\n<mat-menu #workspaceMenu=\"matMenu\" class=\"workspace-menu\">\n    <div mat-menu-item class=\"workspace-menu-item\" [class.active]=\"(workspaces.activeId$ | async) === workspace.id\" *ngFor=\"let workspace of workspaces.available$ | async\" (click)=\"selectWorkspace(workspace)\">\n        <mat-icon svgIcon=\"check\" [class.visually-hidden]=\"(workspaces.activeId$ | async) !== workspace.id\"></mat-icon>\n        <div>\n            <div class=\"name\" trans>{{workspace.name}}</div>\n            <div class=\"member-count\">\n                <span *ngIf=\"workspace.default\" trans>Personal workspace</span>\n                <span *ngIf=\"!workspace.default\" trans>{{ ':count members' | trans:{count: workspace?.members_count || 0} }}</span>\n            </div>\n        </div>\n        <button type=\"button\" class=\"settings-button\" mat-icon-button *ngIf=\"!workspace.default\" (click)=\"openWorkspaceMembersModal(workspace); $event.stopPropagation()\">\n            <mat-icon svgIcon=\"settings\"></mat-icon>\n        </button>\n    </div>\n    <div mat-menu-item class=\"new-workspace-menu-item\" (click)=\"openCrupdateWorkspaceModal()\" *ngIf=\"currentUser.hasPermission('workspaces.create')\">\n        <mat-icon svgIcon=\"add\"></mat-icon>\n        <span trans>Create new workspace</span>\n    </div>\n</mat-menu>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { Workspace } from '../types/workspace';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { WorkspacesService } from '../workspaces.service';\nimport { Modal } from '../../core/ui/dialogs/modal.service';\nimport { CurrentUser } from '../../auth/current-user';\nimport { BackendErrorResponse } from '../../core/types/backend-error-response';\nimport { HttpErrors } from '../../core/http/errors/http-errors.enum';\nimport { ConfirmModalComponent } from '../../core/ui/confirm-modal/confirm-modal.component';\nimport { filter } from 'rxjs/operators';\nimport { DELETE_RESOURCE_MESSAGE } from '../../datatable/delete-resource-message';\nimport { Toast } from '../../core/ui/toast.service';\n\n@Component({\n    selector: 'workspace-selector',\n    templateUrl: './workspace-selector.component.html',\n    styleUrls: ['./workspace-selector.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WorkspaceSelectorComponent implements OnInit {\n    @ViewChild(MatMenuTrigger) menuTrigger: MatMenuTrigger;\n\n    constructor(\n        private modal: Modal,\n        public workspaces: WorkspacesService,\n        public currentUser: CurrentUser,\n        private toast: Toast,\n        private vcr: ViewContainerRef,\n        private cd: ChangeDetectorRef,\n    ) {}\n\n    ngOnInit() {\n        this.workspaces.index({userId: this.currentUser.get('id'), withCount: ['members']})\n            .subscribe();\n    }\n\n    public openCrupdateWorkspaceModal(workspace?: Workspace) {\n        import('src/common/workspaces/workspace.module')\n            .then(m => {\n                // will have wrong WorkspacesService instance without passing viewContainerRef\n                this.modal.open(m.WorkspaceModule.components.crupdateModal, {workspace}, {viewContainerRef: this.vcr});\n                this.cd.markForCheck();\n            });\n    }\n\n    public openWorkspaceMembersModal(workspace: Workspace) {\n        import('src/common/workspaces/workspace.module')\n            .then(m => {\n                this.modal.open(m.WorkspaceModule.components.manageMembers, {workspace}, {viewContainerRef: this.vcr});\n                this.cd.markForCheck();\n                this.menuTrigger.closeMenu();\n            });\n\n    }\n\n    public maybeDeleteWorkspace(workspace: Workspace) {\n        const data = {...DELETE_RESOURCE_MESSAGE, replacements: {resource: 'workspace'}};\n        this.modal.open(ConfirmModalComponent, data)\n            .afterClosed()\n            .pipe(filter(confirmed => confirmed))\n            .subscribe(() => {\n                this.workspaces.delete([workspace.id]).subscribe(() => {\n                    this.toast.open('Workspace deleted.');\n                }, (errResponse: BackendErrorResponse) => {\n                    this.toast.open(errResponse.message || HttpErrors.Default);\n                });\n            });\n    }\n\n    public selectWorkspace(workspace: Workspace) {\n        this.workspaces.select(workspace.id);\n        this.menuTrigger.closeMenu();\n    }\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { DriveUrlsService } from '../drive-urls.service';\nimport { DriveState } from '../state/drive-state';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { OpenFolder } from '../state/actions/commands';\nimport { DrivePage } from '../state/models/drive-page';\nimport { DriveFolder } from '../folders/models/driveFolder';\n\n@Component({\n    selector: 'sidebar',\n    templateUrl: './sidebar.component.html',\n    styleUrls: ['./sidebar.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SidebarComponent {\n    @Select(DriveState.activePage) activePage$: Observable<DrivePage>;\n    @Select(DriveState.rootFolder) rootFolder$: Observable<DriveFolder>;\n\n    constructor(\n        public urls: DriveUrlsService,\n        private store: Store\n    ) {}\n\n    public openFolder(folder: DriveFolder) {\n        this.store.dispatch(new OpenFolder(folder));\n    }\n}\n","<div class=\"sidebar-body\">\r\n    <sidebar-action-buttons></sidebar-action-buttons>\r\n\r\n    <div class=\"drive-folders\">\r\n        <div class=\"sidebar-menu-item\" [routerLink]=\"urls.driveRoot()\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\" [folderDropTarget]=\"rootFolder$ | async\">\r\n            <mat-icon svgIcon=\"arrow-drop-down\" class=\"toggle-expansion-icon\" [class.expanded]=\"driveTree.expanded\" (click)=\"driveTree.toggle(); $event.stopPropagation()\"></mat-icon>\r\n            <mat-icon svgIcon=\"network-drive-custom\"></mat-icon>\r\n            <span class=\"text\" trans>All Files</span>\r\n        </div>\r\n        <folders-tree (folderSelected)=\"openFolder($event)\" #driveTree></folders-tree>\r\n    </div>\r\n\r\n    <custom-menu class=\"sidebar-menu\" position=\"drive-sidebar\" itemClass=\"sidebar-menu-item\"></custom-menu>\r\n\r\n    <div class=\"usage-container\">\r\n        <mat-icon svgIcon=\"storage\"></mat-icon>\r\n        <available-space-indicator></available-space-indicator>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"sidebar-footer\">\r\n    <workspace-selector></workspace-selector>\r\n</div>\r\n\r\n\r\n","<ng-container *ngIf=\"entry$ | async as entry\">\n    <ng-container *ngIf=\"savingDescription$ | async; else descriptionSaved\">\n        <span trans>Saving...</span>\n    </ng-container>\n    <ng-template #descriptionSaved>\n        <div class=\"input-container\" *ngIf=\"editingDescription$ | async; else descriptionEl\">\n            <label for=\"description\" class=\"hidden\" trans>Description</label>\n            <textarea\n                    rows=\"4\"\n                    id=\"description\"\n                    #textArea\n                    [value]=\"entry.description\"\n                    (enterKeybind)=\"textArea.blur()\"\n                    (blur)=\"updateDescription(entry, textArea.value)\"\n            ></textarea>\n        </div>\n        <ng-template #descriptionEl>\n            <div class=\"description-text\" (click)=\"editDescription()\">{{entry.description || ('Add a description' | trans)}}</div>\n            <button mat-icon-button (click)=\"editDescription()\" [matTooltip]=\"'Edit description' | trans\">\n                <mat-icon svgIcon=\"edit\"></mat-icon>\n            </button>\n        </ng-template>\n    </ng-template>\n</ng-container>","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, QueryList, ViewChildren, ViewEncapsulation } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { FileEntry } from '@common/uploads/types/file-entry';\nimport { UpdateEntryDescription } from '../../../state/actions/commands';\nimport { Select, Store } from '@ngxs/store';\nimport { DriveState } from '../../../state/drive-state';\nimport { DriveEntry } from '../../../files/models/drive-entry';\nimport { finalize } from 'rxjs/operators';\n\n@Component({\n    selector: 'entry-description-panel',\n    templateUrl: './entry-description-panel.component.html',\n    styleUrls: ['./entry-description-panel.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EntryDescriptionPanelComponent implements AfterViewInit {\n    @Select(DriveState.selectedEntryOrActiveFolder) entry$: Observable<DriveEntry>;\n    @ViewChildren('textArea') textArea: QueryList<ElementRef<HTMLTextAreaElement>>;\n    public editingDescription$ = new BehaviorSubject(false);\n    public savingDescription$ = new BehaviorSubject(false);\n\n    constructor(private store: Store) {}\n\n    public ngAfterViewInit() {\n        this.textArea.changes.subscribe(queryList => {\n            queryList.length && queryList.first.nativeElement.focus();\n        });\n    }\n\n    public editDescription() {\n        this.editingDescription$.next(true);\n    }\n\n    public updateDescription(entry: FileEntry, value: string) {\n        this.editingDescription$.next(false);\n        if (entry.description === value) return;\n        this.savingDescription$.next(true);\n        this.store.dispatch(new UpdateEntryDescription(entry, value))\n            .pipe(finalize(() => this.savingDescription$.next(false)))\n            .subscribe();\n    }\n}\n","<img [src]=\"getPreviewUrl()\"\r\n     *ngIf=\"file.type === 'image'\"\r\n     [ngClass]=\"file.type+'-file'\"\r\n     class=\"file-color\"\r\n     draggable=\"false\">\r\n\r\n<file-icon *ngIf=\"file.type !== 'image'\" [type]=\"file.type === 'folder' ? getFolderIcon() : file.type\"></file-icon>","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { DriveEntry } from '../../models/drive-entry';\n\n@Component({\n    selector: 'file-thumbnail',\n    templateUrl: './file-thumbnail.component.html',\n    styleUrls: ['./file-thumbnail.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FileThumbnailComponent {\n    @Input() file: DriveEntry;\n\n    public getPreviewUrl(): string {\n        let url = this.file.url;\n        if (this.file.thumbnail) {\n            const separator = url.includes('?') ? '&' : '?';\n            url += separator + 'thumbnail=true';\n        }\n        return url;\n    }\n\n    public getFolderIcon() {\n        if (this.file.users && this.file.users.length > 1) {\n            return 'shared-folder';\n        } else {\n            return 'folder';\n        }\n    }\n}\n","<ng-container *ngIf=\"entry$ | async as entry; else nothingSelected\">\n    <ng-container *ngIf=\"entry.updated_at; else nothingSelected\">\n        <file-thumbnail *ngIf=\"entry.type === 'image'\" class=\"preview\" [file]=\"entry\"></file-thumbnail>\n        <div class=\"users-list\">\n            <mat-icon class=\"users-list-img workspace-img\" svgIcon=\"groups\" *ngIf=\"entry.workspace_id\" [matTooltip]=\"'Everyone at :workspace workspace' | trans:{workspace: (workspaces.activeWorkspace$ | async)?.name}\"></mat-icon>\n            <img class=\"users-list-img\" *ngFor=\"let user of entry.users\" [src]=\"user.avatar\" [matTooltip]=\"user.display_name\">\n        </div>\n        <div class=\"details-list\">\n            <div class=\"item\">\n                <div class=\"name\" trans>Type</div>\n                <div class=\"value type-value\" trans>{{entry.type}}</div>\n            </div>\n            <div class=\"item\">\n                <div class=\"name\" trans>Size</div>\n                <div class=\"value\">{{entry.file_size | formattedFileSize}}</div>\n            </div>\n            <div class=\"item\">\n                <div class=\"name\" trans>Storage Used</div>\n                <div class=\"value\">{{entry.file_size | formattedFileSize}}</div>\n            </div>\n            <div class=\"item location-item\">\n                <div class=\"name\" trans>Location</div>\n                <div class=\"value\" (click)=\"openLocation()\">\n                    <mat-icon svgIcon=\"folder\"></mat-icon>\n                    <span class=\"text\">{{(parent$ | async)?.name || ('All Files') | trans}}</span>\n                </div>\n            </div>\n            <div class=\"item\" *ngIf=\"owner$ | async as owner\">\n                <div class=\"name\" trans>Owner</div>\n                <div class=\"value\">{{owner.display_name}}</div>\n            </div>\n            <div class=\"item\">\n                <div class=\"name\" trans>Last Updated</div>\n                <div class=\"value\">{{entry.updated_at | formattedDate}}</div>\n            </div>\n            <div class=\"item\">\n                <div class=\"name\" trans>Created</div>\n                <div class=\"value\">{{entry.created_at | formattedDate}}</div>\n            </div>\n            <entry-description-panel></entry-description-panel>\n        </div>\n    </ng-container>\n</ng-container>\n\n<ng-template #nothingSelected>\n    <div class=\"nothing-selected\">\n        <mat-icon svgIcon=\"selection-tool-custom\" class=\"icon\"></mat-icon>\n        <div class=\"text\" trans>Select file or folder to view its details.</div>\n    </div>\n</ng-template>\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { Observable } from 'rxjs';\nimport { DriveEntry } from '../../files/models/drive-entry';\nimport { OpenFolder } from '../../state/actions/commands';\nimport { DriveFolder } from '../../folders/models/driveFolder';\nimport { WorkspacesService } from '../../../../common/workspaces/workspaces.service';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'details-panel',\n    templateUrl: './details-panel.component.html',\n    styleUrls: ['./details-panel.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DetailsPanelComponent {\n    @Select(DriveState.selectedEntryOrActiveFolder) entry$: Observable<DriveEntry>;\n    @Select(DriveState.selectedEntryParent) parent$: Observable<DriveFolder>;\n    public owner$ = this.store.select(DriveState.selectedEntryOrActiveFolder)\n        .pipe(map(e => (e?.users || []).find(u => u.owns_entry)));\n\n    constructor(\n        private store: Store,\n        public workspaces: WorkspacesService,\n    ) {}\n\n    public openLocation() {\n        const parent = this.store.selectSnapshot(DriveState.selectedEntryParent);\n        this.store.dispatch(new OpenFolder(parent));\n    }\n}\n","<div class=\"header\">\n    <div class=\"title\">\n        <ng-container *ngIf=\"entry$ | async as entry; else defaultTitle\">\n            <ng-container *ngIf=\"entry.type; else defaultTitle\">\n                <file-icon [type]=\"entry.type\"></file-icon>\n                <div class=\"name\">{{entry.name}}</div>\n            </ng-container>\n        </ng-container>\n        <ng-template #defaultTitle>\n            <file-icon type=\"folder\"></file-icon>\n            <div class=\"name\">{{ ((activePage$ | async)?.viewName) | trans }}</div>\n        </ng-template>\n        <button mat-icon-button class=\"close-button\" (click)=\"close()\">\n            <mat-icon svgIcon=\"close\"></mat-icon>\n        </button>\n    </div>\n</div>\n<details-panel></details-panel>\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { DriveState} from '../state/drive-state';\nimport { Observable } from 'rxjs';\nimport { DriveEntry } from '../files/models/drive-entry';\nimport { ToggleDetailsSidebar } from '../state/actions/commands';\nimport { DrivePage } from '../state/models/drive-page';\n\n@Component({\n    selector: 'details-sidebar',\n    templateUrl: './details-sidebar.component.html',\n    styleUrls: ['./details-sidebar.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DetailsSidebarComponent {\n    @Select(DriveState.selectedEntryOrActiveFolder) entry$: Observable<DriveEntry>;\n    @Select(DriveState.activePage) activePage$: Observable<DrivePage>;\n\n    constructor(private store: Store) {}\n\n    public close() {\n        this.store.dispatch(new ToggleDetailsSidebar());\n    }\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, HostBinding } from '@angular/core';\nimport { DriveEntry } from '../../../models/drive-entry';\n\n@Component({\n    selector: 'files-grid-item',\n    templateUrl: './files-grid-item.component.html',\n    styleUrls: ['./files-grid-item.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FilesGridItemComponent {\n    @HostBinding('class.drive-entry') driveEntry = true;\n    @Input() entry: DriveEntry;\n\n    @HostBinding('attr.data-id') get fileId() {\n        return this.entry.id;\n    }\n}\n","<div class=\"preview-container\">\n    <file-thumbnail class=\"preview\" [file]=\"entry\"></file-thumbnail>\n</div>\n<figcaption class=\"files-grid-item-footer\">\n    <file-icon [type]=\"entry.type\"></file-icon>\n    <div class=\"text\">{{entry.name}}</div>\n</figcaption>\n","import { Injectable } from '@angular/core';\r\nimport { EntriesSelectedViaDrag } from '../state/actions/events';\r\nimport { Store } from '@ngxs/store';\r\nimport { DriveDomCacheService } from './drive-dom-cache.service';\r\nimport { DriveState } from '../state/drive-state';\r\n\r\nconst GRID_ITEM_SELECTOR = '.drive-entry';\r\n\r\ntype AreaEdge = 'top'|'left'|'right'|'bottom'|false;\r\n\r\ninterface SelectorRect extends ClientRect {\r\n    height: number;\r\n    width: number;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FilesDragSelectService {\r\n    private selectBox: HTMLDivElement;\r\n    private initial = {x: 0, y: 0, scrollTop: 0};\r\n    private lastPanEvent: HammerInput|null;\r\n    private scrollListener: EventListener;\r\n    private gridElements: HTMLElement[];\r\n\r\n    constructor(\r\n        private store: Store,\r\n        private cache: DriveDomCacheService,\r\n    ) {}\r\n\r\n    public start(e: HammerInput) {\r\n        this.cacheClientRects();\r\n        this.createSelectBox();\r\n        this.bindScroll();\r\n        this.gridElements = this.getGridElements();\r\n\r\n        this.initial = {\r\n            ...this.hammerToRelative(e),\r\n            scrollTop: this.cache.scrollCont.scrollTop,\r\n        };\r\n\r\n        this.selectBox.style.top = this.initial.y + 'px';\r\n        this.selectBox.style.left = this.initial.x + 'px';\r\n\r\n\r\n    }\r\n\r\n    public move(e: HammerInput) {\r\n        this.lastPanEvent = e;\r\n        this.resizeBox(e);\r\n    }\r\n\r\n    public end() {\r\n        this.removeSelectBox();\r\n        this.dispatchSelectedAction();\r\n        this.unbindScroll();\r\n        this.gridElements = [];\r\n    }\r\n\r\n    public resizeBox(e?: HammerInput|null) {\r\n        if ( ! e) e = this.lastPanEvent;\r\n        if ( ! e || ! this.selectBox) return;\r\n        const newPos = this.getNewSelectorPosition(e);\r\n        this.scrollAndRepositionSelector(newPos);\r\n        this.selectIntersectingElements();\r\n    }\r\n\r\n    /**\r\n     * Calculate new position of selector box.\r\n     */\r\n    private getNewSelectorPosition(e: HammerInput): SelectorRect {\r\n        const current = this.hammerToRelative(e);\r\n\r\n        let tmp,\r\n            x1 = this.initial.x,\r\n            y1 = this.initial.y,\r\n            x2 = current.x,\r\n            y2 = current.y;\r\n\r\n        if (x1 > x2) { tmp = x2; x2 = x1; x1 = tmp; }\r\n        if (y1 > y2) { tmp = y2; y2 = y1; y1 = tmp; }\r\n\r\n        return {\r\n            width: x2 - x1,\r\n            height: y2 - y1,\r\n            top: y1,\r\n            right: x1 + (x2 - x1), // left + width\r\n            bottom: y1 + (y2 - y1), // top + height\r\n            left: x1,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Check if specified position intersects any container edge.\r\n     */\r\n    private reachedAreaEdge(newPos: ClientRect): AreaEdge {\r\n        const area = this.rectToRelative(this.cache.filesContRect);\r\n\r\n        if (newPos.left <= area.left) {\r\n            return 'left';\r\n        } else if (newPos.top <= area.top) {\r\n            return 'top';\r\n        } else if (newPos.right >= area.right) {\r\n            return 'right';\r\n        } else if (newPos.bottom >= area.bottom) {\r\n            return 'bottom';\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Auto scroll container (if needed) and reposition selector box.\r\n     */\r\n    private scrollAndRepositionSelector(newPos: SelectorRect) {\r\n        const area = this.cache.scrollCont,\r\n            edge = this.reachedAreaEdge(newPos);\r\n\r\n        // make sure top always starts at the same coordinates\r\n        // regardless of any scrolling done during dragging\r\n        newPos.top += this.initial.scrollTop;\r\n\r\n        // auto scroll when cursor reaches container edge\r\n        if (edge === 'bottom') {\r\n            area.scrollBy({top: 4});\r\n        } else if (edge === 'top') {\r\n            area.scrollBy({top: -4});\r\n        }\r\n\r\n        // scroll diff between drag start and now (auto scroll or mouse wheel)\r\n        const scrollDiff = this.cache.scrollCont.scrollTop - this.initial.scrollTop,\r\n            scrollValue = Math.abs(scrollDiff);\r\n\r\n        // top needs to be changed only if scroll direction is top\r\n        if (scrollDiff < 0) {\r\n            newPos.top -= scrollValue;\r\n        }\r\n\r\n        // height needs to be changed regardless of direction and method\r\n        newPos.height += scrollValue;\r\n\r\n        // check if we have reached bottom edge again, after scroll values are applied\r\n        const reachedBottom = (newPos.top + newPos.height) >= this.cache.scrollCont.scrollHeight;\r\n\r\n        // if any select area edge is reached, bail\r\n        if (edge === 'left' || edge === 'right' || reachedBottom) return;\r\n\r\n        // finally, reposition select box with scroll values applied\r\n        this.applyPosition(newPos);\r\n    }\r\n\r\n    /**\r\n     * Apply specified position to selector box.\r\n     */\r\n    private applyPosition(newPos: ClientRect) {\r\n        this.selectBox.style.width = newPos.width + 'px';\r\n        this.selectBox.style.height = newPos.height + 'px';\r\n        this.selectBox.style.left = newPos.left + 'px';\r\n        this.selectBox.style.top = newPos.top + 'px';\r\n    }\r\n\r\n    private selectIntersectingElements() {\r\n        const selectedBoxRect = this.selectBox.getBoundingClientRect();\r\n        this.gridElements.forEach((gridItem: HTMLElement) => {\r\n            const rect = gridItem.getBoundingClientRect();\r\n\r\n            // item intersects the select box\r\n            if (rect.top + rect.height > selectedBoxRect.top\r\n                && rect.left + rect.width > selectedBoxRect.left\r\n                && rect.bottom - rect.height < selectedBoxRect.bottom\r\n                && rect.right - rect.width < selectedBoxRect.right) {\r\n                gridItem.classList.add('selected');\r\n            } else {\r\n                gridItem.classList.remove('selected');\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Transform absolute container client rect into relative.\r\n     */\r\n    private rectToRelative(rect: ClientRect): ClientRect {\r\n        return {\r\n            width: rect.width,\r\n            height: rect.height,\r\n            left: rect.left - this.cache.filesContRect.left,\r\n            top: rect.top - this.cache.filesContRect.top,\r\n            right: rect.right - this.cache.filesContRect.left,\r\n            bottom: rect.bottom - this.cache.filesContRect.top\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Transform hammer absolute event to relative coordinates.\r\n     */\r\n    private hammerToRelative(e: HammerInput) {\r\n        return {\r\n            x: e.center.x - this.cache.filesContRect.left,\r\n            y: e.center.y - this.cache.filesContRect.top\r\n        };\r\n    }\r\n\r\n    private dispatchSelectedAction() {\r\n        const ids = this.gridElements\r\n            .filter(el => el.classList.contains('selected'))\r\n            .map(el => +el.dataset.id);\r\n\r\n        const entries = this.store.selectSnapshot(DriveState.entries)\r\n            .filter(entry => ids.indexOf(entry.id) > -1);\r\n\r\n        this.store.dispatch(new EntriesSelectedViaDrag(entries));\r\n    }\r\n\r\n    private createSelectBox() {\r\n        this.selectBox = document.createElement('div');\r\n        this.selectBox.classList.add('files-select-box');\r\n        this.cache.filesCont.appendChild(this.selectBox);\r\n    }\r\n\r\n    public removeSelectBox() {\r\n        if ( ! this.selectBox) return;\r\n        this.selectBox.remove();\r\n        this.selectBox = null;\r\n    }\r\n\r\n    public dragging() {\r\n        return !!this.selectBox;\r\n    }\r\n\r\n    private cacheClientRects() {\r\n        this.cache.filesContRect = this.cache.filesCont.getBoundingClientRect();\r\n        this.cache.scrollContRect = this.cache.scrollCont.getBoundingClientRect();\r\n    }\r\n\r\n    private getGridElements(): HTMLElement[] {\r\n        return Array.from(this.cache.filesCont.querySelectorAll(GRID_ITEM_SELECTOR));\r\n    }\r\n\r\n    private bindScroll() {\r\n        this.scrollListener = () => this.resizeBox();\r\n        this.cache.scrollCont.addEventListener('scroll', this.scrollListener);\r\n    }\r\n\r\n    private unbindScroll() {\r\n        this.cache.scrollCont.removeEventListener('scroll', this.scrollListener);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { DriveDomCacheService } from './drive-dom-cache.service';\nimport { Store } from '@ngxs/store';\nimport { StoppedDragging } from '../state/actions/events';\nimport { StartedDragging } from '../state/actions/events';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DragEntryService {\n    constructor(\n        private domCache: DriveDomCacheService,\n        private store: Store\n    ) {}\n\n    public start(e: HammerInput) {\n        this.store.dispatch(new StartedDragging());\n    }\n\n    public move(e: HammerInput) {\n        this.domCache.dragPreview.style.top = e.center.y + 'px';\n        this.domCache.dragPreview.style.left = e.center.x + 'px';\n    }\n\n    public end() {\n        this.store.dispatch(new StoppedDragging());\n    }\n}\n","import {\n    ContentChildren, Directive, ElementRef, NgZone, OnDestroy, OnInit, QueryList\n} from '@angular/core';\nimport { FilesGridItemComponent } from '../files/components/files-grid/files-grid-item/files-grid-item.component';\nimport { Store } from '@ngxs/store';\nimport { EntryDoubleTapped, EntryTapped } from '../state/actions/events';\nimport { DragEntryService } from './drag-entry.service';\nimport { DeselectAllEntries, SelectEntries } from '../state/actions/commands';\nimport { DriveState } from '../state/drive-state';\nimport { DriveEntry } from '../files/models/drive-entry';\nimport { FilesDragSelectService } from './files-drag-select.service';\nimport { DriveDomCacheService } from './drive-dom-cache.service';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n    selector: '[driveHammerInteractions]'\n})\nexport class DriveHammerInteractionsDirective implements OnInit, OnDestroy {\n    @ContentChildren(FilesGridItemComponent, {descendants: true}) gridItems: QueryList<FilesGridItemComponent>;\n\n    private hammerManager: HammerManager;\n    private panService: FilesDragSelectService|DragEntryService|null;\n    private subscriptions: Subscription[] = [];\n\n    constructor(\n        private zone: NgZone,\n        private el: ElementRef,\n        private store: Store,\n        private dragSelect: FilesDragSelectService,\n        private dragEntry: DragEntryService,\n        private domCache: DriveDomCacheService,\n    ) {}\n\n    ngOnInit() {\n        this.bindToHammer();\n\n        // disable \"pan\" on mobile as it will prevent scrolling\n        const sub = this.store.select(DriveState.isMobile).subscribe(isMobile => {\n            this.hammerManager.get('pan').set({\n                enable: !isMobile\n            });\n            this.hammerManager.get('doubletap').set({\n                enable: !isMobile\n            });\n        });\n\n        this.subscriptions.push(sub);\n    }\n\n    ngOnDestroy() {\n        this.dragSelect.removeSelectBox();\n        this.subscriptions.forEach(sub => sub.unsubscribe());\n    }\n\n    private bindToHammer() {\n        this.createHammerManager();\n        this.onPanStart();\n        this.onPan();\n        this.onPanEnd();\n        this.onTap();\n        this.onDoubleTap();\n    }\n\n    private createHammerManager() {\n        this.zone.runOutsideAngular(() => {\n            this.hammerManager = new Hammer.Manager(this.domCache.filesCont);\n\n            const tap = new Hammer.Tap(),\n                pan = new Hammer.Pan(),\n                doubleTap = new Hammer.Tap({ event: 'doubletap', taps: 2 });\n\n            this.hammerManager.add([tap, doubleTap, pan]);\n            this.hammerManager.get('doubletap').recognizeWith('tap');\n        });\n    }\n\n    private onPanStart() {\n        this.hammerManager.on('panstart', e => {\n            const gridElement = this.getEntryEl(e);\n\n            if (gridElement) {\n                this.panService = this.dragEntry;\n                const entry = this.getEntryByEl(gridElement),\n                    selectedEntries = this.store.selectSnapshot(DriveState.selectedEntries);\n\n                // select entry, if not already selected\n                if ( ! selectedEntries.find(en => en.id === entry.id)) {\n                    this.store.dispatch(new SelectEntries([this.getEntryByEl(gridElement)]));\n                }\n            } else {\n                this.panService = this.dragSelect;\n            }\n\n            this.panService.start(e);\n        });\n    }\n\n    private onPan() {\n        this.hammerManager.on('pan', e => {\n            if (this.panService) this.panService.move(e);\n        });\n    }\n\n    private onPanEnd() {\n        this.hammerManager.on('panend', () => {\n            if (this.panService) this.panService.end();\n        });\n    }\n\n    private onTap() {\n        this.hammerManager.on('tap', e => {\n            const entryEl = this.getEntryEl(e);\n            this.dragSelect.removeSelectBox();\n\n            if (entryEl) {\n                this.store.dispatch(new EntryTapped(this.getEntryByEl(entryEl), e.srcEvent.ctrlKey || e.srcEvent.metaKey));\n            } else if (e.target.closest('.files-container')) {\n                this.store.dispatch(new DeselectAllEntries());\n            }\n        });\n    }\n\n    private onDoubleTap() {\n        this.hammerManager.on('doubletap', e => {\n            const gridElement = this.getEntryEl(e);\n            if ( ! gridElement) return;\n\n            this.store.dispatch(new EntryDoubleTapped(\n                this.getEntryByEl(gridElement)\n            ));\n        });\n    }\n\n    private getEntryEl(e: HammerInput) {\n        return e.target.closest('.drive-entry') as HTMLElement;\n    }\n\n    private getEntryByEl(el: HTMLElement): DriveEntry {\n        const id = +el.dataset.id;\n        return this.store.selectSnapshot(DriveState.entries)\n            .find(curr => curr.id === +id);\n    }\n}\n","import { AfterViewInit, Directive, ElementRef } from '@angular/core';\nimport { Select } from '@ngxs/store';\nimport { DriveState } from '../state/drive-state';\nimport { Observable } from 'rxjs';\n\n@Directive({\n    selector: '[toggleSelectedClass]'\n})\nexport class ToggleSelectedClassDirective implements AfterViewInit {\n    @Select(DriveState.selectedEntryIds) selectedEntryIds: Observable<number[]>;\n\n    constructor(private el: ElementRef) {}\n\n    ngAfterViewInit() {\n        this.selectedEntryIds.subscribe(ids => {\n            const els = this.el.nativeElement.querySelectorAll('.drive-entry');\n            if ( ! els.length) return;\n\n            Array.from(els).forEach((el: HTMLElement) => {\n                const selected = ids.indexOf(parseInt(el.dataset.id, 10)) > -1;\n\n                if (selected) {\n                    el.classList.add('selected');\n                } else {\n                    el.classList.remove('selected');\n                }\n            });\n        });\n    }\n}\n","import { UploadedFile } from '../uploaded-file';\r\n\r\nexport async function readUploadedFolders(entries: WebKitEntry[]): Promise<UploadedFile[]> {\r\n    let files = [];\r\n\r\n    for (const key in entries) {\r\n        const entry = entries[key];\r\n\r\n        if ( ! entry.isDirectory) {\r\n            files.push(await transformFileEntry(entry as WebKitFileEntry));\r\n        } else {\r\n            files = files.concat(await readDirRecursive(entry as WebKitDirectoryEntry));\r\n        }\r\n    }\r\n\r\n    return files;\r\n}\r\n\r\nasync function readDirRecursive(entry: WebKitDirectoryEntry, files = []) {\r\n    const entries = await readEntries(entry);\r\n\r\n    for (const key in entries) {\r\n        const childEntry = entries[key];\r\n\r\n        if (childEntry.isDirectory) {\r\n            await readDirRecursive(childEntry as WebKitDirectoryEntry, files);\r\n        } else {\r\n            files.push(await transformFileEntry(childEntry as WebKitFileEntry));\r\n        }\r\n    }\r\n\r\n    return files;\r\n}\r\n\r\nfunction readEntries(dir: WebKitDirectoryEntry): Promise<WebKitEntry[]> {\r\n    return new Promise(resolve => {\r\n       readEntriesRecursive(dir.createReader(), resolve);\r\n    });\r\n}\r\n\r\nfunction readEntriesRecursive(reader: WebKitDirectoryReader, resolve, allEntries: WebKitEntry[] = []) {\r\n    reader.readEntries(entries => {\r\n        if (entries.length) {\r\n            allEntries = allEntries.concat(entries);\r\n            readEntriesRecursive(reader, resolve, allEntries);\r\n        } else {\r\n            resolve(allEntries);\r\n        }\r\n    });\r\n}\r\n\r\nfunction transformFileEntry(entry: WebKitFileEntry) {\r\n    return new Promise(resolve => {\r\n        entry.file((file: any) => {\r\n            resolve(new UploadedFile(file as File, entry.fullPath));\r\n        });\r\n    });\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { openUploadWindow } from '../utils/open-upload-window';\r\nimport { UploadedFile } from '../uploaded-file';\r\nimport { readUploadedFolders } from '../utils/read-uploaded-folders';\r\nimport { UploadInputConfig } from '@common/uploads/upload-input-config';\r\n\r\n@Directive({\r\n    selector: '[fileDropzone]',\r\n})\r\nexport class UploadDropzoneDirective implements OnInit, OnDestroy {\r\n    @Input() disableDropzoneClick = false;\r\n    @Input() disableDropzone = false;\r\n    @Input() clickButton: ElementRef;\r\n    @Input('fileDropzone') uploadConfig: UploadInputConfig = {};\r\n    @Output() filesDropped: EventEmitter<UploadedFile[]> = new EventEmitter();\r\n\r\n    constructor(protected el: ElementRef) {}\r\n\r\n    ngOnInit() {\r\n        const el = this.el.nativeElement;\r\n        el.addEventListener('dragenter', (e) => this.handleDragEnter(e));\r\n        el.addEventListener('dragover', (e) => this.handleDragOver(e));\r\n        el.addEventListener('dragleave', (e) => this.handleDragLeave(e));\r\n        el.addEventListener('drop', (e) => this.handleDrop(e));\r\n\r\n        if ( ! this.disableDropzoneClick) {\r\n            const trigger = this.clickButton ? this.clickButton.nativeElement : el;\r\n            trigger.addEventListener('click', () => this.handleClick());\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.removeClassesFromDropzone();\r\n    }\r\n\r\n    protected handleClick() {\r\n        if (this.disableDropzone) return;\r\n        openUploadWindow(this.uploadConfig).then(files => {\r\n            this.emitUploadEvent(files);\r\n        });\r\n    }\r\n\r\n    public handleDragEnter(e) {\r\n        if (this.dropzoneDisabled(e)) return;\r\n        this.el.nativeElement.classList.add('file-over-dropzone');\r\n    }\r\n\r\n    public handleDragOver(e) {\r\n        if (e.preventDefault) e.preventDefault();\r\n        e.dataTransfer.dropEffect = this.dropzoneDisabled(e) ? 'none' : 'move';\r\n        return false;\r\n    }\r\n\r\n    public handleDragLeave(e: MouseEvent) {\r\n        const newEl = document.elementFromPoint(e.clientX, e.clientY);\r\n        if (this.el.nativeElement.contains(newEl)) return;\r\n        this.removeClassesFromDropzone();\r\n    }\r\n\r\n    public async handleDrop(e) {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        this.removeClassesFromDropzone();\r\n        if (this.dropzoneDisabled(e) || !e.dataTransfer.items) return;\r\n\r\n        const items = Array.from(e.dataTransfer.items)\r\n            .filter((item: DataTransferItem) => item.kind === 'file')\r\n            .map((item: DataTransferItem) => {\r\n                return item.webkitGetAsEntry();\r\n            });\r\n\r\n        if (items.length) {\r\n            this.emitUploadEvent(await readUploadedFolders(items));\r\n        }\r\n    }\r\n\r\n    protected emitUploadEvent(files: UploadedFile[]) {\r\n        this.filesDropped.emit(files);\r\n    }\r\n\r\n    protected removeClassesFromDropzone() {\r\n        this.el.nativeElement.classList.remove('file-over-dropzone');\r\n    }\r\n\r\n    protected dropzoneDisabled(e: DragEvent) {\r\n        const hasFiles = e.dataTransfer.types.find(type => type.toLowerCase() === 'files');\r\n        return this.disableDropzone || ! hasFiles;\r\n    }\r\n}\r\n","import {Directive, ElementRef, NgZone, OnDestroy, OnInit} from '@angular/core';\r\nimport {fromEvent, Subscription} from 'rxjs';\r\nimport {debounceTime} from 'rxjs/operators';\r\n\r\n@Directive()\r\nexport abstract class InfiniteScroll implements OnInit, OnDestroy {\r\n    protected scrollSub: Subscription;\r\n    protected el: ElementRef<HTMLElement|Document>;\r\n    protected abstract zone: NgZone;\r\n\r\n    public threshold: number | string = 50;\r\n\r\n    ngOnInit() {\r\n        if ( ! this.el) {\r\n            this.el = new ElementRef(document);\r\n        }\r\n        this.zone.runOutsideAngular(() => {\r\n            this.scrollSub = fromEvent(this.getScrollContainer(), 'scroll', {capture: true, passive: true})\r\n                .pipe(debounceTime(20))\r\n                .subscribe((e: Event) => this.onScroll(e.target as HTMLElement));\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.scrollSub && this.scrollSub.unsubscribe();\r\n    }\r\n\r\n    protected getScrollContainer() {\r\n        return this.el ? this.el.nativeElement : document;\r\n    }\r\n\r\n    protected onScroll(target: HTMLElement) {\r\n        if (!target || (target !== this.el.nativeElement) || !this.canLoadMore() || this.isLoading()) return;\r\n\r\n        const offset = parseInt(this.threshold as string),\r\n            targetCanScroll = this.el && (typeof target.scrollTop !== 'undefined');\r\n\r\n        const currentScroll = targetCanScroll ?\r\n            target.scrollTop + target.offsetHeight :\r\n            window.scrollY + window.innerHeight;\r\n\r\n        const heightWithoutOffset = targetCanScroll ?\r\n            target.scrollHeight - offset :\r\n            document.documentElement.scrollHeight - offset;\r\n\r\n        if (currentScroll >= heightWithoutOffset) {\r\n            this.zone.run(() => {\r\n                this.loadMoreItems();\r\n            });\r\n        }\r\n    }\r\n\r\n    protected abstract loadMoreItems();\r\n\r\n    protected abstract canLoadMore(): boolean;\r\n\r\n    protected abstract isLoading(): boolean;\r\n}\r\n","import { Directive, ElementRef, NgZone } from '@angular/core';\nimport { LoadMoreEntries } from '../state/actions/commands';\nimport { Store } from '@ngxs/store';\nimport { DriveState } from '../state/drive-state';\nimport { InfiniteScroll } from '@common/core/ui/infinite-scroll/infinite.scroll';\n\n@Directive({\n    selector: '[driveInfiniteScroll]'\n})\nexport class DriveInfiniteScrollDirective extends InfiniteScroll {\n    constructor(\n        protected el: ElementRef,\n        protected store: Store,\n        protected zone: NgZone,\n    ) {\n        super();\n    }\n\n    protected loadMoreItems() {\n        const page = this.store.selectSnapshot(DriveState.currentPage) + 1;\n        this.store.dispatch(new LoadMoreEntries({page}));\n    }\n\n    protected isLoading(): boolean {\n        return this.store.selectSnapshot(DriveState.loading);\n    }\n\n    protected canLoadMore(): boolean {\n        return this.store.selectSnapshot(DriveState.canLoadMoreEntries);\n    }\n}\n","import { ChangeDetectionStrategy, Component, HostBinding, Inject, Optional, ViewEncapsulation } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { DriveEntry } from '../../../files/models/drive-entry';\r\nimport { CONTEXT_MENU_DATA } from '@common/core/ui/context-menu/context-menu-data';\r\nimport { EntryContextMenuOpened } from '../../../state/actions/events';\r\nimport { CurrentUser } from '@common/auth/current-user';\r\nimport { DeselectAllEntries } from '../../../state/actions/commands';\r\n\r\nexport interface FileContextMenuData {\r\n    entry: DriveEntry;\r\n}\r\n\r\n@Component({\r\n    selector: 'drive-context-menu',\r\n    templateUrl: './drive-context-menu.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class DriveContextMenuComponent {\r\n    @HostBinding('class.context-menu') contextMenu = true;\r\n\r\n    constructor(\r\n        @Optional() @Inject(CONTEXT_MENU_DATA) public data: FileContextMenuData,\r\n        protected store: Store,\r\n        protected currentUser: CurrentUser\r\n    ) {\r\n        if (this.data && this.data.entry) {\r\n            this.store.dispatch(new EntryContextMenuOpened(this.data.entry));\r\n        } else {\r\n            this.store.dispatch(new DeselectAllEntries());\r\n        }\r\n    }\r\n}\r\n","<context-actions-container></context-actions-container>","<skeleton *ngIf=\"loading$ | async; else breadcrumbs\" @fadeOut></skeleton>\r\n<ng-template #breadcrumbs>\r\n    <div class=\"breadcrumb-container\" @fadeIn>\r\n        <ng-container *ngFor=\"let item of breadcrumb | async; last as last; first as first;\">\r\n            <div class=\"breadcrumb-item\" (click)=\"last ? openContextMenu(item, button) : openPage(item)\" [class.no-action]=\"!item.hasActions\" #button>\r\n                <span class=\"name\">{{first ? (item.viewName | trans) : item.viewName}}</span>\r\n                <mat-icon svgIcon=\"arrow-drop-down\" *ngIf=\"last && item.hasActions\"></mat-icon>\r\n            </div>\r\n            <mat-icon class=\"separator\" svgIcon=\"keyboard-arrow-right\" *ngIf=\"!last\"></mat-icon>\r\n        </ng-container>\r\n    </div>\r\n</ng-template>\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { DriveEntryApiService } from '../../drive-entry-api.service';\nimport { Store } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { BehaviorSubject, combineLatest, Subscription } from 'rxjs';\nimport { Translations } from '@common/core/translations/translations.service';\nimport {\n    ContextMenu, ContextMenuParams\n} from '@common/core/ui/context-menu/context-menu.service';\nimport { DriveContextMenuComponent } from '../../context-actions/components/drive-context-menu/drive-context-menu.component';\nimport { distinctUntilChanged, filter, take } from 'rxjs/operators';\nimport { OpenFolder } from '../../state/actions/commands';\nimport {\n    DRIVE_PAGE_NAMES, DrivePage, FolderPage, SHARES_PAGE,\n} from '../../state/models/drive-page';\nimport { Navigate } from '@ngxs/router-plugin';\nimport { DriveFolder } from '../../folders/models/driveFolder';\nimport { SKELETON_ANIMATIONS } from '../../../../common/core/ui/skeleton/skeleton-animations';\nimport { WorkspacesService } from '../../../../common/workspaces/workspaces.service';\n\n@Component({\n    selector: 'entry-breadcrumbs',\n    templateUrl: './entry-breadcrumbs.component.html',\n    styleUrls: ['./entry-breadcrumbs.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [SKELETON_ANIMATIONS],\n})\nexport class EntryBreadcrumbsComponent implements OnInit, OnDestroy {\n    public breadcrumb: BehaviorSubject<DrivePage[]> = new BehaviorSubject([]);\n    public loading$ = new BehaviorSubject<boolean>(true);\n    private activePageSub: Subscription;\n\n    constructor(\n        private entriesApi: DriveEntryApiService,\n        private i18n: Translations,\n        private contextMenu: ContextMenu,\n        private store: Store,\n        private workspaces: WorkspacesService,\n    ) {}\n\n    ngOnInit() {\n        // wait until entries and user folders are loaded\n        combineLatest([\n            this.store.select(DriveState.meta),\n            this.store.select(DriveState.userFoldersLoaded),\n            this.workspaces.activeWorkspace$,\n        ]).pipe(\n            filter(([meta, foldersLoaded, workspace]) => meta.currentPage && foldersLoaded && !!workspace),\n            take(1)\n        ).subscribe(() => {\n            this.loading$.next(false);\n            this.bindToActivePage();\n        });\n    }\n\n    ngOnDestroy() {\n        this.activePageSub && this.activePageSub.unsubscribe();\n    }\n\n    public openPage(page: DrivePage) {\n        if (page.folder) {\n            this.store.dispatch(new OpenFolder(page.folder));\n        } else {\n            this.store.dispatch(new Navigate(['/drive/shares']));\n        }\n    }\n\n    public openContextMenu(item: DrivePage, origin: HTMLElement) {\n        let params = {originX: 'start', overlayX: 'start'} as ContextMenuParams;\n        switch (item.name) {\n            case DRIVE_PAGE_NAMES.TRASH:\n                return this.contextMenu.open(DriveContextMenuComponent, origin, params);\n            case DRIVE_PAGE_NAMES.FOLDER:\n                params = {data: {entry: this.store.selectSnapshot(DriveState.activeFolder)}, ...params};\n                return this.contextMenu.open(DriveContextMenuComponent, origin, params);\n        }\n    }\n\n    private generateBreadCrumb(page: DrivePage) {\n        const breadcrumbs = [this.getRootBreadcrumb(page)];\n\n        if (page.folder?.id) {\n            const folderPath = this.getBreadcrumbForFolder(page.folder);\n            breadcrumbs.push(...folderPath);\n        }\n        this.breadcrumb.next(breadcrumbs);\n    }\n\n    private getBreadcrumbForFolder(folder: DriveFolder) {\n        const allFolders = this.store.selectSnapshot(DriveState.flatFolders) || [];\n        const ids = (folder.path ? folder.path.split('/') : [folder.id]) as number[];\n        return ids.map(id => {\n            const pathFolder = folder.id === +id ? folder : allFolders.find(f => f.id === +id);\n            if (pathFolder) {\n                return new FolderPage(pathFolder);\n            }\n        }).filter(f => !!f);\n    }\n\n    private getRootBreadcrumb(page: DrivePage) {\n        if (page.name === DRIVE_PAGE_NAMES.FOLDER) {\n            const workspaceId = this.workspaces.activeId$.value;\n            const ROOT_FOLDER_PAGE = new FolderPage(this.store.selectSnapshot(DriveState.rootFolder));\n            if (workspaceId && page.folder.workspace_id === workspaceId) {\n                return {...ROOT_FOLDER_PAGE, viewName: this.workspaces.activeWorkspace$.value.name};\n            } else {\n                return !this.store.selectSnapshot(DriveState.userOwnsActiveFolder) ? SHARES_PAGE : ROOT_FOLDER_PAGE;\n            }\n        } else {\n            return page;\n        }\n    }\n\n    private bindToActivePage() {\n        this.activePageSub = combineLatest([\n            this.store.select(DriveState.activePage),\n            this.store.select(DriveState.flatFolders),\n        ]).pipe(\n            distinctUntilChanged(),\n            filter(([activePage]) => {\n                // wait until folder data is fully loaded\n                return activePage.name === DRIVE_PAGE_NAMES.FOLDER ? activePage.folder?.name : true;\n            })\n        ).subscribe(([activePage]) => {\n            this.generateBreadCrumb(activePage);\n        });\n    }\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'drive-toolbar',\n    templateUrl: './drive-toolbar.component.html',\n    styleUrls: ['./drive-toolbar.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DriveToolbarComponent {\n}\n","<entry-breadcrumbs></entry-breadcrumbs>\r\n","export const AVAILABLE_SORTS: DriveSortOption[] = [\r\n    {name: 'file_size', viewName: 'Size'},\r\n    {name: 'name', viewName: 'Name'},\r\n    {name: 'updated_at', viewName: 'Last Modified'},\r\n    {name: 'created_at', viewName: 'Upload Date'},\r\n    {name: 'type', viewName: 'Type'},\r\n    {name: 'extension', viewName: 'Extension'},\r\n];\r\n\r\nexport interface DriveSortOption {\r\n    name: SortColumn;\r\n    viewName: string;\r\n}\r\n\r\nexport type SortColumn = 'file_size' | 'name' | 'updated_at' | 'created_at' | 'type' | 'extension';\r\nexport type SortDirection = 'desc'|'asc';\r\n\r\nexport interface SortValue {\r\n    column: SortColumn;\r\n    direction: SortDirection;\r\n}\r\n","<ng-container *ngIf=\"sort$ | async as sortValue\">\n    <span class=\"label\" trans>Sort by</span>\n    <button class=\"no-style\" [matMenuTriggerFor]=\"menu\" [disabled]=\"btnDisabled\">\n        <span class=\"sort-button-content\">\n            <span>{{getSortViewName(sortValue.column) | trans}}</span>\n            <mat-icon svgIcon=\"keyboard-arrow-down\" class=\"arrow-icon\"></mat-icon>\n        </span>\n        <mat-icon svgIcon=\"sort\" class=\"mobile-sort-button-content\"></mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\" class=\"drive-sort-menu\">\n        <div class=\"title\" trans>Direction</div>\n        <button mat-menu-item (click)=\"changeDirection('asc')\" [class.active]=\"sortValue.direction === 'asc'\">\n            <mat-icon svgIcon=\"check\"></mat-icon>\n            <span trans>Ascending</span>\n        </button>\n        <button mat-menu-item (click)=\"changeDirection('desc')\" [class.active]=\"sortValue.direction === 'desc'\">\n            <mat-icon svgIcon=\"check\"></mat-icon>\n            <span trans>Descending</span>\n        </button>\n        <div class=\"separator\"></div>\n        <div class=\"title\" trans>Sort By</div>\n        <button mat-menu-item *ngFor=\"let sort of availableSorts\" (click)=\"changeSort(sort)\" [class.active]=\"sortValue.column === sort.name\">\n            <mat-icon svgIcon=\"check\"></mat-icon>\n            <span trans>{{sort.viewName}}</span>\n        </button>\n    </mat-menu>\n</ng-container>","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { AVAILABLE_SORTS, DriveSortOption, SortColumn, SortDirection, SortValue } from '../../entries/available-sorts';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\n\nconst DEFAULT_VALUE: SortValue = {column: 'updated_at', direction: 'desc'};\n\n@Component({\n    selector: 'entries-sort-button',\n    templateUrl: './entries-sort-button.component.html',\n    styleUrls: ['./entries-sort-button.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: EntriesSortButtonComponent,\n        multi: true,\n    }]\n})\nexport class EntriesSortButtonComponent implements ControlValueAccessor {\n    @Input() btnDisabled = false;\n    public availableSorts = AVAILABLE_SORTS;\n    public propagateChange: Function;\n\n    public sort$: BehaviorSubject<SortValue> = new BehaviorSubject(DEFAULT_VALUE);\n\n    public changeSort(column: DriveSortOption) {\n        this.sort$.next({...this.sort$.value, column: column.name});\n        this.propagateChange(this.sort$.value);\n    }\n\n    public changeDirection(direction: SortDirection) {\n        this.sort$.next({...this.sort$.value, direction});\n        this.propagateChange(this.sort$.value);\n    }\n\n    public getSortViewName(column: SortColumn): string {\n        return this.availableSorts.find(sort => sort.name === column).viewName;\n    }\n\n    public writeValue(value: SortValue) {\n        this.sort$.next(value || DEFAULT_VALUE);\n    }\n\n    public registerOnChange(fn: Function) {\n        this.propagateChange = fn;\n    }\n\n    public registerOnTouched() {}\n}\n","<ng-container *ngFor=\"let action of actions$ | async\">\n    <ng-container *ngIf=\"action.visible()\">\n        <div class=\"separator\" *ngIf=\"!compact && action.separatorBefore\"></div>\n\n        <button class=\"context-menu-item\" *ngIf=\"!compact\" (click)=\"action.execute()\">\n            <mat-icon [svgIcon]=\"action.icon\"></mat-icon>\n            <span trans>{{action.viewName}}</span>\n        </button>\n\n        <button mat-icon-button (click)=\"action.execute()\" [matTooltip]=\"action.viewName | trans\" *ngIf=\"compact && action.showInCompact\">\n            <mat-icon [svgIcon]=\"action.icon\"></mat-icon>\n        </button>\n    </ng-container>\n</ng-container>\n\n<button mat-icon-button (click)=\"openMoreActionsMenu()\" [matTooltip]=\"'More actions' | trans\" #moreActionsButton *ngIf=\"compact && hasMoreActions$ | async\">\n    <mat-icon svgIcon=\"more-vert\"></mat-icon>\n</button>\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    HostBinding,\n    Injector,\n    Input,\n    OnDestroy,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { DriveState } from '../../../state/drive-state';\nimport { Store } from '@ngxs/store';\nimport { DriveContextAction } from '../../types/drive-context-action';\nimport { TrashActions } from '../../actions/trash-actions';\nimport { SharesActions } from '../../actions/shares-actions';\nimport { FolderActions } from '../../actions/folder-actions';\nimport { EntryActions } from '../../actions/entry-actions';\nimport { BehaviorSubject, combineLatest, Subscription } from 'rxjs';\nimport { DRIVE_PAGE_NAMES, DrivePage } from '../../../state/models/drive-page';\nimport { DriveContextMenuComponent } from '../drive-context-menu/drive-context-menu.component';\nimport { ContextMenu } from '@common/core/ui/context-menu/context-menu.service';\nimport { TrashPageActions } from '../../actions/trash-page-actions';\nimport { DriveEntry } from '../../../files/models/drive-entry';\n\n@Component({\n    selector: 'context-actions-container',\n    templateUrl: './context-actions-container.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContextActionsContainerComponent implements OnDestroy {\n    @ViewChild('moreActionsButton', { read: ElementRef }) moreActionsButton: ElementRef;\n    @Input() @HostBinding('class.compact') compact = false;\n\n    // whether there are more actions to display in \"compact\" mode\n    public hasMoreActions$ = new BehaviorSubject(false);\n    public actions$: BehaviorSubject<DriveContextAction[]> = new BehaviorSubject([]);\n    private subscription: Subscription;\n\n    constructor(\n        private store: Store,\n        private injector: Injector,\n        private contextMenu: ContextMenu,\n    ) {\n        this.subscription = combineLatest([\n            this.store.select(DriveState.activePage),\n            this.store.select(DriveState.selectedEntry),\n        ]).subscribe(combined => {\n            this.setActions(combined[0], combined[1]);\n            this.hasMoreActions$.next(this.actions$.value.some(action => !action.showInCompact));\n        });\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n\n    public openMoreActionsMenu() {\n        const entry = this.store.selectSnapshot(DriveState.selectedEntryOrActiveFolder);\n        this.contextMenu.open(\n            DriveContextMenuComponent,\n            this.moreActionsButton.nativeElement,\n            {data: {entry}}\n        );\n    }\n\n    private setActions(activePage: DrivePage, selectedEntry: DriveEntry) {\n        // user clicked on \"trash\" page name in breadcrumb\n        if (activePage.name === DRIVE_PAGE_NAMES.TRASH && !selectedEntry) {\n            this.actions$.next(this.injector.get(TrashPageActions).getActions());\n\n        // context menu opened for selected entries while in \"trash\" or \"shares\" page\n        } else if (activePage.name === 'trash' && selectedEntry) {\n            this.actions$.next(this.injector.get(TrashActions).getActions());\n        } else if (activePage.name === 'shares' && selectedEntry) {\n            this.setActionsForEntry();\n        // context menu opened by clicking on empty space in folder view or clicking on root folder breadcrumb\n        } else if (activePage.folder && !selectedEntry?.id) {\n            this.actions$.next(this.injector.get(FolderActions).getActions());\n\n        // show entries context menu for \"starred\" page\n        } else if (activePage.name === 'starred' || activePage.name === 'recent') {\n            this.actions$.next(this.injector.get(EntryActions).getActions());\n\n        // default to entry actions if can't match to anything else\n        } else if (selectedEntry) {\n            this.setActionsForEntry();\n        } else {\n            this.actions$.next([]);\n        }\n    }\n\n    private setActionsForEntry() {\n        const entries = this.store.selectSnapshot(DriveState.selectedEntries).length\n            ? this.store.selectSnapshot(DriveState.selectedEntries)\n            : [this.store.selectSnapshot(DriveState.activeFolder)];\n        let isOwner = this.store.selectSnapshot(DriveState.selectedEntries).length\n            ? this.store.selectSnapshot(DriveState.userOwnsSelectedEntries)\n            : this.store.selectSnapshot(DriveState.userOwnsActiveFolder);\n        if (this.store.selectSnapshot(DriveState.activeWorkspace)?.id) {\n            isOwner = entries.every(e => e.workspace_id === this.store.selectSnapshot(DriveState.activeWorkspace)?.id);\n        }\n        if (isOwner) {\n            this.actions$.next(this.injector.get(EntryActions).getActions());\n        } else {\n            this.actions$.next(this.injector.get(SharesActions).getActions());\n        }\n    }\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, ElementRef } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { Observable } from 'rxjs';\nimport { ContextMenu } from '@common/core/ui/context-menu/context-menu.service';\nimport { DriveContextMenuComponent } from '../../context-actions/components/drive-context-menu/drive-context-menu.component';\nimport { ToggleDetailsSidebar, SetViewMode } from '../../state/actions/commands';\n\n@Component({\n    selector: 'toolbar-actions',\n    templateUrl: './toolbar-actions.component.html',\n    styleUrls: ['./toolbar-actions.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToolbarActionsComponent {\n    @ViewChild('moreActionsButton', { read: ElementRef }) moreActionsButton: ElementRef;\n    @Select(DriveState.anythingSelected) anythingSelected: Observable<boolean>;\n    @Select(DriveState.viewMode) viewMode: Observable<'list'|'grid'>;\n    @Select(DriveState.detailsOpen) activityOpen: Observable<boolean>;\n    @Select(DriveState.multipleEntriesSelected) multipleEntriesSelected$: Observable<boolean>;\n\n    constructor(\n        protected store: Store,\n        protected contextMenu: ContextMenu,\n    ) {}\n\n    public toggleViewMode() {\n        const current = this.store.selectSnapshot(DriveState.viewMode);\n        this.store.dispatch(new SetViewMode(current === 'list' ? 'grid' : 'list'));\n    }\n\n    public ToggleDetails() {\n        this.store.dispatch(new ToggleDetailsSidebar());\n    }\n\n    public openMoreActionsMenu() {\n        const entry = this.store.selectSnapshot(DriveState.selectedEntry);\n        this.contextMenu.open(\n            DriveContextMenuComponent,\n            this.moreActionsButton.nativeElement,\n            {data: {entry}}\n        );\n    }\n}\n","<context-actions-container [compact]=\"true\"></context-actions-container>\n\n<div class=\"always-visible-actions\">\n    <button mat-icon-button (click)=\"toggleViewMode()\">\n        <mat-icon [svgIcon]=\"(viewMode | async) === 'list' ? 'view-list' : 'view-module'\"></mat-icon>\n    </button>\n    <button mat-icon-button (click)=\"ToggleDetails()\" [class.active]=\"activityOpen | async\">\n        <mat-icon svgIcon=\"info\"></mat-icon>\n    </button>\n</div>\n\n","import {\n    ChangeDetectionStrategy, Component, OnInit, ViewEncapsulation\n} from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { ReloadPageEntries } from '../../state/actions/commands';\nimport { SortColumn, SortValue } from '../../entries/available-sorts';\nimport { DriveState } from '../../state/drive-state';\nimport { combineLatest, Observable } from 'rxjs';\nimport { DrivePage } from '../../state/models/drive-page';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n    selector: 'file-list-header',\n    templateUrl: './file-list-header.component.html',\n    styleUrls: ['./file-list-header.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FileListHeaderComponent implements OnInit {\n    @Select(DriveState.sortColumn) sortColumn$: Observable<SortColumn>;\n    @Select(DriveState.activePage) activePage$: Observable<DrivePage>;\n\n    public sortFormControl = new FormControl({\n        column: this.store.selectSnapshot(DriveState.sortColumn),\n        direction: this.store.selectSnapshot(DriveState.sortDirection),\n    });\n\n    constructor(private store: Store) {}\n\n    ngOnInit() {\n        combineLatest([\n            this.store.select(DriveState.sortColumn),\n            this.store.select(DriveState.sortDirection),\n        ]).subscribe(([column, direction]) => {\n            this.sortFormControl.setValue({column, direction}, {emitEvent: false});\n        });\n        this.sortFormControl.valueChanges.subscribe((sort: SortValue) => {\n            this.store.dispatch(new ReloadPageEntries(\n                {orderBy: sort.column, orderDir: sort.direction}\n            ));\n        });\n    }\n}\n","<div class=\"sort-header\">\r\n   <entries-sort-button [btnDisabled]=\"(activePage$ | async)?.disableSort\" [formControl]=\"sortFormControl\"></entries-sort-button>\r\n</div>\r\n<toolbar-actions></toolbar-actions>","<material-navbar [showToggleButton]=\"(isMobile$ | async)\" (toggleButtonClick)=\"toggleSidebar()\" menuPosition=\"drive-navbar\">\n    <main-searchbar class=\"nav-searchbar\"></main-searchbar>\n</material-navbar>\n<mat-sidenav-container>\n    <mat-sidenav [mode]=\"(isMobile$ | async) ? 'over' : 'side'\" [opened]=\"sidebarOpen$ | async\" class=\"left-sidebar\">\n        <sidebar></sidebar>\n    </mat-sidenav>\n    <mat-sidenav [opened]=\"activityOpen$ | async\" [mode]=\"(isMobile$ | async) ? 'over' : 'side'\" position=\"end\" class=\"right-sidebar\">\n        <details-sidebar></details-sidebar>\n    </mat-sidenav>\n    <mat-sidenav-content driveHammerInteractions [class.has-rek]=\"settings.has('ads.drive')\">\n        <ad-host slot=\"ads.drive\"></ad-host>\n        <ng-container *ngIf=\"(activePage$ | async).name !== 'workspaces'\">\n            <drive-toolbar></drive-toolbar>\n            <file-list-header></file-list-header>\n        </ng-container>\n        <div class=\"loading-overlay-container\">\n            <div\n                class=\"files-container\"\n                #filesContainer\n                #scrollContainer\n                toggleSelectedClass\n                [class.dragging]=\"dragging | async\"\n                contextMenu=\"entry\"\n                [disableContextMenu]=\"!(canUpload$ | async)\"\n                fileDropzone\n                [disableDropzoneClick]=\"true\"\n                [disableDropzone]=\"!(canUpload$ | async)\"\n                driveInfiniteScroll\n                (filesDropped)=\"uploadFiles($event)\"\n            >\n                <router-outlet></router-outlet>\n            </div>\n            <loading-indicator [isVisible]=\"loading$ | async\" class=\"overlay\"></loading-indicator>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n\n<entry-drag-preview></entry-drag-preview>\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewEncapsulation,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Select, Store } from '@ngxs/store';\nimport { DriveState } from './state/drive-state';\nimport { DriveDomCacheService } from './interactions/drive-dom-cache.service';\nimport { EntryDragPreviewComponent } from './interactions/entry-drag-preview/entry-drag-preview.component';\nimport { Observable, Subscription } from 'rxjs';\nimport {\n    LoadUserFolders,\n    LoadUserSpaceUsage,\n    ReloadPageEntries,\n    ResetState,\n    SetCurrentUser,\n    SetViewMode,\n    SetWorkspace,\n    ToggleSidebar,\n    UploadFiles\n} from './state/actions/commands';\nimport { UploadedFile } from '@common/uploads/uploaded-file';\nimport { Settings } from '@common/core/config/settings.service';\nimport { CurrentUser } from '@common/auth/current-user';\nimport { BreakpointObserver } from '@angular/cdk/layout';\nimport { BreakpointChanged, UserSpaceUsageChanged } from './state/actions/events';\nimport { VIEW_MODE_KEY } from './state/models/drive-state-model';\nimport { LocalStorage } from '@common/core/services/local-storage.service';\nimport { User } from '@common/core/types/models/User';\nimport { WorkspacesService } from '../../common/workspaces/workspaces.service';\nimport { filter, skip } from 'rxjs/operators';\nimport { DrivePage, FolderPage } from './state/models/drive-page';\nimport { EntryActions } from './context-actions/actions/entry-actions';\nimport { FolderActions } from './context-actions/actions/folder-actions';\nimport { SharesActions } from './context-actions/actions/shares-actions';\nimport { TrashActions } from './context-actions/actions/trash-actions';\nimport { TrashPageActions } from './context-actions/actions/trash-page-actions';\nimport { ContextMenu } from '../../common/core/ui/context-menu/context-menu.service';\n\nconst actions = [EntryActions, FolderActions, SharesActions, TrashActions, TrashPageActions];\n\n@Component({\n    selector: 'drive',\n    templateUrl: './drive.component.html',\n    styleUrls: ['./drive.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n\n    // scope workspaces to drive component and make sure context menus get correct instance\n    providers: [...actions, ContextMenu, WorkspacesService],\n})\nexport class DriveComponent implements OnInit, OnDestroy {\n    @ViewChild('scrollContainer', { read: ElementRef, static: true }) scrollContainer: ElementRef;\n    @ViewChild('filesContainer', { static: true }) filesContainer: ElementRef;\n    @ViewChild(EntryDragPreviewComponent, { read: ElementRef, static: true }) dragPreview: ElementRef;\n    @Select(DriveState.dragging) dragging: Observable<boolean>;\n    @Select(DriveState.detailsOpen) activityOpen$: Observable<boolean>;\n    @Select(DriveState.sidebarOpen) sidebarOpen$: Observable<boolean>;\n    @Select(DriveState.loading) loading$: Observable<boolean>;\n    @Select(DriveState.isMobile) isMobile$: Observable<boolean>;\n    @Select(DriveState.canUpload) canUpload$: Observable<boolean>;\n    @Select(DriveState.activePage) activePage$: Observable<DrivePage>;\n\n    private subscriptions: Subscription[] = [];\n\n    constructor(\n        private store: Store,\n        private route: ActivatedRoute,\n        private currentUser: CurrentUser,\n        private localStorage: LocalStorage,\n        private domCache: DriveDomCacheService,\n        private breakpoints: BreakpointObserver,\n        private workspaces: WorkspacesService,\n        public settings: Settings,\n    ) {}\n\n    ngOnInit() {\n        this.setViewMode();\n        this.cacheDemoElements();\n        this.observeBreakpointChanges();\n        this.bindToWorkspace();\n        this.store.dispatch(new LoadUserFolders());\n        this.store.dispatch(new LoadUserSpaceUsage());\n\n        // TODO: refactor this once auth is moved to it's own store\n        this.store.dispatch(new SetCurrentUser(this.currentUser.getModel() as User));\n        this.currentUser.model$.subscribe(user => {\n            this.store.dispatch(new SetCurrentUser(user as User));\n        });\n    }\n\n    ngOnDestroy() {\n        this.store.dispatch(ResetState);\n        this.subscriptions.forEach(sub => sub.unsubscribe());\n        this.subscriptions = [];\n    }\n\n    public uploadFiles(files: UploadedFile[]) {\n        this.store.dispatch(new UploadFiles(files));\n    }\n\n    public toggleSidebar() {\n        this.store.dispatch(new ToggleSidebar());\n    }\n\n    private cacheDemoElements() {\n        this.domCache.filesCont = this.filesContainer.nativeElement;\n        this.domCache.scrollCont = this.scrollContainer.nativeElement;\n        this.domCache.dragPreview = this.dragPreview.nativeElement;\n    }\n\n    private setViewMode() {\n        this.store.dispatch(new SetViewMode(\n            this.localStorage.get(VIEW_MODE_KEY, this.settings.get('drive.default_view', 'grid')))\n        );\n    }\n\n    private observeBreakpointChanges() {\n        const sub = this.breakpoints.observe('(max-width: 1100px)').subscribe(result => {\n            this.store.dispatch(new BreakpointChanged({isMobile: result.matches}));\n        });\n        this.subscriptions.push(sub);\n    }\n\n    private bindToWorkspace() {\n        // skip initially selected workspace\n        const sub1 = this.workspaces.activeId$.pipe(skip(1)).subscribe(() => {\n            this.store.dispatch([\n                new ReloadPageEntries({}, new FolderPage(this.store.selectSnapshot(DriveState.rootFolder))),\n                new UserSpaceUsageChanged(),\n                new LoadUserFolders()\n            ]);\n        });\n        const sub3 = this.workspaces.activeWorkspace$.pipe(filter(w => !!w))\n            .subscribe(workspace => {\n                this.store.dispatch(new SetWorkspace(workspace));\n            });\n        const sub2 = this.workspaces.bindToNotificationClick();\n        this.subscriptions.push(sub1, sub2, sub3);\n    }\n}\n","export enum Keycodes {\r\n    ENTER = 13,\r\n    SPACE = 32,\r\n    ESCAPE = 27,\r\n    DELETE = 46,\r\n    ARROW_UP = 38,\r\n    ARROW_RIGHT = 39,\r\n    ARROW_DOWN = 40,\r\n    ARROW_LEFT = 37,\r\n    S = 83,\r\n    N = 78,\r\n    A = 65,\r\n    T = 84,\r\n    B = 66,\r\n    C = 67,\r\n    O = 79,\r\n    P = 80,\r\n    R = 82,\r\n    F = 70,\r\n    Y = 89,\r\n    Z = 90,\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Keycodes} from './keycodes.enum';\r\nimport {fromEvent, Subscription} from 'rxjs';\r\n\r\ninterface ParsedKeybind {\r\n    ctrl: boolean;\r\n    shift: boolean;\r\n    key: string;\r\n}\r\n\r\n// TODO: refactor so keybinds are stored for a specific \"listenOn\" element instead of globally\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class Keybinds {\r\n    private bindings = [];\r\n\r\n    public add(keybind: string, callback: (e: KeyboardEvent) => void) {\r\n        this.bindings.push({keybind: this.parseKeybindString(keybind), keybindString: keybind, callback});\r\n    }\r\n\r\n    public addWithPreventDefault(keybind: string, callback: Function) {\r\n        this.bindings.push({keybind: this.parseKeybindString(keybind), keybindString: keybind, callback, preventDefault: true});\r\n    }\r\n\r\n    public listenOn(el: HTMLElement|Document): Subscription {\r\n        return fromEvent(el, 'keydown').subscribe((e: KeyboardEvent) => {\r\n            if ( ! ['input', 'select'].includes(document.activeElement.nodeName.toLowerCase())) {\r\n                this.executeBindings(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    private executeBindings(e: KeyboardEvent) {\r\n        this.bindings.forEach(binding => {\r\n            if ( ! this.bindingMatches(binding.keybind, e)) return;\r\n            if (binding.preventDefault && e.preventDefault) e.preventDefault();\r\n            binding.callback(e);\r\n        });\r\n    }\r\n\r\n    private bindingMatches(keybind: ParsedKeybind, e: KeyboardEvent) {\r\n        return Keycodes[keybind.key.toUpperCase()] === e.keyCode && e.ctrlKey === keybind.ctrl && e.shiftKey === keybind.shift;\r\n    }\r\n\r\n    /**\r\n     * Parse keybind string into object.\r\n     */\r\n    private parseKeybindString(keybind: string): ParsedKeybind {\r\n        const parts = keybind.trim().split('+');\r\n        const parsed = {ctrl: false, shift: false, key: ''};\r\n\r\n        parts.forEach(part => {\r\n            part = part.trim().toLowerCase();\r\n\r\n            if (part === 'ctrl') {\r\n                parsed.ctrl = true;\r\n            } else if (part === 'shift') {\r\n                parsed.shift = true;\r\n            } else {\r\n                parsed.key = part;\r\n            }\r\n        });\r\n\r\n        return parsed;\r\n    }\r\n}\r\n","<files-grid-item\r\n        *ngFor=\"let entry of entries; trackBy: trackById\"\r\n        [entry]=\"entry\"\r\n        [contextMenu]=\"{type: 'entry', entry: entry}\"\r\n        [disableContextMenu]=\"disableInteractions\"\r\n        [folderDropTarget]=\"entry\"\r\n></files-grid-item>","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { DriveEntry } from '../../models/drive-entry';\n\n@Component({\n    selector: 'files-grid',\n    templateUrl: './files-grid.component.html',\n    styleUrls: ['./files-grid.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FilesGridComponent {\n    @Input() entries: DriveEntry[];\n    @Input() disableInteractions = false;\n    public trackById(index: number, entry: DriveEntry): number {\n        return entry.id;\n    }\n}\n","<table class=\"material-table\">\n    <thead>\n    <tr>\n        <th table-sort-header class=\"name-column\" trans>Name</th>\n        <th table-sort-header=\"updated_at\" class=\"last-updated-column\" trans>Last Updated</th>\n        <th table-sort-header=\"file_size\" class=\"size-column\" trans>Size</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr *ngFor=\"let file of entries; trackBy: trackById\" class=\"drive-entry\" [contextMenu]=\"{type: 'entry', entry: file}\" [disableContextMenu]=\"disableInteractions\" [attr.data-id]=\"file.id\"  [folderDropTarget]=\"file\">\n        <td data-label=\"Name\" class=\"name-column\">\n            <div class=\"file-name-container\">\n                <file-thumbnail [file]=\"file\"></file-thumbnail>\n                <div class=\"file-name\">\n                    <span class=\"entry-name\">{{file.name}}</span>\n                    <mat-icon class=\"star-icon\" svgIcon=\"star\" *ngIf=\"isStarred(file)\" [matTooltip]=\"'Starred' | trans\"></mat-icon>\n                </div>\n            </div>\n        </td>\n        <td data-label=\"Last Updated\" class=\"last-updated-column\">{{file.updated_at | formattedDate}}</td>\n        <td data-label=\"Size\" class=\"size-column\">{{file.file_size | formattedFileSize}}</td>\n    </tr>\n    </tbody>\n</table>\n","import {\n    ChangeDetectionStrategy, Component, Input, OnDestroy, OnInit\n} from '@angular/core';\nimport { DriveEntry } from '../../models/drive-entry';\nimport { Store } from '@ngxs/store';\nimport { ReloadPageEntries } from '../../../state/actions/commands';\nimport { DatatableService } from '@common/datatable/datatable.service';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n    selector: 'files-list',\n    templateUrl: './files-list.component.html',\n    styleUrls: ['./files-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [DatatableService],\n})\nexport class FilesListComponent implements OnInit, OnDestroy {\n    @Input() entries: DriveEntry[];\n    @Input() disableInteractions = false;\n\n    constructor(private store: Store, private datatable: DatatableService<DriveEntry>) {}\n\n    ngOnInit() {\n        this.datatable.init({\n            disableSort: this.disableInteractions,\n        });\n\n        this.datatable.sort$\n            .pipe(filter(v => !!Object.keys(v).length))\n            .subscribe(value => {\n                this.store.dispatch(new ReloadPageEntries(value as any));\n            });\n    }\n\n    ngOnDestroy() {\n        this.datatable.destroy();\n    }\n\n    public isStarred(entry: DriveEntry): boolean {\n        if ( ! entry.tags) return false;\n        return !!entry.tags.find(tag => tag.name === 'starred');\n    }\n\n    public trackById(index: number, entry: DriveEntry): number {\n        return entry.id;\n    }\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'no-recent-entries',\n    templateUrl: './no-recent-entries.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NoRecentEntriesComponent {\n}\n","<div class=\"no-results-message\">\r\n    <div class=\"main\" trans>No recent entries.</div>\r\n    <div class=\"secondary\" trans>You have not uploaded any files or folders yet.</div>\r\n    <mat-icon svgIcon=\"recent-custom\" class=\"icon\"></mat-icon>\r\n</div>","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'no-trashed-entries',\n    templateUrl: './no-trashed-entries.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NoTrashedEntriesComponent {\n}\n","<div class=\"no-results-message\">\r\n    <div class=\"main\" trans>Trash is empty.</div>\r\n    <div class=\"secondary\" trans>There are no files or folders in your trash currently.</div>\r\n    <mat-icon svgIcon=\"trash-custom\" class=\"icon\"></mat-icon>\r\n</div>","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'no-starred-entries',\n    templateUrl: './no-starred-entries.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NoStarredEntriesComponent {\n}\n","<div class=\"no-results-message\">\n    <div class=\"main\" trans>Nothing is starred.</div>\n    <div class=\"secondary\" trans>Add stars to files and folders that you want to easily find later.</div>\n    <mat-icon svgIcon=\"add-star-custom\" class=\"icon\"></mat-icon>\n</div>","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'no-shared-entries',\n    templateUrl: './no-shared-entries.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NoSharedEntriesComponent {\n}\n","<div class=\"no-results-message\">\r\n    <div class=\"main\" trans>Shared with me.</div>\r\n    <div class=\"secondary\" trans>Files and folders other people have shared with you.</div>\r\n    <mat-icon svgIcon=\"share-custom\" class=\"icon\"></mat-icon>\r\n</div>","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'no-search-entries',\n    templateUrl: './no-search-entries.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NoSearchEntriesComponent {\n}\n","<div class=\"no-results-message\">\n    <div class=\"main\" trans>No matches found.</div>\n    <div class=\"secondary\" trans>Try another search with different query or file type.</div>\n    <mat-icon svgIcon=\"search-custom\" class=\"icon\"></mat-icon>\n</div>","import { Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, ElementRef, AfterViewInit, Inject } from '@angular/core';\nimport { DRIVE_UPLOAD_INPUT_CONFIG } from '../../upload-input-config';\nimport { UploadInputConfig } from '@common/uploads/upload-input-config';\nimport { Store } from '@ngxs/store';\nimport { UploadFiles } from '../../state/actions/commands';\nimport { openUploadWindow } from '@common/uploads/utils/open-upload-window';\n\n@Component({\n    selector: 'upload-dropzone',\n    templateUrl: './upload-dropzone.component.html',\n    styleUrls: ['./upload-dropzone.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UploadDropzoneComponent implements AfterViewInit {\n    @ViewChild('clickTarget', { static: true }) clickTarget: ElementRef;\n\n    constructor (\n        private store: Store,\n        @Inject(DRIVE_UPLOAD_INPUT_CONFIG) private uploadConfig: UploadInputConfig,\n    ) {}\n\n    ngAfterViewInit() {\n        this.clickTarget.nativeElement.addEventListener('click', () => {\n            openUploadWindow(this.uploadConfig).then(files => {\n                this.store.dispatch(new UploadFiles(files));\n            });\n        });\n    }\n}\n","<div class=\"animation-circle\"></div>\n<div class=\"content-circle\" #clickTarget>\n    <mat-icon class=\"main-icon\" svgIcon=\"upload-custom\"></mat-icon>\n    <div class=\"text initial-text\">\n        <div class=\"primary\" trans>Drop files or folders here</div>\n        <div class=\"secondary\" trans>or click to upload.</div>\n    </div>\n</div>","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'no-folder-entries',\n    templateUrl: './no-folder-entries.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NoFolderEntriesComponent {\n}\n","<upload-dropzone></upload-dropzone>","<files-grid [entries]=\"entries$ | async\" *ngIf=\"(viewMode$ | async) === 'grid'; else filesList\"></files-grid>\r\n<ng-template #filesList>\r\n    <files-list [entries]=\"entries$ | async\"></files-list>\r\n</ng-template>\r\n\r\n<ng-container [ngSwitch]=\"activePageName$ | async\" *ngIf=\"noEntries | async\">\r\n    <no-recent-entries *ngSwitchCase=\"'recent'\"></no-recent-entries>\r\n    <no-trashed-entries *ngSwitchCase=\"'trash'\"></no-trashed-entries>\r\n    <no-starred-entries *ngSwitchCase=\"'starred'\"></no-starred-entries>\r\n    <no-shared-entries *ngSwitchCase=\"'shares'\"></no-shared-entries>\r\n    <no-search-entries *ngSwitchCase=\"'search'\"></no-search-entries>\r\n    <no-folder-entries *ngSwitchDefault></no-folder-entries>\r\n</ng-container>","import {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    HostBinding,\n    OnDestroy,\n    OnInit,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { DriveEntry } from '../../files/models/drive-entry';\nimport { Observable, Subscription } from 'rxjs';\nimport { DrivePageType } from '../../state/models/available-pages';\nimport { Keybinds } from '@common/core/keybinds/keybinds.service';\nimport {\n    DeleteSelectedEntries,\n    DeleteTrashedEntriesForever,\n    OpenConfirmDialog,\n    SelectAllEntries\n} from '../../state/actions/commands';\nimport { EntryDoubleTapped } from '../../state/actions/events';\nimport { DRIVE_PAGE_NAMES } from '../../state/models/drive-page';\n\n@Component({\n    selector: 'entries-container',\n    templateUrl: './entries-container.component.html',\n    styleUrls: ['./entries-container.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [Keybinds],\n})\nexport class EntriesContainerComponent implements OnInit, OnDestroy {\n    @HostBinding('attr.tabindex') tabindex = 0;\n    @Select(DriveState.entries) entries$: Observable<DriveEntry[]>;\n    @Select(DriveState.entriesEmpty) noEntries: Observable<boolean>;\n    @Select(DriveState.viewMode) viewMode$: Observable<'list'|'grid'>;\n    @Select(DriveState.activePageName) activePageName$: Observable<DrivePageType>;\n    private keybindSub: Subscription;\n\n    constructor(\n        private store: Store,\n        private el: ElementRef,\n        private keybinds: Keybinds,\n    ) {}\n\n    ngOnInit() {\n        this.keybindSub = this.keybinds.listenOn(this.el.nativeElement);\n        this.keybinds.addWithPreventDefault('ctrl+a', () => {\n            this.store.dispatch(new SelectAllEntries());\n        });\n        this.keybinds.addWithPreventDefault('delete', () => {\n            if (this.store.selectSnapshot(DriveState.activePageName) === DRIVE_PAGE_NAMES.TRASH) {\n                this.store.dispatch(new OpenConfirmDialog({\n                    title: 'Delete Forever',\n                    body: 'This will permanently delete selected items.',\n                    bodyBold: 'This action can not be undone.',\n                    ok: 'Delete Forever',\n                }, new DeleteTrashedEntriesForever()));\n            } else {\n                this.store.dispatch(new DeleteSelectedEntries());\n            }\n        });\n        this.keybinds.addWithPreventDefault('enter', () => {\n            this.store.dispatch(new EntryDoubleTapped(this.store.selectSnapshot(DriveState.selectedEntry)));\n        });\n    }\n\n    ngOnDestroy() {\n        this.keybindSub.unsubscribe();\n    }\n}\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const CURRENT_PREVIEW_FILE = new InjectionToken<any>('CURRENT_PREVIEW_FILE');\r\n","import { InjectionToken } from '@angular/core';\r\nimport { FileEntry } from '@common/uploads/types/file-entry';\r\n\r\nexport type PreviewUrlTransformer = (entry: FileEntry) => string;\r\n\r\nexport const PREVIEW_URL_TRANSFORMER = new InjectionToken<PreviewUrlTransformer>('PREVIEW_URL_TRANSFORMER', {\r\n    factory: () => {\r\n        return entry => entry.url;\r\n    },\r\n    providedIn: 'root',\r\n});\r\n","import { EventEmitter, HostBinding, Inject, Directive } from '@angular/core';\r\nimport { CURRENT_PREVIEW_FILE } from './current-preview-file';\r\nimport { FileEntry } from '../uploads/types/file-entry';\r\nimport { PREVIEW_URL_TRANSFORMER, PreviewUrlTransformer } from './preview-url-transformer';\r\nimport { Settings } from '../core/config/settings.service';\r\nimport { Observable } from 'rxjs';\r\nimport { AppHttpClient } from '../core/http/app-http-client.service';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\nimport { CurrentUser } from '../auth/current-user';\r\n\r\n@Directive()\r\nexport abstract class BaseFilePreview {\r\n    @HostBinding('class.file-preview-wrapper') filePreviewWrapper = true;\r\n    public download = new EventEmitter();\r\n\r\n    constructor(\r\n        @Inject(CURRENT_PREVIEW_FILE) protected file: FileEntry,\r\n        @Inject(PREVIEW_URL_TRANSFORMER) protected transformer: PreviewUrlTransformer,\r\n        protected settings: Settings,\r\n        protected http: AppHttpClient,\r\n        protected sanitizer: DomSanitizer,\r\n        protected currentUser: CurrentUser,\r\n    ) {}\r\n\r\n    public getSrc(): string {\r\n        return this.transformer(this.file);\r\n    }\r\n\r\n    public getSafeSrc(): SafeResourceUrl {\r\n        return this.sanitizer.bypassSecurityTrustResourceUrl(this.getSrc());\r\n    }\r\n\r\n    public getContents(): Observable<string> {\r\n        return this.http.get(this.getSrc(), null, {responseType: 'text'});\r\n    }\r\n}\r\n","<div class=\"panel preview-object\">\r\n    <div class=\"message\" trans>{{getMessage()}}</div>\r\n    <button mat-raised-button color=\"accent\" (click)=\"download.emit()\" *ngIf=\"download.observers.length\" trans>Download</button>\r\n</div>\r\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\r\nimport {BaseFilePreview} from '../base-file-preview';\r\n\r\n@Component({\r\n    selector: 'default-preview',\r\n    templateUrl: './default-preview.component.html',\r\n    styleUrls: ['./default-preview.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DefaultPreviewComponent extends BaseFilePreview {\r\n    @Input() message: string;\r\n\r\n    public getMessage() {\r\n        return this.message || 'No file preview available.';\r\n    }\r\n}\r\n","<default-preview *ngIf=\"fileTooLarge$ | async; else textPreview\" message=\"This file is too large to preview.\"></default-preview>\r\n<ng-template #textPreview>\r\n    <div class=\"text-wrapper preview-object\">\r\n        <pre>{{ content$ | async }}</pre>\r\n    </div>\r\n</ng-template>","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {BaseFilePreview} from '../base-file-preview';\r\n\r\nconst FIVE_MB = 5242880;\r\n\r\n@Component({\r\n    selector: 'text-preview',\r\n    templateUrl: './text-preview.component.html',\r\n    styleUrls: ['./text-preview.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TextPreviewComponent extends BaseFilePreview implements OnInit {\r\n    public content$ = new BehaviorSubject('');\r\n    public fileTooLarge$ = new BehaviorSubject(false);\r\n\r\n    ngOnInit() {\r\n        if (this.file.file_size > FIVE_MB) {\r\n            this.fileTooLarge$.next(true);\r\n        } else {\r\n            this.loadFileContents();\r\n        }\r\n    }\r\n\r\n    private loadFileContents() {\r\n        this.getContents()\r\n            .subscribe(content => {\r\n                this.content$.next(content);\r\n            });\r\n    }\r\n}\r\n","<audio #playerEl controls=\"controls\" class=\"preview-object\" [class.hidden]=\"invalidMedia\" controlsList=\"nodownload noremoteplayback\"></audio>\r\n\r\n<default-preview *ngIf=\"invalidMedia\"></default-preview>","import {ChangeDetectionStrategy, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {BaseFilePreview} from '../base-file-preview';\r\n\r\n@Component({\r\n    selector: 'audio-preview',\r\n    templateUrl: './audio-preview.component.html',\r\n    styleUrls: ['./audio-preview.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AudioPreviewComponent extends BaseFilePreview implements OnInit {\r\n    @ViewChild('playerEl', { static: true }) playerEl: ElementRef;\r\n    public invalidMedia = false;\r\n\r\n    ngOnInit() {\r\n        this.invalidMedia = !this.canPlayVideo();\r\n\r\n        if ( ! this.invalidMedia) {\r\n            const source = document.createElement('source');\r\n            source.src = this.getSrc();\r\n            source.type = this.file.mime;\r\n            this.player().appendChild(source);\r\n            this.player().play();\r\n        }\r\n    }\r\n\r\n    protected canPlayVideo(): boolean {\r\n        return !!this.player().canPlayType(this.file.mime);\r\n    }\r\n\r\n    protected player() {\r\n        return this.playerEl.nativeElement as HTMLVideoElement|HTMLAudioElement;\r\n    }\r\n}\r\n","<video #playerEl controls=\"controls\" class=\"preview-object\" [class.hidden]=\"invalidMedia\" controlsList=\"nodownload noremoteplayback\" playsinline></video>\r\n\r\n<default-preview *ngIf=\"invalidMedia\"></default-preview>\r\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\r\nimport {AudioPreviewComponent} from '../audio-preview/audio-preview.component';\r\n\r\n@Component({\r\n    selector: 'video-preview',\r\n    templateUrl: './video-preview.component.html',\r\n    styleUrls: ['./video-preview.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class VideoPreviewComponent extends AudioPreviewComponent {\r\n}\r\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\r\nimport {BaseFilePreview} from '../base-file-preview';\r\n\r\n@Component({\r\n    selector: 'image-preview',\r\n    templateUrl: './image-preview.component.html',\r\n    styleUrls: ['./image-preview.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ImagePreviewComponent extends BaseFilePreview {}\r\n","<img [src]=\"getSafeSrc()\" class=\"preview-object\">","import {ChangeDetectionStrategy, Component, HostBinding,} from '@angular/core';\r\nimport {BaseFilePreview} from '../base-file-preview';\r\n\r\n@Component({\r\n  selector: 'pdf-preview',\r\n  templateUrl: './pdf-preview.component.html',\r\n  styleUrls: ['./pdf-preview.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PdfPreviewComponent extends BaseFilePreview {\r\n    @HostBinding('class') className = 'preview-object';\r\n\r\n    public getSrc() {\r\n        return super.getSrc() + '#toolbar=0';\r\n    }\r\n}\r\n","<iframe [src]=\"getSafeSrc()\"></iframe>","<ng-container *ngIf=\"!(showDefaultPreview$ | async); else defaultPreview\">\r\n    <iframe class=\"preview-object\" #iframe></iframe>\r\n    <div class=\"pop-out-block office-block\" (click)=\"openInNewWindow()\"></div>\r\n</ng-container>\r\n<ng-template #defaultPreview>\r\n    <default-preview></default-preview>\r\n</ng-template>\r\n<loading-indicator [isVisible]=\"loading$ | async\" class=\"overlay\"></loading-indicator>\r\n","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, ViewChild } from '@angular/core';\nimport { BaseFilePreview } from '../base-file-preview';\nimport { BehaviorSubject } from 'rxjs';\nimport { GenericBackendResponse } from '@common/core/types/backend-response';\nimport { isAbsoluteUrl } from '@common/core/utils/is-absolute-url';\n\n@Component({\n    selector: 'google-docs-viewer',\n    templateUrl: './google-docs-viewer.component.html',\n    styleUrls: ['./google-docs-viewer.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GoogleDocsViewerComponent extends BaseFilePreview implements AfterViewInit {\n    @ViewChild('iframe') iframe: ElementRef<HTMLIFrameElement>;\n    public loading$ = new BehaviorSubject(true);\n    public showDefaultPreview$ = new BehaviorSubject(false);\n    private timeoutRef: any;\n\n    ngAfterViewInit() {\n        // google docs viewer only supports files up to 25MB\n        if (this.file.file_size > 25000000) {\n            return this.showDefaultPreview();\n        }\n\n        this.iframe.nativeElement.onload = () => {\n            clearTimeout(this.timeoutRef);\n            this.stopLoading();\n        };\n\n        this.getIframeSrc().then(url => {\n            this.iframe.nativeElement.src = url;\n        }).catch(() => {\n            this.showDefaultPreview();\n        });\n\n        // if preview iframe is not loaded\n        // after 5 seconds, bail and show default preview\n        this.timeoutRef = setTimeout(() => {\n            this.showDefaultPreview();\n        }, 5000);\n    }\n\n    public stopLoading() {\n        this.loading$.next(false);\n    }\n\n    public showDefaultPreview() {\n        this.stopLoading();\n        this.showDefaultPreview$.next(true);\n    }\n\n    public openInNewWindow() {\n        window.open(window.location.href, '_blank');\n    }\n\n    private getIframeSrc(): Promise<string> {\n        return new Promise((resolve, reject) => {\n            let previewUrl = this.getSrc();\n\n            // if we're not trying to preview shareable link we will need to generate\n            // preview token, otherwise google won't be able to access this file\n            if (previewUrl.indexOf('shareable_link') === -1) {\n                this.http.post<GenericBackendResponse<{preview_token: string}>>(`uploads/${this.file.id}/add-preview-token`).subscribe(response => {\n                    previewUrl += `?preview_token=${response.preview_token}`;\n                    resolve(this.getFullPreviewUrl(previewUrl));\n                }, () => reject);\n            } else {\n                resolve(this.getFullPreviewUrl(previewUrl));\n            }\n        });\n    }\n\n    private getFullPreviewUrl(previewUrl: string) {\n        // https://docs.google.com/gview?embedded=true&url=\n        previewUrl = isAbsoluteUrl(previewUrl) ? previewUrl : this.settings.getBaseUrl() + previewUrl;\n        return 'https://view.officeapps.live.com/op/embed.aspx?src=' + encodeURIComponent(previewUrl);\n    }\n}\n","import { InjectionToken, Injectable } from '@angular/core';\r\nimport { TextPreviewComponent } from './text-preview/text-preview.component';\r\nimport { VideoPreviewComponent } from './video-preview/video-preview.component';\r\nimport { ImagePreviewComponent } from './image-preview/image-preview.component';\r\nimport { PdfPreviewComponent } from './pdf-preview/pdf-preview.component';\r\nimport { AudioPreviewComponent } from './audio-preview/audio-preview.component';\r\nimport { GoogleDocsViewerComponent } from './google-docs-viewer/google-docs-viewer.component';\r\n\r\nexport const AVAILABLE_PREVIEWS = new InjectionToken<any>('AVAILABLE_PREVIEWS');\r\n\r\n@Injectable()\nexport class DefaultPreviews {\r\n    text = TextPreviewComponent;\r\n    video = VideoPreviewComponent;\r\n    audio = AudioPreviewComponent;\r\n    image = ImagePreviewComponent;\r\n    pdf = PdfPreviewComponent;\r\n    spreadsheet = GoogleDocsViewerComponent;\r\n    powerPoint = GoogleDocsViewerComponent;\r\n    word = GoogleDocsViewerComponent;\r\n}\r\n\r\n","import {Inject, Injectable, Injector} from '@angular/core';\r\nimport {FileEntry} from '../uploads/types/file-entry';\r\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\r\nimport {AVAILABLE_PREVIEWS, DefaultPreviews} from './available-previews';\r\nimport {ComponentPortal, PortalInjector} from '@angular/cdk/portal';\r\nimport {CURRENT_PREVIEW_FILE} from './current-preview-file';\r\nimport {DefaultPreviewComponent} from './default-preview/default-preview.component';\r\nimport {filter} from 'rxjs/operators';\r\nimport {PREVIEW_URL_TRANSFORMER, PreviewUrlTransformer} from './preview-url-transformer';\r\n\r\ninterface PreviewFilesMeta {\r\n    entry?: FileEntry;\r\n    pointer?: number;\r\n    total?: number;\r\n    haveNext?: boolean;\r\n    havePrevious?: boolean;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PreviewFilesService {\r\n    private files: FileEntry[] = [];\r\n    private portal = new BehaviorSubject(null);\r\n    private meta: BehaviorSubject<PreviewFilesMeta> = new BehaviorSubject({});\r\n    private previewUriTransformer: PreviewUrlTransformer|null = null;\r\n    public download = new Subject();\r\n\r\n    constructor(\r\n        @Inject(AVAILABLE_PREVIEWS) private availablePreviews: DefaultPreviews,\r\n        private injector: Injector,\r\n    ) {}\r\n\r\n    public pagination(): Observable<PreviewFilesMeta> {\r\n        return this.meta\r\n            .pipe(filter(data => data && !!data.entry));\r\n    }\r\n\r\n    public getCurrent(): FileEntry {\r\n        return this.meta.value.entry;\r\n    }\r\n\r\n    public getAllEntries() {\r\n        return this.files;\r\n    }\r\n\r\n    public getPortal(): Observable<ComponentPortal<any>> {\r\n        return this.portal.asObservable();\r\n    }\r\n\r\n    public showNext() {\r\n        if ( ! this.meta.value.haveNext) return;\r\n        this.updateMeta('next');\r\n        this.updatePortal();\r\n    }\r\n\r\n    public showPrevious() {\r\n        if ( ! this.meta.value.havePrevious) return;\r\n        this.updateMeta('previous');\r\n        this.updatePortal();\r\n    }\r\n\r\n    private updateMeta(dir?: 'next'|'previous'|number) {\r\n        let newPointer = 0;\r\n\r\n        if (typeof dir === 'string') {\r\n            const oldPointer = this.meta.value.pointer;\r\n            newPointer = dir === 'next' ? oldPointer + 1 : oldPointer - 1;\r\n        } else if (typeof dir === 'number') {\r\n            newPointer = dir;\r\n        }\r\n\r\n        this.meta.next({\r\n            pointer: newPointer,\r\n            entry: this.files[newPointer],\r\n            total: this.files.length,\r\n            haveNext: (newPointer + 1) < this.files.length,\r\n            havePrevious: (newPointer - 1) > -1,\r\n        });\r\n    }\r\n\r\n    private updatePortal() {\r\n        const current = this.getCurrent();\r\n        const comp = (current && this.availablePreviews[current.type]) || DefaultPreviewComponent;\r\n        this.portal.next(new ComponentPortal(comp, null, this.createInjector()));\r\n    }\r\n\r\n    public set(files: FileEntry[], activeFile?: number) {\r\n        if ( ! files || files.length === 0) return;\r\n        this.files = files.filter(entry => entry.type !== 'folder');\r\n        this.updateMeta(activeFile);\r\n        this.updatePortal();\r\n    }\r\n\r\n    private createInjector(): PortalInjector {\r\n        const injectionTokens = new WeakMap();\r\n\r\n        // set currently active preview file\r\n        injectionTokens.set(CURRENT_PREVIEW_FILE, this.getCurrent());\r\n\r\n        // override preview backend uri, if specified\r\n        if (this.previewUriTransformer) {\r\n            injectionTokens.set(PREVIEW_URL_TRANSFORMER, this.previewUriTransformer);\r\n        }\r\n\r\n        return new PortalInjector(this.injector, injectionTokens);\r\n    }\r\n\r\n    public destroy() {\r\n        this.meta.next({});\r\n        this.files = null;\r\n        this.portal.next(null);\r\n    }\r\n\r\n    /**\r\n     * Provide transformer function for preview file backend url.\r\n     * (for changing base uri, adding url params etc)\r\n     */\r\n    public setPreviewUriTransformer(transformer: PreviewUrlTransformer) {\r\n        this.previewUriTransformer = transformer;\r\n    }\r\n}\r\n","<mat-icon svgIcon=\"password-custom\"></mat-icon>\n<form class=\"content\" (ngSubmit)=\"submitPassword()\" ngNativeValidate>\n    <div class=\"message\" trans>The link you are trying to access is password protected.</div>\n    <div class=\"input-container\">\n        <label for=\"password\" class=\"hidden\" trans>Password</label>\n        <input type=\"password\" id=\"password\" placeholder=\"Password\" [formControl]=\"passwordControl\" trans-placeholder required>\n    </div>\n    <div class=\"button-container\">\n        <div class=\"error\" *ngIf=\"passwordError$ | async\" trans>Password does not match.</div>\n        <button type=\"submit\" mat-raised-button color=\"accent\" trans>Enter</button>\n    </div>\n</form>\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { ShareableLinksApiService } from '../../../sharing/links/shareable-links-api.service';\nimport { ShareableLink } from '../../../sharing/links/models/shareable-link';\n\n@Component({\n    selector: 'link-preview-password-panel',\n    templateUrl: './link-preview-password-panel.component.html',\n    styleUrls: ['./link-preview-password-panel.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LinkPreviewPasswordPanelComponent {\n    public passwordControl = new FormControl();\n    public passwordError$ = new BehaviorSubject(false);\n\n    @Input() link: ShareableLink;\n    @Output() passwordValid = new EventEmitter(null);\n\n    constructor(private links: ShareableLinksApiService) {}\n\n    public submitPassword() {\n        this.links.checkPassword(this.link.id, this.passwordControl.value)\n            .subscribe(response => {\n               this.handlePasswordCheck(response.matches);\n            }, () => {});\n    }\n\n    private handlePasswordCheck(matches: boolean) {\n        this.passwordError$.next(!matches);\n\n        if (matches) {\n            this.passwordValid.emit(this.passwordControl.value);\n        }\n    }\n}\n","<button mat-icon-button class=\"back-button\" (click)=\"closed.emit(true)\" *ngIf=\"showCloseButton\">\r\n    <mat-icon svgIcon=\"arrow-back\"></mat-icon>\r\n</button>\r\n<ng-container *ngIf=\"previewFiles.pagination() | async as pagination\">\r\n    <div class=\"entry-name\">\r\n        <file-icon [type]=\"pagination.entry.type\"></file-icon>\r\n        {{pagination.entry.name}}\r\n    </div>\r\n\r\n    <ng-container *ngIf=\"previewFiles.pagination() | async as pagination\">\r\n        <div class=\"navigation\">\r\n            <button mat-icon-button class=\"previous\" [disabled]=\"!pagination.havePrevious\" (click)=\"previewFiles.showPrevious()\">\r\n                <mat-icon svgIcon=\"keyboard-arrow-left\"></mat-icon>\r\n            </button>\r\n\r\n            <span class=\"meta\">{{pagination.pointer + 1}} {{'of' | trans}} {{pagination.total}}</span>\r\n\r\n            <button mat-icon-button class=\"next\" [disabled]=\"!pagination.haveNext\" (click)=\"previewFiles.showNext()\">\r\n                <mat-icon svgIcon=\"keyboard-arrow-right\"></mat-icon>\r\n            </button>\r\n        </div>\r\n    </ng-container>\r\n\r\n    <div class=\"actions\">\r\n        <button mat-icon-button (click)=\"downloadFiles()\" [disabled]=\"disableDownload\">\r\n            <mat-icon svgIcon=\"file-download\"></mat-icon>\r\n        </button>\r\n        <ng-content></ng-content>\r\n    </div>\r\n</ng-container>\r\n<a routerLink=\"/drive\" class=\"logo\" *ngIf=\"showLogo && settings.has('branding.logo_light')\">\r\n    <img *ngIf=\"showLogo && settings.get('branding.logo_light')\" [src]=\"settings.get('branding.logo_light')\">\r\n</a>\r\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core';\nimport { PreviewFilesService } from '@common/file-preview/preview-files.service';\nimport { Settings } from '@common/core/config/settings.service';\n\n@Component({\n    selector: 'file-preview-toolbar',\n    templateUrl: './file-preview-toolbar.component.html',\n    styleUrls: ['./file-preview-toolbar.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FilePreviewToolbarComponent {\n    @Input() showLogo = false;\n    @Input() disableDownload = false;\n    @Input() showCloseButton = false;\n\n    @Output() closed = new EventEmitter();\n\n    constructor(\n        public previewFiles: PreviewFilesService,\n        public settings: Settings,\n    ) {}\n\n    public downloadFiles() {\n        this.previewFiles.download.next();\n    }\n}\n","<ng-container *ngIf=\"previewFiles.getPortal() | async as portal\">\r\n    <ng-template [cdkPortalOutlet]=\"portal\" (attached)=\"listenForDownloadClick($event)\"></ng-template>\r\n</ng-container>\r\n","import {ChangeDetectionStrategy, Component, ComponentRef, Input, OnChanges, OnDestroy} from '@angular/core';\r\nimport {FileEntry} from '../../uploads/types/file-entry';\r\nimport {PreviewFilesService} from '../preview-files.service';\r\nimport {BaseFilePreview} from '../base-file-preview';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'preview-container',\r\n    templateUrl: './preview-container.component.html',\r\n    styleUrls: ['./preview-container.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PreviewContainerComponent implements OnChanges, OnDestroy {\r\n    @Input() files: FileEntry[];\r\n    @Input() activeFile: number;\r\n    @Input() disableDownload = false;\r\n    private downloadSub: Subscription;\r\n\r\n    constructor(public previewFiles: PreviewFilesService) {}\r\n\r\n    ngOnChanges(changes) {\r\n        this.previewFiles.set(this.files, this.activeFile);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.previewFiles.destroy();\r\n        if (this.downloadSub) this.downloadSub.unsubscribe();\r\n    }\r\n\r\n    public listenForDownloadClick(comp: ComponentRef<BaseFilePreview>) {\r\n        if (this.downloadSub) this.downloadSub.unsubscribe();\r\n        if ( ! this.disableDownload) {\r\n            this.downloadSub = comp.instance.download.subscribe(() => {\r\n                this.previewFiles.download.next();\r\n            });\r\n        }\r\n    }\r\n}\r\n","<file-preview-toolbar [showCloseButton]=\"true\" (closed)=\"closeOverlay()\" [disableDownload]=\"!canDownload()\">\r\n    <button mat-icon-button (click)=\"openContextMenu()\" #moreOptionsButton *ngIf=\"!data.hideMoreOptionsBtn\">\r\n        <mat-icon svgIcon=\"more-vert\"></mat-icon>\r\n    </button>\r\n</file-preview-toolbar>\r\n<preview-container [files]=\"data.entries\" [activeFile]=\"data.activeEntry\" [disableDownload]=\"!canDownload()\" #previewContainer></preview-container>\r\n","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, Inject, OnDestroy, ViewChild, } from '@angular/core';\nimport { DriveEntry } from '../../files/models/drive-entry';\nimport { OverlayPanelRef } from '@common/core/ui/overlay-panel/overlay-panel-ref';\nimport { OVERLAY_PANEL_DATA } from '@common/core/ui/overlay-panel/overlay-panel-data';\nimport { DriveContextMenuComponent } from '../../context-actions/components/drive-context-menu/drive-context-menu.component';\nimport { ContextMenu } from '@common/core/ui/context-menu/context-menu.service';\nimport { PreviewFilesService } from '@common/file-preview/preview-files.service';\nimport { DownloadEntries } from '../../state/actions/commands';\nimport { Store } from '@ngxs/store';\nimport { Subscription } from 'rxjs';\nimport { CurrentUser } from '@common/auth/current-user';\nimport { ShareableLink } from '../../sharing/links/models/shareable-link';\n\nexport interface FilePreviewOverlayData {\n    entries: DriveEntry[];\n    activeEntry?: number;\n    shareableLink?: ShareableLink;\n    password?: string;\n    hideMoreOptionsBtn?: boolean;\n}\n\n@Component({\n    selector: 'file-preview-overlay',\n    templateUrl: './file-preview-overlay.component.html',\n    styleUrls: ['./file-preview-overlay.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FilePreviewOverlayComponent implements AfterViewInit, OnDestroy {\n    @ViewChild('previewContainer', { read: ElementRef, static: true }) previewContainer: ElementRef;\n    @ViewChild('moreOptionsButton', { read: ElementRef }) optionsButton: ElementRef;\n    private downloadSub: Subscription;\n\n    constructor(\n        private store: Store,\n        private el: ElementRef,\n        private contextMenu: ContextMenu,\n        private overlayRef: OverlayPanelRef,\n        private previewFiles: PreviewFilesService,\n        private currentUser: CurrentUser,\n        @Inject(OVERLAY_PANEL_DATA) public data: FilePreviewOverlayData\n    ) {}\n\n    ngAfterViewInit() {\n        this.bindToDownload();\n        // prevent ghost click from closing preview overlay\n        // when on mobile and single tap opens preview\n        setTimeout(() => {\n            this.previewContainer.nativeElement.addEventListener('click', e => {\n                if ( ! e.target.closest('.preview-object')) {\n                    this.overlayRef.close();\n                }\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.downloadSub.unsubscribe();\n    }\n\n    public openContextMenu() {\n        const origin = this.optionsButton.nativeElement;\n        this.contextMenu.open(DriveContextMenuComponent, origin, {data: {entry: this.previewFiles.getCurrent()}});\n    }\n\n    public closeOverlay() {\n        this.overlayRef.close();\n    }\n\n    public canDownload() {\n        return this.data.entries.every(entry => {\n            if ( ! entry.users) entry.users = [];\n            const user = entry.users && entry.users.find(u => u.id === this.currentUser.get('id'));\n            const userHasDownloadPermission = user && (user.owns_entry || user.entry_permissions.download);\n            return this.data.shareableLink?.allow_download || userHasDownloadPermission;\n        });\n    }\n\n    private bindToDownload() {\n        this.downloadSub = this.previewFiles.download.subscribe(() => {\n            const entries = this.previewFiles.getCurrent();\n            this.store.dispatch(new DownloadEntries([entries], this.data.shareableLink, this.data.password));\n        });\n    }\n}\n","<material-navbar></material-navbar>\r\n\r\n<div class=\"toolbar\">\r\n    <div class=\"breadcrumb\">\r\n        <button mat-icon-button *ngIf=\"isSubFolder()\" (click)=\"openFolder()\" class=\"home-button\">\r\n            <mat-icon svgIcon=\"home\" class=\"action-icon\"></mat-icon>\r\n        </button>\r\n        <ng-container *ngFor=\"let folder of breadcrumb$ | async; last as last;\">\r\n            <div class=\"breadcrumb-item\" (click)=\"openFolder(folder)\">{{folder.name}}</div>\r\n            <mat-icon class=\"separator\" svgIcon=\"keyboard-arrow-right\" *ngIf=\"!last\"></mat-icon>\r\n        </ng-container>\r\n    </div>\r\n\r\n    <div class=\"actions\">\r\n        <entries-sort-button [formControl]=\"sortFormControl\"></entries-sort-button>\r\n\r\n        <span class=\"action-separator\"></span>\r\n\r\n        <ng-container *ngIf=\"viewMode$ | async as viewMode\">\r\n            <button mat-icon-button (click)=\"toggleViewMode()\" class=\"view-toggle-button\" [matTooltip]=\"(viewMode === 'list' ? 'Grid view' : 'List view') | trans\">\r\n                <mat-icon [svgIcon]=\"viewMode === 'list' ? 'view-list' : 'view-module'\" class=\"action-icon\"></mat-icon>\r\n            </button>\r\n        </ng-container>\r\n\r\n        <button mat-icon-button (click)=\"download()\" *ngIf=\"data.link.allow_download\" [matTooltip]=\"'Download all' | trans\">\r\n            <mat-icon svgIcon=\"file-download\" class=\"action-icon\"></mat-icon>\r\n        </button>\r\n\r\n        <ng-content></ng-content>\r\n    </div>\r\n</div>\r\n\r\n<ad-host slot=\"ads.file-preview\" class=\"folder-preview-vert-host\"></ad-host>\r\n\r\n<div class=\"files-container\" #filesContainer (click)=\"onClick($event)\">\r\n   <ng-container *ngIf=\"pagination$ | async as pagination\">\r\n       <files-grid [entries]=\"pagination.data\" [disableInteractions]=\"true\" *ngIf=\"(viewMode$ | async) === 'grid'; else filesList\"></files-grid>\r\n       <ng-template #filesList>\r\n           <files-list [entries]=\"pagination.data\" [disableInteractions]=\"true\"></files-list>\r\n       </ng-template>\r\n       <no-results-message *ngIf=\"!pagination.data.length\">\r\n           <span primary-text trans>Folder Is Empty</span>\r\n           <span secondary-text trans>No files have been uploaded to this folder yet.</span>\r\n       </no-results-message>\r\n   </ng-container>\r\n</div>\r\n\r\n<loading-indicator [isVisible]=\"loading$ | async\" class=\"overlay\"></loading-indicator>\r\n","import {\n    Component, ViewEncapsulation, ChangeDetectionStrategy, Input, ViewChild, ElementRef, OnInit, OnChanges, NgZone,\n} from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { DownloadEntries, SetViewMode } from '../../state/actions/commands';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { FilePreviewOverlayComponent } from '../file-preview-overlay/file-preview-overlay.component';\nimport { Router } from '@angular/router';\nimport { FormControl } from '@angular/forms';\nimport { GetLinkData, ShareableLinksApiService } from '../../sharing/links/shareable-links-api.service';\nimport { finalize } from 'rxjs/operators';\nimport { SortValue } from '../../entries/available-sorts';\nimport { InfiniteScroll } from '@common/core/ui/infinite-scroll/infinite.scroll';\nimport { PaginationResponse } from '@common/core/types/pagination/pagination-response';\nimport { FileEntry } from '@common/uploads/types/file-entry';\nimport { OverlayPanel } from '@common/core/ui/overlay-panel/overlay-panel.service';\nimport { DriveState } from '../../state/drive-state';\n\n@Component({\n    selector: 'folder-preview',\n    templateUrl: './folder-preview.component.html',\n    styleUrls: ['./folder-preview.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FolderPreviewComponent extends InfiniteScroll implements OnChanges, OnInit {\n    @Input() data: GetLinkData;\n    @Input() password: string;\n    @ViewChild('filesContainer', { static: true }) filesContainer: ElementRef<HTMLDivElement>;\n    @Select(DriveState.viewMode) viewMode$: Observable<'list'|'grid'>;\n\n    get folder() {\n        return this.data.link.entry;\n    }\n\n    get children() {\n        return this.pagination$.value.data;\n    }\n\n    public loading$ = new BehaviorSubject(false);\n    public breadcrumb$: BehaviorSubject<FileEntry[]> = new BehaviorSubject([]);\n    public pagination$: BehaviorSubject<PaginationResponse<FileEntry>> = new BehaviorSubject(null);\n    private allFolders = {};\n    public sortFormControl = new FormControl({\n        column: 'updated_at',\n        direction: 'desc',\n    });\n\n    constructor(\n        private store: Store,\n        private overlay: OverlayPanel,\n        private router: Router,\n        private linkApi: ShareableLinksApiService,\n        protected zone: NgZone,\n        protected el: ElementRef,\n    ) {\n        super();\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n        this.sortFormControl.valueChanges.subscribe((value: SortValue) => {\n            if (value) {\n                this.loadChildren({}, true);\n            }\n        });\n    }\n\n    ngOnChanges() {\n        this.allFolders[this.folder.id] = this.folder;\n        this.generateBreadcrumb(this.folder);\n        this.setPagination(this.data.folderChildren);\n        this.loading$.next(false);\n    }\n\n    public download() {\n        this.store.dispatch(new DownloadEntries([this.folder], this.data.link, this.password));\n    }\n\n    public toggleViewMode() {\n        const current = this.store.selectSnapshot(DriveState.viewMode);\n        this.store.dispatch(new SetViewMode(current === 'list' ? 'grid' : 'list'));\n    }\n\n    private openPreviewOverlay(entry: FileEntry) {\n        const entries = this.children.filter(ent => ent.type !== 'folder'),\n            activeEntry = entries.findIndex(e => e.id === entry.id);\n\n        this.overlay.open(FilePreviewOverlayComponent, {\n            position: 'center',\n            origin: 'global',\n            panelClass: 'file-preview-overlay-container',\n            data: {\n                entries: entries.slice(),\n                activeEntry,\n                shareableLink: this.data.link,\n                password: this.password,\n                hideMoreOptionsBtn: true,\n            }\n        });\n    }\n\n    private getEntry(e: MouseEvent): FileEntry {\n        const node = (e.target as HTMLElement).closest('.drive-entry') as HTMLElement;\n        if (node) {\n            return this.children.find(entry => entry.id === +node.dataset.id);\n        }\n    }\n\n    public onClick(e: MouseEvent) {\n        const entry = this.getEntry(e);\n        if ( ! entry) return;\n\n        if (entry.type === 'folder') {\n            this.openFolder(entry);\n        } else {\n            this.openPreviewOverlay(entry);\n        }\n    }\n\n    public isSubFolder() {\n        return this.router.url.indexOf(':') > -1;\n    }\n\n    public openFolder(folder?: FileEntry) {\n        if (folder && this.folder.id === folder.id) return;\n        this.loading$.next(true);\n        this.router.navigate(['/drive/s', this.makeLinkHash(folder)]).then(() => {\n            // reset sort to default, as there's no good way to\n            // pass current sort to parent link preview component\n            this.sortFormControl.reset();\n        });\n    }\n\n    private generateBreadcrumb(folder: FileEntry) {\n        this.breadcrumb$.next(folder.path.split('/').map(folderId => {\n            return this.allFolders[+folderId];\n        }).filter(subFolder => !!subFolder));\n    }\n\n    private loadChildren(params: {page?: number}, replaceChildren = false) {\n        this.loading$.next(true);\n        const order = `${this.sortFormControl.value.column}:${this.sortFormControl.value.direction}`;\n        const page = params.page || this.pagination$.value.current_page;\n        this.linkApi.findByHash(this.makeLinkHash(this.folder), {page, order, withEntries: true})\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                const oldChildren = this.children;\n                const pagination = response.folderChildren;\n                if ( ! replaceChildren) {\n                    pagination.data = [...oldChildren, ...pagination.data];\n                }\n                this.setPagination(pagination);\n            });\n    }\n\n    private makeLinkHash(folder?: FileEntry) {\n        let hash = this.data.link.hash;\n        if (folder) hash += ':' + folder.hash;\n        return hash;\n    }\n\n    private setPagination(pagination: PaginationResponse<FileEntry>) {\n        // add shareable link hash to all entries url to avoid permission errors\n        pagination.data = pagination.data.map(entry => {\n            entry.url += `?shareable_link=${this.data.link.id}`;\n            if (this.password) {\n                entry.url += `&password=${this.password}`;\n            }\n            return entry;\n        });\n        this.pagination$.next(pagination);\n    }\n\n    protected loadMoreItems() {\n        const page = this.pagination$.value.current_page + 1;\n        this.loadChildren({page}, false);\n    }\n\n    protected canLoadMore() {\n        return this.pagination$.value.current_page < this.pagination$.value.last_page;\n    }\n\n    protected isLoading() {\n        return this.loading$.value;\n    }\n}\n","<ng-container *ngIf=\"data$ | async as data\">\n    <link-preview-password-panel *ngIf=\"passwordPanelVisible$ | async; else filePreview\" [link]=\"data.link\" (passwordValid)=\"setValidPassword($event)\"></link-preview-password-panel>\n\n    <ng-template #filePreview>\n        <ng-container *ngIf=\"data.link.entry.type === 'folder'\">\n            <folder-preview [data]=\"data\" [password]=\"this.password\">\n                <ng-container *ngIf=\"!(entryAlreadyImported$ | async) && currentUser.isLoggedIn()\">\n                    <span class=\"action-separator\"></span>\n                    <button\n                            mat-flat-button\n                            color=\"accent\"\n                            (click)=\"import()\"\n                            trans\n                    >Import</button>\n                </ng-container>\n            </folder-preview>\n        </ng-container>\n\n        <ng-container *ngIf=\"data.link.entry.type !== 'folder'\">\n            <file-preview-toolbar [showLogo]=\"true\" [disableDownload]=\"!data.link.allow_download\">\n                <a mat-flat-button color=\"accent\" routerLink=\"/login\" *ngIf=\"!currentUser.isLoggedIn()\" trans>Sign In</a>\n                <button\n                        mat-flat-button\n                        color=\"accent\"\n                        (click)=\"import()\"\n                        *ngIf=\"!(entryAlreadyImported$ | async) && currentUser.isLoggedIn()\"\n                        trans\n                >Import</button>\n            </file-preview-toolbar>\n            <ad-host slot=\"ads.file-preview\" class=\"file-preview-vert-host\"></ad-host>\n            <preview-container [files]=\"[data.link.entry]\" [class.has-rek]=\"settings.has('ads.file-preview')\"></preview-container>\n        </ng-container>\n    </ng-template>\n</ng-container>\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, OnDestroy, ElementRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { GetLinkData, ShareableLinksApiService } from '../../sharing/links/shareable-links-api.service';\nimport { BehaviorSubject, fromEvent, Observable, Subscription } from 'rxjs';\nimport { PreviewFilesService } from '@common/file-preview/preview-files.service';\nimport { Settings } from '@common/core/config/settings.service';\nimport { CurrentUser } from '@common/auth/current-user';\nimport { filter, map } from 'rxjs/operators';\nimport { Toast } from '@common/core/ui/toast.service';\nimport { Store } from '@ngxs/store';\nimport { DownloadEntries, SetViewMode } from '../../state/actions/commands';\nimport { ShareableLink } from '../../sharing/links/models/shareable-link';\nimport { VIEW_MODE_KEY } from '../../state/models/drive-state-model';\nimport { LocalStorage } from '@common/core/services/local-storage.service';\n\n@Component({\n    selector: 'link-preview-container',\n    templateUrl: './link-preview-container.component.html',\n    styleUrls: ['./link-preview-container.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        PreviewFilesService,\n    ]\n})\nexport class LinkPreviewContainerComponent implements OnInit, OnDestroy {\n    public data$: BehaviorSubject<GetLinkData> = new BehaviorSubject(null);\n    public passwordPanelVisible$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n    public password: string;\n    private downloadSub: Subscription;\n\n    /**\n     * Check if current user owns this entry or\n     * already has it imported into their drive.\n     */\n    public get entryAlreadyImported$(): Observable<boolean> {\n        const userId = this.currentUser.get('id');\n        return this.data$.pipe(\n            map(data => data.link),\n            filter(link => !!link && !!link.entry && !!link.entry.users),\n            map(link => link.entry),\n            map(entry => !!entry.users.find(user => user.id === userId))\n        );\n    }\n\n    constructor(\n        private store: Store,\n        private route: ActivatedRoute,\n        private links: ShareableLinksApiService,\n        public previewFiles: PreviewFilesService,\n        public settings: Settings,\n        public currentUser: CurrentUser,\n        private router: Router,\n        private toast: Toast,\n        private el: ElementRef<HTMLElement>,\n        private localStorage: LocalStorage,\n    ) {}\n\n    ngOnInit() {\n        this.bindToDownload();\n        this.disableContextMenu();\n        this.setViewMode();\n        this.route.params.subscribe(params => {\n            this.links.findByHash(params.hash, {withEntries: true}).subscribe(response => {\n                const linkChanged = response.link.id !== (this.data$.value && this.data$.value.link.id);\n                this.data$.next(response);\n                this.setBackgroundClass(response.link);\n\n                // prevent asking password for nested folders, if user already entered password\n                if (response.link.password && (linkChanged || !this.password)) {\n                    this.togglePasswordPanel(true);\n                } else {\n                    this.togglePasswordPanel(false);\n                    this.showPreview();\n                }\n            }, () => {\n                this.router.navigate(['/404']);\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.downloadSub.unsubscribe();\n    }\n\n    public import() {\n        this.links.importEntry(this.data$.value.link.id, this.password)\n            .subscribe(response => {\n                const link = this.data$.value.link;\n                link.entry.users = response.users;\n                this.data$.next({...this.data$.value, link});\n                this.toast.open({\n                    message: `\":name\" imported into your drive.`,\n                    replacements: {name: link.entry.name},\n                });\n            });\n    }\n\n    public togglePasswordPanel(value: boolean) {\n        this.passwordPanelVisible$.next(value);\n    }\n\n    private bindToDownload() {\n        this.downloadSub = this.previewFiles.download.subscribe(() => {\n            const link = this.data$.value.link;\n            this.store.dispatch(new DownloadEntries([link.entry], link, this.password));\n        });\n    }\n\n    /**\n     * Show preview for shareable link files.\n     */\n    private showPreview() {\n        const data = this.data$.value;\n        data.link.entry.url += `?shareable_link=${data.link.id}`;\n        if (this.password) {\n            data.link.entry.url += `&password=${this.password}`;\n        }\n        this.data$.next({...data});\n    }\n\n    public setValidPassword(password: string) {\n        this.password = password;\n        this.showPreview();\n        this.togglePasswordPanel(false);\n    }\n\n    private setBackgroundClass(link: ShareableLink) {\n        const className = link.entry.type === 'folder' ? 'folder-link' : 'file-link';\n        this.el.nativeElement.classList.add(className);\n    }\n\n    private disableContextMenu() {\n        fromEvent(this.el.nativeElement, 'contextmenu')\n            .subscribe(e => {\n                e.preventDefault();\n            });\n    }\n\n    private setViewMode() {\n        this.store.dispatch(new SetViewMode(\n            this.localStorage.get(VIEW_MODE_KEY, this.settings.get('drive.default_view', 'grid')))\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DriveComponent } from './drive.component';\nimport { EntriesContainerComponent } from './entries/entries-container/entries-container.component';\nimport { LinkPreviewContainerComponent } from './preview/link-preview-container/link-preview-container.component';\nimport { AuthGuard } from '@common/guards/auth-guard.service';\nimport { CheckPermissionsGuard } from '../../common/guards/check-permissions-guard.service';\n\nconst dashboardRoutes: Routes = [\n    // shareable links can be accessed by guests\n    {\n        path: 's/:hash',\n        component: LinkPreviewContainerComponent,\n    },\n\n    // main drive routes can only be accessed by logged in users\n    {\n        path: '',\n        component: DriveComponent,\n        canActivate: [AuthGuard, CheckPermissionsGuard],\n        children: [\n            { path: '', component: EntriesContainerComponent},\n            { path: 'shares', component: EntriesContainerComponent},\n            { path: 'search', component: EntriesContainerComponent},\n            { path: 'recent', component: EntriesContainerComponent},\n            { path: 'starred', component: EntriesContainerComponent},\n            { path: 'trash', component: EntriesContainerComponent},\n            { path: 'folders/:hash', component: EntriesContainerComponent},\n            {\n                path: 'workspaces',\n                loadChildren: () => import('src/app/drive/workspace-wrapper.module').then(m => m.WorkspaceWrapperModule)\n            },\n        ]\n    },\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule.forChild(dashboardRoutes)\n    ],\n    exports: [\n        RouterModule\n    ],\n})\nexport class DriveRoutingModule {}\n","import { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { _getShadowRoot, Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base reference size of the spinner.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/common';\n\nfunction MatProgressSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r0._spinnerAnimationLabel)(\"stroke-dashoffset\", ctx_r0._getStrokeDashOffset(), \"px\")(\"stroke-dasharray\", ctx_r0._getStrokeCircumference(), \"px\")(\"stroke-width\", ctx_r0._getCircleStrokeWidth(), \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r0._getCircleRadius());\n} }\nfunction MatProgressSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r1._getStrokeDashOffset(), \"px\")(\"stroke-dasharray\", ctx_r1._getStrokeCircumference(), \"px\")(\"stroke-width\", ctx_r1._getCircleStrokeWidth(), \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r1._getCircleRadius());\n} }\nfunction MatSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r0._spinnerAnimationLabel)(\"stroke-dashoffset\", ctx_r0._getStrokeDashOffset(), \"px\")(\"stroke-dasharray\", ctx_r0._getStrokeCircumference(), \"px\")(\"stroke-width\", ctx_r0._getCircleStrokeWidth(), \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r0._getCircleRadius());\n} }\nfunction MatSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r1._getStrokeDashOffset(), \"px\")(\"stroke-dasharray\", ctx_r1._getStrokeCircumference(), \"px\")(\"stroke-width\", ctx_r1._getCircleStrokeWidth(), \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r1._getCircleRadius());\n} }\nconst _c0 = \".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:currentColor}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\";\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n * @docs-private\n */\nconst BASE_STROKE_WIDTH = 10;\n// Boilerplate for applying mixins to MatProgressSpinner.\n/** @docs-private */\nclass MatProgressSpinnerBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatProgressSpinnerMixinBase = mixinColor(MatProgressSpinnerBase, 'primary');\n/** Injection token to be used to override the default options for `mat-progress-spinner`. */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n// .0001 percentage difference is necessary in order to avoid unwanted animation frames\n// for example because the animation duration is 4 seconds, .1% accounts to 4ms\n// which are enough to see the flicker described in\n// https://github.com/angular/components/issues/8984\nconst INDETERMINATE_ANIMATION_TEMPLATE = `\n @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\n    0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\n    12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\n    12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\n    25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\n\n    25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\n    37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\n    37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\n    50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\n\n    50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\n    62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\n    62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\n    75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\n\n    75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\n    87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\n    87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\n    100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\n  }\n`;\n/**\n * `<mat-progress-spinner>` component.\n */\nclass MatProgressSpinner extends _MatProgressSpinnerMixinBase {\n    constructor(_elementRef, platform, _document, animationMode, defaults) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._document = _document;\n        this._diameter = BASE_SIZE;\n        this._value = 0;\n        this._fallbackAnimation = false;\n        /** Mode of the progress circle */\n        this.mode = 'determinate';\n        const trackedDiameters = MatProgressSpinner._diameters;\n        this._spinnerAnimationLabel = this._getSpinnerAnimationLabel();\n        // The base size is already inserted via the component's structural styles. We still\n        // need to track it so we don't end up adding the same styles again.\n        if (!trackedDiameters.has(_document.head)) {\n            trackedDiameters.set(_document.head, new Set([BASE_SIZE]));\n        }\n        this._fallbackAnimation = platform.EDGE || platform.TRIDENT;\n        this._noopAnimations = animationMode === 'NoopAnimations' &&\n            (!!defaults && !defaults._forceAnimations);\n        if (defaults) {\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n    }\n    /** The diameter of the progress spinner (will set width and height of svg). */\n    get diameter() { return this._diameter; }\n    set diameter(size) {\n        this._diameter = coerceNumberProperty(size);\n        this._spinnerAnimationLabel = this._getSpinnerAnimationLabel();\n        // If this is set before `ngOnInit`, the style root may not have been resolved yet.\n        if (!this._fallbackAnimation && this._styleRoot) {\n            this._attachStyleNode();\n        }\n    }\n    /** Stroke width of the progress spinner. */\n    get strokeWidth() {\n        return this._strokeWidth || this.diameter / 10;\n    }\n    set strokeWidth(value) {\n        this._strokeWidth = coerceNumberProperty(value);\n    }\n    /** Value of the progress circle. */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    set value(newValue) {\n        this._value = Math.max(0, Math.min(100, coerceNumberProperty(newValue)));\n    }\n    ngOnInit() {\n        const element = this._elementRef.nativeElement;\n        // Note that we need to look up the root node in ngOnInit, rather than the constructor, because\n        // Angular seems to create the element outside the shadow root and then moves it inside, if the\n        // node is inside an `ngIf` and a ShadowDom-encapsulated component.\n        this._styleRoot = _getShadowRoot(element) || this._document.head;\n        this._attachStyleNode();\n        // On IE and Edge, we can't animate the `stroke-dashoffset`\n        // reliably so we fall back to a non-spec animation.\n        const animationClass = `mat-progress-spinner-indeterminate${this._fallbackAnimation ? '-fallback' : ''}-animation`;\n        element.classList.add(animationClass);\n    }\n    /** The radius of the spinner, adjusted for stroke width. */\n    _getCircleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /** The view box of the spinner's svg element. */\n    _getViewBox() {\n        const viewBox = this._getCircleRadius() * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /** The stroke circumference of the svg circle. */\n    _getStrokeCircumference() {\n        return 2 * Math.PI * this._getCircleRadius();\n    }\n    /** The dash offset of the svg circle. */\n    _getStrokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return this._getStrokeCircumference() * (100 - this._value) / 100;\n        }\n        // In fallback mode set the circle to 80% and rotate it with CSS.\n        if (this._fallbackAnimation && this.mode === 'indeterminate') {\n            return this._getStrokeCircumference() * 0.2;\n        }\n        return null;\n    }\n    /** Stroke width of the circle in percent. */\n    _getCircleStrokeWidth() {\n        return this.strokeWidth / this.diameter * 100;\n    }\n    /** Dynamically generates a style tag containing the correct animation for this diameter. */\n    _attachStyleNode() {\n        const styleRoot = this._styleRoot;\n        const currentDiameter = this._diameter;\n        const diameters = MatProgressSpinner._diameters;\n        let diametersForElement = diameters.get(styleRoot);\n        if (!diametersForElement || !diametersForElement.has(currentDiameter)) {\n            const styleTag = this._document.createElement('style');\n            styleTag.setAttribute('mat-spinner-animation', this._spinnerAnimationLabel);\n            styleTag.textContent = this._getAnimationText();\n            styleRoot.appendChild(styleTag);\n            if (!diametersForElement) {\n                diametersForElement = new Set();\n                diameters.set(styleRoot, diametersForElement);\n            }\n            diametersForElement.add(currentDiameter);\n        }\n    }\n    /** Generates animation styles adjusted for the spinner's diameter. */\n    _getAnimationText() {\n        const strokeCircumference = this._getStrokeCircumference();\n        return INDETERMINATE_ANIMATION_TEMPLATE\n            // Animation should begin at 5% and end at 80%\n            .replace(/START_VALUE/g, `${0.95 * strokeCircumference}`)\n            .replace(/END_VALUE/g, `${0.2 * strokeCircumference}`)\n            .replace(/DIAMETER/g, `${this._spinnerAnimationLabel}`);\n    }\n    /** Returns the circle diameter formatted for use with the animation-name CSS property. */\n    _getSpinnerAnimationLabel() {\n        // The string of a float point number will include a period ‘.’ character,\n        // which is not valid for a CSS animation-name.\n        return this.diameter.toString().replace('.', '_');\n    }\n}\nMatProgressSpinner.ɵfac = function MatProgressSpinner_Factory(t) { return new (t || MatProgressSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatProgressSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatProgressSpinner, selectors: [[\"mat-progress-spinner\"]], hostAttrs: [\"role\", \"progressbar\", 1, \"mat-progress-spinner\"], hostVars: 10, hostBindings: function MatProgressSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuemin\", ctx.mode === \"determinate\" ? 0 : null)(\"aria-valuemax\", ctx.mode === \"determinate\" ? 100 : null)(\"aria-valuenow\", ctx.mode === \"determinate\" ? ctx.value : null)(\"mode\", ctx.mode);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\", mode: \"mode\", diameter: \"diameter\", strokeWidth: \"strokeWidth\", value: \"value\" }, exportAs: [\"matProgressSpinner\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatProgressSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatProgressSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatProgressSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._getViewBox());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [_c0], encapsulation: 2, changeDetection: 0 });\n/**\n * Tracks diameters of existing instances to de-dupe generated styles (default d = 100).\n * We need to keep track of which elements the diameters were attached to, because for\n * elements in the Shadow DOM the style tags are attached to the shadow root, rather\n * than the document head.\n */\nMatProgressSpinner._diameters = new WeakMap();\nMatProgressSpinner.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n];\nMatProgressSpinner.propDecorators = {\n    diameter: [{ type: Input }],\n    strokeWidth: [{ type: Input }],\n    mode: [{ type: Input }],\n    value: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-progress-spinner',\n                exportAs: 'matProgressSpinner',\n                host: {\n                    'role': 'progressbar',\n                    'class': 'mat-progress-spinner',\n                    '[class._mat-animation-noopable]': `_noopAnimations`,\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter',\n                    '[attr.aria-valuemin]': 'mode === \"determinate\" ? 0 : null',\n                    '[attr.aria-valuemax]': 'mode === \"determinate\" ? 100 : null',\n                    '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                    '[attr.mode]': 'mode'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_getViewBox()\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + _spinnerAnimationLabel\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:currentColor}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, { mode: [{\n            type: Input\n        }], diameter: [{\n            type: Input\n        }], strokeWidth: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\n/**\n * `<mat-spinner>` component.\n *\n * This is a component definition to be used as a convenience reference to create an\n * indeterminate `<mat-progress-spinner>` instance.\n */\nclass MatSpinner extends MatProgressSpinner {\n    constructor(elementRef, platform, document, animationMode, defaults) {\n        super(elementRef, platform, document, animationMode, defaults);\n        this.mode = 'indeterminate';\n    }\n}\nMatSpinner.ɵfac = function MatSpinner_Factory(t) { return new (t || MatSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSpinner, selectors: [[\"mat-spinner\"]], hostAttrs: [\"role\", \"progressbar\", \"mode\", \"indeterminate\", 1, \"mat-spinner\", \"mat-progress-spinner\"], hostVars: 6, hostBindings: function MatSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._getViewBox());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [_c0], encapsulation: 2, changeDetection: 0 });\nMatSpinner.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-spinner',\n                host: {\n                    'role': 'progressbar',\n                    'mode': 'indeterminate',\n                    'class': 'mat-spinner mat-progress-spinner',\n                    '[class._mat-animation-noopable]': `_noopAnimations`,\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_getViewBox()\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + _spinnerAnimationLabel\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:currentColor}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatProgressSpinnerModule {\n}\nMatProgressSpinnerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatProgressSpinnerModule });\nMatProgressSpinnerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatProgressSpinnerModule_Factory(t) { return new (t || MatProgressSpinnerModule)(); }, imports: [[MatCommonModule, CommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatProgressSpinnerModule, { declarations: function () { return [MatProgressSpinner, MatSpinner]; }, imports: function () { return [MatCommonModule, CommonModule]; }, exports: function () { return [MatProgressSpinner, MatSpinner, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinnerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, CommonModule],\n                exports: [\n                    MatProgressSpinner,\n                    MatSpinner,\n                    MatCommonModule\n                ],\n                declarations: [\n                    MatProgressSpinner,\n                    MatSpinner\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n\n//# sourceMappingURL=progress-spinner.js.map","import { DriveContextMenuComponent } from './components/drive-context-menu/drive-context-menu.component';\r\n\r\nexport const DRIVE_CONTEXT_MENUS = {\r\n    entry: DriveContextMenuComponent,\r\n};\r\n","<file-icon [mime]=\"upload.uploadedFile.mime\"></file-icon>\n<div class=\"content\">\n    <div class=\"meta\">\n        <div class=\"name\" [matTooltip]=\"upload.uploadedFile.name\">{{upload.uploadedFile.name}}</div>\n        <div class=\"time-left\" *ngIf=\"progress.percentage && progress.percentage < 100 && !upload.error$.value\">\n            {{progress.eta}}\n            <span trans>left</span>\n        </div>\n        <div class=\"actions\">\n            <mat-icon\n                    svgIcon=\"error\"\n                    *ngIf=\"upload.error$ | async as error; else noError\"\n                    class=\"error-icon\"\n                    [matTooltip]=\"error | trans\"\n                    matTooltipPosition=\"left\"\n            ></mat-icon>\n            <ng-template #noError>\n                <mat-icon svgIcon=\"check-circle\" *ngIf=\"upload.completed\" class=\"completed-icon\"></mat-icon>\n                <span class=\"cancel-button\" *ngIf=\"!upload.completed\" (click)=\"cancelUpload(upload)\" trans>Cancel</span>\n            </ng-template>\n        </div>\n    </div>\n    <mat-progress-bar mode=\"determinate\" [value]=\"progress.percentage\" color=\"accent\"></mat-progress-bar>\n</div>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { UploadQueueItem, UploadQueueItemProgress } from '@common/uploads/upload-queue/upload-queue-item';\nimport { UploadQueueService } from '@common/uploads/upload-queue/upload-queue.service';\nimport { Store } from '@ngxs/store';\nimport { CloseUploadsPanel } from '../../../state/actions/commands';\nimport { throttleTime } from 'rxjs/operators';\nimport { animationFrameScheduler, Subscription } from 'rxjs';\n\n@Component({\n    selector: 'uploads-panel-item',\n    templateUrl: './uploads-panel-item.component.html',\n    styleUrls: ['./uploads-panel-item.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UploadsPanelItemComponent implements OnInit, OnDestroy {\n    @Input() upload: UploadQueueItem;\n    public progress: UploadQueueItemProgress = {};\n    private subscription: Subscription;\n\n    constructor(\n        private uploadQueue: UploadQueueService,\n        private store: Store,\n        private cd: ChangeDetectorRef,\n    ) {}\n\n    ngOnInit() {\n        this.subscription = this.upload.progress$.pipe(\n            // material progress bar animation lasts 250ms\n            throttleTime(260, animationFrameScheduler, {leading: true, trailing: true}),\n        ).subscribe(progress => {\n            this.progress = progress;\n            this.cd.detectChanges();\n        });\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n\n    public cancelUpload(upload: UploadQueueItem) {\n        this.uploadQueue.remove(upload.id);\n        if (this.uploadQueue.isEmpty()) {\n            this.store.dispatch(new CloseUploadsPanel());\n        }\n    }\n}\n","<div class=\"header\">\n    <div class=\"info\">\n        <ng-container *ngIf=\"activeUploads.count$ | async as count\">\n            <ng-container *ngIf=\"count.pending > 0\">\n                {{ 'Uploading' | trans }} {{count.pending}} {{(count.pending > 1 ? 'Items' : 'Item') | trans}}\n            </ng-container>\n            <ng-container *ngIf=\"count.pending === 0\">\n                {{count.completed}} {{'items uploaded' | trans}}\n            </ng-container>\n        </ng-container>\n    </div>\n    <div class=\"actions\">\n        <button mat-icon-button (click)=\"toggleMinimized()\">\n            <mat-icon svgIcon=\"keyboard-arrow-up\" *ngIf=\"minimized$ | async; else notMinimized\" class=\"minimize-icon\"></mat-icon>\n            <ng-template #notMinimized>\n                <mat-icon svgIcon=\"keyboard-arrow-down\" class=\"minimize-icon\"></mat-icon>\n            </ng-template>\n        </button>\n        <button mat-icon-button (click)=\"close()\">\n            <mat-icon svgIcon=\"close\"></mat-icon>\n        </button>\n    </div>\n</div>\n\n<div class=\"uploads-list\" [class.hidden]=\"minimized$ | async\">\n    <uploads-panel-item *ngFor=\"let upload of activeUploads.uploads$ | async; trackBy: trackById\" [upload]=\"upload\"></uploads-panel-item>\n</div>\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { UploadQueueService } from '@common/uploads/upload-queue/upload-queue.service';\nimport { UploadQueueItem } from '@common/uploads/upload-queue/upload-queue-item';\nimport { Store } from '@ngxs/store';\nimport { CloseUploadsPanel } from '../../state/actions/commands';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n    selector: 'uploads-panel',\n    templateUrl: './uploads-panel.component.html',\n    styleUrls: ['./uploads-panel.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UploadsPanelComponent implements OnDestroy {\n    public minimized$ = new BehaviorSubject(false);\n\n    constructor(\n        private store: Store,\n        public activeUploads: UploadQueueService,\n    ) {\n    }\n\n    ngOnDestroy() {\n        this.activeUploads.reset();\n    }\n\n    public toggleMinimized() {\n        this.minimized$.next(!this.minimized$.value);\n    }\n\n    public close() {\n        this.store.dispatch(new CloseUploadsPanel());\n    }\n\n    public trackById(index: number, upload: UploadQueueItem) {\n        return upload.id;\n    }\n}\n","import { Actions, ofActionSuccessful, Store } from '@ngxs/store';\r\nimport { OpenFilePreview } from '../actions/commands';\r\nimport { OverlayPanel } from '@common/core/ui/overlay-panel/overlay-panel.service';\r\nimport { FilePreviewOverlayComponent } from '../../preview/file-preview-overlay/file-preview-overlay.component';\r\nimport { DriveState } from '../drive-state';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class OverlayHandler {\r\n    constructor(\r\n        private store: Store,\r\n        private actions$: Actions,\r\n        private overlay: OverlayPanel,\r\n    ) {\r\n        this.actions$.pipe(ofActionSuccessful(OpenFilePreview))\r\n            .subscribe((action: OpenFilePreview) => {\r\n                const entries = this.store.selectSnapshot(DriveState.entries).filter(e => e.type !== 'folder');\r\n                const selectedEntry = this.store.selectSnapshot(DriveState.selectedEntry);\r\n                const activeEntry = entries.findIndex(e => e.id === selectedEntry?.id);\r\n                this.overlay.open(FilePreviewOverlayComponent, {\r\n                    position: 'center',\r\n                    origin: 'global',\r\n                    panelClass: 'file-preview-overlay-container',\r\n                    data: {entries: entries.slice(), activeEntry: activeEntry === -1 ? 0 : activeEntry},\r\n                });\r\n            });\r\n    }\r\n}\r\n","import { Actions, ofActionSuccessful, Store } from '@ngxs/store';\r\nimport { DownloadEntries } from '../actions/commands';\r\nimport { DriveState } from '../drive-state';\r\nimport { downloadFileFromUrl } from '@common/uploads/utils/download-file-from-url';\r\nimport { Settings } from '@common/core/config/settings.service';\r\nimport { FileEntry } from '@common/uploads/types/file-entry';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DownloadHandler {\r\n    constructor(\r\n        private actions$: Actions,\r\n        private store: Store,\r\n        private settings: Settings,\r\n    ) {\r\n        this.actions$.pipe(ofActionSuccessful(DownloadEntries))\r\n            .subscribe((action: DownloadEntries) => {\r\n                downloadFileFromUrl(this.getDownloadUrl(action));\r\n            });\r\n    }\r\n\r\n    private getDownloadUrl(action: DownloadEntries): string {\r\n        const hashes = this.getEntryHashes(action.entries);\r\n        let base = `${this.settings.getBaseUrl()}secure/uploads/download?hashes=${hashes}`;\r\n        if (action.link) base += `&shareable_link=${action.link.id}`;\r\n        if (action.password) base += `&password=${action.password}`;\r\n        return base;\r\n    }\r\n\r\n    /**\r\n     * Get hashes string for specified entries or for currently selected entries.\r\n     */\r\n    private getEntryHashes(entries?: FileEntry[]): string {\r\n        if ( ! entries) {\r\n            entries = this.store.selectSnapshot(DriveState.selectedEntries);\r\n        }\r\n\r\n        return entries.map(entry => entry.hash).join(',');\r\n    }\r\n}\r\n","/**\r\n * Download file from specified url.\r\n */\r\nexport function downloadFileFromUrl(url: string, name?: string) {\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    if (name) link.download = name;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n}\r\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\n\n@Component({\n    selector: 'loading-toast',\n    templateUrl: './loading-toast.component.html',\n    styleUrls: ['./loading-toast.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LoadingToastComponent {\n    constructor(@Inject(MAT_SNACK_BAR_DATA) public data: {message: string}) {}\n}\n","<mat-spinner [diameter]=\"30\"></mat-spinner>\r\n<span trans>{{ data.message }}</span>","import { Actions, ofAction, ofActionSuccessful, Store } from '@ngxs/store';\r\nimport { AddStar, HideLoadingToast, RemoveStar, RestoreTrashedEntries, ShowLoadingToast } from '../actions/commands';\r\nimport {\r\n    EntryRenamed,\r\n    FileDeleteSuccess,\r\n    MoveEntriesFailed,\r\n    MoveEntriesSuccess,\r\n    NewFolderCreated, NotEnoughSpaceError,\r\n    TrashedEntriesDeleteSuccess,\r\n    TrashedEntriesRestoreSuccess\r\n} from '../actions/events';\r\nimport { Toast } from '@common/core/ui/toast.service';\r\nimport { LinkCopySuccess } from '../../sharing/links/share-link.state';\r\nimport { Router } from '@angular/router';\r\nimport { LoadingToastComponent } from '../../messages/loading-toast/loading-toast.component';\r\nimport { MatSnackBarRef } from '@angular/material/snack-bar';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ToastHandler {\r\n    constructor(\r\n        private actions$: Actions,\r\n        private toast: Toast,\r\n        private store: Store,\r\n        private router: Router,\r\n    ) {\r\n        this.entriesDeleted();\r\n        this.entriesStarred();\r\n        this.entriesUnstarred();\r\n        this.entriesMoveFailed();\r\n        this.folderCreated();\r\n        this.entriesMoved();\r\n        this.entriesDeletedForever();\r\n        this.entriesRestoredFromTrash();\r\n        this.entryRenamed();\r\n        this.linkCopiedToClipboard();\r\n        this.notEnoughSpace();\r\n        this.loadingToast();\r\n    }\r\n\r\n    private entriesDeleted() {\r\n        this.actions$\r\n            .pipe(ofAction(FileDeleteSuccess))\r\n            .subscribe((action: FileDeleteSuccess) => {\r\n                const msg = {message: `Deleted :count items.`, replacements: {count: action.deletedFiles.length}};\r\n                this.toast.open(msg, {action: 'UNDO'})\r\n                    .onAction().subscribe(() => {\r\n                        this.store.dispatch(new RestoreTrashedEntries(action.deletedFiles));\r\n                    });\r\n            });\r\n    }\r\n\r\n    private entriesStarred() {\r\n        this.actions$\r\n            .pipe(ofActionSuccessful(AddStar))\r\n            .subscribe((action: AddStar) => {\r\n                this.toast.open(`Star added.`, {action: 'UNDO'}).onAction()\r\n                    .subscribe(() => {\r\n                        this.store.dispatch(new RemoveStar(action.entries));\r\n                    });\r\n            });\r\n    }\r\n\r\n    private entriesUnstarred() {\r\n        this.actions$\r\n            .pipe(ofActionSuccessful(RemoveStar))\r\n            .subscribe((action: RemoveStar) => {\r\n                this.toast.open(`Star Removed.`, {action: 'UNDO'}).onAction()\r\n                    .subscribe(() => {\r\n                        this.store.dispatch(new AddStar(action.entries));\r\n                    });\r\n            });\r\n    }\r\n\r\n    private entriesMoved() {\r\n        this.actions$.pipe(ofAction(MoveEntriesSuccess))\r\n            .subscribe((action: MoveEntriesSuccess) => {\r\n                this.toast.open(\r\n                    {message: 'Moved :count items.', replacements: {count: action.entries.length}}\r\n                );\r\n            });\r\n    }\r\n\r\n    private entriesMoveFailed() {\r\n        this.actions$.pipe(ofAction(MoveEntriesFailed))\r\n            .subscribe(() => {\r\n                this.toast.open('There was an issue with moving selected items.');\r\n            });\r\n    }\r\n\r\n    private folderCreated() {\r\n        this.actions$.pipe(ofAction(NewFolderCreated))\r\n            .subscribe(() => {\r\n                this.toast.open('Folder created.');\r\n            });\r\n    }\r\n\r\n    private entriesDeletedForever() {\r\n        this.actions$.pipe(ofActionSuccessful(TrashedEntriesDeleteSuccess))\r\n            .subscribe((action: TrashedEntriesDeleteSuccess) => {\r\n                this.toast.open({\r\n                    message: `Permanently deleted :count items.`,\r\n                    replacements: {count: action.entries.length}\r\n                });\r\n            });\r\n    }\r\n\r\n    private entriesRestoredFromTrash() {\r\n        this.actions$.pipe(ofActionSuccessful(TrashedEntriesRestoreSuccess))\r\n            .subscribe((action: TrashedEntriesRestoreSuccess) => {\r\n                this.toast.open({\r\n                    message: `Restored :count items.`,\r\n                    replacements: {count: action.entries.length}\r\n                });\r\n            });\r\n    }\r\n\r\n    private entryRenamed() {\r\n        this.actions$.pipe(ofActionSuccessful(EntryRenamed))\r\n            .subscribe((action: EntryRenamed) => {\r\n                this.toast.open({\r\n                    message: `:oldName renamed to :newName`,\r\n                    replacements: {oldName: action.entry.name, newName: action.newName}\r\n                });\r\n            });\r\n\r\n    }\r\n\r\n    private linkCopiedToClipboard() {\r\n        this.actions$.pipe(ofActionSuccessful(LinkCopySuccess))\r\n            .subscribe(() => {\r\n                this.toast.open(`Link copied to clipboard.`);\r\n            });\r\n    }\r\n\r\n    private notEnoughSpace() {\r\n        this.actions$.pipe(ofActionSuccessful(NotEnoughSpaceError))\r\n            .subscribe(() => {\r\n                this.toast.open(`You are out of space. Try to delete some files.`, {action: 'Upgrade'})\r\n                    .onAction().subscribe(() => {\r\n                        this.router.navigate(['/billing/upgrade']);\r\n                    });\r\n            });\r\n    }\r\n\r\n    private loadingToast() {\r\n        let toastRef: MatSnackBarRef<any>;\r\n\r\n        this.actions$.pipe(ofActionSuccessful(ShowLoadingToast))\r\n            .subscribe((action: ShowLoadingToast) => {\r\n                toastRef = this.toast.openComponent(LoadingToastComponent, {duration: 0, data: {message: action.message}});\r\n            });\r\n\r\n        this.actions$.pipe(ofActionSuccessful(HideLoadingToast))\r\n            .subscribe(() => {\r\n                if (toastRef) {\r\n                    toastRef.dismiss();\r\n                    toastRef = null;\r\n                }\r\n            });\r\n    }\r\n}\r\n","import { Actions, ofActionSuccessful } from '@ngxs/store';\r\nimport { CloseUploadsPanel, OpenUploadsPanel } from '../actions/commands';\r\nimport { OverlayPanel } from '@common/core/ui/overlay-panel/overlay-panel.service';\r\nimport { UploadsPanelComponent } from '../../uploads/uploads-panel/uploads-panel.component';\r\nimport { OverlayPanelRef } from '@common/core/ui/overlay-panel/overlay-panel-ref';\r\nimport { CurrentUser } from '@common/auth/current-user';\r\nimport { OverlayPanelConfig } from '@common/core/ui/overlay-panel/overlay-panel-config';\r\nimport { Injectable } from '@angular/core';\r\n\r\nconst overlayConfig: OverlayPanelConfig = {\r\n    origin: 'global',\r\n    hasBackdrop: false,\r\n    position: {right: '10px', bottom: '10px'},\r\n    mobilePosition: {left: 0, bottom: 0}\r\n};\r\n\r\n@Injectable()\r\nexport class UploadPanelHandler {\r\n    private uploadPanelRef: OverlayPanelRef<UploadsPanelComponent>;\r\n\r\n    constructor(\r\n        private actions$: Actions,\r\n        private currentUser: CurrentUser,\r\n        private overlayPanel: OverlayPanel,\r\n    ) {\r\n        this.actions$\r\n            .pipe(ofActionSuccessful(OpenUploadsPanel))\r\n            .subscribe(() => {\r\n                this.openUploadsPanel();\r\n            });\r\n\r\n        this.actions$\r\n            .pipe(ofActionSuccessful(CloseUploadsPanel))\r\n            .subscribe(() => {\r\n               this.closeUploadsPanel();\r\n            });\r\n\r\n        this.currentUser.model$.subscribe(() => {\r\n            this.closeUploadsPanel();\r\n        });\r\n    }\r\n\r\n    public openUploadsPanel() {\r\n        if (this.uploadPanelRef) return;\r\n        this.uploadPanelRef = this.overlayPanel\r\n            .open(UploadsPanelComponent, overlayConfig);\r\n    }\r\n\r\n    private closeUploadsPanel() {\r\n        if ( ! this.uploadPanelRef) return;\r\n        this.uploadPanelRef.close();\r\n        this.uploadPanelRef = null;\r\n    }\r\n}\r\n","import { Actions, ofActionDispatched, Store } from '@ngxs/store';\r\nimport { OpenConfirmDialog, OpenDialog } from '../actions/commands';\r\nimport { Injectable } from '@angular/core';\r\nimport { Modal } from '@common/core/ui/dialogs/modal.service';\r\nimport { ConfirmModalComponent } from '@common/core/ui/confirm-modal/confirm-modal.component';\r\n\r\n@Injectable()\r\nexport class DialogHandler {\r\n    constructor(\r\n        private actions$: Actions,\r\n        private dialog: Modal,\r\n        private store: Store,\r\n    ) {\r\n        this.actions$.pipe(ofActionDispatched(OpenDialog))\r\n            .subscribe((action: OpenDialog) => {\r\n                this.dialog.open(action.dialog, action.data, action.config);\r\n            });\r\n\r\n        this.actions$.pipe(ofActionDispatched(OpenConfirmDialog))\r\n            .subscribe((action: OpenConfirmDialog) => {\r\n                this.openConfirmDialog(action);\r\n            });\r\n    }\r\n\r\n    private openConfirmDialog(action: OpenConfirmDialog) {\r\n        this.dialog.open(ConfirmModalComponent, action.data)\r\n            .beforeClosed()\r\n            .subscribe(confirmed => {\r\n                if ( ! confirmed) return;\r\n                return this.store.dispatch(action.confirmAction);\r\n            });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharingPermissionsButtonComponent } from './sharing-permissions-button/sharing-permissions-button.component';\nimport { ShareDialogComponent } from './share-dialog/share-dialog.component';\nimport { EntriesAccessTableComponent } from './entries-access-table/entries-access-table.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { LinkOptionsComponent } from './links/link-options/link-options.component';\nimport { ShareLinkDialogComponent } from './share-link-dialog/share-link-dialog.component';\nimport { NoSharedEntriesComponent } from './no-shared-entries/no-shared-entries.component';\nimport { TranslationsModule } from '@common/core/translations/translations.module';\nimport { LoadingIndicatorModule } from '@common/core/ui/loading-indicator/loading-indicator.module';\nimport { Modal } from '@common/core/ui/dialogs/modal.service';\nimport { ChipsModule } from '@common/core/ui/chips/chips.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        TranslationsModule,\n        LoadingIndicatorModule,\n\n        // material\n        MatSlideToggleModule,\n        MatTabsModule,\n        MatDialogModule,\n        ChipsModule,\n        MatIconModule,\n        MatMenuModule,\n        MatButtonModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n    ],\n    declarations: [\n        ShareDialogComponent,\n        EntriesAccessTableComponent,\n        SharingPermissionsButtonComponent,\n        LinkOptionsComponent,\n        ShareLinkDialogComponent,\n        NoSharedEntriesComponent,\n    ],\n    exports: [\n        NoSharedEntriesComponent,\n    ],\n    providers: [\n        Modal,\n    ]\n})\nexport class SharingModule {\n}\n","import { Actions, ofActionSuccessful } from '@ngxs/store';\r\nimport { ReloadPageEntries } from '../actions/commands';\r\nimport { DriveDomCacheService } from '../../interactions/drive-dom-cache.service';\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\nexport class ResetScrollHandler {\r\n    constructor(\r\n        private actions$: Actions,\r\n        private domCache: DriveDomCacheService\r\n    ) {\r\n        this.actions$.pipe(ofActionSuccessful(ReloadPageEntries))\r\n            .subscribe(() => {\r\n                this.domCache.scrollCont.scrollTo({top: 0});\r\n            });\r\n    }\r\n}\r\n","import { Store } from '@ngxs/store';\r\nimport { DeselectAllEntries } from '../actions/commands';\r\nimport { DriveState } from '../drive-state';\r\nimport { filter } from 'rxjs/operators';\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\nexport class PageChangeHandler {\r\n    constructor(\r\n        private store: Store\r\n    ) {\r\n        this.store.select(DriveState.activePage)\r\n            .pipe(filter(page => !!page))\r\n            .subscribe(() => {\r\n                this.store.dispatch(new DeselectAllEntries());\r\n            });\r\n    }\r\n}\r\n","import { Actions, ofActionSuccessful, Store } from '@ngxs/store';\r\nimport { RouterNavigation, RouterState } from '@ngxs/router-plugin';\r\nimport {\r\n    FolderPageOpened,\r\n    RecentEntriesPageOpened,\r\n    SearchPageOpened,\r\n    SharesFolderOpened,\r\n    StarredPageOpened,\r\n    TrashPageOpened, WorkspacesIndexPageOpened,\r\n} from '../actions/events';\r\nimport { DRIVE_PAGE_NAMES } from '../models/drive-page';\r\nimport { filter } from 'rxjs/operators';\r\nimport { CurrentUser } from '@common/auth/current-user';\r\nimport { Injectable } from '@angular/core';\r\n\r\nconst LINK_PREVIEW_PAGE = 's';\r\n\r\n@Injectable()\r\nexport class PageLoadHandler {\r\n    constructor(\r\n        private store: Store,\r\n        private actions$: Actions,\r\n        private currentUser: CurrentUser,\r\n    ) {\r\n        this.actions$\r\n            .pipe(\r\n                ofActionSuccessful(RouterNavigation),\r\n                filter((action: RouterNavigation) => action.event.urlAfterRedirects.indexOf('drive') > -1),\r\n                filter(() => this.currentUser.isLoggedIn()),\r\n            )\r\n            .subscribe(() => {\r\n                const action = this.getPageLoadAction();\r\n                if (action) this.store.dispatch(action);\r\n            });\r\n    }\r\n\r\n    private getPageLoadAction() {\r\n        const params = this.getPageUriParams();\r\n        switch (params.pageName) {\r\n            case DRIVE_PAGE_NAMES.RECENT:\r\n                return new RecentEntriesPageOpened();\r\n            case DRIVE_PAGE_NAMES.TRASH:\r\n                return new TrashPageOpened();\r\n            case DRIVE_PAGE_NAMES.SHARES:\r\n                return new SharesFolderOpened();\r\n            case DRIVE_PAGE_NAMES.STARRED:\r\n                return new StarredPageOpened();\r\n            case DRIVE_PAGE_NAMES.SEARCH:\r\n                const state = this.store.selectSnapshot(RouterState.state);\r\n                const search = state.root.firstChild.queryParams;\r\n                return new SearchPageOpened({type: search.type, query: search.query});\r\n            case DRIVE_PAGE_NAMES.WORKSPACES:\r\n                return new WorkspacesIndexPageOpened();\r\n            case LINK_PREVIEW_PAGE:\r\n                return null;\r\n            default:\r\n                return new FolderPageOpened(params.folderHash);\r\n        }\r\n    }\r\n\r\n    private getPageUriParams() {\r\n        // remove query params\r\n        const uri = this.store.selectSnapshot(RouterState.url).split('?')[0];\r\n        const [, pageName, folderHash] = uri.split('/').filter(x => !!x);\r\n        return {pageName, folderHash};\r\n    }\r\n}\r\n","import { Actions, ofActionSuccessful, Store } from '@ngxs/store';\r\nimport { RemoveEntries, RemoveStar } from '../actions/commands';\r\nimport { filter } from 'rxjs/operators';\r\nimport { DriveState } from '../drive-state';\r\nimport { DRIVE_PAGE_NAMES } from '../models/drive-page';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class RemoveStarHandler {\r\n    constructor(\r\n        private actions$: Actions,\r\n        private store: Store\r\n    ) {\r\n        this.actions$.pipe(ofActionSuccessful(RemoveStar))\r\n            .pipe(filter(() => {\r\n                const name = this.store.selectSnapshot(DriveState.activePage).name;\r\n                return name === DRIVE_PAGE_NAMES.STARRED;\r\n            }))\r\n            .subscribe((action: RemoveStar) => {\r\n                this.store.dispatch(new RemoveEntries(action.entries));\r\n            });\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ContextMenuDirective} from '@common/core/ui/context-menu/context-menu.directive';\n\n\n@NgModule({\n    declarations: [\n        ContextMenuDirective,\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        ContextMenuDirective,\n    ]\n})\nexport class ContextMenuModule {\n}\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {TextPreviewComponent} from './text-preview/text-preview.component';\r\nimport {AVAILABLE_PREVIEWS, DefaultPreviews} from './available-previews';\r\nimport {PreviewContainerComponent} from './preview-container/preview-container.component';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {VideoPreviewComponent} from './video-preview/video-preview.component';\r\nimport {ImagePreviewComponent} from './image-preview/image-preview.component';\r\nimport {PdfPreviewComponent} from './pdf-preview/pdf-preview.component';\r\nimport {DefaultPreviewComponent} from './default-preview/default-preview.component';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {AudioPreviewComponent} from './audio-preview/audio-preview.component';\r\nimport {GoogleDocsViewerComponent} from './google-docs-viewer/google-docs-viewer.component';\r\nimport {LoadingIndicatorModule} from '@common/core/ui/loading-indicator/loading-indicator.module';\r\nimport {OverlayPanel} from '@common/core/ui/overlay-panel/overlay-panel.service';\r\nimport {PreviewFilesService} from '@common/file-preview/preview-files.service';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n\r\n        // material\r\n        PortalModule,\r\n        MatButtonModule,\r\n        LoadingIndicatorModule,\r\n    ],\r\n    exports: [\r\n        PreviewContainerComponent,\r\n    ],\r\n    declarations: [\r\n        PreviewContainerComponent,\r\n        TextPreviewComponent,\r\n        VideoPreviewComponent,\r\n        ImagePreviewComponent,\r\n        PdfPreviewComponent,\r\n        DefaultPreviewComponent,\r\n        AudioPreviewComponent,\r\n        GoogleDocsViewerComponent\r\n    ],\r\n    providers: [\r\n        OverlayPanel,\r\n        PreviewFilesService,\r\n        {provide: AVAILABLE_PREVIEWS, useClass: DefaultPreviews},\r\n    ]\r\n})\r\nexport class FilePreviewModule {\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WorkspaceSelectorComponent } from './workspace-selector.component';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TranslationsModule } from '../../core/translations/translations.module';\nimport { MatButtonModule } from '@angular/material/button';\n\n\n\n@NgModule({\n  declarations: [\n      WorkspaceSelectorComponent,\n  ],\n  imports: [\n      CommonModule,\n      TranslationsModule,\n\n      // material\n      MatMenuModule,\n      MatButtonModule,\n      MatIconModule,\n  ],\n  exports: [\n      WorkspaceSelectorComponent,\n  ]\n})\nexport class WorkspaceSelectorModule { }\n","import { Injector, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DriveRoutingModule } from './drive-routing.module';\nimport { DriveComponent } from './drive.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { FoldersTreeComponent } from './sidebar/folders-tree/folders-tree.component';\nimport { FilesGridComponent } from './files/components/files-grid/files-grid.component';\nimport { FileThumbnailComponent } from './files/components/file-thumbnail/file-thumbnail.component';\nimport { FilesGridItemComponent } from './files/components/files-grid/files-grid-item/files-grid-item.component';\nimport { DriveHammerInteractionsDirective } from './interactions/drive-hammer-interactions.directive';\nimport { FileIconComponent } from './files/components/file-icon/file-icon.component';\nimport { DRIVE_CONTEXT_MENUS } from './context-actions/drive-context-menus';\nimport { DriveContextMenuComponent } from './context-actions/components/drive-context-menu/drive-context-menu.component';\nimport { SidebarActionButtonsComponent } from './sidebar/sidebar-action-buttons/sidebar-action-buttons.component';\nimport { CrupdateFolderDialogComponent } from './folders/components/crupdate-folder-dialog/crupdate-folder-dialog.component';\nimport { RenameEntryDialogComponent } from './entries/rename-entry-dialog/rename-entry-dialog.component';\nimport { EntryDragPreviewComponent } from './interactions/entry-drag-preview/entry-drag-preview.component';\nimport { EntryBreadcrumbsComponent } from './drive-toolbar/entry-breadcrumbs/entry-breadcrumbs.component';\nimport { UploadsPanelComponent } from './uploads/uploads-panel/uploads-panel.component';\nimport { MoveEntriesDialogComponent } from './entries/move-entries-dialog/move-entries-dialog.component';\nimport { FolderDropTargetDirective } from './interactions/drop-targets/folder-drop-target.directive';\nimport { DriveToolbarComponent } from './drive-toolbar/drive-toolbar.component';\nimport { ToolbarActionsComponent } from './drive-toolbar/toolbar-actions/toolbar-actions.component';\nimport { MainSearchbarComponent } from './search/main-searchbar/main-searchbar.component';\nimport { UploadDropzoneComponent } from './uploads/upload-dropzone/upload-dropzone.component';\nimport { EntriesContainerComponent } from './entries/entries-container/entries-container.component';\nimport { DetailsPanelComponent } from './details-sidebar/details-panel/details-panel.component';\nimport { FilePreviewOverlayComponent } from './preview/file-preview-overlay/file-preview-overlay.component';\nimport { FilePreviewToolbarComponent } from './preview/file-preview-overlay/file-preview-toolbar/file-preview-toolbar.component';\nimport { OverlayHandler } from './state/handlers/overlay-handler';\nimport { DownloadHandler } from './state/handlers/donwlod-handler';\nimport { ToastHandler } from './state/handlers/toast-handler';\nimport { UploadPanelHandler } from './state/handlers/upload-panel-handler';\nimport { DialogHandler } from './state/handlers/dialog-handler';\nimport { SharingModule } from './sharing/sharing.module';\nimport { DetailsSidebarComponent } from './details-sidebar/details-sidebar.component';\nimport { FileListHeaderComponent } from './header/file-list-header/file-list-header.component';\nimport { DriveInfiniteScrollDirective } from './interactions/drive-infinite-scroll.directive';\nimport { ResetScrollHandler } from './state/handlers/reset-scroll-handler';\nimport { FilesListComponent } from './files/components/files-list/files-list.component';\nimport { ToggleSelectedClassDirective } from './interactions/toggle-selected-class.directive';\nimport { PageChangeHandler } from './state/handlers/page-change-handler';\nimport { PageLoadHandler } from './state/handlers/page-load-handler';\nimport { RemoveStarHandler } from './state/handlers/remove-star-handler';\nimport { NoFolderEntriesComponent } from './messages/no-folder-entries/no-folder-entries.component';\nimport { NoTrashedEntriesComponent } from './messages/no-trashed-entries/no-trashed-entries.component';\nimport { NoStarredEntriesComponent } from './messages/no-starred-entries/no-starred-entries.component';\nimport { NoRecentEntriesComponent } from './messages/no-recent-entries/no-recent-entries.component';\nimport { UploadsPanelItemComponent } from './uploads/uploads-panel/uploads-panel-item/uploads-panel-item.component';\nimport { NgxsModule } from '@ngxs/store';\nimport { ShareDialogState } from './sharing/state/share-dialog.state';\nimport { ShareLinkState } from './sharing/links/share-link.state';\nimport { DriveState } from './state/drive-state';\nimport { AvailableSpaceIndicatorComponent } from './sidebar/available-space-indicator/available-space-indicator.component';\nimport { LoadingToastComponent } from './messages/loading-toast/loading-toast.component';\nimport { LinkPreviewContainerComponent } from './preview/link-preview-container/link-preview-container.component';\nimport { LinkPreviewPasswordPanelComponent } from './preview/link-preview-container/link-preview-password-panel/link-preview-password-panel.component';\nimport { ContextActionsContainerComponent } from './context-actions/components/context-actions-container/context-actions-container.component';\nimport { DRIVE_UPLOAD_INPUT_CONFIG } from './upload-input-config';\nimport { NoSearchEntriesComponent } from './messages/no-search-entries/no-search-entries.component';\nimport { EntryDescriptionPanelComponent } from './details-sidebar/details-panel/entry-description-panel/entry-description-panel.component';\nimport { FolderPreviewComponent } from './preview/folder-preview/folder-preview.component';\nimport { EntriesSortButtonComponent } from './header/entries-sort-button/entries-sort-button.component';\nimport { MaterialNavbarModule } from '@common/core/ui/material-navbar/material-navbar.module';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { TranslationsModule } from '@common/core/translations/translations.module';\nimport { FormatPipesModule } from '@common/core/ui/format-pipes/format-pipes.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NoResultsMessageModule } from '@common/core/ui/no-results-message/no-results-message.module';\nimport { LoadingIndicatorModule } from '@common/core/ui/loading-indicator/loading-indicator.module';\nimport { ContextMenuModule } from '@common/core/ui/context-menu/context-menu.module';\nimport { AdHostModule } from '@common/core/ui/ad-host/ad-host.module';\nimport { FilePreviewModule } from '@common/file-preview/file-preview.module';\nimport { AVAILABLE_CONTEXT_MENUS } from '@common/core/ui/context-menu/available-context-menus';\nimport { UploadsModule } from '@common/uploads/uploads.module';\nimport { Toast } from '@common/core/ui/toast.service';\nimport { ContextMenu } from '@common/core/ui/context-menu/context-menu.service';\nimport { PreviewFilesService } from '@common/file-preview/preview-files.service';\nimport { OverlayPanel } from '@common/core/ui/overlay-panel/overlay-panel.service';\nimport { UploadInputConfig } from '@common/uploads/upload-input-config';\nimport { Settings } from '../../common/core/config/settings.service';\nimport { WorkspaceSelectorModule } from '../../common/workspaces/workspace-selector/workspace-selector.module';\nimport { SkeletonModule } from '../../common/core/ui/skeleton/skeleton.module';\nimport {\n    WORKSPACE_CONFIG, WorkspaceConfig\n} from '../../common/workspaces/workspace-config';\nimport { DatatableModule } from '../../common/datatable/datatable.module';\n\nexport const STATE_HANDLERS = [\n    OverlayHandler,\n    DownloadHandler,\n    ToastHandler,\n    UploadPanelHandler,\n    DialogHandler,\n    ResetScrollHandler,\n    PageChangeHandler,\n    PageLoadHandler,\n    RemoveStarHandler,\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        UploadsModule,\n        DriveRoutingModule,\n        FilePreviewModule,\n        FormsModule,\n        SharingModule,\n        MaterialNavbarModule,\n        TranslationsModule,\n        FormatPipesModule,\n        ReactiveFormsModule,\n        NoResultsMessageModule,\n        LoadingIndicatorModule,\n        ContextMenuModule,\n        AdHostModule,\n        WorkspaceSelectorModule,\n        SkeletonModule,\n        DatatableModule,\n\n        // material\n        MatSidenavModule,\n        MatTreeModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressBarModule,\n        MatIconModule,\n        MatTooltipModule,\n        MatAutocompleteModule,\n        MatTabsModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n\n        // state\n        NgxsModule.forFeature([\n            DriveState,\n            ShareDialogState,\n            ShareLinkState,\n        ]),\n    ],\n    declarations: [\n        DriveComponent,\n        SidebarComponent,\n        FoldersTreeComponent,\n        FilesGridComponent,\n        FileThumbnailComponent,\n        DriveHammerInteractionsDirective,\n        FilesGridItemComponent,\n        FileIconComponent,\n        DriveContextMenuComponent,\n        SidebarActionButtonsComponent,\n        CrupdateFolderDialogComponent,\n        RenameEntryDialogComponent,\n        EntryDragPreviewComponent,\n        DriveToolbarComponent,\n        EntryBreadcrumbsComponent,\n        UploadsPanelComponent,\n        MoveEntriesDialogComponent,\n        FolderDropTargetDirective,\n        ToolbarActionsComponent,\n        MainSearchbarComponent,\n        UploadDropzoneComponent,\n        NoFolderEntriesComponent,\n        NoTrashedEntriesComponent,\n        NoStarredEntriesComponent,\n        NoRecentEntriesComponent,\n        NoSearchEntriesComponent,\n        EntriesContainerComponent,\n        DetailsSidebarComponent,\n        DetailsPanelComponent,\n        FilePreviewOverlayComponent,\n        FilePreviewToolbarComponent,\n        FileListHeaderComponent,\n        DriveInfiniteScrollDirective,\n        FilesListComponent,\n        ToggleSelectedClassDirective,\n        UploadsPanelItemComponent,\n        AvailableSpaceIndicatorComponent,\n        LoadingToastComponent,\n        LinkPreviewContainerComponent,\n        LinkPreviewPasswordPanelComponent,\n        ContextActionsContainerComponent,\n        EntryDescriptionPanelComponent,\n        FolderPreviewComponent,\n        EntriesSortButtonComponent,\n    ],\n    providers: [\n        // fix angular lazy loaded entry components issue\n        OverlayPanel,\n        PreviewFilesService,\n        Toast,\n\n        // handlers\n        ...STATE_HANDLERS,\n        {\n            provide: AVAILABLE_CONTEXT_MENUS,\n            useValue: DRIVE_CONTEXT_MENUS,\n            multi: true,\n        },\n        {\n            provide: DRIVE_UPLOAD_INPUT_CONFIG,\n            deps: [Settings],\n            useFactory: (settings) => {\n                const uploadInputConfig: UploadInputConfig = {multiple: true};\n\n                const extensions = settings.getJson('drive.validation.allowed_extensions');\n                if (extensions) {\n                    uploadInputConfig.extensions = extensions.map(ext => '.' + ext);\n                }\n\n                return uploadInputConfig;\n            },\n        },\n        {\n            provide: WORKSPACE_CONFIG,\n            useValue: {\n                description: 'Workspaces are shared spaces where teams can store, share and collaborate on files and folders.',\n            } as WorkspaceConfig\n        }\n    ]\n})\nexport class DriveModule {\n    constructor(private injector: Injector) {\n        STATE_HANDLERS.forEach(handler => this.injector.get(handler));\n    }\n}\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","import { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalHostDirective, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, NgZone, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewContainerRef, ContentChild, ViewChild, Input, ComponentFactoryResolver, forwardRef, EventEmitter, ChangeDetectorRef, Output, QueryList, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, merge, fromEvent, of, timer } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token for the MatInkBar's Positioner. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/portal';\nimport * as ɵngcc6 from '@angular/cdk/scrolling';\nimport * as ɵngcc7 from '@angular/cdk/platform';\nimport * as ɵngcc8 from '@angular/cdk/observers';\n\nfunction MatTab_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nfunction MatTabBody_ng_template_2_Template(rf, ctx) { }\nconst _c1 = function (a0) { return { animationDuration: a0 }; };\nconst _c2 = function (a0, a1) { return { value: a0, params: a1 }; };\nconst _c3 = [\"tabBodyWrapper\"];\nconst _c4 = [\"tabHeader\"];\nfunction MatTabGroup_div_2_ng_template_2_ng_template_0_Template(rf, ctx) { }\nfunction MatTabGroup_div_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, MatTabGroup_div_2_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", tab_r4.templateLabel);\n} }\nfunction MatTabGroup_div_2_ng_template_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(tab_r4.textLabel);\n} }\nfunction MatTabGroup_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function MatTabGroup_div_2_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); const tab_r4 = ctx.$implicit; const i_r5 = ctx.index; const ctx_r11 = ɵngcc0.ɵɵnextContext(); const _r0 = ɵngcc0.ɵɵreference(1); return ctx_r11._handleClick(tab_r4, _r0, i_r5); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_ng_template_2_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵtemplate(3, MatTabGroup_div_2_ng_template_3_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-label-active\", ctx_r1.selectedIndex == i_r5);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r1._getTabLabelId(i_r5))(\"disabled\", tab_r4.disabled)(\"matRippleDisabled\", tab_r4.disabled || ctx_r1.disableRipple);\n    ɵngcc0.ɵɵattribute(\"tabIndex\", ctx_r1._getTabIndex(tab_r4, i_r5))(\"aria-posinset\", i_r5 + 1)(\"aria-setsize\", ctx_r1._tabs.length)(\"aria-controls\", ctx_r1._getTabContentId(i_r5))(\"aria-selected\", ctx_r1.selectedIndex == i_r5)(\"aria-label\", tab_r4.ariaLabel || null)(\"aria-labelledby\", !tab_r4.ariaLabel && tab_r4.ariaLabelledby ? tab_r4.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r4.templateLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !tab_r4.templateLabel);\n} }\nfunction MatTabGroup_mat_tab_body_5_Template(rf, ctx) { if (rf & 1) {\n    const _r16 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-tab-body\", 10);\n    ɵngcc0.ɵɵlistener(\"_onCentered\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener() { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15._removeTabBodyWrapperHeight(); })(\"_onCentering\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r17 = ɵngcc0.ɵɵnextContext(); return ctx_r17._setTabBodyWrapperHeight($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r13 = ctx.$implicit;\n    const i_r14 = ctx.index;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-body-active\", ctx_r3.selectedIndex == i_r14);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r3._getTabContentId(i_r14))(\"content\", tab_r13.content)(\"position\", tab_r13.position)(\"origin\", tab_r13.origin)(\"animationDuration\", ctx_r3.animationDuration);\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx_r3._getTabLabelId(i_r14));\n} }\nconst _c5 = [\"tabListContainer\"];\nconst _c6 = [\"tabList\"];\nconst _c7 = [\"nextPaginator\"];\nconst _c8 = [\"previousPaginator\"];\nconst _c9 = [\"mat-tab-nav-bar\", \"\"];\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    const method = (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    });\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\nclass MatInkBar {\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param element\n     */\n    alignToElement(element) {\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => this._setStyles(element));\n            });\n        }\n        else {\n            this._setStyles(element);\n        }\n    }\n    /** Shows the ink bar. */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /** Hides the ink bar. */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @param element\n     */\n    _setStyles(element) {\n        const positions = this._inkBarPositioner(element);\n        const inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    }\n}\nMatInkBar.ɵfac = function MatInkBar_Factory(t) { return new (t || MatInkBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(_MAT_INK_BAR_POSITIONER), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatInkBar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInkBar, selectors: [[\"mat-ink-bar\"]], hostAttrs: [1, \"mat-ink-bar\"], hostVars: 2, hostBindings: function MatInkBar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } } });\nMatInkBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInkBar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-ink-bar',\n                host: {\n                    'class': 'mat-ink-bar',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [_MAT_INK_BAR_POSITIONER]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_CONTENT = new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\nclass MatTabContent {\n    constructor(template) {\n        this.template = template;\n    }\n}\nMatTabContent.ɵfac = function MatTabContent_Factory(t) { return new (t || MatTabContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatTabContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabContent, selectors: [[\"\", \"matTabContent\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }])] });\nMatTabContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabContent, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabContent]',\n                providers: [{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_LABEL = new InjectionToken('MatTabLabel');\n/** Used to flag tab labels for use with the portal directive */\nclass MatTabLabel extends CdkPortal {\n}\nMatTabLabel.ɵfac = function MatTabLabel_Factory(t) { return ɵMatTabLabel_BaseFactory(t || MatTabLabel); };\nMatTabLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLabel, selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatTabLabel_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatTabLabel);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-label], [matTabLabel]',\n                providers: [{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nclass MatTabBase {\n}\nconst _MatTabMixinBase = mixinDisabled(MatTabBase);\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab extends _MatTabMixinBase {\n    constructor(_viewContainerRef, \n    /**\n     * @deprecated `_closestTabGroup` parameter to become required.\n     * @breaking-change 10.0.0\n     */\n    _closestTabGroup) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        this._closestTabGroup = _closestTabGroup;\n        /** Plain text label for the tab, used when there is no template label. */\n        this.textLabel = '';\n        /** Portal that will be the hosted content of the tab */\n        this._contentPortal = null;\n        /** Emits whenever the internal state of the tab changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n    get templateLabel() { return this._templateLabel; }\n    set templateLabel(value) { this._setTemplateLabelInput(value); }\n    /** @docs-private */\n    get content() {\n        return this._contentPortal;\n    }\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setTemplateLabelInput(value) {\n        // Only update the templateLabel via query if there is actually\n        // a MatTabLabel found. This works around an issue where a user may have\n        // manually set `templateLabel` during creation mode, which would then get clobbered\n        // by `undefined` when this query resolves.\n        if (value) {\n            this._templateLabel = value;\n        }\n    }\n}\nMatTab.ɵfac = function MatTab_Factory(t) { return new (t || MatTab)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_TAB_GROUP, 8)); };\nMatTab.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTab, selectors: [[\"mat-tab\"]], contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_TAB_LABEL, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MAT_TAB_CONTENT, true, TemplateRef);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n    } }, viewQuery: function MatTab_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n    } }, inputs: { disabled: \"disabled\", textLabel: [\"label\", \"textLabel\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"] }, exportAs: [\"matTab\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatTab_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2 });\nMatTab.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_TAB_GROUP,] }] }\n];\nMatTab.propDecorators = {\n    templateLabel: [{ type: ContentChild, args: [MAT_TAB_LABEL,] }],\n    _explicitContent: [{ type: ContentChild, args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true },] }],\n    _implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    textLabel: [{ type: Input, args: ['label',] }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTab, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab',\n                template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\",\n                inputs: ['disabled'],\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matTab'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_TAB_GROUP]\n            }] }]; }, { textLabel: [{\n            type: Input,\n            args: ['label']\n        }], templateLabel: [{\n            type: ContentChild,\n            args: [MAT_TAB_LABEL]\n        }], _explicitContent: [{\n            type: ContentChild,\n            args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true }]\n        }], _implicitContent: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nconst matTabsAnimations = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    constructor(componentFactoryResolver, viewContainerRef, _host, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        super(componentFactoryResolver, viewContainerRef, _document);\n        this._host = _host;\n        /** Subscription to events for when the tab body begins centering. */\n        this._centeringSub = Subscription.EMPTY;\n        /** Subscription to events for when the tab body finishes leaving from center position. */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        });\n        this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n    /** Clean up centering subscription. */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.ɵfac = function MatTabBodyPortal_Factory(t) { return new (t || MatTabBodyPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatTabBody)), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatTabBodyPortal.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabBodyPortal, selectors: [[\"\", \"matTabBodyHost\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabBodyPortal.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef(() => MatTabBody),] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabBodyPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabBodyHost]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: MatTabBody, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatTabBody)]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\nclass _MatTabBodyBase {\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /** Subscription to the directionality change observable. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Emits when an animation on the tab is complete. */\n        this._translateTabComplete = new Subject();\n        /** Event emitted when the tab begins to animate towards the center as the active tab. */\n        this._onCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._beforeCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._afterLeavingCenter = new EventEmitter();\n        /** Event emitted when the tab completes its animation towards the center. */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /** Duration for the tab's animation. */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            });\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe(event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        });\n    }\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin(this.origin);\n        }\n    }\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    _onTranslateTabStarted(event) {\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /** The text direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the provided position state is considered center, regardless of origin. */\n    _isCenterPosition(position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    }\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    _computePositionFromOrigin(origin) {\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.ɵfac = function _MatTabBodyBase_Factory(t) { return new (t || _MatTabBodyBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_MatTabBodyBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabBodyBase, inputs: { animationDuration: \"animationDuration\", position: \"position\", _content: [\"content\", \"_content\"], origin: \"origin\" }, outputs: { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" } });\n_MatTabBodyBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\n_MatTabBodyBase.propDecorators = {\n    _onCentering: [{ type: Output }],\n    _beforeCentering: [{ type: Output }],\n    _afterLeavingCenter: [{ type: Output }],\n    _onCentered: [{ type: Output }],\n    _content: [{ type: Input, args: ['content',] }],\n    origin: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    position: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabBodyBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _onCentering: [{\n            type: Output\n        }], _beforeCentering: [{\n            type: Output\n        }], _afterLeavingCenter: [{\n            type: Output\n        }], _onCentered: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], position: [{\n            type: Input\n        }], _content: [{\n            type: Input,\n            args: ['content']\n        }], origin: [{\n            type: Input\n        }] }); })();\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.ɵfac = function MatTabBody_Factory(t) { return new (t || MatTabBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatTabBody.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabBody, selectors: [[\"mat-tab-body\"]], viewQuery: function MatTabBody_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(PortalHostDirective, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-body\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 6, consts: [[1, \"mat-tab-body-content\"], [\"content\", \"\"], [\"matTabBodyHost\", \"\"]], template: function MatTabBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) { return ctx._onTranslateTabStarted($event); })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) { return ctx._translateTabComplete.next($event); });\n        ɵngcc0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"@translateTab\", ɵngcc0.ɵɵpureFunction2(3, _c2, ctx._position, ɵngcc0.ɵɵpureFunction1(1, _c1, ctx.animationDuration)));\n    } }, directives: [MatTabBodyPortal], styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"], encapsulation: 2, data: { animation: [matTabsAnimations.translateTab] } });\nMatTabBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\nMatTabBody.propDecorators = {\n    _portalHost: [{ type: ViewChild, args: [PortalHostDirective,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabBody, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-body',\n                template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\">\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matTabsAnimations.translateTab],\n                host: {\n                    'class': 'mat-tab-body'\n                },\n                styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _portalHost: [{\n            type: ViewChild,\n            args: [PortalHostDirective]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options the tabs module. */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n/** A simple change event emitted on focus or selection changes. */\nclass MatTabChangeEvent {\n}\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nclass MatTabGroupMixinBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** All of the tabs that belong to the group. */\n        this._tabs = new QueryList();\n        /** The tab index that should be selected after the content has been checked. */\n        this._indexToSelect = 0;\n        /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n        this._tabBodyWrapperHeight = 0;\n        /** Subscription to tabs being added/removed. */\n        this._tabsSubscription = Subscription.EMPTY;\n        /** Subscription to changes in the tab labels. */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._dynamicHeight = false;\n        this._selectedIndex = null;\n        /** Position of the tab header. */\n        this.headerPosition = 'above';\n        /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n        this.selectedIndexChange = new EventEmitter();\n        /** Event emitted when focus has changed within a tab group. */\n        this.focusChange = new EventEmitter();\n        /** Event emitted when the body animation has completed */\n        this.animationDone = new EventEmitter();\n        /** Event emitted when the tab selection has changed. */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '500ms';\n        this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ?\n            defaultConfig.disablePagination : false;\n    }\n    /** Whether the tab group should grow to the size of the active tab. */\n    get dynamicHeight() { return this._dynamicHeight; }\n    set dynamicHeight(value) { this._dynamicHeight = coerceBooleanProperty(value); }\n    /** The index of the active tab. */\n    get selectedIndex() { return this._selectedIndex; }\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() { return this._animationDuration; }\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    /** Background color of the tab group. */\n    get backgroundColor() { return this._backgroundColor; }\n    set backgroundColor(value) {\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            });\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngAfterContentInit() {\n        this._subscribeToAllTabChanges();\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe(() => {\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this._tabs.toArray();\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Listens to changes in all of the tabs. */\n    _subscribeToAllTabChanges() {\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n        // some that are inside of nested tab groups. We filter them out manually by checking that\n        // the closest group to the tab is the current one.\n        this._allTabs.changes\n            .pipe(startWith(this._allTabs))\n            .subscribe((tabs) => {\n            this._tabs.reset(tabs.filter(tab => {\n                // @breaking-change 10.0.0 Remove null check for `_closestTabGroup`\n                // once it becomes a required parameter in MatTab.\n                return !tab._closestTabGroup || tab._closestTabGroup === this;\n            }));\n            this._tabs.notifyOnChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._tabs.destroy();\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /** Re-aligns the ink bar to the selected tab element. */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    _focusChanged(index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    _createChangeEvent(index) {\n        const event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges))\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /** Returns a unique id for each tab label element */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /** Returns a unique id for each tab content element */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /** Removes the height of the tab body wrapper. */\n    _removeTabBodyWrapperHeight() {\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /** Handle click events, setting new selected index if appropriate. */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /** Retrieves the tabindex for the tab. */\n    _getTabIndex(tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    }\n}\n_MatTabGroupBase.ɵfac = function _MatTabGroupBase_Factory(t) { return new (t || _MatTabGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabGroupBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabGroupBase, inputs: { headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", disablePagination: \"disablePagination\", dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", backgroundColor: \"backgroundColor\" }, outputs: { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabGroupBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabGroupBase.propDecorators = {\n    dynamicHeight: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    headerPosition: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    disablePagination: [{ type: Input }],\n    backgroundColor: [{ type: Input }],\n    selectedIndexChange: [{ type: Output }],\n    focusChange: [{ type: Output }],\n    animationDone: [{ type: Output }],\n    selectedTabChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabGroupBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { headerPosition: [{\n            type: Input\n        }], selectedIndexChange: [{\n            type: Output\n        }], focusChange: [{\n            type: Output\n        }], animationDone: [{\n            type: Output\n        }], selectedTabChange: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], disablePagination: [{\n            type: Input\n        }], dynamicHeight: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }] }); })();\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.ɵfac = function MatTabGroup_Factory(t) { return new (t || MatTabGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabGroup, selectors: [[\"mat-tab-group\"]], contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTab, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n    } }, viewQuery: function MatTabGroup_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n        ɵngcc0.ɵɵviewQuery(_c4, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-group\"], hostVars: 4, hostBindings: function MatTabGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-tab-group-inverted-header\", ctx.headerPosition === \"below\");\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\" }, exportAs: [\"matTabGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_TAB_GROUP,\n                useExisting: MatTabGroup\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 6, vars: 7, consts: [[3, \"selectedIndex\", \"disableRipple\", \"disablePagination\", \"indexFocused\", \"selectFocusedIndex\"], [\"tabHeader\", \"\"], [\"class\", \"mat-tab-label mat-focus-indicator\", \"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 3, \"id\", \"mat-tab-label-active\", \"disabled\", \"matRippleDisabled\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-tab-body-wrapper\"], [\"tabBodyWrapper\", \"\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-tab-body-active\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mat-tab-label\", \"mat-focus-indicator\", 3, \"id\", \"disabled\", \"matRippleDisabled\", \"click\"], [1, \"mat-tab-label-content\"], [3, \"ngIf\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"id\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\"]], template: function MatTabGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-tab-header\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) { return ctx._focusChanged($event); })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) { return ctx.selectedIndex = $event; });\n        ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_Template, 4, 14, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵtemplate(5, MatTabGroup_mat_tab_body_5_Template, 1, 8, \"mat-tab-body\", 5);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n    } }, directives: function () { return [MatTabHeader, ɵngcc2.NgForOf, MatTabLabelWrapper, ɵngcc3.MatRipple, ɵngcc4.CdkMonitorFocus, ɵngcc2.NgIf, ɵngcc5.CdkPortalOutlet, MatTabBody]; }, styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"], encapsulation: 2 });\nMatTabGroup.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabGroup.propDecorators = {\n    _allTabs: [{ type: ContentChildren, args: [MatTab, { descendants: true },] }],\n    _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper',] }],\n    _tabHeader: [{ type: ViewChild, args: ['tabHeader',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-group',\n                exportAs: 'matTabGroup',\n                template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex == i\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                inputs: ['color', 'disableRipple'],\n                providers: [{\n                        provide: MAT_TAB_GROUP,\n                        useExisting: MatTabGroup\n                    }],\n                host: {\n                    'class': 'mat-tab-group',\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"'\n                },\n                styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _allTabs: [{\n            type: ContentChildren,\n            args: [MatTab, { descendants: true }]\n        }], _tabBodyWrapper: [{\n            type: ViewChild,\n            args: ['tabBodyWrapper']\n        }], _tabHeader: [{\n            type: ViewChild,\n            args: ['tabHeader']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nclass MatTabLabelWrapperBase {\n}\nconst _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase {\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /** Sets focus on the wrapper element */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.ɵfac = function MatTabLabelWrapper_Factory(t) { return new (t || MatTabLabelWrapper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatTabLabelWrapper.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLabelWrapper, selectors: [[\"\", \"matTabLabelWrapper\", \"\"]], hostVars: 3, hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabLabelWrapper.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLabelWrapper, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabLabelWrapper]',\n                inputs: ['disabled'],\n                host: {\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[attr.aria-disabled]': '!!disabled'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nclass MatPaginatedTabHeader {\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, \n    /**\n     * @deprecated @breaking-change 9.0.0 `_platform` and `_animationMode`\n     * parameters to become required.\n     */\n    _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /** The distance in pixels that the tab labels should be translated to the left. */\n        this._scrollDistance = 0;\n        /** Whether the header should scroll to the selected index after the view has been checked. */\n        this._selectedIndexChanged = false;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Whether the controls for pagination should be displayed */\n        this._showPaginationControls = false;\n        /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n        this._disableScrollAfter = true;\n        /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n        this._disableScrollBefore = true;\n        /** Stream that will stop the automated scrolling. */\n        this._stopScrolling = new Subject();\n        /**\n         * Whether pagination should be disabled. This can be used to avoid unnecessary\n         * layout recalculations if it's known that pagination won't be required.\n         */\n        this.disablePagination = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the option is selected. */\n        this.selectFocusedIndex = new EventEmitter();\n        /** Event emitted when a label is focused. */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular(() => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => {\n                this._stopInterval();\n            });\n        });\n    }\n    /** The index of the active tab. */\n    get selectedIndex() { return this._selectedIndex; }\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItem(value);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('before');\n        });\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('after');\n        });\n    }\n    ngAfterContentInit() {\n        const dirChange = this._dir ? this._dir.change : of(null);\n        const resize = this._viewportRuler.change(150);\n        const realign = () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        };\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withHomeAndEnd()\n            .withWrap();\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe(() => {\n            // We need to defer this to give the browser some time to recalculate the element dimensions.\n            Promise.resolve().then(realign);\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        });\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        });\n    }\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /** Handles keyboard events on the header. */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case ENTER:\n            case SPACE:\n                if (this.focusIndex !== this.selectedIndex) {\n                    this.selectFocusedIndex.emit(this.focusIndex);\n                    this._itemSelected(event);\n                }\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    _onContentChanges() {\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run(() => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : 0;\n    }\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this._tabListContainer.nativeElement;\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /** The layout direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    _updateTabScrollPosition() {\n        if (this.disablePagination) {\n            return;\n        }\n        const scrollDistance = this.scrollDistance;\n        const platform = this._platform;\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        // @breaking-change 9.0.0 Remove null check for `platform` after it can no longer be undefined.\n        if (platform && (platform.TRIDENT || platform.EDGE)) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance() { return this._scrollDistance; }\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollHeader(direction) {\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /** Handles click events on the pagination arrows. */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollToLabel(labelIndex) {\n        if (this.disablePagination) {\n            return;\n        }\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        let labelBeforePos, labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkPaginationEnabled() {\n        if (this.disablePagination) {\n            this._showPaginationControls = false;\n        }\n        else {\n            const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n            if (!isEnabled) {\n                this.scrollDistance = 0;\n            }\n            if (isEnabled !== this._showPaginationControls) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._showPaginationControls = isEnabled;\n        }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkScrollingControls() {\n        if (this.disablePagination) {\n            this._disableScrollAfter = this._disableScrollBefore = true;\n        }\n        else {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance == 0;\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _getMaxScrollDistance() {\n        const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    }\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    _alignInkBarToSelectedTab() {\n        const selectedItem = this._items && this._items.length ?\n            this._items.toArray()[this.selectedIndex] : null;\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /** Stops the currently-running paginator interval.  */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param direction In which direction the paginator should be scrolled.\n     */\n    _handlePaginatorPress(direction, mouseEvent) {\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n        // null check the `button`, but we do it so we don't break tests that use fake events.\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n            return;\n        }\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe(() => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        });\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @param position Position to which to scroll.\n     * @returns Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        if (this.disablePagination) {\n            return { maxScrollDistance: 0, distance: 0 };\n        }\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.ɵfac = function MatPaginatedTabHeader_Factory(t) { return new (t || MatPaginatedTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPaginatedTabHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPaginatedTabHeader, inputs: { disablePagination: \"disablePagination\" } });\nMatPaginatedTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPaginatedTabHeader.propDecorators = {\n    disablePagination: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatedTabHeader, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disablePagination: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.ɵfac = function _MatTabHeaderBase_Factory(t) { return new (t || _MatTabHeaderBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabHeaderBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabHeaderBase, inputs: { disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabHeaderBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabHeaderBase.propDecorators = {\n    disableRipple: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabHeaderBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disableRipple: [{\n            type: Input\n        }] }); })();\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.ɵfac = function MatTabHeader_Factory(t) { return new (t || MatTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabHeader, selectors: [[\"mat-tab-header\"]], contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabHeader_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatInkBar, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c5, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c6, true);\n        ɵngcc0.ɵɵviewQuery(_c7, true);\n        ɵngcc0.ɵɵviewQuery(_c8, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-header\"], hostVars: 4, hostBindings: function MatTabHeader_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n    } }, inputs: { selectedIndex: \"selectedIndex\" }, outputs: { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-label-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [\"role\", \"tablist\", 1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-labels\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabHeader_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabHeader_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabHeader_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabHeader_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"], encapsulation: 2 });\nMatTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabHeader.propDecorators = {\n    _items: [{ type: ContentChildren, args: [MatTabLabelWrapper, { descendants: false },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-header',\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                outputs: ['selectFocusedIndex', 'indexFocused'],\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                host: {\n                    'class': 'mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n                },\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [MatTabLabelWrapper, { descendants: false }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /** Theme color of the nav bar. */\n        this.color = 'primary';\n    }\n    /** Background color of the tab nav. */\n    get backgroundColor() { return this._backgroundColor; }\n    set backgroundColor(value) {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    _itemSelected() {\n        // noop\n    }\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            this.updateActiveLink();\n        });\n        super.ngAfterContentInit();\n    }\n    /**\n     * Notifies the component that the active link has been changed.\n     * @breaking-change 8.0.0 `element` parameter to be removed.\n     */\n    updateActiveLink(_element) {\n        if (!this._items) {\n            return;\n        }\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n}\n_MatTabNavBase.ɵfac = function _MatTabNavBase_Factory(t) { return new (t || _MatTabNavBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabNavBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabNavBase, inputs: { color: \"color\", backgroundColor: \"backgroundColor\", disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabNavBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabNavBase.propDecorators = {\n    backgroundColor: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    color: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabNavBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { color: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.ɵfac = function MatTabNav_Factory(t) { return new (t || MatTabNav)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabNav.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabNav, selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]], contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLink, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabNav_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatInkBar, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c5, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c6, true);\n        ɵngcc0.ɵɵviewQuery(_c7, true);\n        ɵngcc0.ɵɵviewQuery(_c8, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-nav-bar\", \"mat-tab-header\"], hostVars: 10, hostBindings: function MatTabNav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { color: \"color\" }, exportAs: [\"matTabNavBar\", \"matTabNav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c9, ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-link-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-links\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabNav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabNav_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabNav_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabNav_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabNav_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabNav_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"], encapsulation: 2 });\nMatTabNav.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabNav.propDecorators = {\n    _items: [{ type: ContentChildren, args: [forwardRef(() => MatTabLink), { descendants: true },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabNav, [{\n        type: Component,\n        args: [{\n                selector: '[mat-tab-nav-bar]',\n                exportAs: 'matTabNavBar, matTabNav',\n                inputs: ['color'],\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-tab-nav-bar mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [forwardRef(() => MatTabLink), { descendants: true }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkMixinBase {\n}\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n/** Base class with all of the `MatTabLink` functionality. */\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    constructor(_tabNavBar, elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /** Whether the tab link is active or not. */\n        this._isActive = false;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    /** Whether the link is active. */\n    get active() { return this._isActive; }\n    set active(value) {\n        if (value !== this._isActive) {\n            this._isActive = value;\n            this._tabNavBar.updateActiveLink(this.elementRef);\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled;\n    }\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this.elementRef);\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n}\n_MatTabLinkBase.ɵfac = function _MatTabLinkBase_Factory(t) { return new (t || _MatTabLinkBase)(ɵngcc0.ɵɵdirectiveInject(_MatTabNavBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabLinkBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabLinkBase, inputs: { active: \"active\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabLinkBase.ctorParameters = () => [\n    { type: _MatTabNavBase },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabLinkBase.propDecorators = {\n    active: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabLinkBase, [{\n        type: Directive\n    }], function () { return [{ type: _MatTabNavBase }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { active: [{\n            type: Input\n        }] }); })();\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.ɵfac = function MatTabLink_Factory(t) { return new (t || MatTabLink)(ɵngcc0.ɵɵdirectiveInject(MatTabNav), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabLink.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLink, selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]], hostAttrs: [1, \"mat-tab-link\", \"mat-focus-indicator\"], hostVars: 7, hostBindings: function MatTabLink_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-current\", ctx.active ? \"page\" : null)(\"aria-disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled)(\"mat-tab-label-active\", ctx.active);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matTabLink\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabLink.ctorParameters = () => [\n    { type: MatTabNav },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLink, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-link], [matTabLink]',\n                exportAs: 'matTabLink',\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                host: {\n                    'class': 'mat-tab-link mat-focus-indicator',\n                    '[attr.aria-current]': 'active ? \"page\" : null',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabIndex]': 'tabIndex',\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[class.mat-tab-label-active]': 'active'\n                }\n            }]\n    }], function () { return [{ type: MatTabNav }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatTabsModule {\n}\nMatTabsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTabsModule });\nMatTabsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTabsModule_Factory(t) { return new (t || MatTabsModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            PortalModule,\n            MatRippleModule,\n            ObserversModule,\n            A11yModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTabsModule, { declarations: function () { return [MatTabGroup, MatTabLabel, MatTab, MatInkBar, MatTabLabelWrapper, MatTabNav, MatTabLink, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule]; }, exports: function () { return [MatCommonModule, MatTabGroup, MatTabLabel, MatTab, MatTabNav, MatTabLink, MatTabContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabsModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PortalModule,\n                    MatRippleModule,\n                    ObserversModule,\n                    A11yModule,\n                ],\n                // Don't export all components because some are only to be used internally.\n                exports: [\n                    MatCommonModule,\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabContent,\n                ],\n                declarations: [\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatInkBar,\n                    MatTabLabelWrapper,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabBody,\n                    MatTabBodyPortal,\n                    MatTabHeader,\n                    MatTabContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵangular_material_src_material_tabs_tabs_a, MAT_TAB_LABEL as ɵangular_material_src_material_tabs_tabs_b, MAT_TAB_CONTENT as ɵangular_material_src_material_tabs_tabs_c, MatPaginatedTabHeader as ɵangular_material_src_material_tabs_tabs_d };\n\n//# sourceMappingURL=tabs.js.map","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n"]}