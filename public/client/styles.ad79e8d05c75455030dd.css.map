{"version":3,"sources":["node_modules/@angular/material/_theming.scss","src/scss/styles.scss","src/common/scss/global.scss","src/common/scss/_common-variables.scss","src/common/scss/utils.scss","src/common/scss/no-results-message.scss","src/common/scss/buttons.scss","src/common/scss/dropdown.scss","src/common/scss/tinymce.scss","src/common/scss/input.scss","src/common/scss/modal.scss","src/common/scss/social-icons.scss","src/common/scss/settings-panel.scss","src/common/scss/perfect-scrollbar-theme.scss","node_modules/perfect-scrollbar/css/perfect-scrollbar.css","src/common/scss/appearance-editor-select-box.scss","src/common/scss/material-table.scss","src/common/scss/responsive-material-table.scss","src/common/scss/multiline-mat-menu-item.scss","src/common/scss/setting-checkbox.scss","src/common/scss/selection-list.scss","src/common/shared/charts/chartist/chartist-styles.scss","node_modules/chartist/dist/scss/chartist.scss","node_modules/chartist/dist/scss/settings/_chartist-settings.scss","src/common/shared/charts/chartist/chartist-tooltip.scss","src/common/scss/appearance-editor.scss","src/common/scss/admin-pill-nav.scss","src/common/scss/dark-mode-adjustments.scss","src/common/scss/cdk-drag-animation.scss","src/common/scss/chart-row.scss","src/common/scss/mat-compact-chip.scss","src/common/scss/context-menu.scss","src/scss/files-select-box.scss","src/scss/file-colors.scss","src/scss/toggle-expansion-icon.scss"],"names":[],"mappings":"AAkjFE,mBACE,eAvLoB,CAwLpB,cAzLkB,CA0LlB,4CC5iFJ,CD+iFE,oCAEE,aC7iFJ,CDgjFE,oCACE,cC7iFJ,CDytEE,yCAvSE,oDAYF,sBA6RE,eCrtEJ,CDwtEE,sCA5SE,oDAYF,sBAkSE,eCptEJ,CDutEE,6CAjTE,oDAYF,sBAuSE,eCntEJ,CDstEE,6CAtTE,oDAYF,sBA4SE,eCltEJ,CDwtEE,2BA9TE,gEAuUA,eC5tEJ,CD+tEE,2BA1UE,gEAmVA,eCnuEJ,CDsuEE,6BAtVE,oDAYF,qBCv5DF,CDquEE,sCA1VE,oDAYF,qBCl5DF,CDmuEI,4CACE,eCjuEN,CDquEE,wBAlWE,oDAYF,qBC14DF,CDouEE,8CAtWE,sDAYF,sBA4VE,eChuEJ,CDmuEE,8CA3WE,oDAYF,sBAiWE,eC/tEJ,CDkuEE,8CAhXE,oDAYF,uBAsWE,eC9tEJ,CDiuEE,8CArXE,oDAYF,sBA2WE,eC7tEJ,CD8gFE,4BAxqBE,oDAYF,qBC72DF,CDwsFE,4GAGI,6CACA,eACA,eCtsFN,CD68FE,6BACE,4CCt8FJ,CDy8FE,gBAEI,eACA,eCv8FN,CD28FE,iCACE,cCx8FJ,CD28FE,qCAEE,cCx8FJ,CDqkGE,cACE,4CClkGJ,CDskGE,yCACE,gBCnkGJ,CDurGE,UACE,eACA,eCprGJ,CDsrGI,+EAEE,cCprGN,CD6xGE,WACE,4CC1xGJ,CD6xGE,iBACE,eACA,eC1xGJ,CD6xGE,2BACE,cC1xGJ,CD0+GE,cACE,4CCv+GJ,CD0+GE,mBACE,cCv+GJ,CD0+GE,qDAGI,eACA,eCx+GN,CD4+GE,8BAEI,cA7LiC,CA8LjC,eC1+GN,CD6jHE,kBA1yDE,oDAYF,qBC1xDF,CD+qHE,4BAEI,6CACA,eACA,eC7qHN,CDirHE,6BAz6DE,oDAYF,qBC/wDF,CDq1ME,gBA3lJE,iBAeU,CAdV,eAeY,CAdZ,iBAeY,CAdZ,4CAeY,CAGd,qBCvwDF,CDi1ME,wBACE,wBC90MJ,CDo1MI,kEACE,cAvB2B,CAwB3B,iBCh1MN,CDo1MI,gFACE,aACA,WCj1MN,CDm1MM,oGACE,eACA,iBCh1MR,CDq1ME,sBACE,eAEA,qCCn1MJ,CDu1MI,kLAtEF,4CAEA,qBC7wMF,CDy1MI,yHA9EF,4CAEA,qBCzwMF,CD41ME,8BACE,cACA,oBCz1MJ,CD41ME,sBACE,aCz1MJ,CD41ME,0BAGE,gBC31MJ,CD81ME,kCACE,aA/EoB,CAgFpB,wBAzEqB,CA6ErB,+BC91MJ,CD80LI,0DACE,qBC30LN,CD80LI,wDACE,iBC50LN,CDg1LM,oPA1DJ,kFAIA,gDAGA,qBCvxLF,CDi1LM,iKAjEJ,oFAIA,gDAGA,qBClxLF,CDo1LM,0JAzEJ,oFAIA,gDAGA,qBC7wLF,CDs1LI,wDACE,aCp1LN,CDu1LI,4DAGE,aCv1LN,CD01LI,oEACE,wBAjDmB,CAqDnB,+BC31LN,CDi2LE,aAGM,oPAxFN,2CCtwLA,CDq2LM,iKA/FN,2CCnwLA,CD02LM,0JAvGN,0CChwLA,CACF,CD6oLI,sDACE,qBC3oLN,CD8oLI,sDACE,cACA,gBC5oLN,CDgpLM,gPAjCJ,2CAEA,qBC5mLF,CDopLM,wJA1CJ,2CAEA,qBCxmLF,CD89LI,yDACE,aC39LN,CD89LI,yDACE,cACA,iBC59LN,CDg+LM,sPAxCJ,4CAEA,qBCr7LF,CDo+LM,2JAjDJ,4CAEA,qBCj7LF,CDsoHE,4CAGE,cCpoHJ,CDmlHE,gEARA,mBACA,gBACA,uBAQE,cACA,qBC9kHJ,CDilHI,8FACE,cC9kHN,CD40HE,wBACE,mBCz0HJ,CDogIE,eAEI,6CACA,eACA,eClgIN,CDslIE,4DAGI,6CACA,cCplIN,CD25IE,8BACE,4CCp5IJ,CDu5IE,oBACE,cCp5IJ,CDgyJE,uDAlME,4CCplJJ,CDsxJE,6BAGI,eACA,eC1xJN,CDm6JE,8CACE,4CCh6JJ,CDm6JE,gBAEI,eACA,eCj6JN,CDq6JE,0BACE,eCl6JJ,CDq6JE,sBACE,cCl6JJ,CDq6JE,yBAEI,eACA,eCn6JN,CDypKE,4CAHE,4CC5oKJ,CD+oKE,6BAGI,eACA,eCnpKN,CDixKE,6GAlvHE,oDAYF,sBA8uHE,QC7wKJ,CDi1KE,aACE,6CACA,cArBoB,CAsBpB,eArB2B,CAsB3B,kBC90KJ,CDi1KE,qBACE,cAvB4B,CAwB5B,eAtBA,CAuBA,kBC90KJ,CD4zHE,gCACE,4CCrzHJ,CD0zHI,8BACE,cCvzHN,CD49GE,wCARA,mBACA,gBACA,uBAQE,cACA,qBCx9GJ,CD29GI,uDACE,cCz9GN,CDizHI,gCACE,cC/yHN,CD+8GE,0CARA,mBACA,gBACA,uBAQE,cACA,qBC38GJ,CD88GI,yDACE,cC58GN,CDyyHI,8BACE,6CACA,eACA,eCvyHN,CD6yHI,qCACE,cC1yHN,CD47GE,+CARA,mBACA,gBACA,uBAQE,cACA,qBCx7GJ,CDuyHI,qGACE,cClyHN,CD+6GE,iDARA,mBACA,gBACA,uBAQE,cACA,qBC36GJ,CD86GI,gEACE,cC56GN,CD4xHI,qCACE,4CA1CU,CA2CV,eACA,eC1xHN,CD4/CE,YAEI,6CACA,cC1/CN,CDwiDE,oBA/GE,oDAYF,qBCh8CF,CDizKE,qBAEI,6CACA,cC/yKN,CDmzKE,4BACE,cAEE,oBACA,kBACA,eCjzKN,CD2oME,UACE,4CCxoMJ,CD2oME,qCAEE,gBACA,cCxoMJ,CDkpCE,YACE,gBAIA,iBClpCJ,CDypCI,wBACE,uBCvpCN,CD2pCE,iCACE,gBCxpCJ,CD2pCE,oBACE,kBACA,kBACA,oBAEA,wDACA,kBCzpCJ,CD3YI,8CAwiDE,YC1pCN,CDzaE,qBACE,SACA,mBACA,WACA,YACA,gBACA,UACA,kBACA,UAGA,UAGA,wBACA,oBCwaJ,CDtjBE,mDAEE,oBAGA,MACA,OACA,YACA,UCsjBJ,CDljBE,uBACE,eACA,YCqjBJ,CDnjBI,6BAGE,YCmjBN,CDpiBE,8CANE,aACA,kBACA,YCwjBJ,CDpjBE,kBAIE,oBACA,sBAMA,eACA,eCwiBJ,CDriBE,sBAEE,kBACA,MACA,SACA,OACA,QAEA,YApE2B,CAqE3B,oBACA,wCACA,kDACA,SCsiBJ,CDpiBI,mDACE,SCsiBN,CDhiBM,6CAPF,mDAQI,UCmiBN,CACF,CD/hBE,2BACE,0BCkiBJ,CD1hBI,iGACE,SC6hBN,CDvhBE,6CACE,kBACA,YA1GkB,CA+GlB,aAIA,sBAGA,cACA,cCihBJ,CD7gBE,wBACE,eAKA,WAKA,iBCwgBJ,CD/aE;EAA0C,KCmb5C,CDnbE;EAA0C,KCmb5C,CDlbE;EAAwC,KCqb1C,CDrbE;EAAwC,KCqb1C,CDnbE,oDAEE,qGCobJ,CDjbE,0DAEE,iGCmbJ,CD9aE,+BACE,WCibJ,CD3aE,yCAqBA,wBACA,iCApBE,sBACA,yBC+aJ,CDtaE,iDASA,wBACA,iCARE,kBC0aJ,CD2pME,8CACE,iBCppMJ,CDoiCE,oBAOI,0CATc,CAUd,UCviCN,CDyxCE,YACE,oBCtxCJ,CDkyCI,4LAHE,0BCrxCN,CDwxCI,uBAEE,oBC1xCN,CD6xCI,gCACE,yBC3xCN,CD+xCE,gEACE,+BC5xCJ,CD+xCE,+DACE,8BC5xCJ,CD+xCE,6DACE,aC5xCJ,CDw0CE,oBACE,8BCr0CJ,CDw0CE,2CACE,yBCr0CJ,CDw3CE,qBACE,8BCr3CJ,CDu3CI,2BACE,sCCr3CN,CDy3CE,8BACE,aCt3CJ,CDy3CE,0FAEE,oCCt3CJ,CD83CE,wJAIE,mCC33CJ,CD83CE,oFAEE,kBC33CJ,CDg4CI,0HACE,kBC53CN,CDmhME,oBAIE,kDACA,oBCnhMJ,CD0hMI,kBA5yMF,iFCsRF,CDshMI,kBA5yMF,gGC0RF,CDkhMI,kBA5yMF,gGC8RF,CD8gMI,kBA5yMF,gGCkSF,CD0gMI,kBA5yMF,iGCsSF,CDsgMI,kBA5yMF,iGC0SF,CDkgMI,kBA5yMF,kGC8SF,CD8/LI,kBA5yMF,sGCkTF,CD0/LI,kBA5yMF,sGCsTF,CDs/LI,kBA5yMF,sGC0TF,CDk/LI,mBA5yMF,uGC8TF,CD8+LI,mBA5yMF,uGCkUF,CD0+LI,mBA5yMF,uGCsUF,CDs+LI,mBA5yMF,uGC0UF,CDk+LI,mBA5yMF,uGC8UF,CD89LI,mBA5yMF,uGCkVF,CD09LI,mBA5yMF,wGCsVF,CDs9LI,mBA5yMF,wGC0VF,CDk9LI,mBA5yMF,wGC8VF,CD88LI,mBA5yMF,wGCkWF,CD08LI,mBA5yMF,yGCsWF,CDs8LI,mBA5yMF,yGC0WF,CDk8LI,mBA5yMF,yGC8WF,CD87LI,mBA5yMF,yGCkXF,CD07LI,mBA5yMF,yGCsXF,CD67LI,yBACE,YC17LN,CDk9CE,wBAEE,gCACA,oBCh9CJ,CD5WE,sDAnBA,iGCkYF,CDo9CI,8EACE,+BCl9CN,CDo9CM,wGACE,oBCl9CR,CDilDE,mBACE,gCACA,oCC9kDJ,CD1tBI,6CA2yEE,kBACA,eC9kDN,CDmlDI,qCACE,oCACA,+BChlDN,CDqlDI,mCACE,WACA,kBCllDN,CDslDE,WACE,iBCnlDJ,CDulDI,qCACE,YCplDN,CDylDI,uCAcI,yCAZY,CAed,yBCrmDN,CDymDE,mBACE,kBACA,kBACA,qBACA,kBACA,qCACA,oBACA,gBACA,mBACA,uBACA,mBCtmDJ,CDymDE,mFAEE,eCtmDJ,CD2mDE,oCAEE,cCzmDJ,CD08CE,oCACE,UANmB,CAOnB,WAPmB,CAQnB,gBCv8CJ,CD28CI,oDACE,QCz8CN,CD88CI,oDACE,WC58CN,CDi9CI,qDACE,UC/8CN,CDo9CI,+DACE,UACA,WCl9CN,CDu9CI,oDACE,WCr9CN,CD09CI,8DACE,WACA,UCx9CN,CD89CM,uEACE,SC59CR,CDi+CM,iFACE,UACA,UC/9CR,CDo+CM,sEACE,UCl+CR,CDu+CM,gFACE,WACA,SCr+CR,CDk6CE,qCACE,UAPqB,CAQrB,WARqB,CASrB,gBC/5CJ,CDm6CI,qDACE,SCj6CN,CDs6CI,qDACE,YCp6CN,CDy6CI,sDACE,UCv6CN,CD46CI,gEACE,UACA,WC16CN,CD+6CI,qDACE,WC76CN,CDk7CI,+DACE,WACA,UCh7CN,CDs7CM,wEACE,UCp7CR,CDy7CM,kFACE,UACA,WCv7CR,CD47CM,uEACE,WC17CR,CD+7CM,iFACE,WACA,UC77CR,CD03CE,oCACE,UALmB,CAMnB,WANmB,CAOnB,gBCv3CJ,CD23CI,oDACE,SCz3CN,CD83CI,oDACE,YC53CN,CDi4CI,qDACE,UC/3CN,CDo4CI,+DACE,UACA,WCl4CN,CDu4CI,oDACE,WCr4CN,CD04CI,8DACE,WACA,UCx4CN,CD84CM,uEACE,UC54CR,CDi5CM,iFACE,UACA,WC/4CR,CDo5CM,sEACE,WCl5CR,CDu5CM,gFACE,WACA,UCr5CR,CDijDE,4BAvmEA,yGAymEE,gCACA,oBC9iDJ,CD4qDE,iDAKE,cACA,sBC7qDJ,CD6oDE,qFACE,+BC3oDJ,CD6oDE,kFACE,8BC3oDJ,CD6oDE,4EACE,aC3oDJ,CD+oDI,glBAEE,oCC9oDN,CD2kDE,mKACE,0CCzkDJ,CD4kDE,gKACE,yCC1kDJ,CD6kDE,0JACE,wBC3kDJ,CD8kDE,2LACE,4BC5kDJ,CD6pDI,6GACE,UAxGuB,CAyGvB,6BC3pDN,CD+pDE,0BACE,oCC5pDJ,CDiqDE,8CACE,sCC9pDJ,CDiqDE,2DAEE,qBACA,wCC/pDJ,CDumDE,kNACE,+BClmDJ,CDomDE,+FACE,UClmDJ,CDsmDI,4vBAEE,oCCrmDN,CDwlDE,2GACE,0CCtlDJ,CDwlDE,uGACE,yCCtlDJ,CDwlDE,+FACE,wBCtlDJ,CD0lDI,4vBAEE,0CCzlDN,CD2jDE,kXAfA,0CADmB,CAGjB,UCtiDJ,CDujDE,+KAnBA,qBCjiDF,CD1nBE,iGAnBA,iFCipBF,CD9nBE,iDAnBA,gGCqpBF,CDloBE,kFAnBA,sGCwpBF,CDroBE,qEAnBA,iFC2pBF,CDxoBE,mFAnBA,kGC+pBF,CD5oBE,qJAnBA,uGCkqBF,CD/oBE,2HAnBA,iFCqqBF,CD0wDE,uDA/6EA,gGC0qBF,CD0wDE,iHAEE,eCvwDJ,CD0wDE,mBACE,yBCvwDJ,CDywDI,oDACE,0CCvwDN,CD2wDE,uCACE,qBACA,+BCxwDJ,CD0wDI,wEACE,0CCxwDN,CD4wDE,mFACE,+CCzwDJ,CD4wDE,6FACE,iBACA,gDCzwDJ,CD6wDI,8GACE,iBACA,kBACA,8CC1wDN,CD8wDE,2BACE,2CACA,8BC3wDJ,CD6wDI,iEACE,oBC3wDN,CD+wDE,4BACE,qCACA,0CC5wDJ,CD8wDI,kEACE,+BC5wDN,CD+wDI,sDACE,wBC7wDN,CDixDE,iHAEE,0CC9wDJ,CD+xDI,wEACE,gBC5xDN,CDg0DE,UAEE,gCACA,oBC9zDJ,CD3tBE,wCAnBA,gGCivBF,CD9tBE,sDAnBA,iFCovBF,CDg0DE,mBACE,8BC7zDJ,CDs4DE,oBACE,qCCn4DJ,CDs4DE,wBACE,qCCn4DJ,CDs4DE,6BAGE,iDCr4DJ,CDw4DE,wBACE,iDCr4DJ,CDy4DI,4HACE,0CCt4DN,CDy4DI,0HACE,yCCv4DN,CD04DI,sHACE,wBCx4DN,CD+4DM,gJACE,wBC54DR,CDi5DM,sEACE,oBC/4DR,CDm5DI,2CACE,8BCj5DN,CDu5DE,kCACE,0CCp5DJ,CDy5DI,mKACE,oCCr5DN,CDw5DI,iKACE,mCCr5DN,CDw5DI,6JACE,kBCr5DN,CD++DE,4BA3CA,+BAwCwB,CAvCxB,oBCh8DF,CDk8DE,6CACE,oBAqCsB,CApCtB,UCh8DJ,CD0+DM,2DAhyFJ,gGCyzBF,CD2+DM,2EACE,WCz+DR,CD6+DI,8CACE,UC3+DN,CD8+DI,kCACE,oCC5+DN,CDi/DI,0DAlEF,0CAwBwE,CAvBxE,+BC36DF,CD66DE,2EACE,+BAoB+B,CAnB/B,UC36DJ,CDg8DE,8EATA,0CADmB,CAGjB,UCr7DJ,CDw+DI,uDAtEF,wBAwBwE,CAvBxE,UC/5DF,CDi6DE,wEACE,UAoB+B,CAnB/B,UC/5DJ,CDo7DE,2EATA,qBCx6DF,CDi+DI,yDA1EF,yCAwBwE,CAvBxE,+BCp5DF,CDs5DE,0EACE,+BAoB+B,CAnB/B,UCp5DJ,CDy6DE,6EATA,0CADmB,CAGjB,UC95DJ,CDijEE,WACE,+BC9iEJ,CDijEE,uJAIE,kBC9iEJ,CDijEE,wFAEE,6CC9iEJ,CDijEE,iBACE,8BC9iEJ,CDijEE,2BACE,oBC9iEJ,CD8oEE,oBACE,yCC3oEJ,CDgpEE,+HAGE,8BC7oEJ,CDgpEE,2BACE,yBC7oEJ,CDgpEE,yCACE,oCC7oEJ,CDgpEE,yBACE,8BC7oEJ,CDgpEE,gEAEE,qBACA,wBC7oEJ,CDspEE,mMACE,yBC/oEJ,CD+lEE,weAwDM,gCCjpER,CDspEE,8BAUI,+BC5pEN,CDqlEE,uGA+EI,gCChqEN,CDilEE,mIA+FM,UC5qER,CD0vEE,sFAEE,6BCvvEJ,CD0vEE,4GAEE,4DCvvEJ,CD0vEE,4GAEE,6DCvvEJ,CD0vEE,4IAEE,kBCvvEJ,CD0vEE,sIAEE,kBCvvEJ,CD0hEE,4BACE,2CACA,+BCvhEJ,CD0hEE,wDASI,UC/hEN,CDmiEE,oDACE,oDChiEJ,CD6oEE,wBAvmGA,kGAymGE,sCACA,oBC1oEJ,CD0sEE,sEACE,oCCxsEJ,CD2sEE,4JAEE,6BCzsEJ,CD4sEE,kLAEE,oFC1sEJ,CD6sEE,kLAEE,qFC3sEJ,CD8sEE,kNAEE,kBC5sEJ,CD+sEE,4MAEE,kBC7sEJ,CDg/DE,+DACE,0CACA,+BC9+DJ,CDi/DE,2FASI,UCv/DN,CD2/DE,uFACE,oDCz/DJ,CD6qEE,wJAEE,6BC3qEJ,CD8qEE,8KAEE,4DC5qEJ,CD+qEE,8KAEE,6DC7qEJ,CDgrEE,8MAEE,kBC9qEJ,CDirEE,wMAEE,kBC/qEJ,CDk9DE,6DACE,yBACA,UCh9DJ,CDm9DE,yFAII,mCCp9DN,CD69DE,qFACE,+BC39DJ,CDslEE,8BArnGA,iFCmiCF,CDslEE,8BACE,+BCnlEJ,CDqlEI,yCACE,8BCnlEN,CDslEI,uCACE,aCplEN,CDwlEE,sCACE,yBCrlEJ,CDwrEE,sBAzuGA,0GA2uGE,gCACA,oBCrrEJ,CDszDE,aACE,0CCnzDJ,CDszDE,sBACE,4CCnzDJ,CDwvEE,qBAEE,gCACA,oBCtvEJ,CDjjCE,mDAnBA,gGCukCF,CDsvEE,gBACE,0CCnvEJ,CD0vEM,mSACE,0BCvvER,CD8vEE,oBACE,oGAEE,+BC5vEJ,CACF,CD+vEE,kCACE,oBC7vEJ,CDgwEE,uEAEE,8BC7vEJ,CDgwEE,gDACE,oCC7vEJ,CD+vEI,0KAEE,aC7vEN,CDyxEI,4BACE,WCtxEN,CDwxEM,yCACE,WCtxER,CDkzJE,gCACE,8BC3yJJ,CD8yJE,kDACE,+BC3yJJ,CD6yJI,6DACE,8BC3yJN,CD8yJI,2DACE,aC5yJN,CDgzJE,6CACE,8BC7yJJ,CDgzJE,uBACE,0CC7yJJ,CDizJI,mDACE,0CC9yJN,CDgzJM,8DACE,yCC9yJR,CDizJM,4DACE,wBC/yJR,CDqzJI,4GACE,+BClzJN,CDqzJI,uHACE,8BCnzJN,CDk0JM,uVAEE,aCzzJR,CD6zJI,uIAEE,wBC3zJN,CD+zJE,WACE,aC5zJJ,CD41II,oGACE,8BCt1IN,CDy1II,4DACE,0CCv1IN,CD01II,oFA/9DF,gHACA,yBACA,0BCx3EF,CD0qJI,8DACE,0CCvqJN,CD0qJI,sFAxzEF,gHACA,yBACA,0BC/2EF,CD6sII,mMACE,0CCpsIN,CDwsIM,8EACE,yBCtsIR,CDysIM,yFACE,4BCvsIR,CDkgJI,4HACE,+BC5/IN,CDggJM,6EACE,+BC9/IR,CDigJM,wFACE,8BC//IR,CDygJM,qMACE,aCpgJR,CDygJM,iFACE,yBCvgJR,CD0gJM,mFACE,+BCxgJR,CDqxEI,sBACE,+BClxEN,CDqxEI,qBACE,8BCnxEN,CDsxEI,mBACE,aCpxEN,CDi4EE,mEACE,8BC93EJ,CDi4EE,uHAEE,yBC93EJ,CDi4EE,mBACE,qCC93EJ,CDq0EE,gCA4DI,8BC93EN,CDs0EE,qCAwDI,8BC33EN,CDu0EE,8CAoDI,8BCx3EN,CDw0EE,yCAgDI,8BCr3EN,CDw4EE,8CACE,oCCr4EJ,CDw4EE,uFAEE,mBCr4EJ,CDw4EE,0FACE,aCr4EJ,CD+7EI,8DACE,oBCz7EN,CD47EI,8BACE,8BC17EN,CD87EE,wBACE,0CC37EJ,CDi8EI,gMACE,0BC17EN,CD+7EI,+GACE,oCC57EN,CDqhFE,gBAEE,+BCnhFJ,CDtyCE,8CAnBA,iGC4zCF,CDmhFE,eACE,uBACA,oBChhFJ,CDmhFM,wDACE,yBCjhFR,CDshFE,uEAEE,8BCnhFJ,CD0hFI,uLACE,0BCphFN,CDmlFE,eACE,+BChlFJ,CDmlFE,4DAEE,8BChlFJ,CDmlFE,kDAEE,8CACA,+CChlFJ,CDmlFE,yCAEE,6CChlFJ,CDolFI,uMAIE,gCCjlFN,CDsmFI,yBACE,eCnmFN,CDqoFE,6BACE,8BCloFJ,CDqoFE,yBACE,0CCloFJ,CDqoFE,6BACE,0CCloFJ,CDsoFI,0DACE,6BCnoFN,CDsoFI,sDACE,yCCpoFN,CDuoFI,0DACE,yCCroFN,CD0oFI,wDACE,YCvoFN,CD0oFI,oDACE,wBCxoFN,CD2oFI,wDACE,wBCzoFN,CDirFI,iDACE,gCC9qFN,CDirFI,uEACE,+BC/qFN,CDkrFI,mEACE,cChrFN,CDsuFE,wBACE,qCCnuFJ,CD8sFE,wEACE,sCC3sFJ,CD8sFE,2SAIE,0CC9sFJ,CDssFE,uEACE,qCCpsFJ,CDusFE,uSAIE,yCCvsFJ,CD+rFE,qEACE,oBC7rFJ,CDgsFE,+RAIE,wBChsFJ,CDiuFM,4IAEE,gCC/tFR,CDkuFM,wIAEE,oCChuFR,CDmuFM,8DACE,yBCjuFR,CDuuFI,sCACE,0CCruFN,CDsxFE,kBACE,oBCnxFJ,CDsxFE,wBACE,8BCnxFJ,CDsxFE,uCACE,yBCnxFJ,CDsxFE,kBACE,8BCnxFJ,CDsxFE,kBACE,+BCnxFJ,CDl8CE,gDAnBA,iGCw9CF,CDmxFI,qEACE,oCCjxFN,CDuxFM,0DACE,+BCpxFR,CDuxFM,yDACE,8BCrxFR,CD6xFI,wHACE,aCxxFN,CD2xFI,kEACE,yBCzxFN,CDm1FE,sBACE,iDALmC,CAMnC,oBCh1FJ,CDm1FE,YAEE,oBCh1FJ,CDk1FI,wCAHA,qCC50FJ,CDm1FI,kCA30IF,wGC2/CF,CDu1FE,iBACE,gDCp1FJ,CD41FE,2DACE,+CAhCmB,CAiCnB,iBCr1FJ,CDu1FI,0CACE,iBACA,gDCr1FN,CDy1FE,sCAaI,mCAXe,CAYf,UCl2FN,CDs4FI,sDACE,yCCn4FN,CDs4FI,oDAGE,yCCt4FN,CDy4FI,kDAGE,yCCz4FN,CD43FI,kEACE,0CC13FN,CD63FI,gEAGE,0CC73FN,CDg4FI,8DAGE,0CCh4FN,CDm3FI,+DACE,wBCj3FN,CDo3FI,6DAGE,0CCp3FN,CDu3FI,2DAGE,wBCv3FN,CD45FI,wDAGE,0CC55FN,CDg6FE,wBAh9IA,iGAk9IE,wBC75FJ,CDg6FE,sBACE,oCC75FJ,CD4+FE,6BACE,+CCz+FJ,CDg8FE,wGAGE,0CC77FJ,CDg8FE,0CACE,+BC97FJ,CDi8FE,oCAQI,UCt8FN,CDo7FE,qGAGE,yCCj7FJ,CDo7FE,yCACE,+BCl7FJ,CDq7FE,mCAGE,0CADQ,CAMN,UCz7FN,CDu6FE,+FAGE,wBCp6FJ,CDu6FE,uCACE,UCr6FJ,CDw6FE,iCAQI,UC76FN,CDq9FI,yFACE,oCCj9FN,CD69FM,6LACE,+CCr9FR,CD29FI,6CAGE,0CADQ,CAMN,WC99FR,CDm+FM,oJAEE,+BCj+FR,CDq+FQ,4KAEE,+CCn+FV,CDy+FM,6EACE,2CA3EiB,CA4EjB,4BCv+FR,CD4+FQ,4KACE,gCC1+FV,CD6+FQ,oNACE,2CC3+FV,CDi/FE,gDACE,qCAvFsB,CA4FpB,UCl/FN,CDs/FE,yCACE,kIAIA,0IAME,UC3/FN,CD+/FE,uCACE,mIAME,UCjgGN,CDklGI,kGAGE,gCCjlGN,CDulGI,oBACE,uBACE,eCrlGN,CACF,CDwlGI,qEAIE,8BCxlGN,CD2lGI,gCAGE,0CACA,+BC3lGN,CD8lGI,+HAGE,2CACA,+BC5lGN,CD+lGI,4CACE,6BACA,aC7lGN,CDgmGI,uDACE,oBC9lGN,CDimGI,sDACE,aC/lGN,CDmmGE,8CACE,qCChmGJ,CDmmGE,kCACE,2CChmGJ,CDmmGE,wGAGE,0CChmGJ,CDuoGI,+BACE,WCpoGN,CDuoGI,+FAEE,YCpoGN,CDyoGI,kCACE,UACA,YCtoGN,CDipGI,iNACE,QC1oGN,CD0qGE,uBAeI,8BCrrGN,CD+tGE,iCAEE,iDC5tGJ,CDguGI,+FAEE,8CAVY,CAWZ,kBC7tGN,CDiuGE,6BACE,oBC9tGJ,CDguGI,+DACE,yBC9tGN,CDkuGE,mCACE,2BC/tGJ,CDkuGE,uEACE,gCC/tGJ,CDmuGE,gGAEE,mBACA,eChuGJ,CDkwGE,kFACE,0CC/vGJ,CD8vGE,gIACE,0CC5vGJ,CDqwGM,wqBACE,0CC/vGR,CDovGE,gFACE,yCClvGJ,CDivGE,4HACE,0CC/uGJ,CD8uGE,4EACE,wBC5uGJ,CD2uGE,oHACE,qBCzuGJ,CD2vGE,8VACE,0CCzvGJ,CDgwGI,gfACE,+BC3vGN,CDowGE,gXACE,sCC/vGJ,CDowGE,sHACE,0CClwGJ,CDguGM,gwBACE,0CC1tGR,CDkuGE,wVACE,yCChuGJ,CDuuGI,weACE,+BCluGN,CD2uGE,4WACE,sCCtuGJ,CD2uGE,oHACE,0CCzuGJ,CDgtGE,4UACE,wBC9sGJ,CDqtGI,wdACE,UChtGN,CDytGE,oWACE,iBCptGJ,CDytGE,gHACE,0CCvtGJ,CD60GE,aAEE,oBC30GJ,CD60GI,yBApCF,qCACA,+BCtyGF,CD60GI,wBAxCF,oCACA,+BClyGF,CD60GI,sBA5CF,mBACA,UC9xGF,CDkyGE,4HAGE,6BChyGJ,CDmyGE,4MAKE,aCjyGJ,CDoyGE,gCACE,wBClyGJ,CDqwGE,2BACE,eClwGJ,CDowGE,yCACE,WCjwGJ,CDs1GI,yBAzFF,2BACE,eCzvGF,CD2vGA,yCACE,WCxvGF,CACF,CDu3GE,aACE,4BCr3GJ,CDoxIE,UACE,+BCjxIJ,CDoxIE,qCAEE,oBCjxIJ,CDuyII,eACE,eCpyIN,CD65GE,yBAGE,yBACA,mBAzzKF,kGC85DF,CDg6GE,4BACE,8BC75GJ,CC35EA,UACE,mCACA,wCACA,2BACA,8BACA,0BACA,kCACA,WACA,kBACA,qBDw6EF,CCr6EA,KACE,gBACA,yBDw6EF,CCr6EA,KACE,4CCTY,CDUZ,qBACA,sCACA,uBACA,iBACA,QDw6EF,CCj6EE,qCAFA,kBD06EF,CCn6EA,mCACE,WACA,cDs6EF,CG38EA,sCACE,WACA,YACA,gBACA,iBHm9EF,CGj9EE,4CACE,kBACA,eHm9EJ,CG/8EA,oBACE,kBACA,eHk9EF,CG/8EA,IACE,aHk9EF,CG/8EA,EACE,qBACA,oBHk9EF,CGh9EE,wBACE,yBHk9EJ,CG98EA,eACE,eHi9EF,CG98EA,eACE,gBACA,eACA,QHi9EF,CG98EA,eACE,eHi9EF,CG98EA,SACE,SACA,UACA,SACA,WHi9EF,CG98EA,OACE,eHi9EF,CG98EA,OACE,SACA,SHi9EF,CG98EA,QACE,uBACA,iBHi9EF,CG98EA,iBACE,kBACA,mBHi9EF,CG98EA,OACE,aHi9EF,CG/8EE,qBACE,kBHi9EJ,CG98EE,kBACE,eHg9EJ,CG38EA,sBACE,6BH88EF,CG38EA,gBACE,0CDtDkB,CCuDlB,eDtDsB,CCuDtB,kBACA,sCACA,YH88EF,CG18EA,oBACE,WH68EF,CG38EE,0BACE,yCH68EJ,CG18EE,0FACE,sBH48EJ,CGx8EA,YACE,yBH28EF,CGx8EA,mBACE,sDACA,oBH28EF,CGz8EE,sCACE,UACA,WACA,4BH28EJ,CGx8EE,4CACE,2CACA,iBH08EJ,CItkFA,oBACE,WACA,gBACA,eACA,aACA,uBACA,mBACA,sBACA,eJ8kFF,CI5kFE,+BACE,4BJ8kFJ,CI5kFI,qCACE,WACA,YACA,aACA,iBJ8kFN,CI3kFI,qCACE,iBACA,gBACA,eJ6kFN,CI1kFI,0CACE,gBJ4kFN,CIxkFE,0BACE,WACA,YACA,6BJ0kFJ,CIxkFI,8BACE,UJ0kFN,CIvkFI,yCACE,kBJykFN,CIrkFE,0BACE,iBACA,kBACA,kBACA,oBJukFJ,CIpkFE,+BACE,iBACA,kBACA,gBACA,8BJskFJ,CK9nFA,gBACE,gBACA,SACA,cACA,aACA,oBACA,iBACA,UACA,gBACA,YACA,yBACA,sBACA,qBACA,aACA,eACA,kBLuoFF,CKpoFA,0BACE,gCACA,oBLuoFF,CM3pFA,oBACE,WNmqFF,CMjqFE,mCACE,YNmqFJ,CMhqFE,8BACE,iBACA,+BACA,cNkqFJ,CO5qFA,iBACE,YACA,aPorFF,COlrFE,gCACE,WPorFJ,COjrFE,4BACE,kDACA,kDACA,SPmrFJ,CQ9rFA,iBACE,cACA,URssFF,CQnsFI,8IACE,oBRqsFN,CQlsFI,iCACE,aRosFN,CQhsFE,wBACE,eACA,aRksFJ,CQhsFI,0BACE,cACA,eRksFN,CQ9rFE,uDACE,+BACA,cRgsFJ,CQ7rFE,oDACE,sBACA,cACA,kBR+rFJ,CQ5rFE,sGACE,cACA,WACA,WNjBW,CMkBX,cACA,oBACA,2CACA,YNpBY,CMqBZ,SACA,UACA,mBACA,eACA,oBACA,6BACA,sBACA,kBACA,yBACA,6DACA,mCACA,iBACA,kBACA,SR8rFJ,CQxrFI,8HACE,UACA,sCACA,6CR0rFN,CQvrFI,0IACE,URyrFN,CQtrFI,8IACE,eACA,URwrFN,CQrrFI,0LACE,eRurFN,CQnrFE,wBACE,qBRqrFJ,CQjrFE,kCACE,WRmrFJ,CQhrFE,0BACE,YACA,YRkrFJ,CQ9qFI,sDACE,YRgrFN,CQ9qFM,yHACE,MRgrFR,CQ5qFQ,6JACE,0BACA,6BACA,iBR8qFV,CQ3qFQ,+KACE,yBACA,2BR6qFV,CQxqFQ,iJACE,yBACA,4BACA,gBR0qFV,CQvqFQ,mKACE,0BACA,4BRyqFV,CQnqFM,+HACE,aACA,iBRqqFR,CQ/pFA,yBACE,YRkqFF,CQhqFE,0CACE,kBACA,aRkqFJ,CQhqFI,qDACE,cRkqFN,CQ5pFE,2DACE,kBR+pFJ,CSrzFE,8BACE,kBACA,MACA,MT6zFJ,CS1zFE,gCACE,iBT4zFJ,CSzzFE,wBACE,aACA,mBACA,kBACA,eT2zFJ,CSxzFE,aACE,iBACA,gBACA,WACA,cACA,SACA,gBT0zFJ,CSvzFE,8BACE,kBACA,gBACA,kBTyzFJ,CStzFE,8BACE,yBACA,mBTwzFJ,CSrzFE,wBACE,cACA,UA5CgB,CA6ChB,WA7CgB,CA8ChB,gBA9CgB,CA+ChB,+BACA,8BACA,WTuzFJ,CSrzFI,8BACE,uBTuzFN,CSpzFI,kCACE,UAxDc,CAyDd,WTszFN,CSlzFE,kBACE,aTozFJ,CSlzFI,yBACE,cTozFN,CSlzFM,sCACE,kBTozFR,CS/yFE,0BACE,eACA,aTizFJ,CU33FE,oBACE,YVm4FJ,CUh4FE,2BACE,WACA,YACA,iBACA,iBACA,kBACA,iBVk4FJ,CUh4FI,oCACE,wBRYW,CQXX,UVk4FN,CU/3FI,mCACE,wBRQU,CQPV,UVi4FN,CU93FI,kCACE,wBRIS,CQHT,UVg4FN,CU73FI,gCACE,wBRCmB,CQAnB,UV+3FN,CU53FI,gCACE,wBRLmB,CQMnB,UV83FN,CU33FI,qCACE,WACA,YACA,iBACA,aV63FN,CWt6FA,gBACE,cACA,kBAJQ,CAKR,0CT8BkB,CS7BlB,eT8BsB,CS7BtB,2BACA,4BACA,sCACA,kBACA,iBX86FF,CW56FE,sBACE,QX86FJ,CW36FE,wBACE,kBX66FJ,CW36FI,+BACE,eACA,kBACA,WACA,yBX66FN,CW16FI,kCACE,iBACA,8BX46FN,CWn6FI,kNACE,eXw6FN,CWt6FM,mEACE,iBXw6FR,CWr6FM,kDACE,WXu6FR,CWn6FI,uFACE,mBACA,cACA,eXq6FN,CWl6FI,4DACE,yBXo6FN,CWh6FE,6BACE,gBXk6FJ,CW/5FE,4BACE,eXi6FJ,CW95FE,+BACE,kBXg6FJ,CW75FE,wBACE,yBACA,aACA,cACA,kBACA,yBACA,8BACA,eX+5FJ,CW75FI,0BACE,eACA,iBACA,gBACA,qBX+5FN,CW55FI,+BACE,iBACA,gBACA,UX85FN,CW35FI,+BACE,gBACA,gBX65FN,CW15FI,oCACE,kDACA,qBACA,0CX45FN,CWz5FI,yCACE,yBACA,6BX25FN,CWx5FI,uCACE,yBACA,6BX05FN,CWt5FE,oCACE,2CACA,WACA,aXw5FJ,CWr5FE,6BACE,+CACA,kDACA,iBACA,mBACA,eXu5FJ,CWl5FM,kLACE,oBXu5FR,CWp5FM,6CACE,aXs5FR,CWl5FI,8CACE,kBXo5FN,CWj5FI,2CACE,gBACA,aXm5FN,CWh5FI,wCACE,YACA,UACA,QXk5FN,CW/4FI,0CACE,kBXi5FN,CW94FI,gCACE,iBACA,gBACA,iBXg5FN,CW54FE,kCACE,kBACA,SACA,MX84FJ,CW34FE,+BACE,yBX64FJ,CW14FE,uBACE,eX44FJ,CY7jGA,IACE,iBZqkGF,CYnkGE,gBACE,UZqkGJ,CazkGA,IACE,0BACA,qBACA,wBACA,kBACA,qBb+kGF,CazkGA,YAKE,YAEA,QbilGF,Ca5kGA,wBAXE,aACA,UACA,0DACA,kEAKA,iBb2lGF,CaxlGA,YAKE,WAEA,ObilGF,Ca5kGA,oDAEE,cACA,4Bb+kGF,Ca5kGA,oJAME,Ub+kGF,Ca5kGA,kJAME,sBACA,Ub+kGF,CazkGA,aAGE,8DACA,sEACA,WAEA,UbilGF,Ca5kGA,0BAXE,sBACA,kBAOA,iBb2lGF,CaxlGA,aAGE,6DACA,qEACA,UAEA,SbilGF,Ca5kGA,oGAGE,sBACA,Wb+kGF,Ca5kGA,oGAGE,sBACA,Ub+kGF,Ca3kGA,oCACE,IACE,uBb+kGF,CACF,Ca5kGA,sEACE,IACE,uBb8kGF,CACF,CchsGA,iBACE,0BACA,kBACA,oBACA,YACA,UACA,UdksGF,CetsGA,gBACE,iBACA,Uf8sGF,Ce5sGE,kEACE,iBf8sGJ,Ce3sGE,gEACE,kBf6sGJ,Ce1sGE,sCACE,UAGA,iDf4sGJ,CezsGE,mBACE,+BACA,gBACA,iBACA,ef2sGJ,CexsGE,mBACE,wBf0sGJ,CevsGE,yBACE,WfysGJ,CetsGE,yBACE,WfwsGJ,CersGE,gCACE,WACA,kBfusGJ,CepsGE,6BACE,+BACA,kBACA,mBACA,gBfssGJ,CensGE,mCACE,aACA,mBACA,iBfqsGJ,CensGI,uCACE,qBACA,sBACA,WACA,YACA,kBACA,qCACA,kBACA,afqsGN,CelsGI,8CACE,+BACA,cfosGN,CehsGE,sBACE,afksGJ,CehsGI,4BACE,yBfksGN,Ce7rGA,WACE,kBACA,0CbjDkB,CakDlB,ebjDsB,CakDtB,sCACA,iBfgsGF,Ce9rGE,8BACE,cfgsGJ,CgBrxGE,oCADF,2BAII,YACA,gBACA,QhB8xGF,CgB5xGE,iEANA,UACA,wBhBqyGF,CgB3xGE,0CACE,6BACA,ehB6xGJ,CgBtxGE,+FACE,YhB2xGJ,CgBxxGE,yCACE,eACA,gBACA,cACA,WhB0xGJ,CgBxxGI,+CACE,kBhB0xGN,CgBvxGI,gDACE,0BhByxGN,CgBpxGE,oCACE,cACA,gBACA,YACA,aACA,gBACA,eACA,kBjBqcJ,iGiBncI,iBhBsxGJ,CgBpxGI,iDACE,ehBsxGN,CgBlxGE,0CACE,YhBoxGJ,CgBjxGE,qCACE,cACA,YhBmxGJ,CgBjxGI,mDACE,chBmxGN,CgB9wGI,+CACE,yBACA,eACA,gBACA,kBACA,8BhBgxGN,CgB5wGE,2FACE,YhB8wGJ,CgB3wGE,4CACE,kBACA,WACA,UACA,SACA,ShB6wGJ,CgB1wGE,6CACE,WACA,kBhB4wGJ,CACF,CgBvwGE,oCADF,kBAEI,UACA,yBACA,YACA,gBACA,QhB6wGF,CgB3wGE,mCACE,4BhB6wGJ,CgB3wGI,8CACE,YhB6wGN,CgBzwGE,uEACE,UACA,YACA,kBhB2wGJ,CgBxwGE,0DACE,kBACA,aACA,OACA,WACA,qChB0wGJ,CgBtwGE,uIACE,ahBwwGJ,CgBpwGE,2BACE,kBACA,YACA,YhBswGJ,CgBlwGE,2BACE,sBACA,sCACA,mBACA,kBACA,kBjBkWJ,iGiBhWI,iBhBowGJ,CgBhwGE,qBACE,eACA,aACA,kDACA,mBACA,gBACA,sBhBkwGJ,CgBhwGI,mCACE,chBkwGN,CgB/vGI,kCACE,gBACA,kBhBiwGN,CgB7vGE,gEACE,aACA,UhB+vGJ,CgB1vGI,sCACE,yBACA,cACA,gBACA,kBACA,+BACA,UACA,mBACA,gBACA,sBhB4vGN,CgBxvGE,+BACE,iBACA,kBACA,sBhB0vGJ,CgBvvGE,sEACE,sBhByvGJ,CACF,CiBp8GA,2EACE,cACA,mBACA,mBACA,YACA,gBACA,kBACA,gBjB48GF,CiB18GE,+FACE,YjB48GJ,CiBz8GE,yFACE,cACA,gBjB28GJ,CiBx8GE,qGACE,cACA,+BACA,cjB08GJ,CiBv8GE,+FACE,ajBy8GJ,CiBr8GA,sBACE,+BjBw8GF,CiBt8GE,6BACE,ejBw8GJ,CkBz+GA,0BACE,kBlBi/GF,CkB/+GE,qCACE,elBi/GJ,CkB9+GE,wCACE,kBlBg/GJ,CkB7+GE,4BACE,+BACA,iBACA,gBACA,clB++GJ,CmB9/GA,gBACE,gBACA,SACA,SnBsgHF,CmBngHI,mDACE,0CnBqgHN,CmBjgHE,kCACE,aACA,mBACA,aACA,eACA,iBnBmgHJ,CmBjgHI,wCACE,cACA,kBnBmgHN,CmBhgHI,uDACE,cACA,UnBkgHN,CmB9/GE,gCACE,gBnBggHJ,CmB7/GE,uCACE,QnB+/GJ,CmB5/GE,wCACE,kBACA,enB8/GJ,CmB5/GI,8CACE,yBnB8/GN,CoBnhHA,cACE,gBACA,YACA,gBpB2hHF,CoBvhHA,wBACE,WACA,UACA,iCACA,epB0hHF,CoBthHA,SACE,gBpByhHF,CoBthHA,kCACE,GACE,SpByhHF,CoBthHA,IACE,SpBwhHF,CoBrhHA,GACE,SpBuhHF,CACF,CoBphHA,mDACE,iFpBshHF,CoBnhHA,0BACE,wBACA,iCACA,epBshHF,CoBjhHE,8CACE,wBpBohHJ,CoBrhHE,+CACE,wBpBwhHJ,CoBzhHE,+CACE,wBpB4hHJ,CoB7hHE,+CACE,wBpBgiHJ,CoBjiHE,+CACE,wBpBoiHJ,CoBriHE,+CACE,wBpBwiHJ,CoBziHE,+CACE,wBpB4iHJ,CoB7iHE,+CACE,wBpBgjHJ,CoBjjHE,+CACE,wBpBojHJ,CoBrjHE,gDACE,wBpBwjHJ,CoBzjHE,gDACE,wBpB4jHJ,CoB7jHE,gDACE,wBpBgkHJ,CoBjkHE,gDACE,wBpBokHJ,CoBrkHE,gDACE,wBpBwkHJ,CoBjkHE,uDACE,gBpBukHJ,CoBpkHE,mDACE,kBACA,yBACA,iBACA,wBACA,0CACA,kBpBskHJ,CqBxiHE,UAxDA,6BD1Dc,CC2Dd,8BD3Dc,CC4Dd,gBD3Da,CC4Db,arBomHF,CqB3iHE,iDArEA,cAKA,YrBqnHF,CqBhjHE,kDAEE,yBrBmjHJ,CqBhjHE,iCAhGA,oBAiG4B,CA7F5B,0BA6FsC,CA1FpC,gBA4FA,iBrB0jHJ,CqBvjHE,+BAtGA,sBAuG4B,CAnG5B,0BAmGwC,CAhGtC,gBAkGA,iBrBikHJ,CqB9jHE,+BA5GA,oBA6G4B,CAzG5B,wBAyGsC,CApGpC,iBAsGA,erBwkHJ,CqBrkHE,6BAlHA,oBAmH4B,CA/G5B,0BA+GsC,CA5GpC,gBA8GA,iBrB+kHJ,CqB5kHE,+CAxHA,oBAyH4B,CArH5B,sBAqHsC,CA9GpC,kBAgHA,iBrBslHJ,CqBnlHE,6CA9HA,sBA+H4B,CA3H5B,sBA2HwC,CApHtC,kBAsHA,iBrB6lHJ,CqB1lHE,kEApIA,oBAqI4B,CAjI5B,0BAiIsC,CA9HpC,gBAgIA,iBrBomHJ,CqBjmHE,gEA1IA,sBA2I4B,CAvI5B,0BAuIwC,CApItC,gBAsIA,iBrB2mHJ,CqBxmHE,gEAhJA,kBAkJ4B,CA9I5B,wBA8IoC,CAzIlC,iBA2IA,erBinHJ,CqB9mHE,8DAvJA,kBAwJ4B,CApJ5B,0BAoJoC,CAjJlC,gBAmJA,erBwnHJ,CqBrnHE,SA5HA,qBC7Bc,CD8Bd,gBC5Bc,CD+BZ,oBrBmvHJ,CqBvnHE,oBACE,SrB0nHJ,CqBvnHE,UA3HA,iBC9Bc,CD+Bd,oBrBsvHF,CqBxnHE,SA1HA,UACA,gBrBsvHF,CqBznHE,SArHA,YACA,erBkvHF,CqB1nHE,QApHA,UACA,iBrBkvHF,CqB3nHE,gBAnHA,UACA,iBrBkvHF,CqB9uHE,+FACE,crBivHJ,CqB9uHE,oFACE,YrBgvHJ,CqBrvHE,+FACE,crBwvHJ,CqBrvHE,oFACE,YrBuvHJ,CqB5vHE,+FACE,crB+vHJ,CqB5vHE,oFACE,YrB8vHJ,CqBnwHE,+FACE,crBswHJ,CqBnwHE,oFACE,YrBqwHJ,CqB1wHE,+FACE,crB6wHJ,CqB1wHE,oFACE,YrB4wHJ,CqBjxHE,+FACE,crBoxHJ,CqBjxHE,oFACE,YrBmxHJ,CqBxxHE,+FACE,crB2xHJ,CqBxxHE,oFACE,YrB0xHJ,CqB/xHE,+FACE,crBkyHJ,CqB/xHE,oFACE,YrBiyHJ,CqBtyHE,+FACE,crByyHJ,CqBtyHE,oFACE,YrBwyHJ,CqB7yHE,+FACE,crBgzHJ,CqB7yHE,oFACE,YrB+yHJ,CqBpzHE,+FACE,crBuzHJ,CqBpzHE,oFACE,YrBszHJ,CqB3zHE,+FACE,crB8zHJ,CqB3zHE,oFACE,YrB6zHJ,CqBl0HE,+FACE,crBq0HJ,CqBl0HE,oFACE,YrBo0HJ,CqBz0HE,+FACE,crB40HJ,CqBz0HE,oFACE,YrB20HJ,CqBh1HE,+FACE,crBm1HJ,CqBh1HE,oFACE,YrBk1HJ,CqBrtHM,WAxOJ,cACA,kBACA,UrBi8HF,CqB/7HE,kBACE,cACA,WACA,WACA,QACA,SACA,mBrBi8HJ,CqB97HE,iBACE,WACA,cACA,UrBg8HJ,CqB77HE,eACE,cACA,kBACA,MACA,MrB+7HJ,CqB9uHM,iBAxOJ,cACA,kBACA,UrB09HF,CqBx9HE,wBACE,cACA,WACA,WACA,QACA,SACA,qBrB09HJ,CqBv9HE,uBACE,WACA,cACA,UrBy9HJ,CqBt9HE,qBACE,cACA,kBACA,MACA,MrBw9HJ,CqBvwHM,iBAxOJ,cACA,kBACA,UrBm/HF,CqBj/HE,wBACE,cACA,WACA,WACA,QACA,SACA,6BrBm/HJ,CqBh/HE,uBACE,WACA,cACA,UrBk/HJ,CqB/+HE,qBACE,cACA,kBACA,MACA,MrBi/HJ,CqBhyHM,gBAxOJ,cACA,kBACA,UrB4gIF,CqB1gIE,uBACE,cACA,WACA,WACA,QACA,SACA,6BrB4gIJ,CqBzgIE,sBACE,WACA,cACA,UrB2gIJ,CqBxgIE,oBACE,cACA,kBACA,MACA,MrB0gIJ,CqBzzHM,gBAxOJ,cACA,kBACA,UrBqiIF,CqBniIE,uBACE,cACA,WACA,WACA,QACA,SACA,kBrBqiIJ,CqBliIE,sBACE,WACA,cACA,UrBoiIJ,CqBjiIE,oBACE,cACA,kBACA,MACA,MrBmiIJ,CqBl1HM,mBAxOJ,cACA,kBACA,UrB8jIF,CqB5jIE,0BACE,cACA,WACA,WACA,QACA,SACA,kBrB8jIJ,CqB3jIE,yBACE,WACA,cACA,UrB6jIJ,CqB1jIE,uBACE,cACA,kBACA,MACA,MrB4jIJ,CqB32HM,kBAxOJ,cACA,kBACA,UrBulIF,CqBrlIE,yBACE,cACA,WACA,WACA,QACA,SACA,6BrBulIJ,CqBplIE,wBACE,WACA,cACA,UrBslIJ,CqBnlIE,sBACE,cACA,kBACA,MACA,MrBqlIJ,CqBp4HM,gBAxOJ,cACA,kBACA,UrBgnIF,CqB9mIE,uBACE,cACA,WACA,WACA,QACA,SACA,oBrBgnIJ,CqB7mIE,sBACE,WACA,cACA,UrB+mIJ,CqB5mIE,oBACE,cACA,kBACA,MACA,MrB8mIJ,CqB75HM,mBAxOJ,cACA,kBACA,UrByoIF,CqBvoIE,0BACE,cACA,WACA,WACA,QACA,SACA,4BrByoIJ,CqBtoIE,yBACE,WACA,cACA,UrBwoIJ,CqBroIE,uBACE,cACA,kBACA,MACA,MrBuoIJ,CqBt7HM,gBAxOJ,cACA,kBACA,UrBkqIF,CqBhqIE,uBACE,cACA,WACA,WACA,QACA,SACA,kBrBkqIJ,CqB/pIE,sBACE,WACA,cACA,UrBiqIJ,CqB9pIE,oBACE,cACA,kBACA,MACA,MrBgqIJ,CqB/8HM,kBAxOJ,cACA,kBACA,UrB2rIF,CqBzrIE,yBACE,cACA,WACA,WACA,QACA,SACA,qBrB2rIJ,CqBxrIE,wBACE,WACA,cACA,UrB0rIJ,CqBvrIE,sBACE,cACA,kBACA,MACA,MrByrIJ,CqBx+HM,kBAxOJ,cACA,kBACA,UrBotIF,CqBltIE,yBACE,cACA,WACA,WACA,QACA,SACA,6BrBotIJ,CqBjtIE,wBACE,WACA,cACA,UrBmtIJ,CqBhtIE,sBACE,cACA,kBACA,MACA,MrBktIJ,CqBjgIM,WAxOJ,cACA,kBACA,UrB6uIF,CqB3uIE,kBACE,cACA,WACA,WACA,QACA,SACA,kBrB6uIJ,CqB1uIE,iBACE,WACA,cACA,UrB4uIJ,CqBzuIE,eACE,cACA,kBACA,MACA,MrB2uIJ,CqB1hIM,gBAxOJ,cACA,kBACA,UrBswIF,CqBpwIE,uBACE,cACA,WACA,WACA,QACA,SACA,kBrBswIJ,CqBnwIE,sBACE,WACA,cACA,UrBqwIJ,CqBlwIE,oBACE,cACA,kBACA,MACA,MrBowIJ,CqBnjIM,mBAxOJ,cACA,kBACA,UrB+xIF,CqB7xIE,0BACE,cACA,WACA,WACA,QACA,SACA,oBrB+xIJ,CqB5xIE,yBACE,WACA,cACA,UrB8xIJ,CqB3xIE,uBACE,cACA,kBACA,MACA,MrB6xIJ,CqB5kIM,kBAxOJ,cACA,kBACA,UrBwzIF,CqBtzIE,yBACE,cACA,WACA,WACA,QACA,SACA,6BrBwzIJ,CqBrzIE,wBACE,WACA,cACA,UrBuzIJ,CqBpzIE,sBACE,cACA,kBACA,MACA,MrBszIJ,CqBrmIM,kBAxOJ,cACA,kBACA,UrBi1IF,CqB/0IE,yBACE,cACA,WACA,WACA,QACA,SACA,kBrBi1IJ,CqB90IE,wBACE,WACA,cACA,UrBg1IJ,CqB70IE,sBACE,cACA,kBACA,MACA,MrB+0IJ,CuBr2IA,kBACE,kBACA,qBACA,UACA,cACA,aACA,kBARiB,CASjB,WACA,kBACA,oBACA,UACA,8BACA,kBACA,gBvB62IF,CuB32IE,yBACE,WACA,kBACA,SACA,SACA,QACA,SACA,kBAEA,6BA1Be,CA0Bf,wBvB62IJ,CuB12IE,+BACE,SvB42IJ,CuBz2IE,0CACE,evB22IJ,CuBv2IA,kBACE,mBvB02IF,CwB94IE,qBACE,qFACA,eACA,UACA,2CACA,wCACA,mBACA,gBACA,uBACA,aACA,qBACA,gBACA,mBACA,sBACA,kBAjBM,CAkBN,kBACA,sCACA,YACA,WACA,iBACA,cACA,yBxBs5IJ,CwBp5II,2BACE,0CxBs5IN,CwBn5II,+BACE,8BxBq5IN,CwBl5II,2BACE,axBo5IN,CwBj5II,8BACE,cACA,gBxBm5IN,CwB94II,0GACE,qCxBg5IN,CwB54IE,qCACE,YxB84IJ,CwB34IE,wBACE,aACA,uBACA,mBACA,WACA,YACA,+BACA,aACA,iDACA,cxB64IJ,CwB34II,8BACE,0CxB64IN,CwB14II,kCACE,WACA,WxB44IN,CyBn9IA,gBACE,YACA,cACA,iBzB29IF,CyBz9IE,0BACE,aACA,mBACA,kBACA,eACA,0BACA,mBACA,kBACA,qBACA,kBACA,kCACA,iBzB29IJ,CyBz9II,gCACE,gCzB29IN,CyBx9II,mCACE,2CACA,sCACA,ezB09IN,CyBt9IE,sBACE,gBACA,sBzBw9IJ,CyBr9IE,yBACE,+BACA,gBzBu9IJ,CyBp9IE,iCACE,WACA,YACA,gBzBs9IJ,CyBl9IA,sCACE,aACA,mBACA,WACA,kBACA,2CACA,aACA,0BACA,qCzBq9IF,CyBn9IE,gDACE,gBzBq9IJ,CyBj9IA,oCACE,ezBo9IF,CyBl9IE,mDACE,yBzBo9IJ,CyBj9IE,8CACE,8BzBm9IJ,C0BphJE,8BACE,sDACA,oB1BgiJJ,C0B5hJE,kCACE,S1B8hJJ,C0B3hJE,wCACE,2CACA,iB1B6hJJ,C0BzhJE,sCACE,wB1B2hJJ,C0BvhJE,0CACE,sCACA,oB1ByhJJ,C0BrhJE,uCACE,yBACA,qB1BuhJJ,C0BphJE,0CACE,a1BshJJ,C0BlhJE,4CACE,a1BohJJ,C0B1gJM,kUACE,wB1B+gJR,C0B1gJM,oFACE,oB1B4gJR,C0BtgJE,oEACE,wB1BwgJJ,C0BngJI,+GACE,sCACA,iD1BqgJN,C0BngJM,6JACE,yC1BqgJR,C2BnlJA,sBACE,S3BslJF,C2B/kJA,iFACE,gD3BslJF,C4B7lJA,eACE,cACA,mBACA,0C1B+BkB,C0B9BlB,kBACA,qC5BqmJF,C4BnmJE,2BACE,iB5BqmJJ,C4BjmJA,aACE,e5BomJF,C4BjmJA,WACE,Y5BomJF,C4BjmJA,0CACE,WACE,cACA,e5BomJF,C4BjmJA,eACE,kB5BomJF,C4BlmJE,2BACE,c5BomJJ,CACF,C6BroJA,2BACE,0BACA,gBACA,iBACA,gBACA,gB7BuoJF,C6BroJE,qDACE,WACA,YACA,c7BuoJJ,C8B/oJA,cACE,YACA,sC/BufA,kG+BrfA,WACA,cACA,qFACA,iB9BupJF,C8BrpJE,iCACE,WACA,yBACA,qBACA,YACA,eACA,YACA,eACA,aACA,mBACA,eACA,Y9BupJJ,C8BppJM,0DACE,8B9BspJR,C8BnpJM,sDACE,gC9BqpJR,C8BjpJI,0CACE,0BACA,c9BmpJN,C8BhpJI,2CACE,iB9BkpJN,C8B/oJI,2CACE,iBACA,+BACA,c9BipJN,C8B9oJI,yCACE,gB9BgpJN,C8B5oJE,yBACE,iCACA,aACA,WACA,eACA,eACA,U9B8oJJ,C+BxsJA,kBACE,kBACA,YACA,iCACA,gCACA,QACA,Q/BgtJF,CgCpsJE,YACE,ahCusJJ,CgCxsJE,YACE,ahC2sJJ,CgC5sJE,YACE,ahC+sJJ,CgChtJE,WACE,ahCmtJJ,CgCptJE,cACE,ahCutJJ,CgCxtJE,+CACE,ahCmuJJ,CgCpuJE,UACE,ahCuuJJ,CgCxuJE,kBACE,ahC2uJJ,CgC5uJE,WACE,ahC+uJJ,CgChvJE,kBACE,ahCmvJJ,CiCxwJA,uBACE,eACA,yBACA,kCACA,ajC2wJF,CiCzwJE,gCACE,cjC2wJJ,CA5wJA,UACE,WA+wJF,CA5wJA,gCACE,WACA,WA+wJF","file":"styles.ad79e8d05c75455030dd.css","sourcesContent":["// File for which all imports are resolved and bundled. This is the entry-point for\n// the `@angular/material` theming Sass bundle. See `//src/material:theming_bundle`.\n\n// Import all the theming functionality.\n// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$cdk-z-index-overlay-container: 1000 !default;\n$cdk-z-index-overlay: 1000 !default;\n$cdk-z-index-overlay-backdrop: 1000 !default;\n\n// Background color for all of the backdrops\n$cdk-overlay-dark-backdrop-background: rgba(0, 0, 0, 0.32) !default;\n\n// Default backdrop animation is based on the Material Design swift-ease-out.\n$backdrop-animation-duration: 400ms !default;\n$backdrop-animation-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n\n\n@mixin cdk-overlay() {\n  .cdk-overlay-container, .cdk-global-overlay-wrapper {\n    // Disable events from being captured on the overlay container.\n    pointer-events: none;\n\n    // The container should be the size of the viewport.\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n\n  // The overlay-container is an invisible element which contains all individual overlays.\n  .cdk-overlay-container {\n    position: fixed;\n    z-index: $cdk-z-index-overlay-container;\n\n    &:empty {\n      // Hide the element when it doesn't have any child nodes. This doesn't\n      // include overlays that have been detached, rather than disposed.\n      display: none;\n    }\n  }\n\n  // We use an extra wrapper element in order to use make the overlay itself a flex item.\n  // This makes centering the overlay easy without running into the subpixel rendering\n  // problems tied to using `transform` and without interfering with the other position\n  // strategies.\n  .cdk-global-overlay-wrapper {\n    display: flex;\n    position: absolute;\n    z-index: $cdk-z-index-overlay;\n  }\n\n  // A single overlay pane.\n  .cdk-overlay-pane {\n    // Note: it's important for this one to start off `absolute`,\n    // in order for us to be able to measure it correctly.\n    position: absolute;\n    pointer-events: auto;\n    box-sizing: border-box;\n    z-index: $cdk-z-index-overlay;\n\n    // For connected-position overlays, we set `display: flex` in\n    // order to force `max-width` and `max-height` to take effect.\n    display: flex;\n    max-width: 100%;\n    max-height: 100%;\n  }\n\n  .cdk-overlay-backdrop {\n    // TODO(jelbourn): reuse sidenav fullscreen mixin.\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    z-index: $cdk-z-index-overlay-backdrop;\n    pointer-events: auto;\n    -webkit-tap-highlight-color: transparent;\n    transition: opacity $backdrop-animation-duration $backdrop-animation-timing-function;\n    opacity: 0;\n\n    &.cdk-overlay-backdrop-showing {\n      opacity: 1;\n\n      // In high contrast mode the rgba background will become solid so we need to fall back\n      // to making it opaque using `opacity`. Note that we can't use the `cdk-high-contrast`\n      // mixin, because we can't normalize the import path to the _a11y.scss both for the\n      // source and when this file is distributed. See #10908.\n      @media screen and (-ms-high-contrast: active) {\n        opacity: 0.6;\n      }\n    }\n  }\n\n  .cdk-overlay-dark-backdrop {\n    background: $cdk-overlay-dark-backdrop-background;\n  }\n\n  .cdk-overlay-transparent-backdrop {\n    // Note: as of Firefox 57, having the backdrop be `background: none` will prevent it from\n    // capturing the user's mouse scroll events. Since we also can't use something like\n    // `rgba(0, 0, 0, 0)`, we work around the inconsistency by not setting the background at\n    // all and using `opacity` to make the element transparent.\n    &, &.cdk-overlay-backdrop-showing {\n      opacity: 0;\n    }\n  }\n\n  // Overlay parent element used with the connected position strategy. Used to constrain the\n  // overlay element's size to fit within the viewport.\n  .cdk-overlay-connected-position-bounding-box {\n    position: absolute;\n    z-index: $cdk-z-index-overlay;\n\n    // We use `display: flex` on this element exclusively for centering connected overlays.\n    // When *not* centering, a top/left/bottom/right will be set which overrides the normal\n    // flex layout.\n    display: flex;\n\n    // We use the `column` direction here to avoid some flexbox issues in Edge\n    // when using the \"grow after open\" options.\n    flex-direction: column;\n\n    // Add some dimensions so the element has an `innerText` which some people depend on in tests.\n    min-width: 1px;\n    min-height: 1px;\n  }\n\n  // Used when disabling global scrolling.\n  .cdk-global-scrollblock {\n    position: fixed;\n\n    // Necessary for the content not to lose its width. Note that we're using 100%, instead of\n    // 100vw, because 100vw includes the width plus the scrollbar, whereas 100% is the width\n    // that the element had before we made it `fixed`.\n    width: 100%;\n\n    // Note: this will always add a scrollbar to whatever element it is on, which can\n    // potentially result in double scrollbars. It shouldn't be an issue, because we won't\n    // block scrolling on a page that doesn't have a scrollbar in the first place.\n    overflow-y: scroll;\n  }\n}\n\n@mixin cdk-a11y {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n\n    // Avoid browsers rendering the focus ring in some cases.\n    outline: 0;\n\n    // Avoid some cases where the browser will still render the native controls (see #9049).\n    -webkit-appearance: none;\n    -moz-appearance: none;\n  }\n}\n\n/// Emits the mixin's content nested under `$selector-context` if `$selector-context`\n/// is non-empty.\n/// @param selector-context The selector under which to nest the mixin's content.\n@mixin _cdk-optionally-nest-content($selector-context) {\n  @if ($selector-context == '') {\n    @content;\n  }\n  @else {\n    #{$selector-context} {\n      @content;\n    }\n  }\n}\n\n/// Applies styles for users in high contrast mode. Note that this only applies\n/// to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n/// attribute, however Chrome handles high contrast differently.\n///\n/// @param target Which kind of high contrast setting to target. Defaults to `active`, can be\n///    `white-on-black` or `black-on-white`.\n/// @param encapsulation Whether to emit styles for view encapsulation. Values are:\n///     * `on` - works for `Emulated`, `Native`, and `ShadowDom`\n///     * `off` - works for `None`\n///     * `any` - works for all encapsulation modes by emitting the CSS twice (default).\n@mixin cdk-high-contrast($target: active, $encapsulation: 'any') {\n  @if ($target != 'active' and $target != 'black-on-white' and $target != 'white-on-black') {\n    @error 'Unknown cdk-high-contrast value \"#{$target}\" provided. ' +\n           'Allowed values are \"active\", \"black-on-white\", and \"white-on-black\"';\n  }\n\n  @if ($encapsulation != 'on' and $encapsulation != 'off' and $encapsulation != 'any') {\n    @error 'Unknown cdk-high-contrast encapsulation \"#{$encapsulation}\" provided. ' +\n           'Allowed values are \"on\", \"off\", and \"any\"';\n  }\n\n  // If the selector context has multiple parts, such as `.section, .region`, just doing\n  // `.cdk-high-contrast-xxx #{&}` will only apply the parent selector to the first part of the\n  // context. We address this by nesting the selector context under .cdk-high-contrast.\n  @at-root {\n    $selector-context: #{&};\n\n    @if ($encapsulation != 'on') {\n      .cdk-high-contrast-#{$target} {\n        @include _cdk-optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n\n    @if ($encapsulation != 'off') {\n      .cdk-high-contrast-#{$target} :host {\n        @include _cdk-optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n  }\n}\n\n// Core styles that enable monitoring autofill state of text fields.\n@mixin cdk-text-field {\n  // Keyframes that apply no styles, but allow us to monitor when an text field becomes autofilled\n  // by watching for the animation events that are fired when they start. Note: the /*!*/ comment is\n  // needed to prevent LibSass from stripping the keyframes out.\n  // Based on: https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n  @keyframes cdk-text-field-autofill-start {/*!*/}\n  @keyframes cdk-text-field-autofill-end {/*!*/}\n\n  .cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms;\n  }\n\n  .cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-end 0s 1ms;\n  }\n\n  // Remove the resize handle on autosizing textareas, because whatever height\n  // the user resized to will be overwritten once they start typing again.\n  textarea.cdk-textarea-autosize {\n    resize: none;\n  }\n\n  // This class is temporarily applied to the textarea when it is being measured. It is immediately\n  // removed when measuring is complete. We use `!important` rules here to make sure user-specified\n  // rules do not interfere with the measurement.\n  textarea.cdk-textarea-autosize-measuring {\n    @include _cdk-textarea-autosize-measuring-base;\n    height: auto !important;\n    overflow: hidden !important;\n  }\n\n  // Similar to the `cdk-textarea-autosize-measuring` class, but only applied on Firefox. We need\n  // to use this class, because Firefox has a bug where changing the `overflow` breaks the user's\n  // ability to undo/redo what they were typing (see #16629). This class is only scoped to Firefox,\n  // because the measurements there don't seem to be affected by the `height: 0`, whereas on other\n  // browsers they are, e.g. Chrome detects longer text and IE does't resize back to normal.\n  // Identical issue report: https://bugzilla.mozilla.org/show_bug.cgi?id=448784\n  textarea.cdk-textarea-autosize-measuring-firefox {\n    @include _cdk-textarea-autosize-measuring-base;\n    height: 0 !important;\n  }\n}\n\n@mixin _cdk-textarea-autosize-measuring-base {\n  // Having 2px top and bottom padding seems to fix a bug where Chrome gets an incorrect\n  // measurement. We just have to account for it later and subtract it off the final result.\n  padding: 2px 0 !important;\n  box-sizing: content-box !important;\n}\n\n// Used to generate UIDs for keyframes used to change the text field autofill styles.\n$cdk-text-field-autofill-color-frame-count: 0;\n\n// Mixin used to apply custom background and foreground colors to an autofilled text field.\n// Based on: https://stackoverflow.com/questions/2781549/\n// removing-input-background-colour-for-chrome-autocomplete#answer-37432260\n@mixin cdk-text-field-autofill-color($background, $foreground:'') {\n  @keyframes cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count} {\n    to {\n      background: $background;\n      @if $foreground != '' { color: $foreground; }\n    }\n  }\n\n  &:-webkit-autofill {\n    animation: cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count} both;\n  }\n\n  &.cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay for cdk-text-field-autofill-start, or the animationstart\n    // event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms,\n               cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count} both;\n  }\n\n  $cdk-text-field-autofill-color-frame-count:\n      $cdk-text-field-autofill-color-frame-count + 1 !global;\n}\n\n\n// Core styles that can be used to apply material design treatments to any element.\n// Media queries\n// TODO(josephperrott): Change $mat-xsmall and $mat-small usages to rely on BreakpointObserver,\n$mat-xsmall: 'max-width: 599px';\n$mat-small: 'max-width: 959px';\n\n// TODO: Revisit all z-indices before beta\n// z-index master list\n\n$z-index-fab: 20 !default;\n$z-index-drawer: 100 !default;\n\n// Global constants\n$pi: 3.14159265;\n\n// Padding between input toggles and their labels\n$mat-toggle-padding: 8px !default;\n// Width and height of input toggles\n$mat-toggle-size: 20px !default;\n\n// Easing Curves\n// TODO(jelbourn): all of these need to be revisited\n\n// The default animation curves used by material design.\n$mat-linear-out-slow-in-timing-function: cubic-bezier(0, 0, 0.2, 0.1) !default;\n$mat-fast-out-slow-in-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\n$mat-fast-out-linear-in-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\n\n$ease-in-out-curve-function: cubic-bezier(0.35, 0, 0.25, 1) !default;\n\n$swift-ease-out-duration: 400ms !default;\n$swift-ease-out-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n$swift-ease-out: all $swift-ease-out-duration $swift-ease-out-timing-function !default;\n\n$swift-ease-in-duration: 300ms !default;\n$swift-ease-in-timing-function: cubic-bezier(0.55, 0, 0.55, 0.2) !default;\n$swift-ease-in: all $swift-ease-in-duration $swift-ease-in-timing-function !default;\n\n$swift-ease-in-out-duration: 500ms !default;\n$swift-ease-in-out-timing-function: $ease-in-out-curve-function !default;\n$swift-ease-in-out: all $swift-ease-in-out-duration $swift-ease-in-out-timing-function !default;\n\n$swift-linear-duration: 80ms !default;\n$swift-linear-timing-function: linear !default;\n$swift-linear: all $swift-linear-duration $swift-linear-timing-function !default;\n\n\n\n// A collection of mixins and CSS classes that can be used to apply elevation to a material\n// element.\n// See: https://material.io/design/environment/elevation.html\n// Examples:\n//\n//\n// .mat-foo {\n//   @include $mat-elevation(2);\n//\n//   &:active {\n//     @include $mat-elevation(8);\n//   }\n// }\n//\n// <div id=\"external-card\" class=\"mat-elevation-z2\"><p>Some content</p></div>\n//\n// For an explanation of the design behind how elevation is implemented, see the design doc at\n// https://goo.gl/Kq0k9Z.\n\n// Colors for umbra, penumbra, and ambient shadows. As described in the design doc, each elevation\n// level is created using a set of 3 shadow values, one for umbra (the shadow representing the\n// space completely obscured by an object relative to its light source), one for penumbra (the\n// space partially obscured by an object), and one for ambient (the space which contains the object\n// itself). For a further explanation of these terms and their meanings, see\n// https://en.wikipedia.org/wiki/Umbra,_penumbra_and_antumbra.\n\n// Maps for the different shadow sets and their values within each z-space. These values were\n// created by taking a few reference shadow sets created by Google's Designers and interpolating\n// all of the values between them.\n\n@function _get-umbra-map($color, $opacity) {\n  $shadow-color: if(type-of($color) == color, rgba($color, $opacity * 0.2), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 2px 1px -1px #{$shadow-color}',\n    2: '0px 3px 1px -2px #{$shadow-color}',\n    3: '0px 3px 3px -2px #{$shadow-color}',\n    4: '0px 2px 4px -1px #{$shadow-color}',\n    5: '0px 3px 5px -1px #{$shadow-color}',\n    6: '0px 3px 5px -1px #{$shadow-color}',\n    7: '0px 4px 5px -2px #{$shadow-color}',\n    8: '0px 5px 5px -3px #{$shadow-color}',\n    9: '0px 5px 6px -3px #{$shadow-color}',\n    10: '0px 6px 6px -3px #{$shadow-color}',\n    11: '0px 6px 7px -4px #{$shadow-color}',\n    12: '0px 7px 8px -4px #{$shadow-color}',\n    13: '0px 7px 8px -4px #{$shadow-color}',\n    14: '0px 7px 9px -4px #{$shadow-color}',\n    15: '0px 8px 9px -5px #{$shadow-color}',\n    16: '0px 8px 10px -5px #{$shadow-color}',\n    17: '0px 8px 11px -5px #{$shadow-color}',\n    18: '0px 9px 11px -5px #{$shadow-color}',\n    19: '0px 9px 12px -6px #{$shadow-color}',\n    20: '0px 10px 13px -6px #{$shadow-color}',\n    21: '0px 10px 13px -6px #{$shadow-color}',\n    22: '0px 10px 14px -6px #{$shadow-color}',\n    23: '0px 11px 14px -7px #{$shadow-color}',\n    24: '0px 11px 15px -7px #{$shadow-color}'\n  );\n}\n\n@function _get-penumbra-map($color, $opacity) {\n  $shadow-color: if(type-of($color) == color, rgba($color, $opacity * 0.14), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 1px 1px 0px #{$shadow-color}',\n    2: '0px 2px 2px 0px #{$shadow-color}',\n    3: '0px 3px 4px 0px #{$shadow-color}',\n    4: '0px 4px 5px 0px #{$shadow-color}',\n    5: '0px 5px 8px 0px #{$shadow-color}',\n    6: '0px 6px 10px 0px #{$shadow-color}',\n    7: '0px 7px 10px 1px #{$shadow-color}',\n    8: '0px 8px 10px 1px #{$shadow-color}',\n    9: '0px 9px 12px 1px #{$shadow-color}',\n    10: '0px 10px 14px 1px #{$shadow-color}',\n    11: '0px 11px 15px 1px #{$shadow-color}',\n    12: '0px 12px 17px 2px #{$shadow-color}',\n    13: '0px 13px 19px 2px #{$shadow-color}',\n    14: '0px 14px 21px 2px #{$shadow-color}',\n    15: '0px 15px 22px 2px #{$shadow-color}',\n    16: '0px 16px 24px 2px #{$shadow-color}',\n    17: '0px 17px 26px 2px #{$shadow-color}',\n    18: '0px 18px 28px 2px #{$shadow-color}',\n    19: '0px 19px 29px 2px #{$shadow-color}',\n    20: '0px 20px 31px 3px #{$shadow-color}',\n    21: '0px 21px 33px 3px #{$shadow-color}',\n    22: '0px 22px 35px 3px #{$shadow-color}',\n    23: '0px 23px 36px 3px #{$shadow-color}',\n    24: '0px 24px 38px 3px #{$shadow-color}'\n  );\n}\n\n@function _get-ambient-map($color, $opacity) {\n  $shadow-color: if(type-of($color) == color, rgba($color, $opacity * 0.12), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 1px 3px 0px #{$shadow-color}',\n    2: '0px 1px 5px 0px #{$shadow-color}',\n    3: '0px 1px 8px 0px #{$shadow-color}',\n    4: '0px 1px 10px 0px #{$shadow-color}',\n    5: '0px 1px 14px 0px #{$shadow-color}',\n    6: '0px 1px 18px 0px #{$shadow-color}',\n    7: '0px 2px 16px 1px #{$shadow-color}',\n    8: '0px 3px 14px 2px #{$shadow-color}',\n    9: '0px 3px 16px 2px #{$shadow-color}',\n    10: '0px 4px 18px 3px #{$shadow-color}',\n    11: '0px 4px 20px 3px #{$shadow-color}',\n    12: '0px 5px 22px 4px #{$shadow-color}',\n    13: '0px 5px 24px 4px #{$shadow-color}',\n    14: '0px 5px 26px 4px #{$shadow-color}',\n    15: '0px 6px 28px 5px #{$shadow-color}',\n    16: '0px 6px 30px 5px #{$shadow-color}',\n    17: '0px 6px 32px 5px #{$shadow-color}',\n    18: '0px 7px 34px 6px #{$shadow-color}',\n    19: '0px 7px 36px 6px #{$shadow-color}',\n    20: '0px 8px 38px 7px #{$shadow-color}',\n    21: '0px 8px 40px 7px #{$shadow-color}',\n    22: '0px 8px 42px 7px #{$shadow-color}',\n    23: '0px 9px 44px 8px #{$shadow-color}',\n    24: '0px 9px 46px 8px #{$shadow-color}'\n  );\n}\n\n// The default duration value for elevation transitions.\n$mat-elevation-transition-duration: 280ms !default;\n\n// The default easing value for elevation transitions.\n$mat-elevation-transition-timing-function: $mat-fast-out-slow-in-timing-function;\n\n// The default color for elevation shadows.\n$mat-elevation-color: black !default;\n\n// The default opacity scaling value for elevation shadows.\n$mat-elevation-opacity: 1 !default;\n\n// Prefix for elevation-related selectors.\n$_mat-elevation-prefix: 'mat-elevation-z';\n\n// Applies the correct css rules to an element to give it the elevation specified by $zValue.\n// The $zValue must be between 0 and 24.\n@mixin mat-elevation($zValue, $color: $mat-elevation-color, $opacity: $mat-elevation-opacity) {\n  @if type-of($zValue) != number or not unitless($zValue) {\n    @error '$zValue must be a unitless number';\n  }\n  @if $zValue < 0 or $zValue > 24 {\n    @error '$zValue must be between 0 and 24';\n  }\n\n  box-shadow: #{map-get(_get-umbra-map($color, $opacity), $zValue)},\n              #{map-get(_get-penumbra-map($color, $opacity), $zValue)},\n              #{map-get(_get-ambient-map($color, $opacity), $zValue)};\n}\n\n@mixin _mat-theme-elevation($zValue, $config, $opacity: $mat-elevation-opacity) {\n  $foreground: map-get($config, foreground);\n  $elevation-color: map-get($foreground, elevation);\n  $elevation-color-or-default: if($elevation-color == null, $mat-elevation-color, $elevation-color);\n\n  @include mat-elevation($zValue, $elevation-color-or-default, $opacity);\n}\n\n// Applies the elevation to an element in a manner that allows\n// consumers to override it via the Material elevation classes.\n@mixin mat-overridable-elevation(\n    $zValue,\n    $color: $mat-elevation-color,\n    $opacity: $mat-elevation-opacity) {\n  &:not([class*='#{$_mat-elevation-prefix}']) {\n    @include mat-elevation($zValue, $color, $opacity);\n  }\n}\n\n@mixin _mat-theme-overridable-elevation($zValue, $config, $opacity: $mat-elevation-opacity) {\n  $foreground: map-get($config, foreground);\n  $elevation-color: map-get($foreground, elevation);\n  $elevation-color-or-default: if($elevation-color == null, $mat-elevation-color, $elevation-color);\n\n  @include mat-overridable-elevation($zValue, $elevation-color-or-default, $opacity);\n}\n\n// Returns a string that can be used as the value for a transition property for elevation.\n// Calling this function directly is useful in situations where a component needs to transition\n// more than one property.\n//\n// .foo {\n//   transition: mat-elevation-transition-property-value(), opacity 100ms ease;\n// }\n@function mat-elevation-transition-property-value(\n    $duration: $mat-elevation-transition-duration,\n    $easing: $mat-elevation-transition-timing-function) {\n  @return box-shadow #{$duration} #{$easing};\n}\n\n// Applies the correct css rules needed to have an element transition between elevations.\n// This mixin should be applied to elements whose elevation values will change depending on their\n// context (e.g. when active or disabled).\n//\n// NOTE(traviskaufman): Both this mixin and the above function use default parameters so they can\n// be used in the same way by clients.\n@mixin mat-elevation-transition(\n    $duration: $mat-elevation-transition-duration,\n    $easing: $mat-elevation-transition-timing-function) {\n  transition: mat-elevation-transition-property-value($duration, $easing);\n}\n\n// Color palettes from the Material Design spec.\n// See https://material.io/design/color/\n//\n// Contrast colors are hard-coded because it is too difficult (probably impossible) to\n// calculate them. These contrast colors are pulled from the public Material Design spec swatches.\n// While the contrast colors in the spec are not prescriptive, we use them for convenience.\n\n\n// @deprecated renamed to $dark-primary-text.\n// @breaking-change 8.0.0\n$black-87-opacity: rgba(black, 0.87);\n// @deprecated renamed to $light-primary-text.\n// @breaking-change 8.0.0\n$white-87-opacity: rgba(white, 0.87);\n// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$black-12-opacity: rgba(black, 0.12);\n// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$white-12-opacity: rgba(white, 0.12);\n// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$black-6-opacity: rgba(black, 0.06);\n// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$white-6-opacity: rgba(white, 0.06);\n\n$dark-primary-text: rgba(black, 0.87);\n$dark-secondary-text: rgba(black, 0.54);\n$dark-disabled-text: rgba(black, 0.38);\n$dark-dividers: rgba(black, 0.12);\n$dark-focused: rgba(black, 0.12);\n$light-primary-text: white;\n$light-secondary-text: rgba(white, 0.7);\n$light-disabled-text: rgba(white, 0.5);\n$light-dividers: rgba(white, 0.12);\n$light-focused: rgba(white, 0.12);\n\n$mat-red: (\n  50: #ffebee,\n  100: #ffcdd2,\n  200: #ef9a9a,\n  300: #e57373,\n  400: #ef5350,\n  500: #f44336,\n  600: #e53935,\n  700: #d32f2f,\n  800: #c62828,\n  900: #b71c1c,\n  A100: #ff8a80,\n  A200: #ff5252,\n  A400: #ff1744,\n  A700: #d50000,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-pink: (\n  50: #fce4ec,\n  100: #f8bbd0,\n  200: #f48fb1,\n  300: #f06292,\n  400: #ec407a,\n  500: #e91e63,\n  600: #d81b60,\n  700: #c2185b,\n  800: #ad1457,\n  900: #880e4f,\n  A100: #ff80ab,\n  A200: #ff4081,\n  A400: #f50057,\n  A700: #c51162,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-purple: (\n  50: #f3e5f5,\n  100: #e1bee7,\n  200: #ce93d8,\n  300: #ba68c8,\n  400: #ab47bc,\n  500: #9c27b0,\n  600: #8e24aa,\n  700: #7b1fa2,\n  800: #6a1b9a,\n  900: #4a148c,\n  A100: #ea80fc,\n  A200: #e040fb,\n  A400: #d500f9,\n  A700: #aa00ff,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-deep-purple: (\n  50: #ede7f6,\n  100: #d1c4e9,\n  200: #b39ddb,\n  300: #9575cd,\n  400: #7e57c2,\n  500: #673ab7,\n  600: #5e35b1,\n  700: #512da8,\n  800: #4527a0,\n  900: #311b92,\n  A100: #b388ff,\n  A200: #7c4dff,\n  A400: #651fff,\n  A700: #6200ea,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-indigo: (\n  50: #e8eaf6,\n  100: #c5cae9,\n  200: #9fa8da,\n  300: #7986cb,\n  400: #5c6bc0,\n  500: #3f51b5,\n  600: #3949ab,\n  700: #303f9f,\n  800: #283593,\n  900: #1a237e,\n  A100: #8c9eff,\n  A200: #536dfe,\n  A400: #3d5afe,\n  A700: #304ffe,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-blue: (\n  50: #e3f2fd,\n  100: #bbdefb,\n  200: #90caf9,\n  300: #64b5f6,\n  400: #42a5f5,\n  500: #2196f3,\n  600: #1e88e5,\n  700: #1976d2,\n  800: #1565c0,\n  900: #0d47a1,\n  A100: #82b1ff,\n  A200: #448aff,\n  A400: #2979ff,\n  A700: #2962ff,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-light-blue: (\n  50: #e1f5fe,\n  100: #b3e5fc,\n  200: #81d4fa,\n  300: #4fc3f7,\n  400: #29b6f6,\n  500: #03a9f4,\n  600: #039be5,\n  700: #0288d1,\n  800: #0277bd,\n  900: #01579b,\n  A100: #80d8ff,\n  A200: #40c4ff,\n  A400: #00b0ff,\n  A700: #0091ea,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-cyan: (\n  50: #e0f7fa,\n  100: #b2ebf2,\n  200: #80deea,\n  300: #4dd0e1,\n  400: #26c6da,\n  500: #00bcd4,\n  600: #00acc1,\n  700: #0097a7,\n  800: #00838f,\n  900: #006064,\n  A100: #84ffff,\n  A200: #18ffff,\n  A400: #00e5ff,\n  A700: #00b8d4,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-teal: (\n  50: #e0f2f1,\n  100: #b2dfdb,\n  200: #80cbc4,\n  300: #4db6ac,\n  400: #26a69a,\n  500: #009688,\n  600: #00897b,\n  700: #00796b,\n  800: #00695c,\n  900: #004d40,\n  A100: #a7ffeb,\n  A200: #64ffda,\n  A400: #1de9b6,\n  A700: #00bfa5,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-green: (\n  50: #e8f5e9,\n  100: #c8e6c9,\n  200: #a5d6a7,\n  300: #81c784,\n  400: #66bb6a,\n  500: #4caf50,\n  600: #43a047,\n  700: #388e3c,\n  800: #2e7d32,\n  900: #1b5e20,\n  A100: #b9f6ca,\n  A200: #69f0ae,\n  A400: #00e676,\n  A700: #00c853,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-light-green: (\n  50: #f1f8e9,\n  100: #dcedc8,\n  200: #c5e1a5,\n  300: #aed581,\n  400: #9ccc65,\n  500: #8bc34a,\n  600: #7cb342,\n  700: #689f38,\n  800: #558b2f,\n  900: #33691e,\n  A100: #ccff90,\n  A200: #b2ff59,\n  A400: #76ff03,\n  A700: #64dd17,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-lime: (\n  50: #f9fbe7,\n  100: #f0f4c3,\n  200: #e6ee9c,\n  300: #dce775,\n  400: #d4e157,\n  500: #cddc39,\n  600: #c0ca33,\n  700: #afb42b,\n  800: #9e9d24,\n  900: #827717,\n  A100: #f4ff81,\n  A200: #eeff41,\n  A400: #c6ff00,\n  A700: #aeea00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-yellow: (\n  50: #fffde7,\n  100: #fff9c4,\n  200: #fff59d,\n  300: #fff176,\n  400: #ffee58,\n  500: #ffeb3b,\n  600: #fdd835,\n  700: #fbc02d,\n  800: #f9a825,\n  900: #f57f17,\n  A100: #ffff8d,\n  A200: #ffff00,\n  A400: #ffea00,\n  A700: #ffd600,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $dark-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-amber: (\n  50: #fff8e1,\n  100: #ffecb3,\n  200: #ffe082,\n  300: #ffd54f,\n  400: #ffca28,\n  500: #ffc107,\n  600: #ffb300,\n  700: #ffa000,\n  800: #ff8f00,\n  900: #ff6f00,\n  A100: #ffe57f,\n  A200: #ffd740,\n  A400: #ffc400,\n  A700: #ffab00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $dark-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-orange: (\n  50: #fff3e0,\n  100: #ffe0b2,\n  200: #ffcc80,\n  300: #ffb74d,\n  400: #ffa726,\n  500: #ff9800,\n  600: #fb8c00,\n  700: #f57c00,\n  800: #ef6c00,\n  900: #e65100,\n  A100: #ffd180,\n  A200: #ffab40,\n  A400: #ff9100,\n  A700: #ff6d00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: black,\n  )\n);\n\n$mat-deep-orange: (\n  50: #fbe9e7,\n  100: #ffccbc,\n  200: #ffab91,\n  300: #ff8a65,\n  400: #ff7043,\n  500: #ff5722,\n  600: #f4511e,\n  700: #e64a19,\n  800: #d84315,\n  900: #bf360c,\n  A100: #ff9e80,\n  A200: #ff6e40,\n  A400: #ff3d00,\n  A700: #dd2c00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-brown: (\n  50: #efebe9,\n  100: #d7ccc8,\n  200: #bcaaa4,\n  300: #a1887f,\n  400: #8d6e63,\n  500: #795548,\n  600: #6d4c41,\n  700: #5d4037,\n  800: #4e342e,\n  900: #3e2723,\n  A100: #d7ccc8,\n  A200: #bcaaa4,\n  A400: #8d6e63,\n  A700: #5d4037,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-grey: (\n  50: #fafafa,\n  100: #f5f5f5,\n  200: #eeeeee,\n  300: #e0e0e0,\n  400: #bdbdbd,\n  500: #9e9e9e,\n  600: #757575,\n  700: #616161,\n  800: #424242,\n  900: #212121,\n  A100: #ffffff,\n  A200: #eeeeee,\n  A400: #bdbdbd,\n  A700: #616161,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n// Alias for alternate spelling.\n$mat-gray: $mat-grey;\n\n$mat-blue-grey: (\n  50: #eceff1,\n  100: #cfd8dc,\n  200: #b0bec5,\n  300: #90a4ae,\n  400: #78909c,\n  500: #607d8b,\n  600: #546e7a,\n  700: #455a64,\n  800: #37474f,\n  900: #263238,\n  A100: #cfd8dc,\n  A200: #b0bec5,\n  A400: #78909c,\n  A700: #455a64,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n// Alias for alternate spelling.\n$mat-blue-gray: $mat-blue-grey;\n\n\n// Background palette for light themes.\n$mat-light-theme-background: (\n  status-bar: map_get($mat-grey, 300),\n  app-bar:    map_get($mat-grey, 100),\n  background: map_get($mat-grey, 50),\n  hover:      rgba(black, 0.04), // TODO(kara): check style with Material Design UX\n  card:       white,\n  dialog:     white,\n  disabled-button: rgba(black, 0.12),\n  raised-button: white,\n  focused-button: $dark-focused,\n  selected-button: map_get($mat-grey, 300),\n  selected-disabled-button: map_get($mat-grey, 400),\n  disabled-button-toggle: map_get($mat-grey, 200),\n  unselected-chip: map_get($mat-grey, 300),\n  disabled-list-option: map_get($mat-grey, 200),\n  tooltip: map_get($mat-grey, 700),\n);\n\n// Background palette for dark themes.\n$mat-dark-theme-background: (\n  status-bar: black,\n  app-bar:    map_get($mat-grey, 900),\n  background: #303030,\n  hover:      rgba(white, 0.04), // TODO(kara): check style with Material Design UX\n  card:       map_get($mat-grey, 800),\n  dialog:     map_get($mat-grey, 800),\n  disabled-button: rgba(white, 0.12),\n  raised-button: map-get($mat-grey, 800),\n  focused-button: $light-focused,\n  selected-button: map_get($mat-grey, 900),\n  selected-disabled-button: map_get($mat-grey, 800),\n  disabled-button-toggle: black,\n  unselected-chip: map_get($mat-grey, 700),\n  disabled-list-option: black,\n  tooltip: map_get($mat-grey, 700),\n);\n\n// Foreground palette for light themes.\n$mat-light-theme-foreground: (\n  base:              black,\n  divider:           $dark-dividers,\n  dividers:          $dark-dividers,\n  disabled:          $dark-disabled-text,\n  disabled-button:   rgba(black, 0.26),\n  disabled-text:     $dark-disabled-text,\n  elevation:         black,\n  hint-text:         $dark-disabled-text,\n  secondary-text:    $dark-secondary-text,\n  icon:              rgba(black, 0.54),\n  icons:             rgba(black, 0.54),\n  text:              rgba(black, 0.87),\n  slider-min:        rgba(black, 0.87),\n  slider-off:        rgba(black, 0.26),\n  slider-off-active: rgba(black, 0.38),\n);\n\n// Foreground palette for dark themes.\n$mat-dark-theme-foreground: (\n  base:              white,\n  divider:           $light-dividers,\n  dividers:          $light-dividers,\n  disabled:          $light-disabled-text,\n  disabled-button:   rgba(white, 0.3),\n  disabled-text:     $light-disabled-text,\n  elevation:         black,\n  hint-text:         $light-disabled-text,\n  secondary-text:    $light-secondary-text,\n  icon:              white,\n  icons:             white,\n  text:              white,\n  slider-min:        white,\n  slider-off:        rgba(white, 0.3),\n  slider-off-active: rgba(white, 0.3),\n);\n\n\n// Whether density should be generated by default.\n$_mat-theme-generate-default-density: true !default;\n\n// For a given hue in a palette, return the contrast color from the map of contrast palettes.\n// @param $color-map\n// @param $hue\n@function mat-contrast($palette, $hue) {\n  @return map-get(map-get($palette, contrast), $hue);\n}\n\n\n// Creates a map of hues to colors for a theme. This is used to define a theme palette in terms\n// of the Material Design hues.\n// @param $color-map\n// @param $primary\n// @param $lighter\n@function mat-palette($base-palette, $default: 500, $lighter: 100, $darker: 700, $text: $default) {\n  $result: map_merge($base-palette, (\n    default: map-get($base-palette, $default),\n    lighter: map-get($base-palette, $lighter),\n    darker: map-get($base-palette, $darker),\n    text: map-get($base-palette, $text),\n\n    default-contrast: mat-contrast($base-palette, $default),\n    lighter-contrast: mat-contrast($base-palette, $lighter),\n    darker-contrast: mat-contrast($base-palette, $darker)\n  ));\n\n  // For each hue in the palette, add a \"-contrast\" color to the map.\n  @each $hue, $color in $base-palette {\n    $result: map_merge($result, (\n      '#{$hue}-contrast': mat-contrast($base-palette, $hue)\n    ));\n  }\n\n  @return $result;\n}\n\n\n// Gets a color from a theme palette (the output of mat-palette).\n// The hue can be one of the standard values (500, A400, etc.), one of the three preconfigured\n// hues (default, lighter, darker), or any of the aforementioned prefixed with \"-contrast\".\n//\n// @param $color-map The theme palette (output of mat-palette).\n// @param $hue The hue from the palette to use. If this is a value between 0 and 1, it will\n//     be treated as opacity.\n// @param $opacity The alpha channel value for the color.\n@function mat-color($palette, $hue: default, $opacity: null) {\n  // If hueKey is a number between zero and one, then it actually contains an\n  // opacity value, so recall this function with the default hue and that given opacity.\n  @if type-of($hue) == number and $hue >= 0 and $hue <= 1 {\n    @return mat-color($palette, default, $hue);\n  }\n\n  $color: map-get($palette, $hue);\n\n  @if (type-of($color) != color) {\n    // If the $color resolved to something different from a color (e.g. a CSS variable),\n    // we can't apply the opacity anyway so we return the value as is, otherwise Sass can\n    // throw an error or output something invalid.\n    @return $color;\n  }\n\n  @return rgba($color, if($opacity == null, opacity($color), $opacity));\n}\n\n// Validates the specified theme by ensuring that the optional color config defines\n// a primary, accent and warn palette. Returns the theme if no failures were found.\n@function _mat-validate-theme($theme) {\n  @if map_get($theme, color) {\n    $color: map_get($theme, color);\n    @if not map_get($color, primary) {\n      @error 'Theme does not define a valid \"primary\" palette.';\n    }\n    @else if not map_get($color, accent) {\n      @error 'Theme does not define a valid \"accent\" palette.';\n    }\n    @else if not map_get($color, warn) {\n      @error 'Theme does not define a valid \"warn\" palette.';\n    }\n  }\n  @return $theme;\n}\n\n// Creates a backwards compatible theme. Previously in Angular Material, theme objects\n// contained the color configuration directly. With the recent refactoring of the theming\n// system to allow for density and typography configurations, this is no longer the case.\n// To ensure that constructed themes which will be passed to custom theme mixins do not break,\n// we copy the color configuration and put its properties at the top-level of the theme object.\n// Here is an example of a pattern that should still work until it's officially marked as a\n// breaking change:\n//\n//    @mixin my-custom-component-theme($theme) {\n//      .my-comp {\n//        background-color: mat-color(map_get($theme, primary));\n//      }\n//    }\n//\n// Note that the `$theme.primary` key does usually not exist since the color configuration\n// is stored in `$theme.color` which contains a property for `primary`. This method copies\n// the map from `$theme.color` to `$theme` for backwards compatibility.\n@function _mat-create-backwards-compatibility-theme($theme) {\n  @if not map_get($theme, color) {\n    @return $theme;\n  }\n  $color: map_get($theme, color);\n  @return map_merge($theme, $color);\n}\n\n// Creates a light-themed color configuration from the specified\n// primary, accent and warn palettes.\n@function _mat-create-light-color-config($primary, $accent, $warn: null) {\n  @return (\n    primary: $primary,\n    accent: $accent,\n    warn: if($warn != null, $warn, mat-palette($mat-red)),\n    is-dark: false,\n    foreground: $mat-light-theme-foreground,\n    background: $mat-light-theme-background,\n  );\n}\n\n// Creates a dark-themed color configuration from the specified\n// primary, accent and warn palettes.\n@function _mat-create-dark-color-config($primary, $accent, $warn: null) {\n  @return (\n    primary: $primary,\n    accent: $accent,\n    warn: if($warn != null, $warn, mat-palette($mat-red)),\n    is-dark: true,\n    foreground: $mat-dark-theme-foreground,\n    background: $mat-dark-theme-background,\n  );\n}\n\n// Creates a container object for a light theme to be given to individual component theme mixins.\n// TODO: Remove legacy API and rename `$primary` to `$config`. Currently it cannot be renamed\n// as it would break existing apps that set the parameter by name.\n@function mat-light-theme($primary, $accent: null, $warn: mat-palette($mat-red)) {\n  // This function creates a container object for the individual component theme mixins. Consumers\n  // can construct such an object by calling this function, or by building the object manually.\n  // There are two possible ways to invoke this function in order to create such an object:\n  //\n  //    (1) Passing in a map that holds optional configurations for individual parts of the\n  //        theming system. For `color` configurations, the function only expects the palettes\n  //        for `primary` and `accent` (and optionally `warn`). The function will expand the\n  //        shorthand into an actual configuration that can be consumed in `-color` mixins.\n  //    (2) Legacy pattern: Passing in the palettes as parameters. This is not as flexible\n  //        as passing in a configuration map because only the `color` system can be configured.\n  //\n  // If the legacy pattern is used, we generate a container object only with a light-themed\n  // configuration for the `color` theming part.\n  @if $accent != null {\n    @return _mat-create-backwards-compatibility-theme(_mat-validate-theme((\n      _is-legacy-theme: true,\n      color: _mat-create-light-color-config($primary, $accent, $warn),\n    )));\n  }\n  // If the map pattern is used (1), we just pass-through the configurations for individual\n  // parts of the theming system, but update the `color` configuration if set. As explained\n  // above, the color shorthand will be expanded to an actual light-themed color configuration.\n  $result: $primary;\n  @if map_get($primary, color) {\n    $color-settings: map_get($primary, color);\n    $primary: map_get($color-settings, primary);\n    $accent: map_get($color-settings, accent);\n    $warn: map_get($color-settings, warn);\n    $result: map_merge($result, (color: _mat-create-light-color-config($primary, $accent, $warn)));\n  }\n  @return _mat-create-backwards-compatibility-theme(_mat-validate-theme($result));\n}\n\n// Creates a container object for a dark theme to be given to individual component theme mixins.\n// TODO: Remove legacy API and rename `$primary` to `$config`. Currently it cannot be renamed\n// as it would break existing apps that set the parameter by name.\n@function mat-dark-theme($primary, $accent: null, $warn: mat-palette($mat-red)) {\n  // This function creates a container object for the individual component theme mixins. Consumers\n  // can construct such an object by calling this function, or by building the object manually.\n  // There are two possible ways to invoke this function in order to create such an object:\n  //\n  //    (1) Passing in a map that holds optional configurations for individual parts of the\n  //        theming system. For `color` configurations, the function only expects the palettes\n  //        for `primary` and `accent` (and optionally `warn`). The function will expand the\n  //        shorthand into an actual configuration that can be consumed in `-color` mixins.\n  //    (2) Legacy pattern: Passing in the palettes as parameters. This is not as flexible\n  //        as passing in a configuration map because only the `color` system can be configured.\n  //\n  // If the legacy pattern is used, we generate a container object only with a dark-themed\n  // configuration for the `color` theming part.\n  @if $accent != null {\n    @return _mat-create-backwards-compatibility-theme(_mat-validate-theme((\n      _is-legacy-theme: true,\n      color: _mat-create-dark-color-config($primary, $accent, $warn),\n    )));\n  }\n  // If the map pattern is used (1), we just pass-through the configurations for individual\n  // parts of the theming system, but update the `color` configuration if set. As explained\n  // above, the color shorthand will be expanded to an actual dark-themed color configuration.\n  $result: $primary;\n  @if map_get($primary, color) {\n    $color-settings: map_get($primary, color);\n    $primary: map_get($color-settings, primary);\n    $accent: map_get($color-settings, accent);\n    $warn: map_get($color-settings, warn);\n    $result: map_merge($result, (color: _mat-create-dark-color-config($primary, $accent, $warn)));\n  }\n  @return _mat-create-backwards-compatibility-theme(_mat-validate-theme($result));\n}\n\n/// Gets the color configuration from the given theme or configuration.\n@function mat-get-color-config($theme, $default: null) {\n  // If a configuration has been passed, return the config directly.\n  @if not _mat-is-theme-object($theme) {\n    @return $theme;\n  }\n  // If the theme has been constructed through the legacy theming API, we use the theme object\n  // as color configuration instead of the dedicated `color` property. We do this because for\n  // backwards compatibility, we copied the color configuration from `$theme.color` to `$theme`.\n  // Hence developers could customize the colors at top-level and want to respect these changes\n  // TODO: Remove when legacy theming API is removed.\n  @if _mat-is-legacy-constructed-theme($theme) {\n    @return $theme;\n  }\n  @if map_has_key($theme, color) {\n    @return map_get($theme, color);\n  }\n  @return $default;\n}\n\n/// Gets the density configuration from the given theme or configuration.\n@function mat-get-density-config($theme-or-config, $default: 0) {\n  // If a configuration has been passed, return the config directly.\n  @if not _mat-is-theme-object($theme-or-config) {\n    @return $theme-or-config;\n  }\n  // In case a theme has been passed, extract the configuration if present,\n  // or fall back to the default density config.\n  @if map_has_key($theme-or-config, density) {\n    @return map_get($theme-or-config, density);\n  }\n  @return $default;\n}\n\n/// Gets the typography configuration from the given theme or configuration.\n/// For backwards compatibility, typography is not included by default.\n@function mat-get-typography-config($theme-or-config, $default: null) {\n  // If a configuration has been passed, return the config directly.\n  @if not _mat-is-theme-object($theme-or-config) {\n    @return $theme-or-config;\n  }\n  // In case a theme has been passed, extract the configuration if present,\n  // or fall back to the default typography config.\n  @if (map_has_key($theme-or-config, typography)) {\n    @return map_get($theme-or-config, typography);\n  }\n  @return $default;\n}\n\n// Checks whether the given value resolves to a theme object. Theme objects are always\n// of type `map` and can optionally only specify `color`, `density` or `typography`.\n@function _mat-is-theme-object($value) {\n  @return type-of($value) == 'map' and (\n    map_has_key($value, color) or\n    map_has_key($value, density) or\n    map_has_key($value, typography) or\n    length($value) == 0\n  );\n}\n\n// Checks whether a given value corresponds to a legacy constructed theme.\n@function _mat-is-legacy-constructed-theme($value) {\n  @return type-of($value) == 'map' and map_get($value, '_is-legacy-theme');\n}\n\n// Gets the theme from the given value that is either already a theme, or a color configuration.\n// This handles the legacy case where developers pass a color configuration directly to the\n// theme mixin. Before we introduced the new pattern for constructing a theme, developers passed\n// the color configuration directly to the theme mixins. This can be still the case if developers\n// construct a theme manually and pass it to a theme. We support this for backwards compatibility.\n// TODO(devversion): remove this in the future. Constructing themes manually is rare,\n// and the code can be easily updated to the new API.\n@function _mat-legacy-get-theme($theme-or-color-config) {\n  @if _mat-is-theme-object($theme-or-color-config) {\n    @return $theme-or-color-config;\n  }\n  @return _mat-create-backwards-compatibility-theme((\n    _is-legacy-theme: true,\n    color: $theme-or-color-config\n  ));\n}\n\n\n\n// Whether duplication warnings should be disabled. Warnings enabled by default.\n$mat-theme-ignore-duplication-warnings: false !default;\n\n// Warning that will be printed if duplicated styles are generated by a theme.\n$_mat-theme-duplicate-warning: 'Read more about how style duplication can be avoided in a ' +\n  'dedicated guide. https://github.com/angular/components/blob/master/guides/duplicate-theming-styles.md';\n\n// These variable are not intended to be overridden externally. They use `!default` to\n// avoid being reset every time this file is imported.\n$_mat-theme-emitted-color: () !default;\n$_mat-theme-emitted-typography: () !default;\n$_mat-theme-emitted-density: () !default;\n\n// Checks if configurations that have been declared in the given theme have been generated\n// before. If so, warnings will be reported. This should notify developers in case duplicate\n// styles are accidentally generated due to wrong usage of the all-theme mixins.\n//\n// Additionally, this mixin controls the default value for the density configuration. By\n// default, density styles are generated at scale zero. If the same density styles would be\n// generated a second time though, the default value will change to avoid duplicate styles.\n//\n// The mixin keeps track of all configurations in a list that is scoped to the specified\n// id. This is necessary because a given theme can be passed to multiple disjoint theme mixins\n// (e.g. `angular-material-theme` and `angular-material-mdc-theme`) without causing any\n// style duplication.\n@mixin _mat-check-duplicate-theme-styles($theme-or-color-config, $id) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  $color-config: mat-get-color-config($theme);\n  $density-config: mat-get-density-config($theme);\n  $typography-config: mat-get-typography-config($theme);\n  // Lists of previous `color`, `density` and `typography` configurations.\n  $previous-color: map_get($_mat-theme-emitted-color, $id) or ();\n  $previous-typography: map_get($_mat-theme-emitted-typography, $id) or ();\n  $previous-density: map_get($_mat-theme-emitted-density, $id) or ();\n  // Whether duplicate legacy density styles would be generated.\n  $duplicate-legacy-density: false;\n\n  // Check if the color configuration has been generated before.\n  @if $color-config != null {\n    @if index($previous-color, $color-config) != null and\n        not $mat-theme-ignore-duplication-warnings {\n      @warn 'The same color styles are generated multiple times. ' +\n          $_mat-theme-duplicate-warning;\n    }\n    $previous-color: append($previous-color, $color-config);\n  }\n\n  // Check if the typography configuration has been generated before.\n  @if $typography-config != null {\n    @if index($previous-typography, $typography-config) != null and\n        not $mat-theme-ignore-duplication-warnings {\n      @warn 'The same typography styles are generated multiple times. ' +\n          $_mat-theme-duplicate-warning;\n    }\n    $previous-typography: append($previous-typography, $typography-config);\n  }\n\n  // Check if the density configuration has been generated before.\n  @if $density-config != null {\n    @if index($previous-density, $density-config) != null {\n      // Only report a warning if density styles would be duplicated for non-legacy theme\n      // definitions. For legacy themes, we have compatibility logic that avoids duplication\n      // of default density styles. We don't want to report a warning in those cases.\n      @if _mat-is-legacy-constructed-theme($theme) {\n        $duplicate-legacy-density: true;\n      }\n      @else if not $mat-theme-ignore-duplication-warnings {\n        @warn 'The same density styles are generated multiple times. ' +\n           $_mat-theme-duplicate-warning;\n      }\n    }\n    $previous-density: append($previous-density, $density-config);\n  }\n\n  $_mat-theme-emitted-color: map_merge(\n      $_mat-theme-emitted-color, ($id: $previous-color)) !global;\n  $_mat-theme-emitted-density: map_merge(\n      $_mat-theme-emitted-density, ($id: $previous-density)) !global;\n  $_mat-theme-emitted-typography: map_merge(\n      $_mat-theme-emitted-typography, ($id: $previous-typography)) !global;\n\n  // Optionally, consumers of this mixin can wrap contents inside so that nested\n  // duplicate style checks do not report another warning. e.g. if developers include\n  // the `angular-material-theme` mixin twice, only the top-level duplicate styles check\n  // should report a warning. Not all individual components should report a warning too.\n  $orig-mat-theme-ignore-duplication-warnings: $mat-theme-ignore-duplication-warnings;\n  $mat-theme-ignore-duplication-warnings: true !global;\n\n  // If duplicate default density styles would be generated for a legacy constructed theme,\n  // we adjust the density generation so that no density styles are generated by default.\n  // If no default density styles have been generated yet, we ensure that the styles\n  // are generated at root. For legacy themes our goal is to generate default density\n  // styles **once** and at root. This matches the old behavior where density styles were\n  // part of the base component styles (that did not use view encapsulation).\n  // TODO: Remove this compatibility logic when the legacy theming API is removed.\n  $_mat-density-generate-at-root: _mat-is-legacy-constructed-theme($theme) !global;\n  $_mat-density-generate-styles: not $duplicate-legacy-density !global;\n\n  @content;\n  $mat-theme-ignore-duplication-warnings: $orig-mat-theme-ignore-duplication-warnings !global;\n\n  $_mat-density-generate-at-root: false !global;\n  $_mat-density-generate-styles: true !global;\n}\n\n\n\n$mat-ripple-color-opacity: 0.1;\n\n@mixin mat-ripple() {\n\n  // The host element of an mat-ripple directive should always have a position of \"absolute\" or\n  // \"relative\" so that the ripples inside are correctly positioned relatively to the container.\n  .mat-ripple {\n    overflow: hidden;\n\n    // By default, every ripple container should have position: relative in favor of creating an\n    // easy API for developers using the MatRipple directive.\n    position: relative;\n\n    // Promote containers that have ripples to a new layer. We want to target `:not(:empty)`,\n    // because we don't want all ripple containers to have their own layer since they're used in a\n    // lot of places and the layer is only relevant while animating. Note that ideally we'd use\n    // the `contain` property here (see #13175), because `:empty` can be broken by having extra\n    // text inside the element, but it isn't very well supported yet.\n    &:not(:empty) {\n      transform: translateZ(0);\n    }\n  }\n\n  .mat-ripple.mat-ripple-unbounded {\n    overflow: visible;\n  }\n\n  .mat-ripple-element {\n    position: absolute;\n    border-radius: 50%;\n    pointer-events: none;\n\n    transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n    transform: scale(0);\n\n    // In high contrast mode the ripple is opaque, causing it to obstruct the content.\n    @include cdk-high-contrast(active, off) {\n      display: none;\n    }\n  }\n}\n\n/* Colors for the ripple elements.*/\n@mixin mat-ripple-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map_get($config, foreground);\n  $foreground-base: map_get($foreground, base);\n\n  .mat-ripple-element {\n    // If the ripple color is resolves to a color *type*, we can use it directly, otherwise\n    // (e.g. it resolves to a CSS variable) we fall back to using the color and setting an opacity.\n    @if (type-of($foreground-base) == color) {\n      background-color: rgba($foreground-base, $mat-ripple-color-opacity);\n    }\n    @else {\n      background-color: $foreground-base;\n      opacity: $mat-ripple-color-opacity;\n    }\n  }\n}\n\n@mixin mat-ripple-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-ripple') {\n    $color: mat-get-color-config($theme);\n    @if $color != null {\n      @include mat-ripple-color($color);\n    }\n  }\n}\n\n\n\n// This mixin ensures an element spans to fill the nearest ancestor with defined positioning.\n@mixin mat-fill {\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  position: absolute;\n}\n\n\n/// Mixin that turns on strong focus indicators.\n///\n/// @example\n///   .my-app {\n///     @include mat-strong-focus-indicators($config);\n///   }\n@mixin mat-strong-focus-indicators($config: ()) {\n  // Default focus indicator config.\n  $default-config: (\n    border-style: solid,\n    border-width: 3px,\n    border-radius: 4px,\n  );\n\n  // Merge default config with user config.\n  $config: map-merge($default-config, $config);\n  $border-style: map-get($config, border-style);\n  $border-width: map-get($config, border-width);\n  $border-radius: map-get($config, border-radius);\n\n  // Base styles for focus indicators.\n  .mat-focus-indicator::before {\n    @include mat-fill();\n    box-sizing: border-box;\n    pointer-events: none;\n    border: $border-width $border-style transparent;\n    border-radius: $border-radius;\n  }\n\n  // By default, all focus indicators are flush with the bounding box of their\n  // host element. For particular elements (listed below), default inset/offset\n  // values are necessary to ensure that the focus indicator is sufficiently\n  // contrastive and renders appropriately.\n\n  .mat-focus-indicator.mat-flat-button::before,\n  .mat-focus-indicator.mat-raised-button::before,\n  .mat-focus-indicator.mat-fab::before,\n  .mat-focus-indicator.mat-mini-fab::before,\n  .mat-focus-indicator.mat-chip::before,\n  .mat-focus-indicator.mat-sort-header-container::before {\n    margin: -($border-width + 2px);\n  }\n\n  .mat-focus-indicator.mat-stroked-button::before,\n  .mat-focus-indicator.mat-calendar-body-cell-content::before {\n    margin: -($border-width + 3px);\n  }\n\n  .mat-focus-indicator.mat-tab-link::before,\n  .mat-focus-indicator.mat-tab-label::before {\n    margin: 5px;\n  }\n\n  // Render the focus indicator on focus. Defining a pseudo element's\n  // content will cause it to render.\n\n  // Checkboxes, radios, and slide toggles render focus indicators when the\n  // associated visually-hidden input is focused.\n  .mat-checkbox-input:focus ~ .mat-focus-indicator::before,\n  .mat-radio-input:focus ~ .mat-focus-indicator::before,\n  .mat-slide-toggle-input:focus ~ .mat-slide-toggle-thumb-container .mat-focus-indicator::before,\n\n  // For options, render the focus indicator when the class .mat-active\n  // is present.\n  .mat-focus-indicator.mat-option.mat-active::before,\n\n  // For calendar cells, render the focus indicator when the parent cell is\n  // focused.\n  .mat-calendar-body-cell:focus .mat-focus-indicator::before,\n\n  // For all other components, render the focus indicator on focus.\n  .mat-focus-indicator:focus::before {\n    content: '';\n  }\n}\n\n// Mixin that applies the border color for the focus indicators.\n@mixin _mat-strong-focus-indicators-border-color($color) {\n  .mat-focus-indicator::before {\n    border-color: $color;\n  }\n}\n\n@mixin mat-strong-focus-indicators-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  @include _mat-strong-focus-indicators-border-color(mat-color(map_get($config, primary)));\n}\n\n/// Mixin that sets the color of the focus indicators.\n///\n/// @param {color|map} $theme-or-color\n///   If theme, focus indicators are set to the primary color of the theme. If\n///   color, focus indicators are set to that color.\n///\n/// @example\n///   .demo-dark-theme {\n///     @include mat-strong-focus-indicators-theme($dark-theme-map);\n///   }\n///\n/// @example\n///   .demo-red-theme {\n///     @include mat-strong-focus-indicators-theme(#f00);\n///   }\n/* stylelint-disable-next-line material/theme-mixin-api */\n@mixin mat-strong-focus-indicators-theme($theme-or-color) {\n  @if type-of($theme-or-color) != 'map' {\n    @include _mat-strong-focus-indicators-border-color($theme-or-color);\n  }\n  @else {\n    $theme: _mat-legacy-get-theme($theme-or-color);\n    @include _mat-check-duplicate-theme-styles($theme, 'mat-strong-focus-indicators') {\n      $color: mat-get-color-config($theme);\n      @if $color != null {\n        @include mat-strong-focus-indicators-color($color);\n      }\n    }\n  }\n}\n\n// Mixin that ensures focus indicator host elements are positioned so that the focus indicator\n// pseudo element within is positioned relative to the host. Private mixin included within\n// `mat-core`.\n@mixin _mat-strong-focus-indicators-positioning() {\n  .mat-focus-indicator {\n    position: relative;\n  }\n}\n\n\n\n\n// Utility for fetching a nested value from a typography config.\n@function _mat-get-type-value($config, $level, $name) {\n  @return map-get(map-get($config, $level), $name);\n}\n\n// Gets the font size for a level inside a typography config.\n@function mat-font-size($config, $level) {\n  @return _mat-get-type-value($config, $level, font-size);\n}\n\n// Gets the line height for a level inside a typography config.\n@function mat-line-height($config, $level) {\n  @return _mat-get-type-value($config, $level, line-height);\n}\n\n// Gets the font weight for a level inside a typography config.\n@function mat-font-weight($config, $level) {\n  @return _mat-get-type-value($config, $level, font-weight);\n}\n\n// Gets the letter spacing for a level inside a typography config.\n@function mat-letter-spacing($config, $level) {\n  @return _mat-get-type-value($config, $level, letter-spacing);\n}\n\n// Gets the font-family from a typography config and removes the quotes around it.\n@function mat-font-family($config, $level: null) {\n  $font-family: map-get($config, font-family);\n\n  @if $level != null {\n    $font-family: _mat-get-type-value($config, $level, font-family);\n  }\n\n  // Guard against unquoting non-string values, because it's deprecated.\n  @return if(type-of($font-family) == string, unquote($font-family), $font-family);\n}\n\n// Outputs the shorthand `font` CSS property, based on a set of typography values. Falls back to\n// the individual properties if a value that isn't allowed in the shorthand is passed in.\n@mixin mat-typography-font-shorthand($font-size, $font-weight, $line-height, $font-family) {\n  // If any of the values are set to `inherit`, we can't use the shorthand\n  // so we fall back to passing in the individual properties.\n  @if ($font-size == inherit or\n       $font-weight == inherit or\n       $line-height == inherit or\n       $font-family == inherit or\n       $font-size == null or\n       $font-weight == null or\n       $line-height == null or\n       $font-family == null) {\n\n    font-size: $font-size;\n    font-weight: $font-weight;\n    line-height: $line-height;\n    font-family: $font-family;\n  }\n  @else {\n    // Otherwise use the shorthand `font`, because it's the least amount of bytes. Note\n    // that we need to use interpolation for `font-size/line-height` in order to prevent\n    // Sass from dividing the two values.\n    font: $font-weight #{$font-size}/#{$line-height} $font-family;\n  }\n}\n\n// Converts a typography level into CSS styles.\n@mixin mat-typography-level-to-styles($config, $level) {\n  $font-size: mat-font-size($config, $level);\n  $font-weight: mat-font-weight($config, $level);\n  $line-height: mat-line-height($config, $level);\n  $font-family: mat-font-family($config, $level);\n\n  @include mat-typography-font-shorthand($font-size, $font-weight, $line-height, $font-family);\n  letter-spacing: mat-letter-spacing($config, $level);\n}\n\n\n@mixin mat-option-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n\n  .mat-option {\n    color: mat-color($foreground, text);\n\n    &:hover:not(.mat-option-disabled),\n    &:focus:not(.mat-option-disabled) {\n      background: mat-color($background, hover);\n    }\n\n    // In multiple mode there is a checkbox to show that the option is selected.\n    &.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\n      background: mat-color($background, hover);\n    }\n\n    &.mat-active {\n      background: mat-color($background, hover);\n      color: mat-color($foreground, text);\n    }\n\n    &.mat-option-disabled {\n      color: mat-color($foreground, hint-text);\n    }\n  }\n\n  .mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($primary, text);\n  }\n\n  .mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($accent, text);\n  }\n\n  .mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($warn, text);\n  }\n}\n\n@mixin mat-option-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-option {\n    font: {\n      family: mat-font-family($config);\n      size: mat-font-size($config, subheading-2);\n    }\n  }\n}\n\n@mixin _mat-option-density($config-or-theme) {}\n\n@mixin mat-option-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-option') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-option-color($color);\n    }\n    @if $density != null {\n      @include _mat-option-density($density);\n    }\n    @if $typography != null {\n      @include mat-option-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-optgroup-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n\n  .mat-optgroup-label {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-optgroup-disabled .mat-optgroup-label {\n    color: mat-color($foreground, hint-text);\n  }\n}\n\n@mixin mat-optgroup-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-optgroup-label {\n    @include mat-typography-level-to-styles($config, body-2);\n  }\n}\n\n@mixin _mat-optgroup-density($config-or-theme) {}\n\n@mixin mat-optgroup-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-optgroup') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-optgroup-color($color);\n    }\n    @if $density != null {\n      @include _mat-optgroup-density($density);\n    }\n    @if $typography != null {\n      @include mat-optgroup-typography($typography);\n    }\n  }\n}\n\n\n\n\n@mixin mat-pseudo-checkbox-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $is-dark-theme: map-get($config, is-dark);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n  $colored-box-selector: '.mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate';\n\n  .mat-pseudo-checkbox {\n    color: mat-color(map-get($config, foreground), secondary-text);\n\n    &::after {\n      color: mat-color($background, background);\n    }\n  }\n\n  .mat-pseudo-checkbox-disabled {\n    color: $disabled-color;\n  }\n\n  .mat-primary .mat-pseudo-checkbox-checked,\n  .mat-primary .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($config, primary));\n  }\n\n  // Default to the accent color. Note that the pseudo checkboxes are meant to inherit the\n  // theme from their parent, rather than implementing their own theming, which is why we\n  // don't attach to the `mat-*` classes. Also note that this needs to be below `.mat-primary`\n  // in order to allow for the color to be overwritten if the checkbox is inside a parent that\n  // has `mat-accent` and is placed inside another parent that has `mat-primary`.\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate,\n  .mat-accent .mat-pseudo-checkbox-checked,\n  .mat-accent .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($config, accent));\n  }\n\n  .mat-warn .mat-pseudo-checkbox-checked,\n  .mat-warn .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($config, warn));\n  }\n\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-disabled {\n      background: $disabled-color;\n    }\n  }\n}\n\n@mixin mat-pseudo-checkbox-typography($config-or-theme) {}\n\n@mixin _mat-pseudo-checkbox-density($config-or-theme) {}\n\n@mixin mat-pseudo-checkbox-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-pseudo-checkbox') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-pseudo-checkbox-color($color);\n    }\n    @if $density != null {\n      @include _mat-pseudo-checkbox-density($density);\n    }\n    @if $typography != null {\n      @include mat-pseudo-checkbox-typography($typography);\n    }\n  }\n}\n\n\n\n// Represents a typography level from the Material design spec.\n@function mat-typography-level(\n  $font-size,\n  $line-height: $font-size,\n  $font-weight: 400,\n  $font-family: null,\n  $letter-spacing: normal) {\n\n  @return (\n    font-size: $font-size,\n    line-height: $line-height,\n    font-weight: $font-weight,\n    font-family: $font-family,\n    letter-spacing: $letter-spacing\n  );\n}\n\n// Represents a collection of typography levels.\n// Defaults come from https://material.io/guidelines/style/typography.html\n// Note: The spec doesn't mention letter spacing. The values here come from\n// eyeballing it until it looked exactly like the spec examples.\n@function mat-typography-config(\n  $font-family:   'Roboto, \"Helvetica Neue\", sans-serif',\n  $display-4:     mat-typography-level(112px, 112px, 300, $letter-spacing: -0.05em),\n  $display-3:     mat-typography-level(56px, 56px, 400, $letter-spacing: -0.02em),\n  $display-2:     mat-typography-level(45px, 48px, 400, $letter-spacing: -0.005em),\n  $display-1:     mat-typography-level(34px, 40px, 400),\n  $headline:      mat-typography-level(24px, 32px, 400),\n  $title:         mat-typography-level(20px, 32px, 500),\n  $subheading-2:  mat-typography-level(16px, 28px, 400),\n  $subheading-1:  mat-typography-level(15px, 24px, 400),\n  $body-2:        mat-typography-level(14px, 24px, 500),\n  $body-1:        mat-typography-level(14px, 20px, 400),\n  $caption:       mat-typography-level(12px, 20px, 400),\n  $button:        mat-typography-level(14px, 14px, 500),\n  // Line-height must be unit-less fraction of the font-size.\n  $input:         mat-typography-level(inherit, 1.125, 400)\n) {\n\n  // Declare an initial map with all of the levels.\n  $config: (\n    display-4:      $display-4,\n    display-3:      $display-3,\n    display-2:      $display-2,\n    display-1:      $display-1,\n    headline:       $headline,\n    title:          $title,\n    subheading-2:   $subheading-2,\n    subheading-1:   $subheading-1,\n    body-2:         $body-2,\n    body-1:         $body-1,\n    caption:        $caption,\n    button:         $button,\n    input:          $input,\n  );\n\n  // Loop through the levels and set the `font-family` of the ones that don't have one to the base.\n  // Note that Sass can't modify maps in place, which means that we need to merge and re-assign.\n  @each $key, $level in $config {\n    @if map-get($level, font-family) == null {\n      $new-level: map-merge($level, (font-family: $font-family));\n      $config: map-merge($config, ($key: $new-level));\n    }\n  }\n\n  // Add the base font family to the config.\n  @return map-merge($config, (font-family: $font-family));\n}\n\n// Adds the base typography styles, based on a config.\n/* stylelint-disable-next-line material/theme-mixin-api */\n@mixin mat-base-typography($config, $selector: '.mat-typography') {\n  .mat-h1, .mat-headline, #{$selector} h1 {\n    @include mat-typography-level-to-styles($config, headline);\n    margin: 0 0 16px;\n  }\n\n  .mat-h2, .mat-title, #{$selector} h2 {\n    @include mat-typography-level-to-styles($config, title);\n    margin: 0 0 16px;\n  }\n\n  .mat-h3, .mat-subheading-2, #{$selector} h3 {\n    @include mat-typography-level-to-styles($config, subheading-2);\n    margin: 0 0 16px;\n  }\n\n  .mat-h4, .mat-subheading-1, #{$selector} h4 {\n    @include mat-typography-level-to-styles($config, subheading-1);\n    margin: 0 0 16px;\n  }\n\n  // Note: the spec doesn't have anything that would correspond to h5 and h6, but we add these for\n  // consistency. The font sizes come from the Chrome user agent styles which have h5 at 0.83em\n  // and h6 at 0.67em.\n  .mat-h5, #{$selector} h5 {\n    @include mat-typography-font-shorthand(\n       // calc is used here to support css variables\n      calc(#{mat-font-size($config, body-1)} * 0.83),\n      mat-font-weight($config, body-1),\n      mat-line-height($config, body-1),\n      mat-font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-h6, #{$selector} h6 {\n    @include mat-typography-font-shorthand(\n       // calc is used here to support css variables\n      calc(#{mat-font-size($config, body-1)} * 0.67),\n      mat-font-weight($config, body-1),\n      mat-line-height($config, body-1),\n      mat-font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-body-strong, .mat-body-2 {\n    @include mat-typography-level-to-styles($config, body-2);\n  }\n\n  .mat-body, .mat-body-1, #{$selector} {\n    @include mat-typography-level-to-styles($config, body-1);\n\n    p {\n      margin: 0 0 12px;\n    }\n  }\n\n  .mat-small, .mat-caption {\n    @include mat-typography-level-to-styles($config, caption);\n  }\n\n  .mat-display-4, #{$selector} .mat-display-4 {\n    @include mat-typography-level-to-styles($config, display-4);\n    margin: 0 0 56px;\n  }\n\n  .mat-display-3, #{$selector} .mat-display-3 {\n    @include mat-typography-level-to-styles($config, display-3);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-2, #{$selector} .mat-display-2 {\n    @include mat-typography-level-to-styles($config, display-2);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-1, #{$selector} .mat-display-1 {\n    @include mat-typography-level-to-styles($config, display-1);\n    margin: 0 0 64px;\n  }\n}\n\n\n\n\n\n@mixin mat-autocomplete-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n\n  .mat-autocomplete-panel {\n    @include _mat-theme-overridable-elevation(4, $config);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    // Selected options in autocompletes should not be gray, but we\n    // only want to override the background for selected options if\n    // they are *not* in hover or focus state. This change has to be\n    // made here because base option styles are shared between the\n    // autocomplete and the select.\n    .mat-option.mat-selected:not(.mat-active):not(:hover) {\n      background: mat-color($background, card);\n\n      &:not(.mat-option-disabled) {\n        color: mat-color($foreground, text);\n      }\n    }\n  }\n}\n\n@mixin mat-autocomplete-typography($config-or-theme) {}\n\n@mixin _mat-autocomplete-density($config-or-theme) {}\n\n@mixin mat-autocomplete-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-autocomplete') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-autocomplete-color($color);\n    }\n    @if $density != null {\n      @include _mat-autocomplete-density($density);\n    }\n    @if $typography != null {\n      @include mat-autocomplete-typography($typography);\n    }\n  }\n}\n\n// This contains all of the styles for the badge\n// rather than just the color/theme because of\n// no style sheet support for directives.\n\n\n\n\n\n\n$mat-badge-font-size: 12px;\n$mat-badge-font-weight: 600;\n$mat-badge-default-size: 22px !default;\n$mat-badge-small-size: $mat-badge-default-size - 6;\n$mat-badge-large-size: $mat-badge-default-size + 6;\n\n// Mixin for building offset given different sizes\n@mixin _mat-badge-size($size) {\n  .mat-badge-content {\n    width: $size;\n    height: $size;\n    line-height: $size;\n  }\n\n  &.mat-badge-above {\n    .mat-badge-content {\n      top: -$size / 2;\n    }\n  }\n\n  &.mat-badge-below {\n    .mat-badge-content {\n      bottom: -$size / 2;\n    }\n  }\n\n  &.mat-badge-before {\n    .mat-badge-content {\n      left: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-before {\n    .mat-badge-content {\n      left: auto;\n      right: -$size;\n    }\n  }\n\n  &.mat-badge-after {\n    .mat-badge-content {\n      right: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-after {\n    .mat-badge-content {\n      right: auto;\n      left: -$size;\n    }\n  }\n\n  &.mat-badge-overlap {\n    &.mat-badge-before {\n      .mat-badge-content {\n        left: -$size / 2;\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-before {\n      .mat-badge-content {\n        left: auto;\n        right: -$size / 2;\n      }\n    }\n\n    &.mat-badge-after {\n      .mat-badge-content {\n        right: -$size / 2;\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-after {\n      .mat-badge-content {\n        right: auto;\n        left: -$size / 2;\n      }\n    }\n  }\n}\n\n@mixin mat-badge-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $primary: map-get($config, primary);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-badge-content {\n    color: mat-color($primary, default-contrast);\n    background: mat-color($primary);\n\n    @include cdk-high-contrast(active, off) {\n      outline: solid 1px;\n      border-radius: 0;\n    }\n  }\n\n  .mat-badge-accent {\n    .mat-badge-content {\n      background: mat-color($accent);\n      color: mat-color($accent, default-contrast);\n    }\n  }\n\n  .mat-badge-warn {\n    .mat-badge-content {\n      color: mat-color($warn, default-contrast);\n      background: mat-color($warn);\n    }\n  }\n\n  .mat-badge {\n    position: relative;\n  }\n\n  .mat-badge-hidden {\n    .mat-badge-content {\n      display: none;\n    }\n  }\n\n  .mat-badge-disabled {\n    .mat-badge-content {\n      $app-background: mat-color($background, 'background');\n      $badge-color: mat-color($foreground, disabled-button);\n\n      // The disabled color usually has some kind of opacity, but because the badge is overlayed\n      // on top of something else, it won't look good if it's opaque. If it is a color *type*,\n      // we convert it into a solid color by taking the opacity from the rgba value and using\n      // the value to determine the percentage of the background to put into foreground when\n      // mixing the colors together.\n      @if (type-of($badge-color) == color and type-of($app-background) == color) {\n        $badge-opacity: opacity($badge-color);\n        background: mix($app-background, rgba($badge-color, 1), (1 - $badge-opacity) * 100%);\n      }\n      @else {\n        background: $badge-color;\n      }\n\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n\n  .mat-badge-content {\n    position: absolute;\n    text-align: center;\n    display: inline-block;\n    border-radius: 50%;\n    transition: transform 200ms ease-in-out;\n    transform: scale(0.6);\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    pointer-events: none;\n  }\n\n  .ng-animate-disabled .mat-badge-content,\n  .mat-badge-content._mat-animation-noopable {\n    transition: none;\n  }\n\n  // The active class is added after the element is added\n  // so it can animate scale to default\n  .mat-badge-content.mat-badge-active {\n    // Scale to `none` instead of `1` to avoid blurry text in some browsers.\n    transform: none;\n  }\n\n  .mat-badge-small {\n    @include _mat-badge-size($mat-badge-small-size);\n  }\n  .mat-badge-medium {\n    @include _mat-badge-size($mat-badge-default-size);\n  }\n  .mat-badge-large {\n    @include _mat-badge-size($mat-badge-large-size);\n  }\n}\n\n@mixin mat-badge-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-badge-content {\n    font-weight: $mat-badge-font-weight;\n    font-size: $mat-badge-font-size;\n    font-family: mat-font-family($config);\n  }\n\n  .mat-badge-small .mat-badge-content {\n    // Set the font size to 75% of the original.\n    font-size: $mat-badge-font-size * 0.75;\n  }\n\n  .mat-badge-large .mat-badge-content {\n    font-size: $mat-badge-font-size * 2;\n  }\n}\n\n@mixin _mat-badge-density($config-or-theme) {}\n\n@mixin mat-badge-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-badge') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-badge-color($color);\n    }\n    @if $density != null {\n      @include _mat-badge-density($density);\n    }\n    @if $typography != null {\n      @include mat-badge-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-bottom-sheet-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-bottom-sheet-container {\n    @include _mat-theme-elevation(16, $config);\n    background: mat-color($background, dialog);\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-bottom-sheet-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-bottom-sheet-container {\n    @include mat-typography-level-to-styles($config, body-1);\n  }\n}\n\n@mixin _mat-bottom-sheet-density($config-or-theme) {}\n\n@mixin mat-bottom-sheet-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-bottom-sheet') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-bottom-sheet-color($color);\n    }\n    @if $density != null {\n      @include _mat-bottom-sheet-density($density);\n    }\n    @if $typography != null {\n      @include mat-bottom-sheet-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n$_mat-button-ripple-opacity: 0.1;\n\n// Applies a focus style to an mat-button element for each of the supported palettes.\n@mixin _mat-button-focus-overlay-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n\n  &.mat-primary .mat-button-focus-overlay {\n    background-color: mat-color($primary);\n  }\n\n  &.mat-accent .mat-button-focus-overlay {\n    background-color: mat-color($accent);\n  }\n\n  &.mat-warn .mat-button-focus-overlay {\n    background-color: mat-color($warn);\n  }\n\n  &.mat-button-disabled .mat-button-focus-overlay {\n    background-color: transparent;\n  }\n}\n\n// Applies the background color for a ripple. If the value provided is not a Sass color,\n// we assume that we've been given a CSS variable. Since we can't perform alpha-blending\n// on a CSS variable, we instead add the opacity directly to the ripple element.\n@mixin _mat-button-ripple-background($palette, $hue, $opacity) {\n  $background-color: mat-color($palette, $hue, $opacity);\n  background-color: $background-color;\n  @if (type-of($background-color) != color) {\n    opacity: $opacity;\n  }\n}\n\n@mixin _mat-button-ripple-color($theme, $hue, $opacity: $_mat-button-ripple-opacity) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  &.mat-primary .mat-ripple-element {\n    @include _mat-button-ripple-background($primary, $hue, $opacity);\n  }\n\n  &.mat-accent .mat-ripple-element {\n    @include _mat-button-ripple-background($accent, $hue, $opacity);\n  }\n\n  &.mat-warn .mat-ripple-element {\n    @include _mat-button-ripple-background($warn, $hue, $opacity);\n  }\n}\n\n// Applies a property to an mat-button element for each of the supported palettes.\n@mixin _mat-button-theme-property($theme, $property, $hue) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  &.mat-primary {\n    #{$property}: mat-color($primary, $hue);\n  }\n  &.mat-accent {\n    #{$property}: mat-color($accent, $hue);\n  }\n  &.mat-warn {\n    #{$property}: mat-color($warn, $hue);\n  }\n\n  &.mat-primary, &.mat-accent, &.mat-warn, &.mat-button-disabled {\n    &.mat-button-disabled {\n      $palette: if($property == 'color', $foreground, $background);\n      #{$property}: mat-color($palette, disabled-button);\n    }\n  }\n}\n\n@mixin mat-button-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-button, .mat-icon-button, .mat-stroked-button {\n    // Buttons without a background color should inherit the font color. This is necessary to\n    // ensure that the button is readable on custom background colors. It's wrong to always assume\n    // that those buttons are always placed inside of containers with the default background\n    // color of the theme (e.g. themed toolbars).\n    color: inherit;\n    background: transparent;\n\n    @include _mat-button-theme-property($config, 'color', text);\n    @include _mat-button-focus-overlay-color($config);\n\n    // Setup the ripple color to be based on the text color. This ensures that the ripples\n    // are matching with the current theme palette and are in contrast to the background color\n    // (e.g in themed toolbars).\n    .mat-ripple-element {\n      opacity: $_mat-button-ripple-opacity;\n      background-color: currentColor;\n    }\n  }\n\n  .mat-button-focus-overlay {\n    background: map_get($foreground, base);\n  }\n\n  // Note: this needs a bit extra specificity, because we're not guaranteed the inclusion\n  // order of the theme styles and the button reset may end up resetting this as well.\n  .mat-stroked-button:not(.mat-button-disabled) {\n    border-color: mat-color($foreground, divider);\n  }\n\n  .mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\n    // Default font and background color when not using any color palette.\n    color: mat-color($foreground, text);\n    background-color: mat-color($background, raised-button);\n\n    @include _mat-button-theme-property($config, 'color', default-contrast);\n    @include _mat-button-theme-property($config, 'background-color', default);\n    @include _mat-button-ripple-color($config, default-contrast);\n  }\n\n  .mat-stroked-button, .mat-flat-button {\n    @include _mat-theme-overridable-elevation(0, $config);\n  }\n\n  .mat-raised-button {\n    @include _mat-theme-overridable-elevation(2, $config);\n\n    &:not(.mat-button-disabled):active {\n      @include _mat-theme-overridable-elevation(8, $config);\n    }\n\n    &.mat-button-disabled {\n      @include _mat-theme-overridable-elevation(0, $config);\n    }\n  }\n\n  .mat-fab, .mat-mini-fab {\n    @include _mat-theme-overridable-elevation(6, $config);\n\n    &:not(.mat-button-disabled):active {\n      @include _mat-theme-overridable-elevation(12, $config);\n    }\n\n    &.mat-button-disabled {\n      @include _mat-theme-overridable-elevation(0, $config);\n    }\n  }\n}\n\n@mixin mat-button-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\n  .mat-flat-button, .mat-fab, .mat-mini-fab {\n    font: {\n      family: mat-font-family($config, button);\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n@mixin _mat-button-density($config-or-theme) {}\n\n@mixin mat-button-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-button') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-button-color($color);\n    }\n    @if $density != null {\n      @include _mat-button-density($density);\n    }\n    @if $typography != null {\n      @include mat-button-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n// Taken from mat-density with small modifications to not rely on the new Sass module\n// system, and to support arbitrary properties in a density configuration.\n// https://github.com/material-components/material-components-web/blob/master/packages/mdc-density\n\n$_mat-density-interval: 4px !default;\n$_mat-density-minimum-scale: minimum !default;\n$_mat-density-maximum-scale: maximum !default;\n$_mat-density-supported-scales: (default, minimum, maximum) !default;\n$_mat-density-default-scale: 0 !default;\n\n// Whether density should be generated at root. This will be temporarily set to `true`\n// whenever density styles for legacy themes are generated.\n$_mat-density-generate-at-root: false;\n// Whether density styles should be generated. This will be temporarily set to `false` if\n// duplicate density styles for a legacy theme would be generated. For legacy themes,\n// we always generate the default density **only once** at root.\n$_mat-density-generate-styles: true;\n\n// Mixin that can be used to wrap density styles of given components. The mixin will\n// move the density styles to root if the `$_mat-density-generate-at-root` global variable\n// is set. If `$_mat-density-generate-styles` is set to `false`, generation of density\n// styles wrapped in this mixin is skipped. This mixin exists to improve backwards compatibility\n// of the new theming API where density styles are included as part of themes. Previously,\n// density styles of components were part of their base styles. With the new API, they are\n// part of the theming system. The `<..>-theme` mixins generate density by default unless\n// the density configuration is explicitly specified as per new API. This means, that projects\n// using `<..>-theme` mixins for separate themes (like `.dark-theme`) will cause duplicate\n// density styles. This is breaking as it increases specificity of density styles. This mixin\n// provides an API to control generation of density styles so that we can ensure they are only\n// created *once* and at root.\n@mixin _mat-density-legacy-compatibility() {\n  @if $_mat-density-generate-styles and $_mat-density-generate-at-root {\n    @at-root {\n      @content;\n    }\n  }\n  @else if $_mat-density-generate-styles {\n    @content;\n  }\n}\n\n@function _mat-density-prop-value($density-config, $density-scale, $property-name) {\n  @if (type-of($density-scale) == 'string' and\n      index($list: $_mat-density-supported-scales, $value: $density-scale) == null) {\n    @error 'mat-density: Supported density scales #{$_mat-density-supported-scales}, '  +\n      'but received #{$density-scale}.';\n  }\n\n  $value: null;\n  $property-scale-map: map_get($density-config, $property-name);\n\n  @if map_has_key($property-scale-map, $density-scale) {\n    $value: map_get($property-scale-map, $density-scale);\n  }\n  @else {\n    $value: map_get($property-scale-map, default) + $density-scale * $_mat-density-interval;\n  }\n\n  $min-value: map_get($property-scale-map, $_mat-density-minimum-scale);\n  $max-value: map_get($property-scale-map, $_mat-density-maximum-scale);\n\n  @if ($value < $min-value or $value > $max-value) {\n    @error 'mat-density: #{$property-name} must be between #{$min-value} and ' +\n      '#{$max-value} (inclusive), but received #{$value}.';\n  }\n\n  @return $value;\n}\n\n$mat-button-toggle-standard-height: 48px !default;\n// Minimum height for highest density can vary based on the content that developers\n// project into button-toggle's. We use a minimum of `24px` though because commonly\n// icons or text are displayed. Icons by default have a size of `24px`.\n$mat-button-toggle-standard-minimum-height: 24px !default;\n$mat-button-toggle-standard-maximum-height: $mat-button-toggle-standard-height !default;\n\n$mat-button-toggle-standard-density-config: (\n  height: (\n    default: $mat-button-toggle-standard-height,\n    maximum: $mat-button-toggle-standard-maximum-height,\n    minimum: $mat-button-toggle-standard-minimum-height,\n  )\n) !default;\n\n\n@mixin mat-button-toggle-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n  $divider-color: mat-color($foreground, divider);\n\n  .mat-button-toggle-standalone,\n  .mat-button-toggle-group {\n    @include _mat-theme-elevation(2, $config);\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    box-shadow: none;\n  }\n\n  .mat-button-toggle {\n    color: mat-color($foreground, hint-text);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: mat-color($background, focused-button);\n    }\n  }\n\n  .mat-button-toggle-appearance-standard {\n    color: mat-color($foreground, text);\n    background: mat-color($background, card);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: mat-color($background, focused-button, 1);\n    }\n  }\n\n  .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: solid 1px $divider-color;\n  }\n\n  [dir='rtl'] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: none;\n    border-right: solid 1px $divider-color;\n  }\n\n  .mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical {\n    .mat-button-toggle + .mat-button-toggle {\n      border-left: none;\n      border-right: none;\n      border-top: solid 1px $divider-color;\n    }\n  }\n\n  .mat-button-toggle-checked {\n    background-color: mat-color($background, selected-button);\n    color: mat-color($foreground, secondary-text);\n\n    &.mat-button-toggle-appearance-standard {\n      color: mat-color($foreground, text);\n    }\n  }\n\n  .mat-button-toggle-disabled {\n    color: mat-color($foreground, disabled-button);\n    background-color: mat-color($background, disabled-button-toggle);\n\n    &.mat-button-toggle-appearance-standard {\n      background: mat-color($background, card);\n    }\n\n    &.mat-button-toggle-checked {\n      background-color: mat-color($background, selected-disabled-button);\n    }\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    border: solid 1px $divider-color;\n  }\n}\n\n@mixin mat-button-toggle-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-button-toggle {\n    font-family: mat-font-family($config);\n  }\n}\n\n@mixin _mat-button-toggle-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  $standard-height: _mat-density-prop-value(\n      $mat-button-toggle-standard-density-config, $density-scale, height);\n\n  @include _mat-density-legacy-compatibility() {\n    .mat-button-toggle-appearance-standard .mat-button-toggle-label-content {\n      line-height: $standard-height;\n    }\n  }\n}\n\n@mixin mat-button-toggle-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-button-toggle') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-button-toggle-color($color);\n    }\n    @if $density != null {\n      @include _mat-button-toggle-density($density);\n    }\n    @if $typography != null {\n      @include mat-button-toggle-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n@mixin mat-card-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-card {\n    @include _mat-theme-overridable-elevation(1, $config);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    // Needs extra specificity to be able to override the elevation selectors.\n    &.mat-card-flat {\n      @include _mat-theme-overridable-elevation(0, $config);\n    }\n  }\n\n  .mat-card-subtitle {\n    color: mat-color($foreground, secondary-text);\n  }\n}\n\n@mixin mat-card-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-card {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-card-title {\n    font: {\n      size: mat-font-size($config, headline);\n      weight: mat-font-weight($config, title);\n    }\n  }\n\n  .mat-card-header .mat-card-title {\n    font-size: mat-font-size($config, title);\n  }\n\n  .mat-card-subtitle,\n  .mat-card-content {\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n@mixin _mat-card-density($config-or-theme) {}\n\n@mixin mat-card-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-card') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-card-color($color);\n    }\n    @if $density != null {\n      @include _mat-card-density($density);\n    }\n    @if $typography != null {\n      @include mat-card-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-checkbox-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $is-dark-theme: map-get($config, is-dark);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n\n  // The color of the checkbox's checkmark / mixedmark.\n  $checkbox-mark-color: mat-color($background, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n\n  .mat-checkbox-frame {\n    border-color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-checkbox-checkmark {\n    fill: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-checkmark-path {\n    // !important is needed here because a stroke must be set as an\n    // attribute on the SVG in order for line animation to work properly.\n    stroke: $checkbox-mark-color !important;\n  }\n\n  .mat-checkbox-mixedmark {\n    background-color: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-indeterminate, .mat-checkbox-checked {\n    &.mat-primary .mat-checkbox-background {\n      background-color: mat-color($primary);\n    }\n\n    &.mat-accent .mat-checkbox-background {\n      background-color: mat-color($accent);\n    }\n\n    &.mat-warn .mat-checkbox-background {\n      background-color: mat-color($warn);\n    }\n  }\n\n  .mat-checkbox-disabled {\n    &.mat-checkbox-checked,\n    &.mat-checkbox-indeterminate {\n      .mat-checkbox-background {\n        background-color: $disabled-color;\n      }\n    }\n\n    &:not(.mat-checkbox-checked) {\n      .mat-checkbox-frame {\n        border-color: $disabled-color;\n      }\n    }\n\n    .mat-checkbox-label {\n      color: mat-color($foreground, secondary-text);\n    }\n  }\n\n  // Switch this to a solid color since we're using `opacity`\n  // to control how opaque the ripple should be.\n  .mat-checkbox .mat-ripple-element {\n    background-color: map_get(map-get($config, foreground), base);\n  }\n\n  .mat-checkbox-checked:not(.mat-checkbox-disabled),\n  .mat-checkbox:active:not(.mat-checkbox-disabled) {\n    &.mat-primary .mat-ripple-element {\n      background: mat-color($primary);\n    }\n\n    &.mat-accent .mat-ripple-element {\n      background: mat-color($accent);\n    }\n\n    &.mat-warn .mat-ripple-element {\n      background: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-checkbox-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-checkbox {\n    font-family: mat-font-family($config);\n  }\n\n  // TODO(kara): Remove this style when fixing vertical baseline\n  .mat-checkbox-layout .mat-checkbox-label {\n    line-height: mat-line-height($config, body-2);\n  }\n}\n\n@mixin _mat-checkbox-density($config-or-theme) {}\n\n@mixin mat-checkbox-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-checkbox') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-checkbox-color($color);\n    }\n    @if $density != null {\n      @include _mat-checkbox-density($density);\n    }\n    @if $typography != null {\n      @include mat-checkbox-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n$mat-chip-remove-font-size: 18px;\n\n@mixin _mat-chip-element-color($foreground, $background) {\n  background-color: $background;\n  color: $foreground;\n\n  .mat-chip-remove {\n    color: $foreground;\n    opacity: 0.4;\n  }\n}\n\n\n// Applies the background color for a ripple element.\n// If the color value provided is not a Sass color,\n// we assume that we've been given a CSS variable.\n// Since we can't perform alpha-blending on a CSS variable,\n// we instead add the opacity directly to the ripple element.\n@mixin _mat-chips-ripple-background($palette, $default-contrast, $opacity) {\n  $background-color: mat-color($palette, $default-contrast, $opacity);\n  background-color: $background-color;\n  @if (type-of($background-color) != color) {\n    opacity: $opacity;\n  }\n}\n\n@mixin _mat-chip-theme-color($palette) {\n  @include _mat-chip-element-color(mat-color($palette, default-contrast), mat-color($palette));\n\n  .mat-ripple-element {\n    @include _mat-chips-ripple-background($palette, default-contrast, 0.1);\n  }\n}\n\n@mixin mat-chips-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $is-dark-theme: map-get($config, is-dark);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  $unselected-background: mat-color($background, unselected-chip);\n  $unselected-foreground: mat-color($foreground, text);\n\n  .mat-chip.mat-standard-chip {\n    @include _mat-chip-element-color($unselected-foreground, $unselected-background);\n\n    &:not(.mat-chip-disabled) {\n      &:active {\n        @include _mat-theme-elevation(3, $config);\n      }\n\n      .mat-chip-remove:hover {\n        opacity: 0.54;\n      }\n    }\n\n    &.mat-chip-disabled {\n      opacity: 0.4;\n    }\n\n    &::after {\n      background: map_get($foreground, base);\n    }\n  }\n\n  .mat-chip.mat-standard-chip.mat-chip-selected {\n    &.mat-primary {\n      @include _mat-chip-theme-color($primary);\n    }\n\n    &.mat-warn {\n      @include _mat-chip-theme-color($warn);\n    }\n\n    &.mat-accent {\n      @include _mat-chip-theme-color($accent);\n    }\n  }\n}\n\n@mixin mat-chips-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-chip {\n    font-size: mat-font-size($config, body-2);\n    font-weight: mat-font-weight($config, body-2);\n\n    .mat-chip-trailing-icon.mat-icon,\n    .mat-chip-remove.mat-icon {\n      font-size: $mat-chip-remove-font-size;\n    }\n  }\n}\n\n@mixin _mat-chips-density($config-or-theme) {}\n\n@mixin mat-chips-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-chips') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-chips-color($color);\n    }\n    @if $density != null {\n      @include _mat-chips-density($density);\n    }\n    @if $typography != null {\n      @include mat-chips-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-divider-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n\n  .mat-divider {\n    border-top-color: mat-color($foreground, divider);\n  }\n\n  .mat-divider-vertical {\n    border-right-color: mat-color($foreground, divider);\n  }\n}\n\n@mixin mat-divider-typography($config-or-theme) {}\n\n@mixin _mat-divider-density($config-or-theme) {}\n\n@mixin mat-divider-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-divider') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-divider-color($color);\n    }\n    @if $density != null {\n      @include _mat-divider-density($density);\n    }\n    @if $typography != null {\n      @include mat-divider-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-table-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-table {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-table thead, .mat-table tbody, .mat-table tfoot,\n  mat-header-row, mat-row, mat-footer-row,\n  [mat-header-row], [mat-row], [mat-footer-row],\n  .mat-table-sticky {\n    background: inherit;\n  }\n\n  mat-row, mat-header-row, mat-footer-row,\n  th.mat-header-cell, td.mat-cell, td.mat-footer-cell {\n    border-bottom-color: mat-color($foreground, divider);\n  }\n\n  .mat-header-cell {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-table-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-table {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-header-cell {\n    font-size: mat-font-size($config, caption);\n    font-weight: mat-font-weight($config, body-2);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n@mixin _mat-table-density($config-or-theme) {}\n\n@mixin mat-table-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-table') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-table-color($color);\n    }\n    @if $density != null {\n      @include _mat-table-density($density);\n    }\n    @if $typography != null {\n      @include mat-table-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n$mat-datepicker-selected-today-box-shadow-width: 1px;\n$mat-datepicker-selected-fade-amount: 0.6;\n$mat-datepicker-range-fade-amount: 0.2;\n$mat-datepicker-today-fade-amount: 0.2;\n$mat-calendar-body-font-size: 13px !default;\n$mat-calendar-weekday-table-font-size: 11px !default;\n\n@mixin _mat-datepicker-color($palette) {\n  @include mat-date-range-colors(\n    mat-color($palette, default, $mat-datepicker-range-fade-amount));\n\n  .mat-calendar-body-selected {\n    background-color: mat-color($palette);\n    color: mat-color($palette, default-contrast);\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-selected {\n    $background: mat-color($palette);\n\n    @if (type-of($background) == color) {\n      background-color: fade-out($background, $mat-datepicker-selected-fade-amount);\n    }\n    @else {\n      // If we couldn't resolve to background to a color (e.g. it's a CSS variable),\n      // fall back to fading the content out via `opacity`.\n      opacity: $mat-datepicker-today-fade-amount;\n    }\n  }\n\n  .mat-calendar-body-today.mat-calendar-body-selected {\n    box-shadow: inset 0 0 0 $mat-datepicker-selected-today-box-shadow-width\n                mat-color($palette, default-contrast);\n  }\n}\n\n// Utility mixin to target cells that aren't selected. Used to make selector easier to follow.\n@mixin _mat-datepicker-unselected-cell {\n  &:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    @content;\n  }\n}\n\n@mixin mat-datepicker-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n  $disabled-color: mat-color($foreground, disabled-text);\n\n  .mat-calendar-arrow {\n    border-top-color: mat-color($foreground, icon);\n  }\n\n  // The prev/next buttons need a bit more specificity to\n  // avoid being overwritten by the .mat-icon-button.\n  .mat-datepicker-toggle,\n  .mat-datepicker-content .mat-calendar-next-button,\n  .mat-datepicker-content .mat-calendar-previous-button {\n    color: mat-color($foreground, icon);\n  }\n\n  .mat-calendar-table-header {\n    color: mat-color($foreground, hint-text);\n  }\n\n  .mat-calendar-table-header-divider::after {\n    background: mat-color($foreground, divider);\n  }\n\n  .mat-calendar-body-label {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-calendar-body-cell-content,\n  .mat-date-range-input-separator {\n    color: mat-color($foreground, text);\n    border-color: transparent;\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-cell-content {\n    @include _mat-datepicker-unselected-cell {\n      color: $disabled-color;\n    }\n  }\n\n  .mat-form-field-disabled .mat-date-range-input-separator {\n    color: $disabled-color;\n  }\n\n  .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover,\n  .cdk-keyboard-focused .mat-calendar-body-active,\n  .cdk-program-focused .mat-calendar-body-active {\n    & > .mat-calendar-body-cell-content {\n      @include _mat-datepicker-unselected-cell {\n        background-color: mat-color($background, hover);\n      }\n    }\n  }\n\n  .mat-calendar-body-in-preview {\n    $divider-color: mat-color($foreground, divider);\n\n    @if type-of($divider-color) == color {\n      // The divider color is set under the assumption that it'll be used\n      // for a solid border, but because we're using a dashed border for the\n      // preview range, we need to bump its opacity to ensure that it's visible.\n      color: rgba($divider-color, min(opacity($divider-color) * 2, 1));\n    }\n    @else {\n      color: $divider-color;\n    }\n  }\n\n  .mat-calendar-body-today {\n    @include _mat-datepicker-unselected-cell {\n      // Note: though it's not text, the border is a hint about the fact that this is today's date,\n      // so we use the hint color.\n      border-color: mat-color($foreground, hint-text);\n    }\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-today {\n    @include _mat-datepicker-unselected-cell {\n      $color: mat-color($foreground, hint-text);\n\n      @if (type-of($color) == color) {\n        border-color: fade-out($color, $mat-datepicker-today-fade-amount);\n      }\n      @else {\n        // If the color didn't resolve to a color value, but something like a CSS variable, we can't\n        // fade it out so we fall back to reducing the element opacity. Note that we don't use the\n        // $mat-datepicker-today-fade-amount, because hint text usually has some opacity applied\n        // to it already and we don't want them to stack on top of each other.\n        opacity: 0.5;\n      }\n    }\n  }\n\n  @include _mat-datepicker-color(map-get($config, primary));\n\n  .mat-datepicker-content {\n    @include _mat-theme-elevation(4, $config);\n    background-color: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    &.mat-accent {\n      @include _mat-datepicker-color(map-get($config, accent));\n    }\n\n    &.mat-warn {\n      @include _mat-datepicker-color(map-get($config, warn));\n    }\n  }\n\n  .mat-datepicker-content-touch {\n    @include _mat-theme-elevation(0, $config);\n  }\n\n  .mat-datepicker-toggle-active {\n    color: mat-color(map-get($config, primary), text);\n\n    &.mat-accent {\n      color: mat-color(map-get($config, accent), text);\n    }\n\n    &.mat-warn {\n      color: mat-color(map-get($config, warn), text);\n    }\n  }\n\n  .mat-date-range-input-inner[disabled] {\n    color: mat-color($foreground, disabled-text);\n  }\n}\n\n@mixin mat-datepicker-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-calendar {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-calendar-body {\n    font-size: $mat-calendar-body-font-size;\n  }\n\n  .mat-calendar-body-label,\n  .mat-calendar-period-button {\n    font: {\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n\n  .mat-calendar-table-header th {\n    font: {\n      size: $mat-calendar-weekday-table-font-size;\n      weight: mat-font-weight($config, body-1);\n    }\n  }\n}\n\n@mixin mat-date-range-colors(\n  $range-color,\n  $comparison-color: rgba(#f9ab00, $mat-datepicker-range-fade-amount),\n  $overlap-color: #a8dab5,\n  $overlap-selected-color: darken($overlap-color, 30%)) {\n\n  .mat-calendar-body-in-range::before {\n    background: $range-color;\n  }\n\n  .mat-calendar-body-comparison-identical,\n  .mat-calendar-body-in-comparison-range::before {\n    background: $comparison-color;\n  }\n\n  .mat-calendar-body-comparison-bridge-start::before,\n  [dir='rtl'] .mat-calendar-body-comparison-bridge-end::before {\n    background: linear-gradient(to right, $range-color 50%, $comparison-color 50%);\n  }\n\n  .mat-calendar-body-comparison-bridge-end::before,\n  [dir='rtl'] .mat-calendar-body-comparison-bridge-start::before {\n    background: linear-gradient(to left, $range-color 50%, $comparison-color 50%);\n  }\n\n  .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n  .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n    background: $overlap-color;\n  }\n\n  .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n  .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n    background: $overlap-selected-color;\n  }\n}\n\n@mixin _mat-datepicker-density($config-or-theme) {}\n\n@mixin mat-datepicker-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-datepicker') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-datepicker-color($color);\n    }\n    @if $density != null {\n      @include _mat-datepicker-density($density);\n    }\n    @if $typography != null {\n      @include mat-datepicker-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n@mixin mat-dialog-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-dialog-container {\n    @include _mat-theme-elevation(24, $config);\n    background: mat-color($background, dialog);\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-dialog-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-dialog-title {\n    @include mat-typography-level-to-styles($config, title);\n  }\n}\n\n@mixin _mat-dialog-density($config-or-theme) {}\n\n@mixin mat-dialog-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-dialog') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-dialog-color($color);\n    }\n    @if $density != null {\n      @include _mat-dialog-density($density);\n    }\n    @if $typography != null {\n      @include mat-dialog-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n// Default minimum and maximum height for collapsed panel headers.\n$mat-expansion-panel-header-collapsed-height: 48px !default;\n$mat-expansion-panel-header-collapsed-minimum-height: 36px !default;\n$mat-expansion-panel-header-collapsed-maximum-height:\n    $mat-expansion-panel-header-collapsed-height !default;\n\n// Default minimum and maximum height for expanded panel headers.\n$mat-expansion-panel-header-expanded-height: 64px !default;\n$mat-expansion-panel-header-expanded-minimum-height: 48px !default;\n$mat-expansion-panel-header-expanded-maximum-height:\n    $mat-expansion-panel-header-expanded-height !default;\n\n// Density configuration for the expansion panel. Captures the\n// height for both expanded and collapsed panel headers.\n$mat-expansion-panel-header-density-config: (\n  collapsed-height: (\n    default: $mat-expansion-panel-header-collapsed-height,\n    maximum: $mat-expansion-panel-header-collapsed-maximum-height,\n    minimum: $mat-expansion-panel-header-collapsed-minimum-height,\n  ),\n  expanded-height: (\n    default: $mat-expansion-panel-header-expanded-height,\n    maximum: $mat-expansion-panel-header-expanded-maximum-height,\n    minimum: $mat-expansion-panel-header-expanded-minimum-height,\n  )\n) !default;\n\n// Note: Keep this in sync with the animation timing for the toggle indicator\n// and body expansion. These are animated using Angular animations.\n$mat-expansion-panel-header-transition: 225ms cubic-bezier(0.4, 0, 0.2, 1);\n\n\n@mixin mat-expansion-panel-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-expansion-panel {\n    @include _mat-theme-overridable-elevation(2, $config);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n  }\n\n  .mat-action-row {\n    border-top-color: mat-color($foreground, divider);\n  }\n\n  .mat-expansion-panel {\n    & .mat-expansion-panel-header.cdk-keyboard-focused,\n    & .mat-expansion-panel-header.cdk-program-focused,\n    &:not(.mat-expanded) .mat-expansion-panel-header:hover {\n      &:not([aria-disabled='true']) {\n        background: mat-color($background, hover);\n      }\n    }\n  }\n\n  // Disable the hover on touch devices since it can appear like it is stuck. We can't use\n  // `@media (hover)` above, because the desktop support browser support isn't great.\n  @media (hover: none) {\n    .mat-expansion-panel:not(.mat-expanded):not([aria-disabled='true'])\n      .mat-expansion-panel-header:hover {\n      background: mat-color($background, card);\n    }\n  }\n\n  .mat-expansion-panel-header-title {\n    color: mat-color($foreground, text);\n  }\n\n  .mat-expansion-panel-header-description,\n  .mat-expansion-indicator::after {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-expansion-panel-header[aria-disabled='true'] {\n    color: mat-color($foreground, disabled-button);\n\n    .mat-expansion-panel-header-title,\n    .mat-expansion-panel-header-description {\n      color: inherit;\n    }\n  }\n}\n\n@mixin mat-expansion-panel-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-expansion-panel-header {\n    font: {\n      family: mat-font-family($config, subheading-1);\n      size: mat-font-size($config, subheading-1);\n      weight: mat-font-weight($config, subheading-1);\n    }\n  }\n\n  .mat-expansion-panel-content {\n    @include mat-typography-level-to-styles($config, body-1);\n  }\n}\n\n@mixin _mat-expansion-panel-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  $expanded-height: _mat-density-prop-value(\n        $mat-expansion-panel-header-density-config, $density-scale, expanded-height);\n  $collapsed-height: _mat-density-prop-value(\n      $mat-expansion-panel-header-density-config, $density-scale, collapsed-height);\n\n  @include _mat-density-legacy-compatibility() {\n    .mat-expansion-panel-header {\n      height: $collapsed-height;\n\n      &.mat-expanded {\n        height: $expanded-height;\n      }\n    }\n  }\n}\n\n@mixin mat-expansion-panel-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-expansion-panel') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-expansion-panel-color($color);\n    }\n    @if $density != null {\n      @include _mat-expansion-panel-density($density);\n    }\n    @if $typography != null {\n      @include mat-expansion-panel-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n// This mixin will ensure that lines that overflow the container will hide the overflow and\n// truncate neatly with an ellipsis.\n@mixin mat-truncate-line() {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n// Mixin to provide all mat-line styles, changing secondary font size based on whether the list\n// is in dense mode.\n@mixin mat-line-base($secondary-font-size) {\n  .mat-line {\n    @include mat-truncate-line();\n    display: block;\n    box-sizing: border-box;\n\n    // all lines but the top line should have smaller text\n    &:nth-child(n+2) {\n      font-size: $secondary-font-size;\n    }\n  }\n}\n\n// This mixin normalizes default element styles, e.g. font weight for heading text.\n@mixin mat-normalize-text() {\n  & > * {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n    font-size: inherit;\n  }\n}\n\n// This mixin provides base styles for the wrapper around mat-line elements in a list.\n@mixin mat-line-wrapper-base() {\n  @include mat-normalize-text();\n\n  display: flex;\n  flex-direction: column;\n  flex: auto;\n  box-sizing: border-box;\n  overflow: hidden;\n\n  // Must remove wrapper when lines are empty or it takes up horizontal\n  // space and pushes other elements to the right.\n  &:empty {\n    display: none;\n  }\n}\n\n\n\n// Include this empty mixin for consistency with the other components.\n@mixin mat-grid-list-color($config-or-theme) {}\n\n@mixin mat-grid-list-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-grid-tile-header,\n  .mat-grid-tile-footer {\n    @include mat-line-base(mat-font-size($config, caption));\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n@mixin _mat-grid-list-density($config-or-theme) {}\n\n@mixin mat-grid-list-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-grid-list') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-grid-list-color($color);\n    }\n    @if $density != null {\n      @include _mat-grid-list-density($density);\n    }\n    @if $typography != null {\n      @include mat-grid-list-typography($typography);\n    }\n  }\n}\n\n\n\n\n@mixin mat-icon-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-icon {\n    &.mat-primary {\n      color: mat-color($primary, text);\n    }\n\n    &.mat-accent {\n      color: mat-color($accent, text);\n    }\n\n    &.mat-warn {\n      color: mat-color($warn, text);\n    }\n  }\n}\n\n@mixin mat-icon-typography($config-or-theme) {}\n\n@mixin _mat-icon-density($config-or-theme) {}\n\n@mixin mat-icon-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-icon') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-icon-color($color);\n    }\n    @if $density != null {\n      @include _mat-icon-density($density);\n    }\n    @if $typography != null {\n      @include mat-icon-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n// Renders a gradient for showing the dashed line when the input is disabled.\n// Unlike using a border, a gradient allows us to adjust the spacing of the dotted line\n// to match the Material Design spec.\n@mixin mat-control-disabled-underline($color) {\n  background-image: linear-gradient(to right, $color 0%, $color 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n\n// Figures out the color of the placeholder for a form control.\n// Used primarily to prevent the various form controls from\n// becoming out of sync since these colors aren't in a palette.\n@function _mat-control-placeholder-color($config) {\n  $foreground: map-get($config, foreground);\n  $is-dark-theme: map-get($config, is-dark);\n  @return mat-color($foreground, secondary-text, if($is-dark-theme, 0.5, 0.42));\n}\n\n\n/* stylelint-disable material/no-prefixes */\n@mixin user-select($value) {\n  -webkit-user-select: $value;\n  -moz-user-select: $value;\n  -ms-user-select: $value;\n  user-select: $value;\n}\n\n@mixin input-placeholder {\n  &::placeholder {\n    @content;\n  }\n\n  &::-moz-placeholder {\n    @content;\n  }\n\n  &::-webkit-input-placeholder {\n    @content;\n  }\n\n  &:-ms-input-placeholder {\n    @content;\n  }\n}\n\n@mixin cursor-grab {\n  cursor: -webkit-grab;\n  cursor: grab;\n}\n\n@mixin cursor-grabbing {\n  cursor: -webkit-grabbing;\n  cursor: grabbing;\n}\n\n@mixin backface-visibility($value) {\n  -webkit-backface-visibility: $value;\n  backface-visibility: $value;\n}\n\n@mixin position-sticky {\n  position: -webkit-sticky;\n  position: sticky;\n}\n/* stylelint-enable */\n\n\n\n@mixin mat-input-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $foreground: map-get($config, foreground);\n\n  .mat-form-field-type-mat-native-select .mat-form-field-infix::after {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-input-element:disabled,\n  .mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\n    color: mat-color($foreground, disabled-text);\n  }\n\n  .mat-input-element {\n    caret-color: mat-color($primary, text);\n\n    @include input-placeholder {\n      color: _mat-control-placeholder-color($config);\n    }\n\n    // On dark themes we set the native `select` color to some shade of white,\n    // however the color propagates to all of the `option` elements, which are\n    // always on a white background inside the dropdown, causing them to blend in.\n    // Since we can't change background of the dropdown, we need to explicitly\n    // reset the color of the options to something dark.\n    @if (map-get($config, is-dark)) {\n      option {\n        color: $dark-primary-text;\n      }\n\n      option:disabled {\n        color: $dark-disabled-text;\n      }\n    }\n  }\n\n  .mat-form-field.mat-accent .mat-input-element {\n    caret-color: mat-color($accent, text);\n  }\n\n  .mat-form-field.mat-warn .mat-input-element,\n  .mat-form-field-invalid .mat-input-element {\n    caret-color: mat-color($warn, text);\n  }\n\n  .mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\n    color: mat-color($warn, text);\n  }\n}\n\n@mixin mat-input-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: ($line-height - 1) / 2;\n\n  // <input> elements seem to have their height set slightly too large on Safari causing the text to\n  // be misaligned w.r.t. the placeholder. Adding this margin corrects it.\n  input.mat-input-element {\n    margin-top: -$line-spacing * 1em;\n  }\n}\n\n@mixin _mat-input-density($config-or-theme) {}\n\n@mixin mat-input-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-input') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-input-color($color);\n    }\n    @if $density != null {\n      @include _mat-input-density($density);\n    }\n    @if $typography != null {\n      @include mat-input-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n@mixin mat-list-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-list-base {\n    .mat-list-item {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-list-option {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-subheader {\n      color: mat-color($foreground, secondary-text);\n    }\n  }\n\n  .mat-list-item-disabled {\n    background-color: mat-color($background, disabled-list-option);\n  }\n\n  .mat-list-option,\n  .mat-nav-list .mat-list-item,\n  .mat-action-list .mat-list-item {\n    &:hover, &:focus {\n      background: mat-color($background, 'hover');\n    }\n  }\n\n  .mat-list-single-selected-option {\n    &, &:hover, &:focus {\n      background: mat-color($background, hover, 0.12);\n    }\n  }\n}\n\n@mixin mat-list-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  $font-family: mat-font-family($config);\n\n  .mat-list-item {\n    font-family: $font-family;\n  }\n\n  .mat-list-option {\n    font-family: $font-family;\n  }\n\n  // Default list\n  .mat-list-base {\n    .mat-list-item {\n      font-size: mat-font-size($config, subheading-2);\n      @include mat-line-base(mat-font-size($config, body-1));\n    }\n\n    .mat-list-option {\n      font-size: mat-font-size($config, subheading-2);\n      @include mat-line-base(mat-font-size($config, body-1));\n    }\n\n    .mat-subheader {\n      font-family: mat-font-family($config, body-2);\n      font-size: mat-font-size($config, body-2);\n      font-weight: mat-font-weight($config, body-2);\n    }\n  }\n\n  // Dense list\n  .mat-list-base[dense] {\n    .mat-list-item {\n      font-size: mat-font-size($config, caption);\n      @include mat-line-base(mat-font-size($config, caption));\n    }\n\n    .mat-list-option {\n      font-size: mat-font-size($config, caption);\n      @include mat-line-base(mat-font-size($config, caption));\n    }\n\n    .mat-subheader {\n      font-family: $font-family;\n      font-size: mat-font-size($config, caption);\n      font-weight: mat-font-weight($config, body-2);\n    }\n  }\n}\n\n@mixin _mat-list-density($config-or-theme) {}\n\n@mixin mat-list-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-list') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-list-color($color);\n    }\n    @if $density != null {\n      @include _mat-list-density($density);\n    }\n    @if $typography != null {\n      @include mat-list-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n@mixin mat-menu-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-menu-panel {\n    @include _mat-theme-overridable-elevation(4, $config);\n    background: mat-color($background, 'card');\n  }\n\n  .mat-menu-item {\n    background: transparent;\n    color: mat-color($foreground, 'text');\n\n    &[disabled] {\n      &, &::after {\n        color: mat-color($foreground, 'disabled');\n      }\n    }\n  }\n\n  .mat-menu-item .mat-icon-no-color,\n  .mat-menu-item-submenu-trigger::after {\n    color: mat-color($foreground, 'icon');\n  }\n\n  .mat-menu-item:hover,\n  .mat-menu-item.cdk-program-focused,\n  .mat-menu-item.cdk-keyboard-focused,\n  .mat-menu-item-highlighted {\n    &:not([disabled]) {\n      background: mat-color($background, 'hover');\n    }\n  }\n}\n\n@mixin mat-menu-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-menu-item {\n    font: {\n      family: mat-font-family($config, body-1);\n      size: mat-font-size($config, body-1);\n      weight: mat-font-weight($config, body-1);\n    }\n  }\n}\n\n@mixin _mat-menu-density($config-or-theme) {}\n\n@mixin mat-menu-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-menu') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-menu-color($color);\n    }\n    @if $density != null {\n      @include _mat-menu-density($density);\n    }\n    @if $typography != null {\n      @include mat-menu-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n$mat-paginator-height: 56px !default;\n// Minimum height for paginator's in the highest density is determined based on how\n// much the paginator can shrink until the content exceeds (i.e. navigation buttons).\n$mat-paginator-minimum-height: 40px !default;\n$mat-paginator-maximum-height: $mat-paginator-height !default;\n\n$mat-paginator-density-config: (\n  height: (\n    default: $mat-paginator-height,\n    maximum: $mat-paginator-maximum-height,\n    minimum: $mat-paginator-minimum-height,\n  )\n) !default;\n\n\n@mixin mat-paginator-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n\n  .mat-paginator {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-paginator-decrement,\n  .mat-paginator-increment {\n    border-top: 2px solid mat-color($foreground, 'icon');\n    border-right: 2px solid mat-color($foreground, 'icon');\n  }\n\n  .mat-paginator-first,\n  .mat-paginator-last {\n    border-top: 2px solid mat-color($foreground, 'icon');\n  }\n\n  .mat-icon-button[disabled] {\n    .mat-paginator-decrement,\n    .mat-paginator-increment,\n    .mat-paginator-first,\n    .mat-paginator-last {\n      border-color: mat-color($foreground, 'disabled');\n    }\n  }\n}\n\n@mixin mat-paginator-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    font: {\n      family: mat-font-family($config, caption);\n      size: mat-font-size($config, caption);\n    }\n  }\n}\n\n@mixin _mat-paginator-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  $height: _mat-density-prop-value($mat-paginator-density-config, $density-scale, height);\n\n  @include _mat-density-legacy-compatibility() {\n    .mat-paginator-container {\n      min-height: $height;\n    }\n  }\n}\n\n@mixin mat-paginator-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-paginator') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-paginator-color($color);\n    }\n    @if $density != null {\n      @include _mat-paginator-density($density);\n    }\n    @if $typography != null {\n      @include mat-paginator-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-progress-bar-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n\n  .mat-progress-bar-background {\n    fill: mat-color($primary, lighter);\n  }\n\n  .mat-progress-bar-buffer {\n    background-color: mat-color($primary, lighter);\n  }\n\n  .mat-progress-bar-fill::after {\n    background-color: mat-color($primary);\n  }\n\n  .mat-progress-bar.mat-accent {\n    .mat-progress-bar-background {\n      fill: mat-color($accent, lighter);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: mat-color($accent, lighter);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: mat-color($accent);\n    }\n  }\n\n  .mat-progress-bar.mat-warn {\n    .mat-progress-bar-background {\n      fill: mat-color($warn, lighter);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: mat-color($warn, lighter);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-progress-bar-typography($config-or-theme) {}\n\n@mixin _mat-progress-bar-density($config-or-theme) {}\n\n@mixin mat-progress-bar-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-progress-bar') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-progress-bar-color($color);\n    }\n    @if $density != null {\n      @include _mat-progress-bar-density($density);\n    }\n    @if $typography != null {\n      @include mat-progress-bar-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-progress-spinner-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n\n  .mat-progress-spinner, .mat-spinner {\n    circle {\n      stroke: mat-color($primary);\n    }\n\n    &.mat-accent circle {\n      stroke: mat-color($accent);\n    }\n\n    &.mat-warn circle {\n      stroke: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-progress-spinner-typography($config-or-theme) {}\n\n@mixin _mat-progress-spinner-density($config-or-theme) {}\n\n@mixin mat-progress-spinner-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-progress-spinner') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-progress-spinner-color($color);\n    }\n    @if $density != null {\n      @include _mat-progress-spinner-density($density);\n    }\n    @if $typography != null {\n      @include mat-progress-spinner-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin _mat-radio-color($palette) {\n  &.mat-radio-checked .mat-radio-outer-circle {\n    border-color: mat-color($palette);\n  }\n\n  .mat-radio-inner-circle,\n  .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\n  &.mat-radio-checked .mat-radio-persistent-ripple,\n  &:active .mat-radio-persistent-ripple {\n    background-color: mat-color($palette);\n  }\n}\n\n@mixin mat-radio-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-radio-outer-circle {\n    border-color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-radio-button {\n    &.mat-primary {\n      @include _mat-radio-color($primary);\n    }\n\n    &.mat-accent {\n      @include _mat-radio-color($accent);\n    }\n\n    &.mat-warn {\n      @include _mat-radio-color($warn);\n    }\n\n    // This needs extra specificity, because the classes above are combined\n    // (e.g. `.mat-radio-button.mat-accent`) which increases their specificity a lot.\n    // TODO: consider making the selectors into descendants (`.mat-primary .mat-radio-button`).\n    &.mat-radio-disabled {\n      &.mat-radio-checked .mat-radio-outer-circle,\n      .mat-radio-outer-circle {\n        border-color: mat-color($foreground, disabled);\n      }\n\n      .mat-radio-ripple .mat-ripple-element,\n      .mat-radio-inner-circle {\n        background-color: mat-color($foreground, disabled);\n      }\n\n      .mat-radio-label-content {\n        color: mat-color($foreground, disabled);\n      }\n    }\n\n    // Switch this to a solid color since we're using `opacity`\n    // to control how opaque the ripple should be.\n    .mat-ripple-element {\n      background-color: map_get($foreground, base);\n    }\n  }\n}\n\n@mixin mat-radio-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-radio-button {\n    font-family: mat-font-family($config);\n  }\n}\n\n@mixin _mat-radio-density($config-or-theme) {}\n\n@mixin mat-radio-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-radio') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-radio-color($color);\n    }\n    @if $density != null {\n      @include _mat-radio-density($density);\n    }\n    @if $typography != null {\n      @include mat-radio-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n@mixin mat-select-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n\n  .mat-select-value {\n    color: mat-color($foreground, text);\n  }\n\n  .mat-select-placeholder {\n    color: _mat-control-placeholder-color($config);\n  }\n\n  .mat-select-disabled .mat-select-value {\n    color: mat-color($foreground, disabled-text);\n  }\n\n  .mat-select-arrow {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-select-panel {\n    background: mat-color($background, card);\n    @include _mat-theme-overridable-elevation(4, $config);\n\n    .mat-option.mat-selected:not(.mat-option-multiple) {\n      background: mat-color($background, hover, 0.12);\n    }\n  }\n\n  .mat-form-field {\n    &.mat-focused {\n      &.mat-primary .mat-select-arrow {\n        color: mat-color($primary, text);\n      }\n\n      &.mat-accent .mat-select-arrow {\n        color: mat-color($accent, text);\n      }\n\n      &.mat-warn .mat-select-arrow {\n        color: mat-color($warn, text);\n      }\n    }\n\n    .mat-select.mat-select-invalid .mat-select-arrow {\n      color: mat-color($warn, text);\n    }\n\n    .mat-select.mat-select-disabled .mat-select-arrow {\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n}\n\n@mixin mat-select-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  .mat-select {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-select-trigger {\n    height: $line-height * 1em;\n  }\n}\n\n@mixin _mat-select-density($config-or-theme) {}\n\n@mixin mat-select-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-select') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-select-color($color);\n    }\n    @if $density != null {\n      @include _mat-select-density($density);\n    }\n    @if $typography != null {\n      @include mat-select-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-sidenav-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  $drawer-background-color: mat-color($background, dialog);\n  $drawer-container-background-color:  mat-color($background, background);\n  $drawer-push-background-color: mat-color($background, dialog);\n  $drawer-side-border: solid 1px mat-color($foreground, divider);\n\n  .mat-drawer-container {\n    background-color: $drawer-container-background-color;\n    color: mat-color($foreground, text);\n  }\n\n  .mat-drawer {\n    background-color: $drawer-background-color;\n    color: mat-color($foreground, text);\n\n    &.mat-drawer-push {\n      background-color: $drawer-push-background-color;\n    }\n\n    &:not(.mat-drawer-side) {\n      // The elevation of z-16 is noted in the design specifications.\n      // See https://material.io/design/components/navigation-drawer.html\n      @include _mat-theme-elevation(16, $config);\n    }\n  }\n\n  .mat-drawer-side {\n    border-right: $drawer-side-border;\n\n    &.mat-drawer-end {\n      border-left: $drawer-side-border;\n      border-right: none;\n    }\n  }\n\n  [dir='rtl'] .mat-drawer-side {\n    border-left: $drawer-side-border;\n    border-right: none;\n\n    &.mat-drawer-end {\n      border-left: none;\n      border-right: $drawer-side-border;\n    }\n  }\n\n  .mat-drawer-backdrop.mat-drawer-shown {\n    $opacity: 0.6;\n    $backdrop-color: mat-color($background, card, $opacity);\n\n    @if (type-of($backdrop-color) == color) {\n      // We use invert() here to have the darken the background color expected to be used. If the\n      // background is light, we use a dark backdrop. If the background is dark,\n      // we use a light backdrop.\n      background-color: invert($backdrop-color);\n    }\n    @else {\n      // If we couldn't resolve the backdrop color to a color value, fall back to using\n      // `opacity` to make it opaque since its end value could be a solid color.\n      background-color: $backdrop-color;\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin mat-sidenav-typography($config-or-theme) {}\n\n@mixin _mat-sidenav-density($config-or-theme) {}\n\n@mixin mat-sidenav-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-sidenav') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-sidenav-color($color);\n    }\n    @if $density != null {\n      @include _mat-sidenav-density($density);\n    }\n    @if $typography != null {\n      @include mat-sidenav-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin _mat-slide-toggle-checked($palette, $thumb-checked-hue) {\n  &.mat-checked {\n    .mat-slide-toggle-thumb {\n      background-color: mat-color($palette, $thumb-checked-hue);\n    }\n\n    .mat-slide-toggle-bar {\n      // Opacity is determined from the specs for the selection controls.\n      // See: https://material.io/design/components/selection-controls.html#specs\n      background-color: mat-color($palette, $thumb-checked-hue, 0.54);\n    }\n\n    .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: mat-color($palette, $thumb-checked-hue);\n    }\n  }\n}\n\n@mixin mat-slide-toggle-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $is-dark: map_get($config, is-dark);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  // Color hues are based on the specs which briefly show the hues that are applied to a switch.\n  // The 2018 specs no longer describe how dark switches should look like. Due to the lack of\n  // information for dark themed switches, we partially keep the old behavior that is based on\n  // the previous specifications. For the checked color we always use the `default` hue because\n  // that follows MDC and also makes it easier for people to create a custom theme without needing\n  // to specify each hue individually.\n  $thumb-unchecked-hue: if($is-dark, 400, 50);\n  $thumb-checked-hue: default;\n\n  $bar-unchecked-color: mat-color($foreground, disabled);\n  $ripple-unchecked-color: mat-color($foreground, base);\n\n  .mat-slide-toggle {\n    @include _mat-slide-toggle-checked($accent, $thumb-checked-hue);\n\n    &.mat-primary {\n      @include _mat-slide-toggle-checked($primary, $thumb-checked-hue);\n    }\n\n    &.mat-warn {\n      @include _mat-slide-toggle-checked($warn, $thumb-checked-hue);\n    }\n\n    &:not(.mat-checked) .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: $ripple-unchecked-color;\n    }\n  }\n\n  .mat-slide-toggle-thumb {\n    @include _mat-theme-elevation(1, $config);\n    background-color: mat-color($mat-grey, $thumb-unchecked-hue);\n  }\n\n  .mat-slide-toggle-bar {\n    background-color: $bar-unchecked-color;\n  }\n}\n\n@mixin mat-slide-toggle-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-slide-toggle-content {\n    font-family: mat-font-family($config);\n  }\n}\n\n@mixin _mat-slide-toggle-density($config-or-theme) {}\n\n@mixin mat-slide-toggle-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-slide-toggle') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-slide-toggle-color($color);\n    }\n    @if $density != null {\n      @include _mat-slide-toggle-density($density);\n    }\n    @if $typography != null {\n      @include mat-slide-toggle-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin _mat-slider-inner-content-theme($palette) {\n  .mat-slider-track-fill,\n  .mat-slider-thumb,\n  .mat-slider-thumb-label {\n    background-color: mat-color($palette);\n  }\n\n  .mat-slider-thumb-label-text {\n    color: mat-color($palette, default-contrast);\n  }\n\n  .mat-slider-focus-ring {\n    $opacity: 0.2;\n    $color: mat-color($palette, default, $opacity);\n    background-color: $color;\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (type-of($color) != color) {\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin mat-slider-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  $mat-slider-off-color: mat-color($foreground, slider-off);\n  $mat-slider-off-focused-color: mat-color($foreground, slider-off-active);\n  $mat-slider-disabled-color: mat-color($foreground, slider-off);\n  $mat-slider-labeled-min-value-thumb-color: mat-color($foreground, slider-min);\n  $mat-slider-labeled-min-value-thumb-label-color: mat-color($foreground, slider-off);\n  $mat-slider-tick-opacity: 0.7;\n  $mat-slider-tick-color: mat-color($foreground, base, $mat-slider-tick-opacity);\n  $mat-slider-tick-size: 2px;\n\n  .mat-slider-track-background {\n    background-color: $mat-slider-off-color;\n  }\n\n  .mat-primary {\n    @include _mat-slider-inner-content-theme($primary);\n  }\n\n  .mat-accent {\n    @include _mat-slider-inner-content-theme($accent);\n  }\n\n  .mat-warn {\n    @include _mat-slider-inner-content-theme($warn);\n  }\n\n  .mat-slider:hover,\n  .cdk-focused {\n    .mat-slider-track-background {\n      background-color: $mat-slider-off-focused-color;\n    }\n  }\n\n  .mat-slider-disabled {\n    .mat-slider-track-background,\n    .mat-slider-track-fill,\n    .mat-slider-thumb {\n      background-color: $mat-slider-disabled-color;\n    }\n\n    &:hover {\n      .mat-slider-track-background {\n        background-color: $mat-slider-disabled-color;\n      }\n    }\n  }\n\n  .mat-slider-min-value {\n    .mat-slider-focus-ring {\n      $opacity: 0.12;\n      $color: mat-color($foreground, base, $opacity);\n      background-color: $color;\n\n      // `mat-color` uses `rgba` for the opacity which won't work with\n      // CSS variables so we need to use `opacity` as a fallback.\n      @if (type-of($color) != color) {\n        opacity: $opacity;\n      }\n    }\n\n    &.mat-slider-thumb-label-showing {\n      .mat-slider-thumb,\n      .mat-slider-thumb-label {\n        background-color: $mat-slider-labeled-min-value-thumb-color;\n      }\n\n      &.cdk-focused {\n        .mat-slider-thumb,\n        .mat-slider-thumb-label {\n          background-color: $mat-slider-labeled-min-value-thumb-label-color;\n        }\n      }\n    }\n\n    &:not(.mat-slider-thumb-label-showing) {\n      .mat-slider-thumb {\n        border-color: $mat-slider-off-color;\n        background-color: transparent;\n      }\n\n      &:hover,\n      &.cdk-focused {\n        .mat-slider-thumb {\n          border-color: $mat-slider-off-focused-color;\n        }\n\n        &.mat-slider-disabled .mat-slider-thumb {\n          border-color: $mat-slider-disabled-color;\n        }\n      }\n    }\n  }\n\n  .mat-slider-has-ticks .mat-slider-wrapper::after {\n    border-color: $mat-slider-tick-color;\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n\n  .mat-slider-horizontal .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to right, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n    // Firefox doesn't draw the gradient correctly with 'to right'\n    // (see https://bugzilla.mozilla.org/show_bug.cgi?id=1314319).\n    background-image: -moz-repeating-linear-gradient(0.0001deg, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n\n  .mat-slider-vertical .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to bottom, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n}\n\n@mixin mat-slider-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-slider-thumb-label-text {\n    font: {\n      family: mat-font-family($config);\n      size: mat-font-size($config, caption);\n      weight: mat-font-weight($config, body-2);\n    }\n  }\n}\n\n@mixin _mat-slider-density($config-or-theme) {}\n\n@mixin mat-slider-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-slider') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-slider-color($color);\n    }\n    @if $density != null {\n      @include _mat-slider-density($density);\n    }\n    @if $typography != null {\n      @include mat-slider-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n$mat-stepper-header-height: 72px !default;\n// Minimum height for highest density stepper's is determined based on how much\n// stepper headers can shrink until the step icon or step label exceed. We can't use\n// a value below `42px` because the optional label for steps would otherwise exceed.\n$mat-stepper-header-minimum-height: 42px !default;\n$mat-stepper-header-maximum-height: $mat-stepper-header-height !default;\n\n$mat-stepper-density-config: (\n  height: (\n    default: $mat-stepper-header-height,\n    maximum: $mat-stepper-header-maximum-height,\n    minimum: $mat-stepper-header-minimum-height,\n  )\n) !default;\n\n// Note: These variables are not denoted with `!default` because they are used in the non-theme\n// component styles. Modifying these variables does not have the desired effect for consumers.\n$mat-stepper-label-header-height: 24px;\n$mat-stepper-label-position-bottom-top-gap: 16px;\n$mat-stepper-label-min-width: 50px;\n\n$mat-vertical-stepper-content-margin: 36px;\n\n$mat-stepper-side-gap: 24px;\n$mat-stepper-line-width: 1px;\n$mat-stepper-line-gap: 8px;\n\n$mat-step-sub-label-font-size: 12px;\n$mat-step-header-icon-size: 16px;\n\n\n@mixin mat-stepper-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n  $primary: map-get($config, primary);\n  $warn: map-get($config, warn);\n\n  .mat-step-header {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused,\n    &:hover {\n      background-color: mat-color($background, hover);\n    }\n\n    // On touch devices the :hover state will linger on the element after a tap.\n    // Reset it via `@media` after the declaration, because the media query isn't\n    // supported by all browsers yet.\n    @media (hover: none) {\n      &:hover {\n        background: none;\n      }\n    }\n\n    .mat-step-label,\n    .mat-step-optional {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      color: mat-color($foreground, secondary-text);\n    }\n\n    .mat-step-icon {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      background-color: mat-color($foreground, secondary-text);\n      color: mat-color($primary, default-contrast);\n    }\n\n    .mat-step-icon-selected,\n    .mat-step-icon-state-done,\n    .mat-step-icon-state-edit {\n      background-color: mat-color($primary);\n      color: mat-color($primary, default-contrast);\n    }\n\n    .mat-step-icon-state-error {\n      background-color: transparent;\n      color: mat-color($warn, text);\n    }\n\n    .mat-step-label.mat-step-label-active {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-step-label.mat-step-label-error {\n      color: mat-color($warn, text);\n    }\n  }\n\n  .mat-stepper-horizontal, .mat-stepper-vertical {\n    background-color: mat-color($background, card);\n  }\n\n  .mat-stepper-vertical-line::before {\n    border-left-color: mat-color($foreground, divider);\n  }\n\n  .mat-horizontal-stepper-header::before,\n  .mat-horizontal-stepper-header::after,\n  .mat-stepper-horizontal-line {\n    border-top-color: mat-color($foreground, divider);\n  }\n}\n\n@mixin mat-stepper-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-stepper-vertical, .mat-stepper-horizontal {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-step-label {\n    font: {\n      size: mat-font-size($config, body-1);\n      weight: mat-font-weight($config, body-1);\n    };\n  }\n\n  .mat-step-sub-label-error {\n    font-weight: normal;\n  }\n\n  .mat-step-label-error {\n    font-size: mat-font-size($config, body-2);\n  }\n\n  .mat-step-label-selected {\n    font: {\n      size: mat-font-size($config, body-2);\n      weight: mat-font-weight($config, body-2);\n    };\n  }\n}\n\n@mixin _mat-stepper-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  $height: _mat-density-prop-value($mat-stepper-density-config, $density-scale, height);\n  $vertical-padding: ($height - $mat-stepper-label-header-height) / 2;\n\n  @include _mat-density-legacy-compatibility() {\n    .mat-horizontal-stepper-header {\n      height: $height;\n    }\n\n    .mat-stepper-label-position-bottom .mat-horizontal-stepper-header,\n    .mat-vertical-stepper-header, {\n      padding: $vertical-padding $mat-stepper-side-gap;\n    }\n\n    // Ensures that the vertical lines for the step content exceed into the step\n    // headers with a given distance (`$mat-stepper-line-gap`) to the step icon.\n    .mat-stepper-vertical-line::before {\n      top: $mat-stepper-line-gap - $vertical-padding;\n      bottom: $mat-stepper-line-gap - $vertical-padding;\n    }\n\n    // Ensures that the horizontal lines for the step header are centered vertically.\n    .mat-stepper-label-position-bottom .mat-horizontal-stepper-header {\n      &::after, &::before {\n        top: $vertical-padding + $mat-stepper-label-header-height / 2;\n      }\n    }\n\n    // Ensures that the horizontal line for the step content is aligned centered vertically.\n    .mat-stepper-label-position-bottom .mat-stepper-horizontal-line {\n      top: $vertical-padding + $mat-stepper-label-header-height / 2;\n    }\n  }\n}\n\n@mixin mat-stepper-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-stepper') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-stepper-color($color);\n    }\n    @if $density != null {\n      @include _mat-stepper-density($density);\n    }\n    @if $typography != null {\n      @include mat-stepper-typography($typography);\n    }\n  }\n}\n\n\n\n\n@mixin mat-sort-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-sort-header-arrow {\n    $table-background: mat-color($background, 'card');\n    $text-color: mat-color($foreground, secondary-text);\n\n    // Because the arrow is made up of multiple elements that are stacked on top of each other,\n    // we can't use the semi-transparent color from the theme directly. If the value is a color\n    // *type*, we convert it into a solid color by taking the opacity from the rgba value and\n    // using the value to determine the percentage of the background to put into foreground\n    // when mixing the colors together. Otherwise, if it resolves to something different\n    // (e.g. it resolves to a CSS variable), we use the color directly.\n    @if (type-of($table-background) == color and type-of($text-color) == color) {\n      $text-opacity: opacity($text-color);\n      color: mix($table-background, rgba($text-color, 1), (1 - $text-opacity) * 100%);\n    }\n    @else {\n      color: $text-color;\n    }\n  }\n}\n\n@mixin mat-sort-typography($config-or-theme) {}\n\n@mixin _mat-sort-density($config-or-theme) {}\n\n@mixin mat-sort-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-sort') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-sort-color($color);\n    }\n    @if $density != null {\n      @include _mat-sort-density($density);\n    }\n    @if $typography != null {\n      @include mat-sort-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-tabs-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n  $header-border: 1px solid mat-color($foreground, divider);\n\n  .mat-tab-nav-bar,\n  .mat-tab-header {\n    border-bottom: $header-border;\n  }\n\n  .mat-tab-group-inverted-header {\n    .mat-tab-nav-bar,\n    .mat-tab-header {\n      border-top: $header-border;\n      border-bottom: none;\n    }\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    color: mat-color($foreground, text);\n\n    &.mat-tab-disabled {\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n\n  .mat-tab-header-pagination-chevron {\n    border-color: mat-color($foreground, text);\n  }\n\n  .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    border-color: mat-color($foreground, disabled-text);\n  }\n\n  // Remove header border when there is a background color\n  .mat-tab-group[class*='mat-background-'] .mat-tab-header,\n  .mat-tab-nav-bar[class*='mat-background-'] {\n    border-bottom: none;\n    border-top: none;\n  }\n\n  .mat-tab-group, .mat-tab-nav-bar {\n    $theme-colors: (\n      primary: $primary,\n      accent: $accent,\n      warn: $warn\n    );\n\n    @each $name, $color in $theme-colors {\n      // Set the foreground color of the tabs\n      &.mat-#{$name} {\n        @include _mat-tab-label-focus($color);\n        @include _mat-ink-bar($color);\n\n        // Override ink bar when background color is the same\n        &.mat-background-#{$name} {\n          @include _mat-ink-bar($color, default-contrast);\n        }\n      }\n    }\n\n    @each $name, $color in $theme-colors {\n      // Set background color of the tabs and override focus color\n      &.mat-background-#{$name} {\n        @include _mat-tab-label-focus($color);\n        @include _mat-tabs-background($color);\n      }\n    }\n  }\n}\n\n@mixin _mat-ink-bar($color, $hue: default) {\n  .mat-ink-bar {\n    background-color: mat-color($color, $hue);\n  }\n}\n\n@mixin _mat-tab-label-focus($tab-focus-color) {\n  .mat-tab-label,\n  .mat-tab-link {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused {\n      &:not(.mat-tab-disabled) {\n        background-color: mat-color($tab-focus-color, lighter, 0.3);\n      }\n    }\n  }\n}\n\n@mixin _mat-tabs-background($background-color) {\n  // Set background color for the tab group\n  .mat-tab-header, .mat-tab-links, .mat-tab-header-pagination {\n    background-color: mat-color($background-color);\n  }\n\n  // Set labels to contrast against background\n  .mat-tab-label, .mat-tab-link {\n    color: mat-color($background-color, default-contrast);\n\n    &.mat-tab-disabled {\n      color: mat-color($background-color, default-contrast, 0.4);\n    }\n  }\n\n  // Set pagination chevrons to contrast background\n  .mat-tab-header-pagination-chevron {\n    border-color: mat-color($background-color, default-contrast);\n  }\n\n  .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    border-color: mat-color($background-color, default-contrast, 0.4);\n  }\n\n  // Set ripples color to be the contrast color of the new background. Otherwise the ripple\n  // color will be based on the app background color.\n  .mat-ripple-element {\n    background-color: mat-color($background-color, default-contrast, 0.12);\n  }\n}\n\n@mixin mat-tabs-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-tab-group {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    font: {\n      family: mat-font-family($config, button);\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n@mixin _mat-tabs-density($config-or-theme) {}\n\n@mixin mat-tabs-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-tabs') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-tabs-color($color);\n    }\n    @if $density != null {\n      @include _mat-tabs-density($density);\n    }\n    @if $typography != null {\n      @include mat-tabs-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n// Minimum height for toolbar's in the highest density is difficult to determine because\n// developers can project arbitrary content. We use a minimum value that ensures that most\n// common content (e.g. icon buttons) does not exceed the row boundaries in highest density.\n$mat-toolbar-minimum-height: 44px !default;\n\n$mat-toolbar-height-desktop: 64px !default;\n$mat-toolbar-maximum-height-desktop: $mat-toolbar-height-desktop !default;\n$mat-toolbar-minimum-height-desktop: $mat-toolbar-minimum-height !default;\n\n$mat-toolbar-height-mobile: 56px !default;\n$mat-toolbar-maximum-height-mobile: $mat-toolbar-height-mobile !default;\n$mat-toolbar-minimum-height-mobile: $mat-toolbar-minimum-height !default;\n\n$mat-toolbar-desktop-density-config: (\n  height: (\n    default: $mat-toolbar-height-desktop,\n    maximum: $mat-toolbar-maximum-height-desktop,\n    minimum: $mat-toolbar-minimum-height-desktop,\n  )\n) !default;\n\n$mat-toolbar-mobile-density-config: (\n  height: (\n    default: $mat-toolbar-height-mobile,\n    maximum: $mat-toolbar-maximum-height-mobile,\n    minimum: $mat-toolbar-minimum-height-mobile,\n  )\n) !default;\n\n\n@mixin _mat-toolbar-height($height) {\n  .mat-toolbar-multiple-rows {\n    min-height: $height;\n  }\n  .mat-toolbar-row, .mat-toolbar-single-row {\n    height: $height;\n  }\n}\n\n@mixin _mat-toolbar-color($palette) {\n  background: mat-color($palette);\n  color: mat-color($palette, default-contrast);\n}\n\n@mixin _mat-toolbar-form-field-overrides {\n  .mat-form-field-underline,\n  .mat-form-field-ripple,\n  .mat-focused .mat-form-field-ripple {\n    background-color: currentColor;\n  }\n\n  .mat-form-field-label,\n  .mat-focused .mat-form-field-label,\n  .mat-select-value,\n  .mat-select-arrow,\n  .mat-form-field.mat-focused .mat-select-arrow {\n    color: inherit;\n  }\n\n  .mat-input-element {\n    caret-color: currentColor;\n  }\n}\n\n@mixin mat-toolbar-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-toolbar {\n    background: mat-color($background, app-bar);\n    color: mat-color($foreground, text);\n\n    &.mat-primary {\n      @include _mat-toolbar-color($primary);\n    }\n\n    &.mat-accent {\n      @include _mat-toolbar-color($accent);\n    }\n\n    &.mat-warn {\n      @include _mat-toolbar-color($warn);\n    }\n\n    @include _mat-toolbar-form-field-overrides;\n  }\n}\n\n@mixin mat-toolbar-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-toolbar,\n  .mat-toolbar h1,\n  .mat-toolbar h2,\n  .mat-toolbar h3,\n  .mat-toolbar h4,\n  .mat-toolbar h5,\n  .mat-toolbar h6 {\n    @include mat-typography-level-to-styles($config, title);\n    margin: 0;\n  }\n}\n\n@mixin _mat-toolbar-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  $height-desktop: _mat-density-prop-value(\n      $mat-toolbar-desktop-density-config, $density-scale, height);\n  $height-mobile: _mat-density-prop-value(\n      $mat-toolbar-mobile-density-config, $density-scale, height);\n\n  @include _mat-density-legacy-compatibility() {\n    // Set the default height for the toolbar.\n    @include _mat-toolbar-height($height-desktop);\n\n    // As per specs, toolbars should have a different height in mobile devices. This has been\n    // specified in the old guidelines and is still observable in the new specifications by\n    // looking at the spec images. See: https://material.io/design/components/app-bars-top.html#anatomy\n    @media ($mat-xsmall) {\n      @include _mat-toolbar-height($height-mobile);\n    }\n  }\n}\n\n@mixin mat-toolbar-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-toolbar') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-toolbar-color($color);\n    }\n    @if $density != null {\n      @include _mat-toolbar-density($density);\n    }\n    @if $typography != null {\n      @include mat-toolbar-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n$mat-tooltip-target-height: 22px;\n$mat-tooltip-font-size: 10px;\n$mat-tooltip-vertical-padding: ($mat-tooltip-target-height - $mat-tooltip-font-size) / 2;\n\n$mat-tooltip-handset-target-height: 30px;\n$mat-tooltip-handset-font-size: 14px;\n$mat-tooltip-handset-vertical-padding:\n    ($mat-tooltip-handset-target-height - $mat-tooltip-handset-font-size) / 2;\n\n@mixin mat-tooltip-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n\n  .mat-tooltip {\n    background: mat-color($background, tooltip, 0.9);\n  }\n}\n\n@mixin mat-tooltip-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-tooltip {\n    font-family: mat-font-family($config);\n    font-size: $mat-tooltip-font-size;\n    padding-top: $mat-tooltip-vertical-padding;\n    padding-bottom: $mat-tooltip-vertical-padding;\n  }\n\n  .mat-tooltip-handset {\n    font-size: $mat-tooltip-handset-font-size;\n    padding-top: $mat-tooltip-handset-vertical-padding;\n    padding-bottom: $mat-tooltip-handset-vertical-padding;\n  }\n}\n\n@mixin _mat-tooltip-density($config-or-theme) {}\n\n@mixin mat-tooltip-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-tooltip') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-tooltip-color($color);\n    }\n    @if $density != null {\n      @include _mat-tooltip-density($density);\n    }\n    @if $typography != null {\n      @include mat-tooltip-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n@mixin mat-snack-bar-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $is-dark-theme: map-get($config, is-dark);\n  $accent: map-get($config, accent);\n\n  .mat-snack-bar-container {\n    // Use the primary text on the dark theme, even though the lighter one uses\n    // a secondary, because the contrast on the light primary text is poor.\n    color: if($is-dark-theme, $dark-primary-text, $light-secondary-text);\n    background: if($is-dark-theme, map-get($mat-grey, 50), #323232);\n\n    @include _mat-theme-elevation(6, $config);\n  }\n\n  .mat-simple-snackbar-action {\n    color: if($is-dark-theme, inherit, mat-color($accent, text));\n  }\n}\n\n@mixin mat-snack-bar-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-simple-snackbar {\n    font: {\n      family: mat-font-family($config, body-1);\n      size: mat-font-size($config, body-1);\n    }\n  }\n\n  .mat-simple-snackbar-action {\n    line-height: 1;\n    font: {\n      family: inherit;\n      size: inherit;\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n@mixin _mat-snack-bar-density($config-or-theme) {}\n\n@mixin mat-snack-bar-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-snack-bar') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-snack-bar-color($color);\n    }\n    @if $density != null {\n      @include _mat-snack-bar-density($density);\n    }\n    @if $typography != null {\n      @include mat-snack-bar-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Theme styles that only apply to the fill appearance of the form-field.\n\n@mixin mat-form-field-fill-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $is-dark-theme: map-get($config, is-dark);\n\n  $fill-background: mat-color($foreground, base, if($is-dark-theme, 0.1, 0.04));\n  $fill-disabled-background: mat-color($foreground, base, if($is-dark-theme, 0.05, 0.02));\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.5, 0.42));\n  $label-disabled-color: mat-color($foreground, disabled-text);\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-flex {\n      background-color: $fill-background;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-flex {\n      background-color: $fill-disabled-background;\n    }\n\n    .mat-form-field-underline::before {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-underline::before {\n        background-color: transparent;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-fill-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-fill-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-fill-dedupe)\n             scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-fill-dedupe;\n\n  $mat-form-field-fill-dedupe: $mat-form-field-fill-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-fill-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding on top of the infix.\n  $infix-padding-top: 0.25em;\n  // The padding below the infix.\n  $infix-padding-bottom: 0.75em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The amount we offset the label from the input text in the fill appearance.\n  $fill-appearance-label-offset: -0.5em;\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-infix {\n      padding: $infix-padding-top 0 $infix-padding-bottom 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding-top;\n      margin-top: $fill-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-fill-label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-fill-label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n@mixin _mat-form-field-fill-density($config-or-theme) {}\n\n@mixin mat-form-field-fill-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-form-field-fill') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-form-field-fill-color($color);\n    }\n    @if $density != null {\n      @include _mat-form-field-fill-density($density);\n    }\n    @if $typography != null {\n      @include mat-form-field-fill-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n// Theme styles that only apply to the legacy appearance of the form-field.\n\n@mixin mat-form-field-legacy-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $is-dark-theme: map-get($config, is-dark);\n\n  $label-color: mat-color($foreground, secondary-text);\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-label {\n      color: $label-color;\n    }\n\n    .mat-hint {\n      color: $label-color;\n    }\n\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include mat-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-legacy-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-legacy-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  // We use perspective to fix the text blurriness as described here:\n  // http://www.useragentman.com/blog/2014/05/04/fixing-typography-inside-of-2-d-css-transforms/\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding) scale($font-scale) perspective(100px)\n  translateZ(0.001px + $mat-form-field-legacy-dedupe);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  -ms-transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-legacy-dedupe)\n                  scale($font-scale);\n\n  width: 100% / $font-scale + $mat-form-field-legacy-dedupe;\n\n  $mat-form-field-legacy-dedupe: $mat-form-field-legacy-dedupe + 0.00001 !global;\n}\n\n// Same as mixin above, but omits the translateZ for printing purposes.\n@mixin _mat-form-field-legacy-label-floating-print($font-scale, $infix-padding, $infix-margin-top) {\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-legacy-dedupe)\n                  scale($font-scale);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  $mat-form-field-legacy-dedupe: $mat-form-field-legacy-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-legacy-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: ($line-height - 1) / 2;\n  // The padding on the infix. Mocks show half of the text size, but seem to measure from the edge\n  // of the text itself, not the edge of the line; therefore we subtract off the line spacing.\n  $infix-padding: 0.5em - $line-spacing;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size. We again need to subtract off the line spacing since the mocks measure to the edge of the\n  // text, not the  edge of the line.\n  $subscript-margin-top: 0.5em / $subscript-font-scale - ($line-spacing * 2);\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-wrapper {\n      padding-bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-infix {\n      padding: $infix-padding 0;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n      .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n    }\n\n    .mat-form-field-underline {\n      // We want the underline to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount.\n      bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-subscript-wrapper {\n      margin-top: $subscript-margin-top;\n\n      // We want the subscript to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount (adjusted for the smaller font size);\n      top: calc(100% - #{$wrapper-padding-bottom / $subscript-font-scale});\n    }\n  }\n\n  // translateZ causes the label to not appear while printing, so we override it to not\n  // apply translateZ while printing\n  @media print {\n    .mat-form-field-appearance-legacy {\n      &.mat-form-field-can-float {\n        &.mat-form-field-should-float .mat-form-field-label,\n        .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n        .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // Server-side rendered matInput with a label attribute but label not shown\n        // (used as a pure CSS stand-in for mat-form-field-should-float).\n        .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n      }\n    }\n  }\n}\n\n@mixin _mat-form-field-legacy-density($config-or-theme) {}\n\n@mixin mat-form-field-legacy-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-form-field-legacy') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-form-field-legacy-color($color);\n    }\n    @if $density != null {\n      @include _mat-form-field-legacy-density($density);\n    }\n    @if $typography != null {\n      @include mat-form-field-legacy-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n// Theme styles that only apply to the outline appearance of the form-field.\n\n@mixin mat-form-field-outline-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $foreground: map-get($config, foreground);\n  $is-dark-theme: map-get($config, is-dark);\n\n  $label-disabled-color: mat-color($foreground, disabled-text);\n  $outline-color: mat-color($foreground, divider, if($is-dark-theme, 0.3, 0.12));\n  $outline-color-hover: mat-color($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $outline-color-primary: mat-color($primary);\n  $outline-color-accent: mat-color($accent);\n  $outline-color-warn: mat-color($warn);\n  $outline-color-disabled: mat-color($foreground, divider, if($is-dark-theme, 0.15, 0.06));\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-outline {\n      color: $outline-color;\n    }\n\n    .mat-form-field-outline-thick {\n      color: $outline-color-hover;\n    }\n\n    &.mat-focused {\n      .mat-form-field-outline-thick {\n        color: $outline-color-primary;\n      }\n\n      &.mat-accent .mat-form-field-outline-thick {\n        color: $outline-color-accent;\n      }\n\n      &.mat-warn .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    // Class repeated so that rule is specific enough to override focused accent color case.\n    &.mat-form-field-invalid.mat-form-field-invalid {\n      .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-outline {\n        color: $outline-color-disabled;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-outline-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-outline-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-outline-dedupe)\n  scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-outline-dedupe;\n\n  $mat-form-field-outline-dedupe: $mat-form-field-outline-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-outline-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding above and below the infix.\n  $infix-padding: 1em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: 0.5em / $subscript-font-scale;\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n  // The amount we offset the label from the input text in the outline appearance.\n  $outline-appearance-label-offset: -0.25em;\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-infix {\n      padding: $infix-padding 0 $infix-padding 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n      margin-top: $outline-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-outline-label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-outline-label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n@mixin _mat-form-field-outline-density($config-or-theme) {}\n\n@mixin mat-form-field-outline-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-form-field-outline') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-form-field-outline-color($color);\n    }\n    @if $density != null {\n      @include _mat-form-field-outline-density($density);\n    }\n    @if $typography != null {\n      @include mat-form-field-outline-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n// Theme styles that only apply to the standard appearance of the form-field.\n\n@mixin mat-form-field-standard-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $is-dark-theme: map-get($config, is-dark);\n\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-standard {\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include mat-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n@mixin mat-form-field-standard-typography($config-or-theme) {}\n\n@mixin _mat-form-field-standard-density($config-or-theme) {}\n\n@mixin mat-form-field-standard-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-form-field-standard') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-form-field-standard-color($color);\n    }\n    @if $density != null {\n      @include _mat-form-field-standard-density($density);\n    }\n    @if $typography != null {\n      @include mat-form-field-standard-typography($typography);\n    }\n  }\n}\n\n\n// Color styles that apply to all appearances of the form-field.\n@mixin mat-form-field-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n  $is-dark-theme: map-get($config, is-dark);\n\n  // Label colors. Required is used for the `*` star shown in the label.\n  $label-color: mat-color($foreground, secondary-text, if($is-dark-theme, 0.7, 0.6));\n  $focused-label-color: mat-color($primary, text);\n  $required-label-color: mat-color($accent, text);\n\n  // Underline colors.\n  $underline-color-base: mat-color($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $underline-color-accent: mat-color($accent, text);\n  $underline-color-warn: mat-color($warn, text);\n  $underline-focused-color: mat-color($primary, text);\n\n  .mat-form-field-label {\n    color: $label-color;\n  }\n\n  .mat-hint {\n    color: $label-color;\n  }\n\n  .mat-form-field.mat-focused .mat-form-field-label {\n    color: $focused-label-color;\n\n    &.mat-accent {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn {\n      color: $underline-color-warn;\n    }\n  }\n\n  .mat-focused .mat-form-field-required-marker {\n    color: $required-label-color;\n  }\n\n  .mat-form-field-ripple {\n    background-color: $underline-color-base;\n  }\n\n  .mat-form-field.mat-focused {\n    .mat-form-field-ripple {\n      background-color: $underline-focused-color;\n\n      &.mat-accent {\n        background-color: $underline-color-accent;\n      }\n\n      &.mat-warn {\n        background-color: $underline-color-warn;\n      }\n    }\n  }\n\n  .mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) {\n    .mat-form-field-infix::after {\n      color: $underline-focused-color;\n    }\n\n    &.mat-accent .mat-form-field-infix::after {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn .mat-form-field-infix::after {\n      color: $underline-color-warn;\n    }\n  }\n\n  // Styling for the error state of the form field. Note that while the same can be\n  // achieved with the ng-* classes, we use this approach in order to ensure that the same\n  // logic is used to style the error state and to show the error messages.\n  .mat-form-field.mat-form-field-invalid {\n    .mat-form-field-label {\n      color: $underline-color-warn;\n\n      &.mat-accent,\n      .mat-form-field-required-marker {\n        color: $underline-color-warn;\n      }\n    }\n\n    .mat-form-field-ripple,\n    .mat-form-field-ripple.mat-accent {\n      background-color: $underline-color-warn;\n    }\n  }\n\n  .mat-error {\n    color: $underline-color-warn;\n  }\n\n  @include mat-form-field-legacy-color($config);\n  @include mat-form-field-standard-color($config);\n  @include mat-form-field-fill-color($config);\n  @include mat-form-field-outline-color($config);\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-dedupe)\n             scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-dedupe;\n\n  $mat-form-field-dedupe: $mat-form-field-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount to scale the font for the prefix and suffix icons.\n  $prefix-suffix-icon-font-scale: 1.5;\n\n  // The padding on the infix. Mocks show half of the text size.\n  $infix-padding: 0.5em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // Font size to use for the label and subscript text.\n  $subscript-font-size: $subscript-font-scale * 100%;\n  // Font size to use for the for the prefix and suffix icons.\n  $prefix-suffix-icon-font-size: $prefix-suffix-icon-font-scale * 100%;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: 0.5em / $subscript-font-scale;\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field {\n    @include mat-typography-level-to-styles($config, input);\n  }\n\n  .mat-form-field-wrapper {\n    padding-bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-prefix,\n  .mat-form-field-suffix {\n    // Allow icons in a prefix or suffix to adapt to the correct size.\n    .mat-icon {\n      font-size: $prefix-suffix-icon-font-size;\n      line-height: $line-height;\n    }\n\n    // Allow icon buttons in a prefix or suffix to adapt to the correct size.\n    .mat-icon-button {\n      height: $prefix-suffix-icon-font-scale * 1em;\n      width: $prefix-suffix-icon-font-scale * 1em;\n\n      .mat-icon {\n        height: $line-height * 1em;\n        line-height: $line-height;\n      }\n    }\n  }\n\n  .mat-form-field-infix {\n    padding: $infix-padding 0;\n    // Throws off the baseline if we do it as a real margin, so we do it as a border instead.\n    border-top: $infix-margin-top solid transparent;\n  }\n\n  .mat-form-field-can-float {\n    &.mat-form-field-should-float .mat-form-field-label,\n    .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n      @include _mat-form-field-label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n\n    // Server-side rendered matInput with a label attribute but label not shown\n    // (used as a pure CSS stand-in for mat-form-field-should-float).\n    .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n      @include _mat-form-field-label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n  }\n\n  .mat-form-field-label-wrapper {\n    top: -$infix-margin-top;\n    padding-top: $infix-margin-top;\n  }\n\n  .mat-form-field-label {\n    top: $infix-margin-top + $infix-padding;\n  }\n\n  .mat-form-field-underline {\n    // We want the underline to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount.\n    bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-subscript-wrapper {\n    font-size: $subscript-font-size;\n    margin-top: $subscript-margin-top;\n\n    // We want the subscript to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount (adjusted for the smaller font size);\n    top: calc(100% - #{$wrapper-padding-bottom / $subscript-font-scale});\n  }\n\n  @include mat-form-field-legacy-typography($config);\n  @include mat-form-field-standard-typography($config);\n  @include mat-form-field-fill-typography($config);\n  @include mat-form-field-outline-typography($config);\n}\n\n@mixin _mat-form-field-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  @include _mat-form-field-legacy-density($density-scale);\n  @include _mat-form-field-standard-density($density-scale);\n  @include _mat-form-field-fill-density($density-scale);\n  @include _mat-form-field-outline-density($density-scale);\n}\n\n@mixin mat-form-field-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-form-field') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-form-field-color($color);\n    }\n    @if $density != null {\n      @include _mat-form-field-density($density);\n    }\n    @if $typography != null {\n      @include mat-form-field-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n$mat-tree-node-height: 48px !default;\n// Minimum height for tree nodes in highest density is difficult to determine as\n// developers can display arbitrary content. We use a minimum height which ensures\n// that common content placed in tree nodes does not exceed (e.g. icons, checkboxes).\n$mat-tree-node-minimum-height: 24px !default;\n$mat-tree-node-maximum-height: $mat-tree-node-height !default;\n\n$mat-tree-density-config: (\n  height: (\n    default: $mat-tree-node-height,\n    maximum: $mat-tree-node-maximum-height,\n    minimum: $mat-tree-node-minimum-height,\n  )\n) !default;\n\n\n@mixin mat-tree-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-tree {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-tree-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-tree {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    font-weight: mat-font-weight($config, body-1);\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n@mixin _mat-tree-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  $height: _mat-density-prop-value($mat-tree-density-config, $density-scale, height);\n\n  @include _mat-density-legacy-compatibility() {\n    .mat-tree-node {\n      min-height: $height;\n    }\n  }\n}\n\n@mixin mat-tree-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-tree') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-tree-color($color);\n    }\n    @if $density != null {\n      @include _mat-tree-density($density);\n    }\n    @if $typography != null {\n      @include mat-tree-typography($typography);\n    }\n  }\n}\n\n\n\n\n// Includes all of the typographic styles.\n@mixin angular-material-typography($config-or-theme: null) {\n  $config: if(_mat-is-theme-object($config-or-theme),\n      mat-get-typography-config($config-or-theme), $config-or-theme);\n\n  // If no actual color configuration has been specified, create a default one.\n  @if not $config {\n    $config: mat-typography-config();\n  }\n\n  // TODO: COMP-309: Do not use individual mixins. Instead, use the all-theme mixin and only\n  // specify a `typography` config while setting `color` and `density` to `null`. This is currently\n  // not possible as it would introduce a circular dependency for typography because the `mat-core`\n  // mixin that is transitively loaded by the `all-theme` file, imports `all-typography` which\n  // would then load `all-theme` again. This ultimately results a circular dependency.\n\n  @include mat-badge-typography($config);\n  @include mat-base-typography($config);\n  @include mat-autocomplete-typography($config);\n  @include mat-bottom-sheet-typography($config);\n  @include mat-button-typography($config);\n  @include mat-button-toggle-typography($config);\n  @include mat-card-typography($config);\n  @include mat-checkbox-typography($config);\n  @include mat-chips-typography($config);\n  @include mat-divider-typography($config);\n  @include mat-table-typography($config);\n  @include mat-datepicker-typography($config);\n  @include mat-dialog-typography($config);\n  @include mat-expansion-panel-typography($config);\n  @include mat-form-field-typography($config);\n  @include mat-grid-list-typography($config);\n  @include mat-icon-typography($config);\n  @include mat-input-typography($config);\n  @include mat-menu-typography($config);\n  @include mat-paginator-typography($config);\n  @include mat-progress-bar-typography($config);\n  @include mat-progress-spinner-typography($config);\n  @include mat-radio-typography($config);\n  @include mat-select-typography($config);\n  @include mat-sidenav-typography($config);\n  @include mat-slide-toggle-typography($config);\n  @include mat-slider-typography($config);\n  @include mat-stepper-typography($config);\n  @include mat-sort-typography($config);\n  @include mat-tabs-typography($config);\n  @include mat-toolbar-typography($config);\n  @include mat-tooltip-typography($config);\n  @include mat-list-typography($config);\n  @include mat-option-typography($config);\n  @include mat-optgroup-typography($config);\n  @include mat-snack-bar-typography($config);\n  @include mat-tree-typography($config);\n}\n\n\n// Mixin that renders all of the core styles that are not theme-dependent.\n@mixin mat-core($typography-config: null) {\n  @include angular-material-typography($typography-config);\n  @include mat-ripple();\n  @include cdk-a11y();\n  @include cdk-overlay();\n  @include cdk-text-field();\n\n  @include _mat-strong-focus-indicators-positioning();\n  @include _mat-mdc-core();\n}\n\n@mixin mat-core-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  // Wrapper element that provides the theme background when the user's content isn't\n  // inside of a `mat-sidenav-container`. Note that we need to exclude the ampersand\n  // selector in case the mixin is included at the top level.\n  .mat-app-background#{if(&, ', &.mat-app-background', '')} {\n    $background: map-get($config, background);\n    $foreground: map-get($config, foreground);\n\n    background-color: mat-color($background, background);\n    color: mat-color($foreground, text);\n  }\n\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\n  // elevated.\n  @for $zValue from 0 through 24 {\n    .#{$_mat-elevation-prefix}#{$zValue} {\n      @include _mat-theme-elevation($zValue, $config);\n    }\n  }\n\n  // Marker that is used to determine whether the user has added a theme to their page.\n  @at-root {\n    .mat-theme-loaded-marker {\n      display: none;\n    }\n  }\n}\n\n// Mixin that renders all of the core styles that depend on the theme.\n@mixin mat-core-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  // Wrap the sub-theme includes in the duplicate theme styles mixin. This ensures that\n  // there won't be multiple warnings. e.g. if `mat-core-theme` reports a warning, then\n  // the imported themes (such as `mat-ripple-theme`) should not report again.\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-core') {\n    @include mat-ripple-theme($theme);\n    @include mat-option-theme($theme);\n    @include mat-optgroup-theme($theme);\n    @include mat-pseudo-checkbox-theme($theme);\n\n    $color: mat-get-color-config($theme);\n    @if $color != null {\n      @include mat-core-color($color);\n    }\n  }\n}\n\n// Mixin that renders all of the core MDC styles. Private mixin included with `mat-core`.\n@mixin _mat-mdc-core() {\n  @include _mat-mdc-strong-focus-indicators-positioning();\n}\n\n// Mixin that ensures focus indicator host elements are positioned so that the focus indicator\n// pseudo element within is positioned relative to the host. Private mixin included within\n// `_mat-mdc-core`.\n@mixin _mat-mdc-strong-focus-indicators-positioning() {\n  .mat-mdc-focus-indicator {\n    position: relative;\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Create a theme.\n@mixin angular-material-theme($theme-or-color-config) {\n  @include _mat-check-duplicate-theme-styles($theme-or-color-config, 'angular-material-theme') {\n    @include mat-core-theme($theme-or-color-config);\n    @include mat-autocomplete-theme($theme-or-color-config);\n    @include mat-badge-theme($theme-or-color-config);\n    @include mat-bottom-sheet-theme($theme-or-color-config);\n    @include mat-button-theme($theme-or-color-config);\n    @include mat-button-toggle-theme($theme-or-color-config);\n    @include mat-card-theme($theme-or-color-config);\n    @include mat-checkbox-theme($theme-or-color-config);\n    @include mat-chips-theme($theme-or-color-config);\n    @include mat-table-theme($theme-or-color-config);\n    @include mat-datepicker-theme($theme-or-color-config);\n    @include mat-dialog-theme($theme-or-color-config);\n    @include mat-divider-theme($theme-or-color-config);\n    @include mat-expansion-panel-theme($theme-or-color-config);\n    @include mat-form-field-theme($theme-or-color-config);\n    @include mat-grid-list-theme($theme-or-color-config);\n    @include mat-icon-theme($theme-or-color-config);\n    @include mat-input-theme($theme-or-color-config);\n    @include mat-list-theme($theme-or-color-config);\n    @include mat-menu-theme($theme-or-color-config);\n    @include mat-paginator-theme($theme-or-color-config);\n    @include mat-progress-bar-theme($theme-or-color-config);\n    @include mat-progress-spinner-theme($theme-or-color-config);\n    @include mat-radio-theme($theme-or-color-config);\n    @include mat-select-theme($theme-or-color-config);\n    @include mat-sidenav-theme($theme-or-color-config);\n    @include mat-slide-toggle-theme($theme-or-color-config);\n    @include mat-slider-theme($theme-or-color-config);\n    @include mat-stepper-theme($theme-or-color-config);\n    @include mat-sort-theme($theme-or-color-config);\n    @include mat-tabs-theme($theme-or-color-config);\n    @include mat-toolbar-theme($theme-or-color-config);\n    @include mat-tooltip-theme($theme-or-color-config);\n    @include mat-tree-theme($theme-or-color-config);\n    @include mat-snack-bar-theme($theme-or-color-config);\n  }\n}\n\n\n// Includes all of the color styles.\n@mixin angular-material-color($config-or-theme) {\n  // In case a theme object has been passed instead of a configuration for\n  // the color system, extract the color config from the theme object.\n  $config: if(_mat-is-theme-object($config-or-theme),\n      mat-get-color-config($config-or-theme), $config-or-theme);\n\n  @if $config == null {\n    @error 'No color configuration specified.';\n  }\n\n  @include angular-material-theme((\n    color: $config,\n    typography: null,\n    density: null,\n  ));\n}\n\n\n\n// Includes all of the density styles.\n@mixin _angular-material-density($config-or-theme) {\n  // In case a theme object has been passed instead of a configuration for\n  // the density system, extract the density config from the theme object.\n  $config: if(_mat-is-theme-object($config-or-theme),\n      mat-get-density-config($config-or-theme), $config-or-theme);\n\n  @if $config == null {\n    @error 'No density configuration specified.';\n  }\n\n  @include angular-material-theme((\n    color: null,\n    typography: null,\n    density: $config,\n  ));\n}\n\n\n\n","@import \"common-imports.scss\";\r\n@import \"context-menu\";\r\n@import \"files-select-box\";\r\n@import \"file-colors\";\r\n@import \"toggle-expansion-icon\";\r\n\r\nbody, html {\r\n  height: 100%;\r\n}\r\n\r\n.file-preview-overlay-container {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n","@import \"variables\";\r\n\r\nbody, html {\r\n  -webkit-font-smoothing: antialiased;\r\n  -webkit-tap-highlight-color: transparent;\r\n  -webkit-touch-callout: none;\r\n  -webkit-text-size-adjust: 100%;\r\n  -ms-text-size-adjust: 100%;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  width: 100%;\r\n  position: relative;\r\n  box-sizing: border-box;\r\n}\r\n\r\nhtml {\r\n  font-size: 62.5%;\r\n  touch-action: manipulation;\r\n}\r\n\r\nbody {\r\n  font-family: $font-family;\r\n  color: mat-color($app-foreground, text);\r\n  background-color: mat-color($app-background, dialog);\r\n  line-height: 1.42857143;\r\n  font-size: 1.4rem;\r\n  margin: 0;\r\n}\r\n\r\n//box-sizing\r\nbody {\r\n  box-sizing: inherit;\r\n\r\n  *, *:before, *:after {\r\n    box-sizing: inherit;\r\n  }\r\n}\r\n\r\n.be-fullscreen-overlay-scrollblock {\r\n  width: 100%;\r\n  position: fixed;\r\n}","@import \"material-colors\";\r\n\r\n//media queries\r\n$xsmall: 319.99px !default;\r\n$small: 599.99px !default;\r\n$medium: 768px !default;\r\n$large: 1024px !default;\r\n$xlarge: 1280px !default;\r\n$navbar-breakpoint: 1000px !default;\r\n\r\n// fonts\r\n$font-family: Roboto,'Helvetica Neue',sans-serif !default;\r\n\r\n// loading indicator\r\n$loading-indicator-color: mat-color($app-accent, default) !default;\r\n$loading-indicator-width: 64px !default;\r\n$loading-indicator-height: 64px !default;\r\n\r\n// modals\r\n$modal-default-width: 400px !default;\r\n$modal-wide-width: 500px !default;\r\n\r\n// inputs\r\n$input-height: 46px !default;\r\n$input-padding: 12px !default;\r\n\r\n// Social services colors\r\n$envato-color: #82B541 !default;\r\n$facebook-color: #3b5998 !default;\r\n$twitter-color: #1da1f2 !default;\r\n$google-color: #d34836 !default;\r\n$social-icon-link-color: #1e88e5 !default;\r\n$social-icon-mail-color: #D54B3D !default;\r\n\r\n// Admin\r\n$admin-page-padding: 25px;\r\n$admin-card-border: 1px solid mat-color($app-foreground, divider);\r\n$admin-card-box-shadow: none;\r\n\r\n// Navbar\r\n$material-navbar-height: 70px;\r\n\r\n// Pagination\r\n$pagination-controls-height: 40px;\r\n\r\n// Text Editor\r\n$text-editor-header-height: 37px;\r\n","@import \"variables\";\r\n\r\n.scroll-container, .scroll-container-x {\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n\r\n  &.ps {\r\n    position: relative;\r\n    overflow: hidden;\r\n  }\r\n}\r\n\r\n.scroll-container-x {\r\n  overflow-y: hidden;\r\n  overflow-x: auto;\r\n}\r\n\r\nimg {\r\n  display: block;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n  color: mat-color($app-foreground, link);\r\n\r\n  &.hover-underline:hover {\r\n    text-decoration: underline;\r\n  }\r\n}\r\n\r\nh1,h2,h3,h4,h5 {\r\n  font-weight: 500;\r\n}\r\n\r\n.unstyled-list {\r\n  list-style: none;\r\n  padding-left: 0;\r\n  margin: 0;\r\n}\r\n\r\nstrong, .strong {\r\n  font-weight: 500;\r\n}\r\n\r\nfieldset {\r\n  border: 0;\r\n  padding: 0;\r\n  margin: 0;\r\n  min-width: 0;\r\n}\r\n\r\nlegend {\r\n  padding: 0 0 5px 0;\r\n}\r\n\r\nfigure {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.hidden {\r\n  display: none !important;\r\n  visibility: hidden;\r\n}\r\n\r\n.visually-hidden {\r\n  visibility: hidden;\r\n  pointer-events: none;\r\n}\r\n\r\n.error {\r\n  color: mat-color($app-warn);\r\n\r\n  &.margin-bottom {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  &.margin-top {\r\n    margin-top: 20px;\r\n  }\r\n}\r\n\r\n//fix file dropzone firing \"dragleave\" event when hovering its child\r\n.file-over-dropzone * {\r\n  pointer-events: none !important;\r\n}\r\n\r\n.material-panel {\r\n  border: $admin-card-border;\r\n  box-shadow: $admin-card-box-shadow;\r\n  border-radius: 4px;\r\n  background-color: mat-color($app-background, card);\r\n  padding: 20px;\r\n}\r\n\r\n// focusable input in mat menu\r\ninput.mat-menu-item {\r\n  cursor: initial;\r\n\r\n  &:focus {\r\n    outline: -webkit-focus-ring-color auto 1px;\r\n  }\r\n\r\n  &:hover:not([disabled]), &.cdk-focused:not([disabled]) {\r\n    background: transparent;\r\n  }\r\n}\r\n\r\n.capitalize {\r\n  text-transform: capitalize;\r\n}\r\n\r\n.compact-scrollbar {\r\n  scrollbar-color: mat-color($app-foreground, divider) transparent;\r\n  scrollbar-width: thin;\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 8px;\r\n    height: 8px;\r\n    background-color: transparent;\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb {\r\n    background-color: mat-color($app-foreground, divider);\r\n    border-radius: 3px;\r\n  }\r\n}\r\n","@import \"variables\";\r\n\r\n.no-results-message {\r\n  width: 100%;\r\n  max-height: 100%;\r\n  max-width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-flow: column wrap;\r\n  overflow: hidden;\r\n\r\n  &.horizontal {\r\n    flex-flow: row-reverse nowrap;\r\n\r\n    .icon {\r\n      width: 40px;\r\n      height: 40px;\r\n      margin-top: 0;\r\n      margin-right: 15px;\r\n    }\r\n\r\n    .main {\r\n      font-size: 1.4rem;\r\n      text-align: left;\r\n      margin-bottom: 0;\r\n    }\r\n\r\n    .secondary {\r\n      font-size: 1.4rem;\r\n    }\r\n  }\r\n\r\n  .icon {\r\n    width: auto;\r\n    height: 90px;\r\n    fill: mat-color($app-foreground, icon);\r\n\r\n    img {\r\n      width: 100%;\r\n    }\r\n\r\n    &:not(.mat-icon) {\r\n      margin-bottom: 25px;\r\n    }\r\n  }\r\n\r\n  .main {\r\n    font-size: 1.8rem;\r\n    text-align: center;\r\n    margin-bottom: 5px;\r\n    color: mat-color($app-foreground, text);\r\n  }\r\n\r\n  .secondary {\r\n    font-size: 1.6rem;\r\n    text-align: center;\r\n    max-width: 450px;\r\n    color: mat-color($app-foreground, secondary-text);\r\n  }\r\n}\r\n","@import \"variables\";\r\n\r\nbutton.no-style {\r\n  background: none;\r\n  border: 0;\r\n  color: inherit;\r\n  font: inherit;\r\n  line-height: inherit;\r\n  overflow: visible;\r\n  padding: 0;\r\n  border-radius: 0;\r\n  min-width: initial;\r\n  -webkit-user-select: none; /* for button */\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  text-align: initial;\r\n}\r\n\r\n.mat-flat-button.mat-gray {\r\n  background-color: mat-color($app-background, unselected-chip);\r\n  color: mat-color($app-foreground, text);\r\n}\r\n","@import \"variables\";\r\n\r\n.menu-with-alt-text {\r\n  width: 320px;\r\n\r\n  .mat-menu-item {\r\n    display: flex;\r\n  }\r\n\r\n  .alt-text {\r\n    margin-left: auto;\r\n    color: mat-color($app-foreground, secondary-text);\r\n    font-size: 13px;\r\n  }\r\n}","@import \"variables\";\r\n\r\n.tox-tinymce.tox {\r\n  border: none;\r\n  flex: 1 1 auto;\r\n\r\n  .tox-edit-area {\r\n    border: none;\r\n  }\r\n\r\n  .tox-panel {\r\n    background-color: mat-color($app-background, background);\r\n    border-bottom: 1px solid mat-color($app-foreground, divider);\r\n    padding: 0;\r\n  }\r\n}","@import \"variables\";\r\n\r\n.input-container {\r\n  display: block;\r\n  width: 100%;\r\n\r\n  &.has-error {\r\n    input, select, textarea, .fake-input {\r\n      border-color: mat-color($app-warn);\r\n    }\r\n\r\n    label {\r\n      color: mat-color($app-warn);\r\n    }\r\n  }\r\n\r\n  .error {\r\n    margin-top: 6px;\r\n    color: mat-color($app-warn);\r\n\r\n    a {\r\n      color: inherit;\r\n      font-weight: 500;\r\n    }\r\n  }\r\n\r\n  p, .input-description {\r\n    color: mat-color($app-foreground, secondary-text);\r\n    font-size: 13px;\r\n  }\r\n\r\n  label, .fake-label {\r\n    color: mat-color($app-foreground, label);\r\n    display: block;\r\n    padding-bottom: 5px;\r\n  }\r\n\r\n  input, select, textarea, .fake-input {\r\n    display: block;\r\n    width: 100%;\r\n    height: $input-height;\r\n    color: inherit;\r\n    caret-color: inherit;\r\n    border: 1px solid mat-color($app-foreground, divider);\r\n    padding: $input-padding;\r\n    margin: 0;\r\n    outline: 0;\r\n    line-height: normal;\r\n    font-size: 14px;\r\n    font-family: inherit;\r\n    background-color: transparent;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n    transition-duration: 0.15s;\r\n    transition-property: border,background-color,color,box-shadow;\r\n    transition-timing-function: ease-in;\r\n    overflow: visible;\r\n    position: relative;\r\n    z-index: 1;\r\n\r\n    @include input-placeholder {\r\n      color: mat-color($app-foreground, disabled-button-text);\r\n    }\r\n\r\n    &:focus {\r\n      outline: 0;\r\n      border-color: mat-color($app-accent, lighter);\r\n      box-shadow: 0 0 0 2px mat-color($app-accent, lighter);\r\n    }\r\n\r\n    &:disabled {\r\n      opacity: 0.6;\r\n    }\r\n\r\n    &[readonly] {\r\n      cursor: pointer;\r\n      opacity: 0.9;\r\n    }\r\n\r\n    &:required:not(:focus) {\r\n      box-shadow: none;\r\n    }\r\n  }\r\n\r\n  option {\r\n    color: rgba(0, 0, 0, 0.87);\r\n  }\r\n\r\n  // fix for firefox \"file\" input\r\n  input[type=\"file\"] {\r\n    height: auto;\r\n  }\r\n\r\n  textarea {\r\n    height: auto;\r\n    padding: 10px;\r\n  }\r\n\r\n  .input-with-action {\r\n    &:not(.hide-action) {\r\n      display: flex;\r\n\r\n      input, select {\r\n        flex: 1;\r\n      }\r\n\r\n      &:not(.action-left) {\r\n        input, select {\r\n          border-top-right-radius: 0;\r\n          border-bottom-right-radius: 0;\r\n          border-right: none;\r\n        }\r\n\r\n        .mat-flat-button, .input-action {\r\n          border-top-left-radius: 0;\r\n          border-bottom-left-radius: 0;\r\n        }\r\n      }\r\n\r\n      &.action-left {\r\n        input, select {\r\n          border-top-left-radius: 0;\r\n          border-bottom-left-radius: 0;\r\n          border-left: none;\r\n        }\r\n\r\n        .mat-flat-button, .input-action {\r\n          border-top-right-radius: 0;\r\n          border-bottom-right-radius: 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    &.hide-action {\r\n      .mat-flat-button, .input-action {\r\n        display: none;\r\n        visibility: hidden;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.inline-inputs-container {\r\n  display: flex;\r\n\r\n  .input-container {\r\n    margin-right: 15px;\r\n    flex: 1 1 auto;\r\n\r\n    &:last-child {\r\n      margin-right: 0;\r\n    }\r\n  }\r\n}\r\n\r\n.many-inputs {\r\n  > .input-container, > .custom-control {\r\n    margin-bottom: 20px;\r\n  }\r\n}\r\n","@import \"variables\";\r\n\r\n$close-button-size: 24px;\r\n\r\n.be-modal {\r\n  // width: $modal-default-width;\r\n  \r\n  .dialog-loading-bar {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n  }\r\n\r\n  .mat-dialog-container {\r\n    position: relative;\r\n  }\r\n\r\n  .modal-header {\r\n    display: flex;\r\n    align-items: center;\r\n    position: relative;\r\n    margin: 0 0 35px;\r\n  }\r\n\r\n  h2 {\r\n    font-size: 1.6rem;\r\n    font-weight: 500;\r\n    opacity: 0.8;\r\n    flex: 1 1 auto;\r\n    margin: 0;\r\n    line-height: 30px;\r\n  }\r\n\r\n  .mat-dialog-content {\r\n    position: relative;\r\n    padding-top: 4px;\r\n    padding-bottom: 4px;\r\n  }\r\n\r\n  .mat-dialog-actions {\r\n    justify-content: flex-end;\r\n    padding-bottom: 16px;\r\n  }\r\n\r\n  .close-button {\r\n    flex: 0 0 $close-button-size;\r\n    width: $close-button-size;\r\n    height: $close-button-size;\r\n    line-height: $close-button-size;\r\n    color: mat-color($app-foreground, icon);\r\n    transition: transform ease 0.2s;\r\n    z-index: 999;\r\n\r\n    &:hover {\r\n      transform: rotate(90deg);\r\n    }\r\n\r\n    .mat-icon {\r\n      width: $close-button-size;\r\n      height: $close-button-size;\r\n    }\r\n  }\r\n\r\n  .errors {\r\n    color: mat-color($app-warn);\r\n\r\n    .error {\r\n      padding: 10px 0;\r\n\r\n      &:last-of-type {\r\n        margin-bottom: 20px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .no-input-error {\r\n    padding: 10px 0;\r\n    color: mat-color($app-warn);\r\n  }\r\n}\r\n","@import \"variables\";\r\n\r\n.social-icons {\r\n  &:empty {\r\n    display: none;\r\n  }\r\n\r\n  .social-icon {\r\n    width: 31px;\r\n    height: 31px;\r\n    line-height: 31px;\r\n    margin-right: 8px;\r\n    border-radius: 4px;\r\n    text-align: center;\r\n\r\n    &.facebook {\r\n      background-color: $facebook-color;\r\n      color: #fff;\r\n    }\r\n\r\n    &.twitter {\r\n      background-color: $twitter-color;\r\n      color: #fff;\r\n    }\r\n\r\n    &.google {\r\n      background-color: $google-color;\r\n      color: #fff;\r\n    }\r\n\r\n    &.mail {\r\n      background-color: $social-icon-mail-color;\r\n      color: #fff;\r\n    }\r\n\r\n    &.link {\r\n      background-color: $social-icon-link-color;\r\n      color: #fff;\r\n    }\r\n\r\n    .mat-icon {\r\n      width: 18px;\r\n      height: 18px;\r\n      line-height: 18px;\r\n      margin: 0 auto;\r\n    }\r\n  }\r\n}\r\n","@import \"variables\";\r\n$spacing: 30px;\r\n\r\n.settings-panel {\r\n  display: block;\r\n  margin-bottom: $spacing;\r\n  border: $admin-card-border;\r\n  box-shadow: $admin-card-box-shadow;\r\n  border-top-left-radius: 4px;\r\n  border-top-right-radius: 4px;\r\n  background-color: mat-color($app-background, card);\r\n  padding: ($spacing - 5px) $spacing;\r\n  position: relative;\r\n\r\n  .body {\r\n    margin: 0;\r\n  }\r\n\r\n  .header {\r\n    margin-bottom: $spacing + 10px;\r\n\r\n    .title {\r\n      font-size: 2rem;\r\n      margin-bottom: 5px;\r\n      opacity: 0.8;\r\n      text-transform: capitalize;\r\n    }\r\n\r\n    .subtitle {\r\n      font-size: 1.4rem;\r\n      color: mat-color($app-foreground, secondary-text);\r\n    }\r\n  }\r\n\r\n  .input-container {\r\n    input, select, textarea, space-input {\r\n      max-width: 400px;\r\n    }\r\n\r\n    chip-input {\r\n      max-width: 400px;\r\n\r\n      .mat-chip-list-wrapper {\r\n        border-radius: 4px;\r\n      }\r\n\r\n      input {\r\n        height: 28px;\r\n      }\r\n    }\r\n\r\n    p, .input-description {\r\n      margin: 10px 0 25px;\r\n      padding: 0 1px;\r\n      max-width: 650px;\r\n    }\r\n\r\n    select:not(.no-capitalize) {\r\n      text-transform: capitalize;\r\n    }\r\n  }\r\n\r\n  .description {\r\n    font-size: 1.3rem;\r\n  }\r\n\r\n  .margin-top {\r\n    margin-top: 35px;\r\n  }\r\n\r\n  .margin-bottom {\r\n    margin-bottom: 35px;\r\n  }\r\n\r\n  .widget {\r\n    background-color: #f3fbf7;\r\n    padding: 14px;\r\n    margin: 35px 0;\r\n    border-radius: 3px;\r\n    overflow-wrap: break-word;\r\n    border-left: 5px solid darken(#f3fbf7, 40%);\r\n    max-width: 650px;\r\n\r\n    p {\r\n      margin: 5px 0 0;\r\n      font-size: 1.5rem;\r\n      font-weight: 300;\r\n      color: rgba(0,0,0,0.87);\r\n    }\r\n\r\n    .title {\r\n      font-size: 1.6rem;\r\n      font-weight: 500;\r\n      color: #555;\r\n    }\r\n\r\n    button {\r\n      margin-top: 15px;\r\n      margin-right: 8px;\r\n    }\r\n\r\n    &.widget-flat {\r\n      background-color: mat-color($app-background, background);\r\n      color: mat-color($app-foreground, text);\r\n      border: 1px solid mat-color($app-foreground, divider-lighter);\r\n    }\r\n\r\n    &.widget-important {\r\n      background-color: #fef7ed;\r\n      border-left: 5px solid darken(#fef7ed, 40%);\r\n    }\r\n\r\n    &.widget-warning {\r\n      background-color: #f2564d;\r\n      border-left: 5px solid darken(#f2564d, 40%);\r\n    }\r\n  }\r\n\r\n  .settings-separator {\r\n    background-color: var(--be-divider-lighter);\r\n    height: 1px;\r\n    margin: 25px 0;\r\n  }\r\n\r\n  .error-group {\r\n    border-top: 1px solid mat-color($app-foreground, divider-lighter);\r\n    border-bottom: 1px solid mat-color($app-foreground, divider-lighter);\r\n    padding-top: 20px;\r\n    margin-bottom: 20px;\r\n    max-width: 400px;\r\n\r\n    &.has-error {\r\n      border-color: mat-color($app-warn);\r\n\r\n      input, select, textarea {\r\n        border-color: mat-color($app-warn);\r\n      }\r\n\r\n      label {\r\n        color: mat-color($app-warn);\r\n      }\r\n    }\r\n\r\n    &.no-bottom-border {\r\n      border-bottom: none;\r\n    }\r\n\r\n    &.no-border-top {\r\n      border-top: none;\r\n      padding-top: 0;\r\n    }\r\n\r\n    &.no-spacing {\r\n      border: none;\r\n      padding: 0;\r\n      margin: 0;\r\n    }\r\n\r\n    .group-error {\r\n      margin-bottom: 10px;\r\n    }\r\n\r\n    h2 {\r\n      font-size: 1.6rem;\r\n      font-weight: 400;\r\n      margin: 5px 0 25px;\r\n    }\r\n  }\r\n\r\n  .mat-progress-bar {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n  }\r\n\r\n  .mat-tab-label {\r\n    text-transform: capitalize;\r\n  }\r\n\r\n  strong {\r\n    font-weight: 500;\r\n  }\r\n}\r\n","@import \"_variables\";\r\n\r\n//always should horizontal scrollbar\r\n.ps {\r\n  position: relative;\r\n\r\n  > .ps__rail-x {\r\n    opacity: 0.6;\r\n  }\r\n}\r\n\r\n@import \"~perfect-scrollbar/css/perfect-scrollbar\";","/*\n * Container style\n */\n.ps {\n  overflow: hidden !important;\n  overflow-anchor: none;\n  -ms-overflow-style: none;\n  touch-action: auto;\n  -ms-touch-action: auto;\n}\n\n/*\n * Scrollbar rail styles\n */\n.ps__rail-x {\n  display: none;\n  opacity: 0;\n  transition: background-color .2s linear, opacity .2s linear;\n  -webkit-transition: background-color .2s linear, opacity .2s linear;\n  height: 15px;\n  /* there must be 'bottom' or 'top' for ps__rail-x */\n  bottom: 0px;\n  /* please don't change 'position' */\n  position: absolute;\n}\n\n.ps__rail-y {\n  display: none;\n  opacity: 0;\n  transition: background-color .2s linear, opacity .2s linear;\n  -webkit-transition: background-color .2s linear, opacity .2s linear;\n  width: 15px;\n  /* there must be 'right' or 'left' for ps__rail-y */\n  right: 0;\n  /* please don't change 'position' */\n  position: absolute;\n}\n\n.ps--active-x > .ps__rail-x,\n.ps--active-y > .ps__rail-y {\n  display: block;\n  background-color: transparent;\n}\n\n.ps:hover > .ps__rail-x,\n.ps:hover > .ps__rail-y,\n.ps--focus > .ps__rail-x,\n.ps--focus > .ps__rail-y,\n.ps--scrolling-x > .ps__rail-x,\n.ps--scrolling-y > .ps__rail-y {\n  opacity: 0.6;\n}\n\n.ps .ps__rail-x:hover,\n.ps .ps__rail-y:hover,\n.ps .ps__rail-x:focus,\n.ps .ps__rail-y:focus,\n.ps .ps__rail-x.ps--clicking,\n.ps .ps__rail-y.ps--clicking {\n  background-color: #eee;\n  opacity: 0.9;\n}\n\n/*\n * Scrollbar thumb styles\n */\n.ps__thumb-x {\n  background-color: #aaa;\n  border-radius: 6px;\n  transition: background-color .2s linear, height .2s ease-in-out;\n  -webkit-transition: background-color .2s linear, height .2s ease-in-out;\n  height: 6px;\n  /* there must be 'bottom' for ps__thumb-x */\n  bottom: 2px;\n  /* please don't change 'position' */\n  position: absolute;\n}\n\n.ps__thumb-y {\n  background-color: #aaa;\n  border-radius: 6px;\n  transition: background-color .2s linear, width .2s ease-in-out;\n  -webkit-transition: background-color .2s linear, width .2s ease-in-out;\n  width: 6px;\n  /* there must be 'right' for ps__thumb-y */\n  right: 2px;\n  /* please don't change 'position' */\n  position: absolute;\n}\n\n.ps__rail-x:hover > .ps__thumb-x,\n.ps__rail-x:focus > .ps__thumb-x,\n.ps__rail-x.ps--clicking .ps__thumb-x {\n  background-color: #999;\n  height: 11px;\n}\n\n.ps__rail-y:hover > .ps__thumb-y,\n.ps__rail-y:focus > .ps__thumb-y,\n.ps__rail-y.ps--clicking .ps__thumb-y {\n  background-color: #999;\n  width: 11px;\n}\n\n/* MS supports */\n@supports (-ms-overflow-style: none) {\n  .ps {\n    overflow: auto !important;\n  }\n}\n\n@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {\n  .ps {\n    overflow: auto !important;\n  }\n}\n",".selected-el-box {\r\n  border: 2px dashed #E91E63;\r\n  position: absolute;\r\n  pointer-events: none;\r\n  padding: 5px;\r\n  top: -15px;\r\n  left: -15px;\r\n}","@import \"variables\";\r\n\r\n.material-table {\r\n  border-spacing: 0;\r\n  width: 100%;\r\n\r\n  th:first-of-type, td:first-of-type {\r\n    padding-left: 24px;\r\n  }\r\n\r\n  th:last-of-type, td:last-of-type {\r\n    padding-right: 24px;\r\n  }\r\n\r\n  th, td {\r\n    padding: 0;\r\n    border-bottom-width: 1px;\r\n    border-bottom-style: solid;\r\n    border-bottom-color: mat-color($app-foreground, divider);\r\n  }\r\n\r\n  th {\r\n    color: mat-color($app-foreground, secondary-text);\r\n    text-align: left;\r\n    font-size: 1.2rem;\r\n    font-weight: 500;\r\n  }\r\n\r\n  tr {\r\n    background-color: inherit;\r\n  }\r\n\r\n  thead tr {\r\n    height: 56px;\r\n  }\r\n\r\n  tbody tr {\r\n    height: 48px;\r\n  }\r\n\r\n  .table-checkbox {\r\n    width: 50px;\r\n    padding-right: 25px;\r\n  }\r\n\r\n  .edit-column {\r\n    color: mat-color($app-foreground, secondary-text);\r\n    padding-left: 25px;\r\n    white-space: nowrap;\r\n    text-align: right;\r\n  }\r\n\r\n  .column-with-image {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-right: 15px;\r\n\r\n    img {\r\n      display: inline-block;\r\n      vertical-align: middle;\r\n      width: 35px;\r\n      height: 35px;\r\n      margin-right: 10px;\r\n      object-fit: cover;\r\n      border-radius: 4px;\r\n      flex-shrink: 0;\r\n    }\r\n\r\n    .secondary {\r\n      color: mat-color($app-foreground, secondary-text);\r\n      font-size: 12px;\r\n    }\r\n  }\r\n\r\n  .link {\r\n    color: inherit;\r\n\r\n    &:hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n}\r\n\r\n.datatable {\r\n  position: relative;\r\n  border: $admin-card-border;\r\n  box-shadow: $admin-card-box-shadow;\r\n  background-color: mat-color($app-background, dialog);\r\n  border-radius: 4px;\r\n\r\n  no-results-message {\r\n    padding: 65px 0;\r\n  }\r\n}\r\n","@import \"variables\";\r\n\r\n$pagination-height: 56px;\r\n$table-header-height: 85px;\r\n\r\n.responsive-material-table {\r\n  @media screen and (max-width: $medium) {\r\n    padding: 0;\r\n    background-color: initial;\r\n    border: none;\r\n    box-shadow: none;\r\n    margin: 0;\r\n\r\n    .mat-table {\r\n      background-color: initial;\r\n      padding: 0;\r\n    }\r\n\r\n    .mat-paginator {\r\n      background-color: transparent;\r\n      margin-top: 15px;\r\n    }\r\n\r\n    .mat-paginator-page-size {\r\n      display: none;\r\n    }\r\n\r\n    .mat-header-row {\r\n      display: none;\r\n    }\r\n\r\n    .header-inner {\r\n      padding-left: 0;\r\n      padding-right: 0;\r\n      display: block;\r\n      height: auto;\r\n\r\n      .left {\r\n        margin-bottom: 15px;\r\n      }\r\n\r\n      .right {\r\n        justify-content: flex-start;\r\n      }\r\n    }\r\n\r\n\r\n    .mat-row {\r\n      display: block;\r\n      overflow: hidden;\r\n      height: auto;\r\n      min-height: 0;\r\n      margin: 0 0 15px;\r\n      padding: 0 15px;\r\n      border-radius: 4px;\r\n      @include mat-elevation(1);\r\n      position: relative;\r\n\r\n      &:last-of-type {\r\n        margin-bottom: 0;\r\n      }\r\n    }\r\n\r\n    .mat-row::after {\r\n      display: none;\r\n    }\r\n\r\n    .mat-cell {\r\n      margin: 16px 0;\r\n      min-height: 0;\r\n\r\n      &:first-of-type {\r\n        padding-left: 0;\r\n      }\r\n    }\r\n\r\n    [data-label] {\r\n      &:before {\r\n        content: attr(data-label);\r\n        display: inline;\r\n        font-weight: normal;\r\n        padding-right: 5px;\r\n        color: mat-color($app-foreground, secondary-text);\r\n      }\r\n    }\r\n\r\n    .hidden-on-mobile, .mat-column-select {\r\n      display: none;\r\n    }\r\n\r\n    .mat-column-edit {\r\n      position: absolute;\r\n      bottom: 8px;\r\n      right: 5px;\r\n      margin: 0;\r\n      padding: 0;\r\n    }\r\n\r\n    .filter-chip-list {\r\n      width: 100%;\r\n      margin-bottom: 15px;\r\n    }\r\n  }\r\n}\r\n\r\n.responsive-table {\r\n  @media screen and (max-width: $medium) {\r\n    padding: 0;\r\n    background-color: initial;\r\n    border: none;\r\n    box-shadow: none;\r\n    margin: 0;\r\n\r\n    datatable-footer {\r\n      background-color: transparent;\r\n\r\n      .page-size {\r\n        display: none;\r\n      }\r\n    }\r\n\r\n    datatable-header, .datatable-header {\r\n      padding: 0;\r\n      height: auto;\r\n      margin-bottom: 70px;\r\n    }\r\n\r\n    .search-input-container.input-container {\r\n      position: absolute;\r\n      bottom: -55px;\r\n      left: 0;\r\n      width: 100%;\r\n      background-color: mat-color($app-background, card);\r\n    }\r\n\r\n    /* collapse table */\r\n    table, thead, tbody, th, td, tr {\r\n      display: block;\r\n    }\r\n\r\n    /* Hide table header (but not display: none;, for accessibility) */\r\n    thead tr {\r\n      position: absolute;\r\n      top: -9999px;\r\n      left: -9999px;\r\n    }\r\n\r\n    // panel\r\n    tbody tr {\r\n      height: auto !important;\r\n      background-color: mat-color($app-background, card);\r\n      margin-bottom: 15px;\r\n      padding: 10px 15px;\r\n      border-radius: 4px;\r\n      @include mat-elevation(1);\r\n      position: relative;\r\n    }\r\n\r\n    // row\r\n    td {\r\n      padding: 10px 0;\r\n      min-height: 0;\r\n      border-bottom: 1px solid mat-color($app-foreground, divider-lighter);\r\n      white-space: nowrap;\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n\r\n      &:first-of-type {\r\n        padding-left: 0;\r\n      }\r\n\r\n      &:last-of-type {\r\n        padding-right: 0;\r\n        border-bottom: none;\r\n      }\r\n    }\r\n\r\n    td:not(.mobile-no-label):not(.table-checkbox) {\r\n      display: flex;\r\n      width: auto;\r\n    }\r\n\r\n    // row label\r\n    [data-label] {\r\n      &:before {\r\n        content: attr(data-label);\r\n        display: block;\r\n        font-weight: normal;\r\n        padding-right: 5px;\r\n        color: mat-color($app-foreground, secondary-text);\r\n        width: 50%;\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n      }\r\n    }\r\n\r\n    .edit-column {\r\n      padding: 10px 0 0;\r\n      text-align: center;\r\n      justify-content: center;\r\n    }\r\n\r\n    .hidden-on-mobile, .table-checkbox {\r\n      display: none !important;\r\n    }\r\n  }\r\n}\r\n","@import \"variables\";\r\n\r\n.multiline-mat-menu-item.mat-menu-item, .multiline-mat-menu-item.mat-option {\r\n  display: block;\r\n  white-space: normal;\r\n  line-height: normal;\r\n  height: auto;\r\n  min-height: 48px;\r\n  padding: 10px 16px;\r\n  font-size: 1.4rem;\r\n\r\n  &.with-icon {\r\n    display: flex;\r\n  }\r\n\r\n  .title {\r\n    display: block;\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  .description {\r\n    display: block;\r\n    color: mat-color($app-foreground, secondary-text);\r\n    margin-top: 3px;\r\n  }\r\n\r\n  .mat-icon {\r\n    flex-shrink: 0;\r\n  }\r\n}\r\n\r\n.mat-menu-item.active {\r\n  color: mat-color($app-primary, default);\r\n\r\n  .title {\r\n    font-weight: 500;\r\n  }\r\n}\r\n","@import \"variables\";\r\n\r\n.setting-toggle-container {\r\n  margin-bottom: 30px;\r\n\r\n  &.margin-top {\r\n    margin-top: 30px;\r\n  }\r\n\r\n  &.margin-bottom {\r\n    margin-bottom: 30px;\r\n  }\r\n\r\n  p {\r\n    color: mat-color($app-foreground, secondary-text);\r\n    font-size: 1.3rem;\r\n    max-width: 600px;\r\n    margin-top: 5px;\r\n  }\r\n}","@import \"variables\";\r\n\r\n.selection-list {\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n\r\n  .list-item {\r\n    &:hover .list-item-header {\r\n      background-color: mat-color($app-accent, emphasis);\r\n    }\r\n  }\r\n\r\n  .list-item-header {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 12px;\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n\r\n    .meta {\r\n      flex: 1 1 auto;\r\n      padding-right: 16px;\r\n    }\r\n\r\n    .mat-pseudo-checkbox {\r\n      flex-shrink: 0;\r\n      width: 16px;\r\n    }\r\n  }\r\n\r\n  .list-item-name {\r\n    font-size: 1.6rem;\r\n  }\r\n\r\n  .list-item-description {\r\n    margin: 0;\r\n  }\r\n\r\n  .list-item-restrictions {\r\n    padding: 10px 20px;\r\n    max-width: 400px;\r\n\r\n    label {\r\n      text-transform: capitalize;\r\n    }\r\n  }\r\n}\r\n","@import \"variables\";\r\n\r\n$ct-text-color: mat-color($app-foreground, secondary-text);\r\n$ct-text-size: 1.3rem;\r\n$ct-series-colors: (\r\n        #42A5F5,\r\n        #66BB6A,\r\n        #FF7043,\r\n        #5C6BC0,\r\n        #8D6E63,\r\n        #FFA726,\r\n        #26A69A,\r\n        #26C6DA,\r\n        #D4E157,\r\n        #8D6E63,\r\n        #BDBDBD,\r\n        #78909C,\r\n        #7E57C2,\r\n        #AB47BC,\r\n        #ef5350\r\n);\r\n\r\n// add separators to pie chart slices\r\n.ct-slice-pie {\r\n  fill-opacity: 0.8;\r\n  stroke: #fff;\r\n  stroke-width: 2px;\r\n}\r\n\r\n// pie chart labels\r\n.ct-chart-pie .ct-label {\r\n  color: #fff;\r\n  fill: #fff;\r\n  text-shadow: 0 1px rgba(0, 0, 0, 0.7);\r\n  font-weight: 500;\r\n}\r\n\r\n// line chart border width\r\n.ct-line {\r\n  stroke-width: 3px;\r\n}\r\n\r\n@-webkit-keyframes fadeInFromNone {\r\n  0% {\r\n    opacity: 0;\r\n  }\r\n\r\n  50% {\r\n    opacity: 0;\r\n  }\r\n\r\n  100% {\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.ct-chart-line .ct-point, .ct-chart-donut .ct-label {\r\n  animation: fadeInFromNone 0.3s ease-in;\r\n}\r\n\r\n.ct-chart-donut .ct-label {\r\n  fill: rgba(250, 250, 250, 0.95);\r\n  text-shadow: 0 1px rgba(0, 0, 0, 0.7);\r\n  font-weight: 500;\r\n}\r\n\r\n// chart legend colors\r\n@for $i from 1 to 15 {\r\n  .chart-legend .legend-item:nth-child(#{$i}):before {\r\n    background-color: nth($ct-series-colors, $i);\r\n  }\r\n}\r\n\r\nchart.rotate-labels {\r\n  overflow: visible;\r\n\r\n  .ct-chart-line {\r\n    overflow: visible;\r\n  }\r\n\r\n  .ct-label.ct-horizontal.ct-end {\r\n    position: relative;\r\n    justify-content: flex-end;\r\n    text-align: right;\r\n    transform-origin: 100% 0;\r\n    transform: translate(-100%) rotate(-45deg);\r\n    white-space:nowrap;\r\n  }\r\n}\r\n\r\n@import \"~chartist/dist/scss/chartist.scss\";\r\n@import \"chartist-tooltip\";\r\n","@import \"settings/chartist-settings\";\n\n@mixin ct-responsive-svg-container($width: 100%, $ratio: $ct-container-ratio) {\n  display: block;\n  position: relative;\n  width: $width;\n\n  &:before {\n    display: block;\n    float: left;\n    content: \"\";\n    width: 0;\n    height: 0;\n    padding-bottom: $ratio * 100%;\n  }\n\n  &:after {\n    content: \"\";\n    display: table;\n    clear: both;\n  }\n\n  > svg {\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n  }\n}\n\n@mixin ct-align-justify($ct-text-align: $ct-text-align, $ct-text-justify: $ct-text-justify) {\n  -webkit-box-align: $ct-text-align;\n  -webkit-align-items: $ct-text-align;\n  -ms-flex-align: $ct-text-align;\n  align-items: $ct-text-align;\n  -webkit-box-pack: $ct-text-justify;\n  -webkit-justify-content: $ct-text-justify;\n  -ms-flex-pack: $ct-text-justify;\n  justify-content: $ct-text-justify;\n  // Fallback to text-align for non-flex browsers\n  @if($ct-text-justify == 'flex-start') {\n    text-align: left;\n  } @else if ($ct-text-justify == 'flex-end') {\n    text-align: right;\n  } @else {\n    text-align: center;\n  }\n}\n\n@mixin ct-flex() {\n  // Fallback to block\n  display: block;\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n}\n\n@mixin ct-chart-label($ct-text-color: $ct-text-color, $ct-text-size: $ct-text-size, $ct-text-line-height: $ct-text-line-height) {\n  fill: $ct-text-color;\n  color: $ct-text-color;\n  font-size: $ct-text-size;\n  line-height: $ct-text-line-height;\n}\n\n@mixin ct-chart-grid($ct-grid-color: $ct-grid-color, $ct-grid-width: $ct-grid-width, $ct-grid-dasharray: $ct-grid-dasharray) {\n  stroke: $ct-grid-color;\n  stroke-width: $ct-grid-width;\n\n  @if ($ct-grid-dasharray) {\n    stroke-dasharray: $ct-grid-dasharray;\n  }\n}\n\n@mixin ct-chart-point($ct-point-size: $ct-point-size, $ct-point-shape: $ct-point-shape) {\n  stroke-width: $ct-point-size;\n  stroke-linecap: $ct-point-shape;\n}\n\n@mixin ct-chart-line($ct-line-width: $ct-line-width, $ct-line-dasharray: $ct-line-dasharray) {\n  fill: none;\n  stroke-width: $ct-line-width;\n\n  @if ($ct-line-dasharray) {\n    stroke-dasharray: $ct-line-dasharray;\n  }\n}\n\n@mixin ct-chart-area($ct-area-opacity: $ct-area-opacity) {\n  stroke: none;\n  fill-opacity: $ct-area-opacity;\n}\n\n@mixin ct-chart-bar($ct-bar-width: $ct-bar-width) {\n  fill: none;\n  stroke-width: $ct-bar-width;\n}\n\n@mixin ct-chart-donut($ct-donut-width: $ct-donut-width) {\n  fill: none;\n  stroke-width: $ct-donut-width;\n}\n\n@mixin ct-chart-series-color($color) {\n  .#{$ct-class-point}, .#{$ct-class-line}, .#{$ct-class-bar}, .#{$ct-class-slice-donut} {\n    stroke: $color;\n  }\n\n  .#{$ct-class-slice-pie}, .#{$ct-class-slice-donut-solid}, .#{$ct-class-area} {\n    fill: $color;\n  }\n}\n\n@mixin ct-chart($ct-container-ratio: $ct-container-ratio, $ct-text-color: $ct-text-color, $ct-text-size: $ct-text-size, $ct-grid-color: $ct-grid-color, $ct-grid-width: $ct-grid-width, $ct-grid-dasharray: $ct-grid-dasharray, $ct-point-size: $ct-point-size, $ct-point-shape: $ct-point-shape, $ct-line-width: $ct-line-width, $ct-bar-width: $ct-bar-width, $ct-donut-width: $ct-donut-width, $ct-series-names: $ct-series-names, $ct-series-colors: $ct-series-colors) {\n\n  .#{$ct-class-label} {\n    @include ct-chart-label($ct-text-color, $ct-text-size);\n  }\n\n  .#{$ct-class-chart-line} .#{$ct-class-label},\n  .#{$ct-class-chart-bar} .#{$ct-class-label} {\n    @include ct-flex();\n  }\n\n  .#{$ct-class-chart-pie} .#{$ct-class-label},\n  .#{$ct-class-chart-donut} .#{$ct-class-label} {\n    dominant-baseline: central;\n  }\n\n  .#{$ct-class-label}.#{$ct-class-horizontal}.#{$ct-class-start} {\n    @include ct-align-justify(flex-end, flex-start);\n    // Fallback for browsers that don't support foreignObjects\n    text-anchor: start;\n  }\n\n  .#{$ct-class-label}.#{$ct-class-horizontal}.#{$ct-class-end} {\n    @include ct-align-justify(flex-start, flex-start);\n    // Fallback for browsers that don't support foreignObjects\n    text-anchor: start;\n  }\n\n  .#{$ct-class-label}.#{$ct-class-vertical}.#{$ct-class-start} {\n    @include ct-align-justify(flex-end, flex-end);\n    // Fallback for browsers that don't support foreignObjects\n    text-anchor: end;\n  }\n\n  .#{$ct-class-label}.#{$ct-class-vertical}.#{$ct-class-end} {\n    @include ct-align-justify(flex-end, flex-start);\n    // Fallback for browsers that don't support foreignObjects\n    text-anchor: start;\n  }\n\n  .#{$ct-class-chart-bar} .#{$ct-class-label}.#{$ct-class-horizontal}.#{$ct-class-start} {\n    @include ct-align-justify(flex-end, center);\n    // Fallback for browsers that don't support foreignObjects\n    text-anchor: start;\n  }\n\n  .#{$ct-class-chart-bar} .#{$ct-class-label}.#{$ct-class-horizontal}.#{$ct-class-end} {\n    @include ct-align-justify(flex-start, center);\n    // Fallback for browsers that don't support foreignObjects\n    text-anchor: start;\n  }\n\n  .#{$ct-class-chart-bar}.#{$ct-class-horizontal-bars} .#{$ct-class-label}.#{$ct-class-horizontal}.#{$ct-class-start} {\n    @include ct-align-justify(flex-end, flex-start);\n    // Fallback for browsers that don't support foreignObjects\n    text-anchor: start;\n  }\n\n  .#{$ct-class-chart-bar}.#{$ct-class-horizontal-bars} .#{$ct-class-label}.#{$ct-class-horizontal}.#{$ct-class-end} {\n    @include ct-align-justify(flex-start, flex-start);\n    // Fallback for browsers that don't support foreignObjects\n    text-anchor: start;\n  }\n\n  .#{$ct-class-chart-bar}.#{$ct-class-horizontal-bars} .#{$ct-class-label}.#{$ct-class-vertical}.#{$ct-class-start} {\n    //@include ct-chart-label($ct-text-color, $ct-text-size, center, $ct-vertical-text-justify);\n    @include ct-align-justify(center, flex-end);\n    // Fallback for browsers that don't support foreignObjects\n    text-anchor: end;\n  }\n\n  .#{$ct-class-chart-bar}.#{$ct-class-horizontal-bars} .#{$ct-class-label}.#{$ct-class-vertical}.#{$ct-class-end} {\n    @include ct-align-justify(center, flex-start);\n    // Fallback for browsers that don't support foreignObjects\n    text-anchor: end;\n  }\n\n  .#{$ct-class-grid} {\n    @include ct-chart-grid($ct-grid-color, $ct-grid-width, $ct-grid-dasharray);\n  }\n\n  .#{$ct-class-grid-background} {\n    fill: $ct-grid-background-fill;\n  }\n\n  .#{$ct-class-point} {\n    @include ct-chart-point($ct-point-size, $ct-point-shape);\n  }\n\n  .#{$ct-class-line} {\n    @include ct-chart-line($ct-line-width);\n  }\n\n  .#{$ct-class-area} {\n    @include ct-chart-area();\n  }\n\n  .#{$ct-class-bar} {\n    @include ct-chart-bar($ct-bar-width);\n  }\n\n  .#{$ct-class-slice-donut} {\n    @include ct-chart-donut($ct-donut-width);\n  }\n\n  @if $ct-include-colored-series {\n    @for $i from 0 to length($ct-series-names) {\n      .#{$ct-class-series}-#{nth($ct-series-names, $i + 1)} {\n        $color: nth($ct-series-colors, $i + 1);\n\n        @include ct-chart-series-color($color);\n      }\n    }\n  }\n}\n\n@if $ct-include-classes {\n  @include ct-chart();\n\n  @if $ct-include-alternative-responsive-containers {\n    @for $i from 0 to length($ct-scales-names) {\n      .#{nth($ct-scales-names, $i + 1)} {\n        @include ct-responsive-svg-container($ratio: nth($ct-scales, $i + 1));\n      }\n    }\n  }\n}\n","// Scales for responsive SVG containers\n$ct-scales: ((1), (15/16), (8/9), (5/6), (4/5), (3/4), (2/3), (5/8), (1/1.618), (3/5), (9/16), (8/15), (1/2), (2/5), (3/8), (1/3), (1/4)) !default;\n$ct-scales-names: (ct-square, ct-minor-second, ct-major-second, ct-minor-third, ct-major-third, ct-perfect-fourth, ct-perfect-fifth, ct-minor-sixth, ct-golden-section, ct-major-sixth, ct-minor-seventh, ct-major-seventh, ct-octave, ct-major-tenth, ct-major-eleventh, ct-major-twelfth, ct-double-octave) !default;\n\n// Class names to be used when generating CSS\n$ct-class-chart: ct-chart !default;\n$ct-class-chart-line: ct-chart-line !default;\n$ct-class-chart-bar: ct-chart-bar !default;\n$ct-class-horizontal-bars: ct-horizontal-bars !default;\n$ct-class-chart-pie: ct-chart-pie !default;\n$ct-class-chart-donut: ct-chart-donut !default;\n$ct-class-label: ct-label !default;\n$ct-class-series: ct-series !default;\n$ct-class-line: ct-line !default;\n$ct-class-point: ct-point !default;\n$ct-class-area: ct-area !default;\n$ct-class-bar: ct-bar !default;\n$ct-class-slice-pie: ct-slice-pie !default;\n$ct-class-slice-donut: ct-slice-donut !default;\n$ct-class-slice-donut-solid: ct-slice-donut-solid !default;\n$ct-class-grid: ct-grid !default;\n$ct-class-grid-background: ct-grid-background !default;\n$ct-class-vertical: ct-vertical !default;\n$ct-class-horizontal: ct-horizontal !default;\n$ct-class-start: ct-start !default;\n$ct-class-end: ct-end !default;\n\n// Container ratio\n$ct-container-ratio: (1/1.618) !default;\n\n// Text styles for labels\n$ct-text-color: rgba(0, 0, 0, 0.4) !default;\n$ct-text-size: 0.75rem !default;\n$ct-text-align: flex-start !default;\n$ct-text-justify: flex-start !default;\n$ct-text-line-height: 1;\n\n// Grid styles\n$ct-grid-color: rgba(0, 0, 0, 0.2) !default;\n$ct-grid-dasharray: 2px !default;\n$ct-grid-width: 1px !default;\n$ct-grid-background-fill: none !default;\n\n// Line chart properties\n$ct-line-width: 4px !default;\n$ct-line-dasharray: false !default;\n$ct-point-size: 10px !default;\n// Line chart point, can be either round or square\n$ct-point-shape: round !default;\n// Area fill transparency between 0 and 1\n$ct-area-opacity: 0.1 !default;\n\n// Bar chart bar width\n$ct-bar-width: 10px !default;\n\n// Donut width (If donut width is to big it can cause issues where the shape gets distorted)\n$ct-donut-width: 60px !default;\n\n// If set to true it will include the default classes and generate CSS output. If you're planning to use the mixins you\n// should set this property to false\n$ct-include-classes: true !default;\n\n// If this is set to true the CSS will contain colored series. You can extend or change the color with the\n// properties below\n$ct-include-colored-series: $ct-include-classes !default;\n\n// If set to true this will include all responsive container variations using the scales defined at the top of the script\n$ct-include-alternative-responsive-containers: $ct-include-classes !default;\n\n// Series names and colors. This can be extended or customized as desired. Just add more series and colors.\n$ct-series-names: (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) !default;\n$ct-series-colors: (\n  #d70206,\n  #f05b4f,\n  #f4c63d,\n  #d17905,\n  #453d3f,\n  #59922b,\n  #0544d3,\n  #6b0392,\n  #f05b4f,\n  #dda458,\n  #eacf7d,\n  #86797d,\n  #b2c326,\n  #6188e2,\n  #a748ca\n) !default;\n","@import \"variables\";\r\n\r\n$chart-tooltip-bg: mat-color($app-foreground, tooltip);\r\n\r\n.chartist-tooltip {\r\n  position: absolute;\r\n  display: inline-block;\r\n  opacity: 0;\r\n  min-width: 5em;\r\n  padding: .5em;\r\n  background: $chart-tooltip-bg;\r\n  color: #fff;\r\n  text-align: center;\r\n  pointer-events: none;\r\n  z-index: 1;\r\n  transition: opacity .2s linear;\r\n  border-radius: 4px;\r\n  font-size: 1.3rem;\r\n\r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 100%;\r\n    left: 50%;\r\n    width: 0;\r\n    height: 0;\r\n    margin-left: -15px;\r\n    border: 15px solid transparent;\r\n    border-top-color: $chart-tooltip-bg;\r\n  }\r\n\r\n  &.tooltip-show {\r\n    opacity: 1;\r\n  }\r\n\r\n  .chartist-tooltip-value {\r\n    font-weight: 500;\r\n  }\r\n}\r\n\r\n.ct-area, .ct-line {\r\n  pointer-events: none;\r\n}\r\n","@import \"variables\";\r\n\r\n$spacing: 10px;\r\n\r\nappearance {\r\n  .nav-item {\r\n    user-select: none;\r\n    cursor: pointer;\r\n    outline: 0;\r\n    border: 1px solid mat-color($app-foreground, divider);\r\n    -webkit-tap-highlight-color: transparent;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    display: flex;\r\n    text-decoration: none;\r\n    text-align: left;\r\n    align-items: center;\r\n    padding: 0 10px 0 15px;\r\n    margin-bottom: $spacing;\r\n    border-radius: 4px;\r\n    background-color: mat-color($app-background, card);\r\n    height: 57px;\r\n    width: 100%;\r\n    font-size: 1.5rem;\r\n    color: inherit;\r\n    text-transform: capitalize;\r\n\r\n    &:hover {\r\n      background-color: mat-color($app-accent, emphasis);\r\n    }\r\n\r\n    .mat-icon {\r\n      color: mat-color($app-foreground, icon);\r\n    }\r\n    \r\n    .text {\r\n      display: block;\r\n    }\r\n\r\n    .actions {\r\n      display: block;\r\n      margin-left: auto;\r\n    }\r\n  }\r\n\r\n  .input-container {\r\n    input, select, textarea {\r\n      background-color: mat-color($app-background, card);\r\n    }\r\n  }\r\n\r\n  .appearance-panel-content {\r\n    padding: $spacing;\r\n  }\r\n\r\n  .back-button {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 50px;\r\n    height: 100%;\r\n    color: mat-color($app-foreground, icon);\r\n    padding: 10px;\r\n    border-right: 1px solid mat-color($app-foreground, divider);\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      background-color: mat-color($app-accent, emphasis);\r\n    }\r\n\r\n    .mat-icon {\r\n      width: 30px;\r\n      height: 30px;\r\n    }\r\n  }\r\n}","@import \"variables\";\r\n\r\n.admin-pill-nav {\r\n  width: 250px;\r\n  flex-shrink: 0;\r\n  margin-right: 30px;\r\n\r\n  .nav-item {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 10px 15px;\r\n    cursor: pointer;\r\n    text-transform: capitalize;\r\n    white-space: nowrap;\r\n    margin-bottom: 5px;\r\n    color: mat-color($app-foreground, text);\r\n    position: relative;\r\n    border-left: 4px solid transparent;\r\n    border-radius: 4px;\r\n\r\n    &:hover {\r\n      background-color: mat-color($app-background, hover);\r\n    }\r\n\r\n    &.selected {\r\n      background-color: mat-color($app-accent, emphasis);\r\n      border-color: mat-color($app-accent, default);\r\n      font-weight: 500;\r\n    }\r\n  }\r\n\r\n  .name {\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n\r\n  .actions {\r\n    color: mat-color($app-foreground, icon);\r\n    margin-left: auto;\r\n  }\r\n\r\n  .mat-icon-button {\r\n    width: 30px;\r\n    height: 30px;\r\n    line-height: 30px;\r\n  }\r\n}\r\n\r\nbutton.admin-pill-nav-mobile-selector {\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  border-radius: 4px;\r\n  border: 1px solid mat-color($app-foreground, divider);\r\n  padding: 15px;\r\n  text-transform: capitalize;\r\n  background-color: mat-color($app-background, card);\r\n\r\n  .mat-icon {\r\n    margin-left: auto;\r\n  }\r\n}\r\n\r\n.admin-pill-nav-menu.mat-menu-panel {\r\n  min-width: 200px;\r\n\r\n  .mat-menu-item {\r\n    text-transform: capitalize;\r\n  }\r\n\r\n  .selected {\r\n    color: mat-color($app-accent, default);\r\n  }\r\n}\r\n","@import \"variables\";\r\n\r\n.be-dark-mode {\r\n  scrollbar-color: mat-color($app-foreground, divider) transparent;\r\n  scrollbar-width: thin;\r\n\r\n  * {\r\n    scrollbar-color: mat-color($app-foreground, divider) transparent;\r\n    scrollbar-width: thin;\r\n  }\r\n\r\n  // fix scrollbars on chrome\r\n  ::-webkit-scrollbar {\r\n    width: 8px;\r\n  }\r\n\r\n  ::-webkit-scrollbar-thumb {\r\n    background-color: mat-color($app-foreground, divider);\r\n    border-radius: 3px;\r\n  }\r\n\r\n  // make material slide toggle thumb darker\r\n  .mat-slide-toggle-thumb {\r\n    background-color: #bdbdbd;\r\n  }\r\n\r\n  // fix native select dropdown color\r\n  select, option {\r\n    background-color: mat-color($app-background, card);\r\n    color: mat-color($app-foreground, text);\r\n  }\r\n\r\n  // invert material snackbar colors\r\n  .mat-snack-bar-container {\r\n    background-color: #fafafa;\r\n    color: rgba(0,0,0,0.87);\r\n  }\r\n\r\n  .mat-simple-snackbar-action {\r\n    color: inherit;\r\n  }\r\n\r\n  // fix mat checkbox and pseudo checkbox disabled colors\r\n  .mat-pseudo-checkbox-disabled {\r\n    color: #686868;\r\n  }\r\n\r\n  .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled, .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled {\r\n    background-color: #686868;\r\n  }\r\n\r\n  .mat-checkbox-disabled {\r\n    &.mat-checkbox-checked,\r\n    &.mat-checkbox-indeterminate {\r\n      .mat-checkbox-background {\r\n        background-color: #686868;\r\n      }\r\n    }\r\n\r\n    &:not(.mat-checkbox-checked) {\r\n      .mat-checkbox-frame {\r\n        border-color: #686868;\r\n      }\r\n    }\r\n  }\r\n\r\n  // fix material button toggle checked color on disabled toggle\r\n  .mat-button-toggle-disabled.mat-button-toggle-checked {\r\n    background-color: #424242;\r\n  }\r\n\r\n  // material navbar should be dark as well instead of using primary color\r\n  material-navbar:not(.transparent) {\r\n    &.primary, &.accent {\r\n      background-color: mat-color($app-background, card);\r\n      border-bottom: 1px solid mat-color($app-foreground, divider-lighter);\r\n\r\n      .route-nav-item.active {\r\n        background-color: mat-color($app-accent, default);\r\n      }\r\n    }\r\n  }\r\n}\r\n",".cdk-drag-placeholder {\r\n  opacity: 0;\r\n}\r\n\r\n.cdk-drag-animating {\r\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\r\n}\r\n\r\n.cdk-drop-list-dragging .cdk-drag:not(.cdk-drag-placeholder) {\r\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\r\n}","@import \"variables\";\r\n\r\n.chart-wrapper {\r\n  flex: 1 1 auto;\r\n  margin-bottom: 25px;\r\n  border: $admin-card-border;\r\n  border-radius: 4px;\r\n  background-color: mat-color($app-background, card);\r\n\r\n  &:nth-child(1) {\r\n    margin-right: 25px;\r\n  }\r\n}\r\n\r\n.pie-wrapper {\r\n  max-width: 500px;\r\n}\r\n\r\n.chart-row {\r\n  display: flex;\r\n}\r\n\r\n@media only screen and (max-width: $large) {\r\n  .chart-row {\r\n    display: block;\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  .chart-wrapper {\r\n    margin-bottom: 10px;\r\n\r\n    &:nth-child(1) {\r\n      margin-right: 0;\r\n    }\r\n  }\r\n}\r\n",".mat-chip.mat-compact-chip {\r\n  padding: 4px 8px !important;\r\n  font-weight: 400;\r\n  font-size: 1.2rem;\r\n  min-height: 20px;\r\n  line-height: 20px;\r\n\r\n  .mat-chip-remove.mat-icon {\r\n    width: 14px;\r\n    height: 14px;\r\n    font-size: 14px;\r\n  }\r\n}\r\n","@import \"variables\";\r\n\r\n.context-menu {\r\n  width: 300px;\r\n  background-color: mat-color($app-background, dialog);\r\n  @include mat-elevation(4);\r\n  z-index: 10;\r\n  padding: 8px 0;\r\n  user-select: none;\r\n  border-radius: 4px;\r\n\r\n  .context-menu-item {\r\n    width: 100%;\r\n    background-color: inherit;\r\n    color: mat-color($app-foreground, text);\r\n    border: none;\r\n    font-size: 16px;\r\n    height: 48px;\r\n    padding: 0 16px;\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    outline: none;\r\n\r\n    &:not(:disabled) {\r\n      .mat-icon {\r\n        color: mat-color($app-foreground, secondary-text);\r\n      }\r\n\r\n      &:hover {\r\n        background-color: mat-color($app-background, hover);\r\n      }\r\n    }\r\n\r\n    &:disabled {\r\n      color: mat-color($app-foreground, hint-text);\r\n      cursor: default;\r\n    }\r\n\r\n    .mat-icon {\r\n      margin-right: 16px;\r\n    }\r\n\r\n    .alt-text {\r\n      margin-left: auto;\r\n      color: mat-color($app-foreground, secondary-text);\r\n      font-size: 14px;\r\n    }\r\n\r\n    .indent {\r\n      margin-left: 40px;\r\n    }\r\n  }\r\n\r\n  .separator {\r\n    background-color: rgba(0,0,0,0.11);\r\n    margin: 8px 0;\r\n    height: 1px;\r\n    max-height: 1px;\r\n    min-height: 1px;\r\n    width: 100%;\r\n  }\r\n}","@import \"variables\";\r\n\r\n.files-select-box {\r\n  position: absolute;\r\n  z-index: 999;\r\n  background-color: rgba(0,0,0,0.05);\r\n  border: 1px solid rgba(0,0,0,0.1);\r\n  width: 0;\r\n  height: 0;\r\n}","$fileColors: (\r\n  image: #f44336,\r\n  audio: #FF9800,\r\n  video: #f44336,\r\n  text: #2196F3,\r\n  default: #757575,\r\n  folder: #FBC02D,\r\n  shared-folder: #FBC02D,\r\n  archive: #FBC02D,\r\n  pdf: #f44336,\r\n  power-point: #f57f17,\r\n  word: #2196F3,\r\n  spreadsheet: #00897b,\r\n);\r\n\r\n.file-color {\r\n  color: map_get($fileColors, generic);\r\n}\r\n\r\n@each $type, $color in $fileColors {\r\n  .#{$type}-file {\r\n    color: $color;\r\n  }\r\n}",".toggle-expansion-icon {\r\n  cursor: default;\r\n  transform: rotate(-90deg);\r\n  transition: transform 100ms ease-out;\r\n  flex: 0 0 24px;\r\n\r\n  &.expanded {\r\n    transform: none;\r\n  }\r\n}"],"sourceRoot":"webpack:///"}