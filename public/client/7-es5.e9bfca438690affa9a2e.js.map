{"version":3,"sources":["node_modules/lodash/_listCacheHas.js","node_modules/lodash/_cloneArrayBuffer.js","node_modules/lodash/property.js","node_modules/lodash/_initCloneObject.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/autocomplete.js","node_modules/lodash/isSymbol.js","node_modules/lodash/isArguments.js","node_modules/lodash/_stackSet.js","src/common/core/ui/chips/chips.module.ts","node_modules/lodash/stubArray.js","node_modules/lodash/isSet.js","src/common/datatable/datatable.module.ts","node_modules/lodash/_SetCache.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/slide-toggle.js","node_modules/lodash/_baseIsNaN.js","node_modules/lodash/_coreJsData.js","src/common/shared/paginator.service.ts","src/common/datatable/utils/sort-datatable-data.ts","src/common/datatable/datatable.service.ts","src/common/datatable/utils/filter-datatable-data.ts","node_modules/lodash/_setCacheHas.js","node_modules/lodash/_toSource.js","node_modules/lodash/_basePropertyDeep.js","node_modules/lodash/memoize.js","node_modules/lodash/_Hash.js","node_modules/lodash/_hasPath.js","node_modules/lodash/_castPath.js","node_modules/lodash/_cloneBuffer.js","src/common/datatable/datatable-filters-panel/datatable-filters-panel.component.ts","src/common/datatable/datatable-filters-panel/datatable-filters-panel.component.html","src/common/uploads/validation/validations/allowed-extensions-validation.ts","src/common/uploads/formatted-file-size.pipe.ts","node_modules/lodash/_isPrototype.js","node_modules/lodash/_baseProperty.js","node_modules/lodash/_stackClear.js","node_modules/lodash/keys.js","node_modules/lodash/_nativeKeysIn.js","node_modules/lodash/_mapToArray.js","src/common/workspaces/workspace-config.ts","node_modules/lodash/_toKey.js","node_modules/lodash/_isKey.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/chips.js","node_modules/lodash/_baseKeys.js","node_modules/lodash/_getRawTag.js","node_modules/lodash/stubFalse.js","node_modules/lodash/cloneDeep.js","node_modules/lodash/_arrayPush.js","node_modules/lodash/_isStrictComparable.js","node_modules/lodash/_strictIndexOf.js","node_modules/lodash/_getNative.js","node_modules/lodash/isBuffer.js","node_modules/lodash/_baseAssignIn.js","src/common/uploads/directives/upload-button.directive.ts","node_modules/lodash/_isMasked.js","src/common/core/ui/overlay-panel/positions/left-position.ts","src/common/datatable/datatable-header/datatable-header.component.html","src/common/datatable/datatable-header/datatable-header.component.ts","node_modules/lodash/_copySymbolsIn.js","node_modules/lodash/_isKeyable.js","node_modules/lodash/isObjectLike.js","src/common/core/utils/remove-null-from-object.ts","node_modules/lodash/_getAllKeysIn.js","node_modules/lodash/_baseMatchesProperty.js","node_modules/lodash/_stringToPath.js","src/common/uploads/uploads.module.ts","node_modules/lodash/_baseIsMap.js","node_modules/lodash/isObject.js","node_modules/lodash/_mapCacheSet.js","node_modules/lodash/_equalByTag.js","node_modules/lodash/_Promise.js","node_modules/lodash/_hashDelete.js","node_modules/lodash/_memoizeCapped.js","src/common/core/ui/chips/chip-input/chip-input.component.ts","src/common/core/ui/chips/chip-input/chip-input.component.html","node_modules/lodash/_matchesStrictComparable.js","src/common/datatable/selection/table-header-checkbox.component.ts","node_modules/lodash/_Uint8Array.js","node_modules/lodash/_mapCacheGet.js","node_modules/lodash/_hashSet.js","node_modules/lodash/_baseIsArguments.js","node_modules/lodash/_baseHasIn.js","src/common/core/ui/skeleton/skeleton.component.ts","node_modules/lodash/_listCacheClear.js","node_modules/lodash/_objectToString.js","node_modules/lodash/_baseFindIndex.js","node_modules/lodash/_root.js","node_modules/lodash/_stackDelete.js","node_modules/lodash/_baseUniq.js","node_modules/lodash/_arrayFilter.js","node_modules/lodash/_getPrototype.js","node_modules/lodash/isArrayLike.js","node_modules/lodash/_assignValue.js","node_modules/lodash/_getSymbols.js","node_modules/lodash/_baseIsNative.js","src/common/core/utils/has-key.ts","node_modules/lodash/_getValue.js","node_modules/lodash/_baseGetTag.js","node_modules/lodash/_defineProperty.js","node_modules/lodash/_getMatchData.js","node_modules/lodash/_baseClone.js","node_modules/lodash/_WeakMap.js","src/common/uploads/validation/validations/blocked-extensions-validation.ts","node_modules/lodash/_copyArray.js","node_modules/lodash/_baseKeysIn.js","node_modules/lodash/_getMapData.js","node_modules/lodash/_arraySome.js","node_modules/lodash/_getTag.js","node_modules/lodash/_baseIndexOf.js","node_modules/lodash/_hashClear.js","src/common/datatable/columns/user-column/user-column.component.html","src/common/datatable/columns/user-column/user-column.component.ts","node_modules/lodash/_baseTimes.js","src/common/datatable/table-sort-header/table-sort-header.component.ts","src/common/datatable/table-sort-header/table-sort-header.component.html","node_modules/lodash/_nativeKeys.js","node_modules/lodash/_copySymbols.js","node_modules/lodash/_stackHas.js","src/common/workspaces/workspaces.service.ts","src/common/workspaces/types/workspace-invite-notif.ts","node_modules/lodash/_freeGlobal.js","node_modules/lodash/_baseAssign.js","node_modules/lodash/_cloneDataView.js","node_modules/rxjs/_esm2015/internal/operators/mapTo.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/sidenav.js","node_modules/lodash/_ListCache.js","node_modules/lodash/_arrayIncludesWith.js","node_modules/lodash/isEqual.js","node_modules/lodash/_nativeCreate.js","(webpack)/buildin/module.js","node_modules/lodash/isArray.js","node_modules/lodash/_listCacheSet.js","node_modules/lodash/_baseMatches.js","node_modules/lodash/_baseGet.js","node_modules/lodash/_listCacheDelete.js","node_modules/lodash/_cloneRegExp.js","node_modules/lodash/_arrayLikeKeys.js","src/common/datatable/datatable-header/datatable-header-search-input/datatable-header-search-input.component.ts","src/common/datatable/datatable-header/datatable-header-search-input/datatable-header-search-input.component.html","node_modules/lodash/isTypedArray.js","node_modules/lodash/_baseIsTypedArray.js","node_modules/lodash/_createSet.js","node_modules/lodash/_baseCreate.js","node_modules/lodash/toString.js","node_modules/lodash/_MapCache.js","node_modules/lodash/_baseIsEqualDeep.js","src/common/datatable/selection/table-body-checkbox.component.ts","node_modules/lodash/_arrayMap.js","node_modules/lodash/_Map.js","node_modules/lodash/_hashHas.js","node_modules/lodash/_mapCacheClear.js","node_modules/lodash/_baseGetAllKeys.js","node_modules/lodash/_Stack.js","node_modules/lodash/_setCacheAdd.js","node_modules/lodash/_stackGet.js","node_modules/lodash/_arrayEach.js","node_modules/rxjs/_esm2015/internal/operators/throttle.js","node_modules/rxjs/_esm2015/internal/operators/throttleTime.js","src/common/uploads/validation/default-upload-validator.ts","src/common/uploads/upload-queue/upload-queue.service.ts","src/common/uploads/upload-queue/upload-queue-item.ts","node_modules/lodash/hasIn.js","node_modules/lodash/_baseAssignValue.js","src/common/datatable/delete-resource-message.ts","node_modules/lodash/_arrayIncludes.js","node_modules/lodash/_copyObject.js","node_modules/lodash/_mapCacheDelete.js","node_modules/lodash/_overArg.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js","node_modules/lodash/isFunction.js","node_modules/lodash/eq.js","node_modules/lodash/_baseIsMatch.js","src/common/core/ui/skeleton/skeleton.module.ts","node_modules/lodash/keysIn.js","node_modules/lodash/_nodeUtil.js","node_modules/lodash/get.js","node_modules/lodash/_Symbol.js","node_modules/lodash/_getSymbolsIn.js","node_modules/lodash/_equalArrays.js","node_modules/lodash/_cloneSymbol.js","node_modules/lodash/_mapCacheHas.js","node_modules/lodash/uniqBy.js","node_modules/lodash/_getAllKeys.js","node_modules/lodash/_setToArray.js","src/common/uploads/upload-progress-bar/upload-progress-bar.component.ts","src/common/uploads/upload-progress-bar/upload-progress-bar.component.html","src/common/datatable/datatable-footer/datatable-footer.component.ts","src/common/datatable/datatable-footer/datatable-footer.component.html","node_modules/lodash/_baseUnary.js","src/common/core/ui/format-pipes/favicon.pipe.ts","src/common/core/utils/get-favicon-from-url.ts","node_modules/lodash/_equalObjects.js","node_modules/lodash/isLength.js","node_modules/lodash/_listCacheGet.js","node_modules/lodash/_DataView.js","node_modules/lodash/_hashGet.js","node_modules/lodash/_baseIteratee.js","node_modules/lodash/noop.js","src/app/drive/state/actions/events.ts","src/app/drive/drive-urls.service.ts","src/app/drive/drive-entry-api.service.ts","src/app/drive/folders/api/folders-api.service.ts","src/app/drive/uploads/drive-upload-validator.ts","src/app/drive/state/drive-state.ts","src/app/drive/files/components/file-icon/file-icon.component.ts","src/app/drive/state/actions/commands.ts","src/app/drive/state/models/drive-page.ts","src/app/drive/state/models/drive-state-model-defaults.ts","src/app/drive/state/models/drive-state-model.ts","src/app/drive/messages/loading-toast/loading-toast-messages.ts","src/app/drive/upload-input-config.ts","src/app/drive/folders/api/folders-api-routes.enum.ts","src/app/drive/sidebar/folders-tree/build-folder-tree.ts","src/app/drive/entries/supported-entry-types.ts","src/common/core/utils/kebab-case.ts","src/app/drive/files/components/file-icon/file-icon.component.html","src/app/drive/interactions/entry-drag-preview/entry-drag-preview.component.html","src/app/drive/interactions/entry-drag-preview/entry-drag-preview.component.ts","src/app/drive/sharing/state/share-dialog.state.ts","src/app/drive/sharing/shares-api.service.ts","src/app/drive/permissions/drive-entry-permissions.ts","src/app/drive/sharing/sharing-permissions-button/sharing-permissions-button.component.html","src/app/drive/sharing/sharing-permissions-button/sharing-permissions-button.component.ts","src/app/drive/sharing/entries-access-table/entries-access-table.component.html","src/app/drive/sharing/entries-access-table/entries-access-table.component.ts","src/app/drive/sharing/share-dialog/share-dialog.component.html","src/app/drive/sharing/share-dialog/share-dialog.component.ts","src/app/drive/sharing/links/shareable-links-api.service.ts","src/app/drive/sharing/links/share-link.state.ts","src/app/drive/sharing/links/link-options/link-options.component.html","src/app/drive/sharing/links/link-options/link-options.component.ts","src/app/drive/sharing/share-link-dialog/share-link-dialog.component.html","src/app/drive/sharing/share-link-dialog/share-link-dialog.component.ts","src/common/core/utils/share-link-socially.ts","src/app/drive/folders/components/crupdate-folder-dialog/crupdate-folder-dialog.component.html","src/app/drive/folders/components/crupdate-folder-dialog/crupdate-folder-dialog.component.ts","node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/tree.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/tree.js","src/app/drive/sidebar/folders-tree/folders-tree.service.ts","src/common/core/ui/context-menu/context-menu.directive.ts","src/common/core/ui/context-menu/context-menu.service.ts","src/app/drive/interactions/drop-targets/folder-drop-target.directive.ts","src/app/drive/interactions/drop-targets/base-drop-target.ts","src/common/core/ui/context-menu/available-context-menus.ts","src/common/core/ui/context-menu/context-menu-ref.ts","src/common/core/ui/context-menu/context-menu-data.ts","src/app/drive/sidebar/folders-tree/folders-tree.component.html","src/app/drive/sidebar/folders-tree/folders-tree.component.ts","src/app/drive/entries/move-entries-dialog/move-entries-dialog.component.ts","src/app/drive/entries/move-entries-dialog/move-entries-dialog.component.html","src/app/drive/entries/rename-entry-dialog/rename-entry-dialog.component.html","src/app/drive/entries/rename-entry-dialog/rename-entry-dialog.component.ts","src/app/drive/context-actions/actions/entry-actions.ts","src/app/drive/context-actions/drive-context-actions.ts","src/app/drive/context-actions/actions/folder-actions.ts","src/app/drive/context-actions/actions/trash-actions.ts","src/app/drive/context-actions/actions/shares-actions.ts","src/app/drive/context-actions/actions/trash-page-actions.ts","src/app/drive/interactions/drive-dom-cache.service.ts","src/app/drive/search/search-file-types.ts","src/common/core/types/pagination/pagination-response.ts","src/app/drive/search/main-searchbar/main-searchbar.component.html","src/app/drive/search/main-searchbar/main-searchbar.component.ts","src/app/drive/sidebar/sidebar-action-buttons/sidebar-action-buttons.component.ts","src/app/drive/sidebar/sidebar-action-buttons/sidebar-action-buttons.component.html","src/common/core/ui/skeleton/skeleton-animations.ts","src/app/drive/sidebar/available-space-indicator/available-space-indicator.component.html","src/app/drive/sidebar/available-space-indicator/available-space-indicator.component.ts","src/common/workspaces/workspace-selector/workspace-selector.component.html","src/common/workspaces/workspace-selector/workspace-selector.component.ts","src/app/drive/sidebar/sidebar.component.ts","src/app/drive/sidebar/sidebar.component.html","src/app/drive/details-sidebar/details-panel/entry-description-panel/entry-description-panel.component.html","src/app/drive/details-sidebar/details-panel/entry-description-panel/entry-description-panel.component.ts","src/app/drive/files/components/file-thumbnail/file-thumbnail.component.html","src/app/drive/files/components/file-thumbnail/file-thumbnail.component.ts","src/app/drive/details-sidebar/details-panel/details-panel.component.html","src/app/drive/details-sidebar/details-panel/details-panel.component.ts","src/app/drive/details-sidebar/details-sidebar.component.html","src/app/drive/details-sidebar/details-sidebar.component.ts","src/app/drive/interactions/drive-hammer-interactions.directive.ts","src/app/drive/interactions/drag-entry.service.ts","src/app/drive/interactions/files-drag-select.service.ts","src/app/drive/files/components/files-grid/files-grid-item/files-grid-item.component.ts","src/app/drive/interactions/toggle-selected-class.directive.ts","src/app/drive/files/components/files-grid/files-grid-item/files-grid-item.component.html","src/common/uploads/utils/read-uploaded-folders.ts","src/common/uploads/directives/upload-dropzone.directive.ts","src/app/drive/interactions/drive-infinite-scroll.directive.ts","src/common/core/ui/infinite-scroll/infinite.scroll.ts","src/app/drive/context-actions/components/drive-context-menu/drive-context-menu.component.ts","src/app/drive/context-actions/components/drive-context-menu/drive-context-menu.component.html","src/app/drive/drive-toolbar/entry-breadcrumbs/entry-breadcrumbs.component.html","src/app/drive/drive-toolbar/entry-breadcrumbs/entry-breadcrumbs.component.ts","src/app/drive/drive-toolbar/drive-toolbar.component.ts","src/app/drive/drive-toolbar/drive-toolbar.component.html","src/app/drive/entries/available-sorts.ts","src/app/drive/header/entries-sort-button/entries-sort-button.component.html","src/app/drive/header/entries-sort-button/entries-sort-button.component.ts","src/app/drive/context-actions/components/context-actions-container/context-actions-container.component.html","src/app/drive/context-actions/components/context-actions-container/context-actions-container.component.ts","src/app/drive/header/file-list-header/file-list-header.component.ts","src/app/drive/drive-toolbar/toolbar-actions/toolbar-actions.component.ts","src/app/drive/drive-toolbar/toolbar-actions/toolbar-actions.component.html","src/app/drive/header/file-list-header/file-list-header.component.html","src/app/drive/drive.component.html","src/app/drive/drive.component.ts","src/common/core/keybinds/keybinds.service.ts","src/common/core/keybinds/keycodes.enum.ts","src/app/drive/files/components/files-grid/files-grid.component.html","src/app/drive/files/components/files-grid/files-grid.component.ts","src/app/drive/files/components/files-list/files-list.component.html","src/app/drive/files/components/files-list/files-list.component.ts","src/app/drive/messages/no-search-entries/no-search-entries.component.ts","src/app/drive/sharing/no-shared-entries/no-shared-entries.component.ts","src/app/drive/messages/no-starred-entries/no-starred-entries.component.ts","src/app/drive/messages/no-trashed-entries/no-trashed-entries.component.ts","src/app/drive/messages/no-recent-entries/no-recent-entries.component.ts","src/app/drive/messages/no-folder-entries/no-folder-entries.component.ts","src/app/drive/uploads/upload-dropzone/upload-dropzone.component.ts","src/app/drive/messages/no-recent-entries/no-recent-entries.component.html","src/app/drive/messages/no-trashed-entries/no-trashed-entries.component.html","src/app/drive/messages/no-starred-entries/no-starred-entries.component.html","src/app/drive/sharing/no-shared-entries/no-shared-entries.component.html","src/app/drive/messages/no-search-entries/no-search-entries.component.html","src/app/drive/uploads/upload-dropzone/upload-dropzone.component.html","src/app/drive/messages/no-folder-entries/no-folder-entries.component.html","src/app/drive/entries/entries-container/entries-container.component.html","src/app/drive/entries/entries-container/entries-container.component.ts","src/common/file-preview/base-file-preview.ts","src/common/file-preview/current-preview-file.ts","src/common/file-preview/preview-url-transformer.ts","src/common/file-preview/default-preview/default-preview.component.html","src/common/file-preview/default-preview/default-preview.component.ts","src/common/file-preview/text-preview/text-preview.component.html","src/common/file-preview/text-preview/text-preview.component.ts","src/common/file-preview/audio-preview/audio-preview.component.html","src/common/file-preview/audio-preview/audio-preview.component.ts","src/common/file-preview/video-preview/video-preview.component.html","src/common/file-preview/video-preview/video-preview.component.ts","src/common/file-preview/image-preview/image-preview.component.ts","src/common/file-preview/pdf-preview/pdf-preview.component.ts","src/common/file-preview/image-preview/image-preview.component.html","src/common/file-preview/pdf-preview/pdf-preview.component.html","src/common/file-preview/google-docs-viewer/google-docs-viewer.component.html","src/common/file-preview/google-docs-viewer/google-docs-viewer.component.ts","src/common/file-preview/preview-files.service.ts","src/common/file-preview/available-previews.ts","src/app/drive/preview/link-preview-container/link-preview-password-panel/link-preview-password-panel.component.html","src/app/drive/preview/link-preview-container/link-preview-password-panel/link-preview-password-panel.component.ts","src/app/drive/preview/file-preview-overlay/file-preview-toolbar/file-preview-toolbar.component.html","src/app/drive/preview/file-preview-overlay/file-preview-toolbar/file-preview-toolbar.component.ts","src/common/file-preview/preview-container/preview-container.component.html","src/common/file-preview/preview-container/preview-container.component.ts","src/app/drive/preview/file-preview-overlay/file-preview-overlay.component.html","src/app/drive/preview/file-preview-overlay/file-preview-overlay.component.ts","src/app/drive/preview/folder-preview/folder-preview.component.html","src/app/drive/preview/folder-preview/folder-preview.component.ts","src/app/drive/preview/link-preview-container/link-preview-container.component.html","src/app/drive/preview/link-preview-container/link-preview-container.component.ts","src/app/drive/drive-routing.module.ts","node_modules/@angular/material/__ivy_ngcc__/fesm2015/progress-spinner.js","src/app/drive/context-actions/drive-context-menus.ts","src/app/drive/uploads/uploads-panel/uploads-panel-item/uploads-panel-item.component.html","src/app/drive/uploads/uploads-panel/uploads-panel-item/uploads-panel-item.component.ts","src/app/drive/uploads/uploads-panel/uploads-panel.component.html","src/app/drive/uploads/uploads-panel/uploads-panel.component.ts","src/app/drive/state/handlers/donwlod-handler.ts","src/app/drive/state/handlers/overlay-handler.ts","src/app/drive/state/handlers/toast-handler.ts","src/app/drive/messages/loading-toast/loading-toast.component.ts","src/app/drive/state/handlers/dialog-handler.ts","src/app/drive/state/handlers/upload-panel-handler.ts","src/app/drive/state/handlers/remove-star-handler.ts","src/app/drive/state/handlers/page-load-handler.ts","src/app/drive/state/handlers/page-change-handler.ts","src/app/drive/state/handlers/reset-scroll-handler.ts","src/app/drive/sharing/sharing.module.ts","src/common/core/ui/context-menu/context-menu.module.ts","src/common/file-preview/file-preview.module.ts","src/common/workspaces/workspace-selector/workspace-selector.module.ts","src/app/drive/drive.module.ts","src/common/uploads/utils/download-file-from-url.ts","src/app/drive/messages/loading-toast/loading-toast.component.html","node_modules/lodash/_baseIsSet.js","node_modules/lodash/_baseIsEqual.js","node_modules/lodash/_isIndex.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/tabs.js","node_modules/lodash/_initCloneByTag.js","node_modules/lodash/_cacheHas.js","node_modules/lodash/_assocIndexOf.js","node_modules/lodash/_Set.js","node_modules/lodash/_initCloneArray.js","node_modules/lodash/_cloneTypedArray.js","node_modules/lodash/isMap.js","node_modules/lodash/identity.js","node_modules/lodash/_baseToString.js"],"names":["assocIndexOf","module","exports","key","this","__data__","Uint8Array","arrayBuffer","result","constructor","byteLength","set","baseProperty","basePropertyDeep","isKey","toKey","path","baseCreate","getPrototype","isPrototype","object","_c0","MatAutocomplete_ng_template_0_Template","rf","ctx","ctx_r0","id","_classList","_c1","_uniqueAutocompleteIdCounter","MatAutocompleteSelectedEvent","source","option","_MatAutocompleteMixinBase","MatAutocompleteBase","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS","providedIn","factory","autoActiveFirstOption","_MatAutocompleteBase","_changeDetectorRef","_elementRef","defaults","super","_activeOptionChanges","EMPTY","showPanel","_isOpen","displayWith","optionSelected","opened","closed","optionActivated","_autoActiveFirstOption","_keyManager","options","withWrap","change","subscribe","index","emit","toArray","_setVisibility","unsubscribe","scrollTop","panel","nativeElement","length","_setVisibilityClasses","markForCheck","event","classList","_visibleClass","_hiddenClass","value","split","reduce","className","trim","ɵfac","t","ɵdir","type","viewQuery","_t","template","first","inputs","panelWidth","outputs","features","MatAutocomplete","arguments","ɵMatAutocomplete_BaseFactory","ɵcmp","selectors","contentQueries","dirIndex","optionGroups","hostAttrs","disableRipple","exportAs","provide","useExisting","ngContentSelectors","decls","vars","consts","directives","styles","encapsulation","changeDetection","_MatAutocompleteOriginBase","elementRef","MatAutocompleteOrigin","ɵMatAutocompleteOrigin_BaseFactory","MAT_AUTOCOMPLETE_SCROLL_STRATEGY","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","useFactory","overlay","scrollStrategies","reposition","MAT_AUTOCOMPLETE_VALUE_ACCESSOR","MatAutocompleteTrigger","multi","_MatAutocompleteTriggerBase","_element","_overlay","_viewContainerRef","_zone","scrollStrategy","_dir","_formField","_document","_viewportRuler","_componentDestroyed","_autocompleteDisabled","_manuallyFloatingLabel","_viewportSubscription","_canOpenOnNextFocus","_closeKeyEventStream","_windowBlurHandler","activeElement","panelOpen","_onChange","_onTouched","position","autocompleteAttribute","_overlayAttached","optionSelections","autocomplete","map","onSelectionChange","onStable","pipe","_scrollStrategy","window","_getWindow","runOutsideAngular","addEventListener","changes","_positionStrategy","_setStrategyPositions","_overlayRef","updatePosition","removeEventListener","_destroyPanel","complete","_attachOverlay","_floatLabel","_resetLabel","hasAttached","detach","_closingActionsSubscription","detectChanges","clickTarget","_isInsideShadowRoot","composedPath","target","formField","customOrigin","connectedTo","contains","overlayElement","Promise","resolve","then","_setTriggerValue","fn","isDisabled","disabled","keyCode","preventDefault","activeOption","_selectViaInteraction","_resetActiveItem","prevActiveItem","activeItem","isArrowKey","onKeydown","_canOpen","openPanel","_scrollToOption","activeItemIndex","parseFloat","_previousValue","shouldAnimate","floatLabel","_animateAndLockLabel","firstStable","optionChanges","reapplyLastPosition","wasOpen","panelClosingActions","_setValueAndClose","closePanel","dispose","toDisplay","inputValue","_control","_clearPreviousSelectedOption","focus","_emitSelectEvent","skip","forEach","selected","deselect","overlayRef","setOrigin","_getConnectedElement","updateSize","width","_getPanelWidth","_portal","create","_getOverlayConfig","keydownEvents","altKey","next","stopPropagation","attach","_subscribeToClosingActions","positionStrategy","_getOverlayPosition","direction","strategy","flexibleConnectedTo","withFlexibleDimensions","withPush","positions","belowPositions","originX","originY","overlayX","overlayY","panelClass","_aboveClass","abovePositions","withPositions","getConnectedOverlayOrigin","_getHostWidth","getBoundingClientRect","setActiveItem","element","readOnly","_a","defaultView","labelCount","_setScrollTop","_getHostElement","newScrollPosition","offsetTop","offsetHeight","_getScrollTop","tabOut","_getOutsideClickStream","detachments","autocompleteDisabled","ɵMatAutocompleteTrigger_BaseFactory","hostVars","hostBindings","_handleFocus","$event","_handleInput","_handleKeydown","toString","MatAutocompleteModule","ɵmod","ɵinj","providers","imports","baseGetTag","isObjectLike","baseIsArguments","objectProto","Object","prototype","hasOwnProperty","propertyIsEnumerable","isArguments","call","ListCache","Map","MapCache","data","pairs","LARGE_ARRAY_SIZE","push","size","ChipsModule","baseIsSet","baseUnary","nodeUtil","nodeIsSet","isSet","DatatableModule","setCacheAdd","setCacheHas","SetCache","values","add","has","_c2","_c3","enterDuration","_c4","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","disableToggleValue","nextUniqueId","MAT_SLIDE_TOGGLE_VALUE_ACCESSOR","MatSlideToggle","MatSlideToggleChange","checked","_MatSlideToggleMixinBase","_focusMonitor","tabIndex","_animationMode","_","_uniqueId","_required","_checked","name","labelPosition","ariaLabel","ariaLabelledby","toggleChange","parseInt","monitor","focusOrigin","_inputElement","stopMonitoring","_emitChangeEvent","focusVia","_thumbEl","_thumbBarEl","color","required","_onChangeEvent","_onInputClick","_onLabelTextChange","_r0","_r4","inputId","textContent","_MatSlideToggleRequiredValidatorModule","MatSlideToggleModule","root","Paginator","router","http","localStorage","params$","BehaviorSubject","paginatedOnce$","loading$","response$","dontUpdateQueryParams","perPageCacheKey","noResults$","r","pagination","initialData","userParams","url","queryParams","subscription","currentQueryParams","perPage","per_page","page","current_page","init","current","total","paginate","newPerPage","routerState","snapshot","uri","switchMap","params","firstPagination","get","of","tap","updateQueryParams","response","Array","isArray","join","navigate","replaceUrl","currentPage","last_page","sortingDataAccessor","sortHeaderId","numberValue","Number","DatatableService","modal","sort$","filters$","staticParams$","paginator","ignoreNextParamChange","originalData$","data$","selectedRows$","config","staticParams","connectToPaginator","mainSub","combineLatest","debounceTime","assign","entries","keys","applyLocalTransforms","paginatorSub","pairwise","prev","infiniteScroll","query","filter","obj","dataStr","objectToStr","currentTerm","toLowerCase","transformedFilter","indexOf","orderBy","orderDir","sort","a","b","valueA","valueB","valueAType","valueBType","comparatorResult","filters","cmp","open","beforeClosed","modifiedResource","reset","resource","replacements","afterClosed","confirmed","tableData","funcToString","Function","func","e","baseGet","memoize","resolver","TypeError","memoized","args","apply","cache","Cache","hashClear","hashDelete","hashGet","hashHas","hashSet","Hash","clear","entry","castPath","isIndex","isLength","hasFunc","stringToPath","freeExports","nodeType","freeModule","Buffer","allocUnsafe","buffer","isDeep","slice","copy","DatatableFiltersPanelComponent","overlayPanelRef","close","dialogContainer","AllowedExtensionsValidation","i18n","errorMessage","extensions","file","some","extension","FormattedFileSizePipe","precision","bytes","isNaN","String","isFinite","Ctor","arrayLikeKeys","baseKeys","isArrayLike","WORKSPACE_CONFIG","isSymbol","reIsDeepProp","reIsPlainProp","test","MAT_CHIP_REMOVE","MAT_CHIP_AVATAR","MAT_CHIP_TRAILING_ICON","_MatChipMixinBase","MatChip","_ngZone","platform","globalRippleOptions","animationMode","_hasFocus","chipListSelectable","_chipListMultiple","_chipListDisabled","_selected","_selectable","_disabled","_removable","_onFocus","_onBlur","selectionChange","destroyed","removed","_addHostClassName","_chipRippleTarget","document","createElement","appendChild","_chipRipple","setupTriggerEvents","rippleConfig","_animationsDisabled","hasAttribute","tagName","chip","_removeTriggerEvents","_dispatchSelectionChange","_markForCheck","isUserInput","removable","remove","selectable","toggleSelected","run","coercedValue","_value","avatar","trailingIcon","removeIcon","_handleClick","_blur","ariaSelected","MatChipRemove","_parentChip","nodeName","setAttribute","parentChip","MAT_CHIPS_DEFAULT_OPTIONS","_MatChipListMixinBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","MatChipListChange","MatChipList","controlType","_lastDestroyedChipIndex","_destroyed","_uid","_tabIndex","_userTabIndex","_multiple","_compareWith","o1","o2","ariaOrientation","valueChange","valueAccessor","chips","withVerticalOrientation","withHomeAndEnd","withHorizontalOrientation","dir","_allowFocusEscape","_syncChipsState","_resetChips","_initializeSelection","_updateTabIndex","_updateFocusForDestroyedChips","stateChanges","_selectionModel","multiple","undefined","updateErrorState","_dropSubscriptions","inputElement","_chipInput","ids","_ariaDescribedby","_setSelectionByValue","_originatesFromChip","focused","setFirstItemActive","_focusInput","_isInputEmpty","setLastItemActive","newChipIndex","Math","min","_clearSelection","currentValue","_selectValue","_sortValues","correspondingChip","find","selectViaInteraction","select","fallbackValue","valueToEmit","_hasFocusedChip","setTimeout","_markAsTouched","_listenToChipsFocus","_listenToChipsSelection","_listenToChipsRemoved","_chipFocusSubscription","_chipBlurSubscription","_chipSelectionSubscription","_chipRemoveSubscription","chipSelectionChanges","isSelected","_propagateChanges","chipFocusChanges","chipIndex","_isValidIndex","updateActiveItem","chipBlurChanges","chipRemoveChanges","currentElement","parentElement","empty","writeValue","placeholder","_placeholder","_keydown","role","errorState","compareWith","errorStateMatcher","nextUniqueId$1","MatChipInput","_defaultOptions","_addOnBlur","separatorKeyCodes","chipEnd","_chipList","_emitChipEnd","addOnBlur","_isSeparatorKey","input","Set","registerInput","_focus","_onInput","invalid","chipList","ɵ0","MatChipsModule","useValue","nativeKeys","Symbol","nativeObjectToString","symToStringTag","toStringTag","isOwn","tag","unmasked","baseClone","CLONE_DEEP_FLAG","array","offset","isObject","fromIndex","baseIsNative","getValue","stubFalse","isBuffer","copyObject","keysIn","UploadButtonDirective","el","filesSelected","files","uid","coreJsData","maskSrcKey","exec","IE_PROTO","LEFT_POSITION","offsetX","datatable","DatatableHeaderComponent","cd","overlayPanel","showSelectedActions","subscriptions","v","filterSub","filterPanelRef","changeSub","numberOfRowsSelected","s","offsetY","origin","filterButton","mobilePosition","filterPanelTemplate","maxWidth","getSymbolsIn","removeNullFromObject","baseGetAllKeys","baseIsEqual","hasIn","isStrictComparable","matchesStrictComparable","srcValue","objValue","COMPARE_PARTIAL_FLAG","memoizeCapped","rePropName","reEscapeChar","string","charCodeAt","replace","match","number","quote","subString","UploadsModule","getTag","getMapData","eq","equalArrays","mapToArray","setToArray","symbolProto","symbolValueOf","valueOf","other","bitmask","customizer","equalFunc","stack","byteOffset","message","convert","stacked","ChipInputComponent","emailsInput","selectMode","formControl","items$","suggestedValues$","suggestFn","bindToSearchControl","parseEmailsOnPaste","items","splice","propagateChange","propagate","matAutocomplete","isOpen","duplicate","findValueIndex","inputEl","setValue","findIndex","item","valueChanges","filtered","emails","clipboardData","getData","selection","getSelection","rangeCount","deleteFromDocument","email","addFromAutocomplete","TableHeaderCheckboxComponent","changeRef","allRowsSelected","toggleAllRows","nativeCreate","SkeletonComponent","theme","animation","variant","dark","isDarkMode","predicate","fromRight","freeGlobal","freeSelf","self","arrayIncludes","arrayIncludesWith","cacheHas","createSet","iteratee","comparator","includes","isCommon","seen","outer","computed","seenIndex","resIndex","getPrototypeOf","isFunction","baseAssignValue","arrayFilter","stubArray","nativeGetSymbols","getOwnPropertySymbols","symbol","isMasked","toSource","reIsHostCtor","reIsNative","RegExp","hasKey","val","getRawTag","objectToString","getNative","defineProperty","Stack","arrayEach","assignValue","baseAssign","baseAssignIn","cloneBuffer","copyArray","copySymbols","copySymbolsIn","getAllKeys","getAllKeysIn","initCloneArray","initCloneByTag","initCloneObject","isMap","cloneableTags","isFlat","isFull","isArr","isFunc","subValue","props","WeakMap","BlockedExtensionsValidation","nativeKeysIn","isProto","isKeyable","DataView","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","ctorString","baseFindIndex","baseIsNaN","strictIndexOf","UserColumnComponent","showEmail","n","TableSortHeaderComponent","datable","focusMonitor","arrowVisible","arrowDirection","columnName","sortSub","onMouseLeave","getDirection","disableSort","changeSort","getSymbols","WorkspacesService","PERSONAL_WORKSPACE","default","currentUser","cookie","notifications","toast","available$","activeId$","getIdFromCookie","activeWorkspace$","permission","member","is_owner","permissions","p","workspaceId","cookieName","workspace","w","workspaces","i","BASE_URI","payload","post","pushAndSelect","put","inviteId","userId","roleId","memberId","member_id","model_type","clickedOnNotification$","notification","action","err","handleWorkspaceInviteClickError","deleteInvite","notif","status","Default","global","cloneArrayBuffer","dataView","mapTo","lift","MapToOperator","subscriber","destination","x","Subscriber","MatDrawerContainer_div_0_Template","_r3","_onBackdropClicked","_isShowingBackdrop","MatDrawerContainer_mat_drawer_content_3_Template","MatSidenavContainer_div_0_Template","MatSidenavContainer_mat_sidenav_content_3_Template","MatSidenav","MatSidenavContent","MatDrawerContainer","MatDrawer","MatDrawerContent","MatSidenavContainer","MatSidenavModule","_c5","matDrawerAnimations","transformDrawer","MAT_DRAWER_DEFAULT_AUTOSIZE","MAT_DRAWER_CONTAINER","_container","scrollDispatcher","ngZone","_contentMarginChanges","_contentMargins","left","right","_focusTrapFactory","_platform","_doc","_elementFocusedBeforeDrawerWasOpened","_enableAnimations","_position","_mode","_disableClose","_opened","_animationStarted","Subject","_animationEnd","_animationState","openedChange","_openedStream","o","openedStart","fromState","toState","_closedStream","closedStart","onPositionChanged","_modeChanged","_takeFocus","_isFocusWithinDrawer","_restoreFocus","fromEvent","disableClose","takeUntil","distinctUntilChanged","y","autoFocus","_focusTrap","focusInitialElementWhenReady","hasMovedFocus","_openedVia","blur","activeEl","_updateFocusTrapState","isBrowser","destroy","openedVia","toggle","_setOpen","restoreFocus","take","offsetWidth","enabled","mode","_autoFocus","_animationStartListener","_animationDoneListener","viewportRuler","defaultAutosize","_drawers","backdropClick","_doCheckSubject","_validateDrawers","updateContentMargins","_autosize","_allDrawers","startWith","drawer","notifyOnChanges","_watchDrawerToggle","_watchDrawerPosition","_watchDrawerMode","_isDrawerOpen","_start","_end","_left","_getWidth","_right","_isPushed","_setContainerClass","onMicrotaskEmpty","merge","isAdd","_closeModalDrawersViaBackdrop","_canHaveBackdrop","_closeViaBackdropClick","_backdropOverride","_userContent","_content","autosize","hasBackdrop","changeDetectorRef","container","_fixedInViewport","_fixedTopGap","_fixedBottomGap","ɵMatSidenav_BaseFactory","fixedInViewport","fixedTopGap","fixedBottomGap","ɵMatSidenavContainer_BaseFactory","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","webpackPolyfill","deprecate","paths","children","enumerable","l","baseIsMatch","getMatchData","matchData","pop","reFlags","regexp","lastIndex","baseTimes","isTypedArray","inherited","isArg","isBuff","isType","skipIndexes","DatatableHeaderSearchInputComponent","route","searchControl","hideIcon","addFilter","baseIsTypedArray","nodeIsTypedArray","typedArrayTags","noop","objectCreate","proto","baseToString","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","equalByTag","equalObjects","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","TableBodyCheckboxComponent","isRowSelected","toggleRow","arrayPush","keysFunc","symbolsFunc","stackClear","stackDelete","stackGet","stackHas","stackSet","defaultThrottleConfig","leading","trailing","throttleTime","duration","scheduler","ThrottleTimeOperator","_hasTrailingValue","_trailingValue","throttled","schedule","dispatchNext","arg","clearThrottle","DefaultUploadValidator","UploadQueueService","queueId","canceled$","processing$","uploadedResponse$","ReplaySubject","progress$","percentage","error$","customData","uploadedFile","finalize","setProgress","eta","completed","DEFAULT_MAX_FILE_SIZE_MB","showToast","validations","maxSize","getMaxFileSize","allowedExtensions","getAllowedExtensions","blockedExtensions","getBlockedExtensions","settings","convertToBytes","getJson","api","defaultValidator","uploads$","totalProgress$","uploadsAdded$","count$","pending","queueItem","fileEntry","progress","upload","c","asObservable","validator","uploadQueueItems","transformUploads","concat","transformed","updateCount","from","u","mergeMap","uploadQueueItem","catchError","errResponse","handleUploadFailure","bubbleError","throwError","handleUploadEvent","willProcessFiles","COMPLETED","body","queueItemId","speed","totalBytes","completedBytes","updateTotalProgress","addError","cancel","activeUpload","validate","failed","PROGRESS","updateProgress","completeUpload","msg","errors","showLearnMoreButton","DefaultUpload","isAdmin","errorUpload","onAction","inProgress","baseHasIn","hasPath","DELETE_RESOURCE_MESSAGE","title","ok","baseIndexOf","isNew","newValue","transform","MatFormFieldControl","MAT_FORM_FIELD","MatFormFieldModule","noCustomizer","SkeletonModule","baseKeysIn","freeProcess","process","require","types","binding","defaultValue","arraySome","isPartial","arrLength","othLength","arrStacked","othStacked","arrValue","othValue","compared","othIndex","baseIteratee","baseUniq","UploadProgressBarComponent","uploadQueue","hidden","totalProgress","DatatableFooterComponent","hidePerPage","perPageControl","to","totalRecords","havePrevious","haveNext","emitEvent","changePerPage","previousPage","nextPage","FaviconPipe","location","protocol","host","URL","objProps","objLength","objStacked","skipCtor","objCtor","othCtor","baseMatches","baseMatchesProperty","identity","property","StarredPageOpened","SearchPageOpened","WorkspacesIndexPageOpened","TrashPageOpened","SharesFolderOpened","FolderPageOpened","RecentEntriesPageOpened","DriveUrlsService","DriveEntryApiService","FoldersApiService","DriveUploadValidator","DriveState","FileIconComponent","LoadUserFolders","LoadUserSpaceUsage","BuildFolderTree","folders","OpenFolder","folder","OpenSearchPage","SelectEntries","SelectAllEntries","DeselectAllEntries","DeleteSelectedEntries","OpenUploadsPanel","CloseUploadsPanel","AddEntries","MoveEntries","OpenDialog","dialog","OpenConfirmDialog","confirmAction","SetViewMode","ToggleDetailsSidebar","ToggleSidebar","UploadFiles","RestoreTrashedEntries","DeleteTrashedEntriesForever","EmptyTrash","OpenFilePreview","DownloadEntries","link","password","AddStar","RemoveStar","RemoveEntries","LoadMoreEntries","loadMore","ReloadPageEntries","CopySelectedEntries","OpenUploadWindow","ShowLoadingToast","HideLoadingToast","ResetState","UpdateEntries","SetCurrentUser","user","SetWorkspace","UpdateEntryDescription","description","DrivePage","viewName","folderHash","hasActions","sortColumn","sortDirection","RECENT_PAGE","recentOnly","SEARCH_PAGE","SHARES_PAGE","sharedOnly","TRASH_PAGE","deletedOnly","WORKSPACE_INDEX_PAGE","STARRED_PAGE","starredOnly","FolderPage","hash","EntriesSelectedViaDrag","EntrySelectedViaContextMenu","EntryTapped","ctrlKey","EntryDoubleTapped","FileDeleteSuccess","deletedFiles","EntryContextMenuOpened","NewFolderCreated","EntryRenamed","newName","StartedDragging","StoppedDragging","MoveEntriesSuccess","oldLocation","MoveEntriesFailed","messages","TrashedEntriesDeleteSuccess","TrashedEntriesRestoreSuccess","NotEnoughSpaceError","UserSpaceUsageChanged","BreakpointChanged","DRIVE_STATE_MODEL_DEFAULTS","isMobile","activePage","folderTree","flatFolders","userFoldersLoaded","selectedEntries","dragging","loading","uploadsPanelOpen","viewMode","detailsVisible","sidebarOpen","activeWorkspace","spaceUsage","available","used","meta","lastPage","LoadingToastMessages","DRIVE_UPLOAD_INPUT_CONFIG","FOLDERS_API_ROUTES","GET_ALL","CREATE","entryId","emptyTrash","entryIds","driveRoot","foldersApi","entriesApi","driveUrls","uploads","store","localStore","uploadInputConfig","getAllForCurrentUser","patchState","rootFolder","dispatch","getState","tree","hashTable","len","treeHash","parent_id","parent","oldState","newState","transformQueryParams","getEntriesForFolder","state","currentFolder","deleted_at","oldParams","selectSnapshot","alreadySelected","curr","entryDoubleTapped","selectedEntryIds","actions","selectedEntryParent","canMoveEntriesTo","moveEntries","currentEntries","newEntries","newSize","sum","file_size","enoughSpaceLeftToUpload","destinationId","start","httpParams","parentId","all_parents","newEntry","deleteForever","restoredEntries","restore","addStar","tags","removeStar","removeTag","count","copyEntries","directory","getSpaceUsage","mainEntries","updatedEntry","mainIndex","selectedIndex","update","setState","folderId","f","every","spaceUsed","spaceAvail","folderUser","users","owns_entry","entry_permissions","activeFolder","userHasPermission","edit","workspace_id","movingEntries","startsWith","cancelUncompleted","selectedEntry","selectedEntryOrActiveFolder","userSpaceUsed","userSpaceAvailable","SUPPORTED_ENTRY_TYPES","mime","text","EntryDragPreviewComponent","ShareDialogState","SharesApiService","DRIVE_ENTRY_FULL_PERMISSIONS","view","download","SetInitialUsers","UpdateUserPermissions","RemoveUser","SetUsers","ShareEntries","ShareEntriesFailed","sharesApi","all","uniqueUsers","varies","usersWithAccess","original","toggleUserLoading","changePermissions","updateUsers","detachUser","loadingUsers","shareEntries","updateEntriesInDriveStore","errorResponse","isLoading","newUsers","updatedEntries","SharingPermissionsButtonComponent","compact","updateUserPermissions","newPermissions","selectPermission","EntriesAccessTableComponent","ShareableLinksApiService","ShareDialogComponent","ShareLinkState","dialogRef","actions$","destroyed$","suggestUserEmails","getAll","resetModel","bindToShareError","bindToShareModel","shareModel","setErrorMessages","linkId","LoadShareableLink","UpdateShareableLink","CreateShareableLink","DeleteShareableLink","ToggleOptionsPanel","LinkCopySuccess","ResetShareLinkState","defaultState","optionsPanelVisible","backendErrors","linkOptions","allowDownload","allowEdit","expiresAt","linksApi","entry_id","cachedLink","findByEntryId","autoCreate","LinkOptionsComponent","form","date","time","passwordVisible","expirationVisible","bindToLinkChange","getPayload","link$","hydrateExpirationForm","expires_at","patchValue","allow_edit","allow_download","parts","substr","Date","toJSON","saveChanges","toggleOptionsPanel","ShareLinkDialogComponent","shareableLink$","bindToOptionsPanelToggle","focusInput","getBaseUrl","sub","optionsVisible","network","image","base","href","innerWidth","top","innerHeight","getElementById","height","padding","opacity","overflow","CrupdateFolderDialogComponent","CdkTreeNodeOutlet","CdkNestedTreeNode","CdkTreeNode","CdkTree","CdkTreeNodeDef","CdkTreeModule","CdkTreeNodeToggle","CdkTreeNodePadding","MatTreeNodeDef","MatTreeNode","MatTreeNodePadding","MatNestedTreeNode","MatTree","MatTreeNodeOutlet","MatTreeNodeToggle","MatTreeModule","FoldersTreeService","ContextMenuDirective","ContextMenu","FolderDropTargetDirective","BaseDropTarget","folderName","setErrors","confirm","FlatTreeControl","getLevel","isExpandable","trackBy","node","dataNode","results","dataNodes","expansionModel","_trackByValue","collapseDescendants","expandDescendants","toBeProcessed","getDescendants","CDK_TREE_NODE_OUTLET_NODE","viewContainer","_node","CdkTreeNodeOutletContext","$implicit","when","_differs","_onDestroy","_levels","viewChange","end","MAX_VALUE","_dataDiffer","_nodeOutlet","_dataSource","disconnect","dataSource","_dataSubscription","defaultNodeDefs","_nodeDefs","def","_defaultNodeDef","_observeRenderChanges","dataStream","connect","isObservable","renderNodeChanges","parentData","dataDiffer","diff","forEachOperation","adjustedPreviousIndex","currentIndex","previousIndex","insertNode","move","nodeData","_getNodeDef","context","level","treeControl","createEmbeddedView","mostRecentTreeNode","_switchDataSource","_tree","_dataChanges","_data","_setRoleFromData","isExpanded","childrenNodes","getChildren","updateChildrenNodes","nodeOutlet","_clear","outlet","_getNodeOutlet","_children","outlets","cssUnitPattern","_treeNode","_renderer","indentUnits","_indent","_setPadding","nodeLevel","_level","forceChange","_paddingIndent","_currentPadding","paddingProp","resetProp","style","indent","units","_setLevelInput","_setIndentInput","_recursive","recursive","toggleDescendants","_toggle","_MatTreeNodeMixinBase","ɵMatTreeNodeDef_BaseFactory","ngOnDestroy","ɵMatTreeNodePadding_BaseFactory","ɵMatTree_BaseFactory","ɵMatTreeNodeToggle_BaseFactory","transformFunction","resultNodes","parentMap","flatNode","_flattenChildren","child","childParentMap","_flattenNode","structuredData","nodes","currentExpand","expand","_treeControl","_treeFlattener","_flattenedData","_expandedData","collectionViewer","changed","expandFlattenedNodes","flattenNodes","createTreeFlattener","createTreeControl","createTreeDataSource","flattener","transformer","control","expandable","AVAILABLE_CONTEXT_MENUS","ContextMenuRef","attachments","backdropElement","CONTEXT_MENU_DATA","zone","injector","events","component","createOverlay","openContextMenu","portal","bindEventsToOverlay","removeLastOrigin","getMenuPositionStrategy","backdropClass","contextMenuElement","createOriginFromEvent","primary","lastOrigin","HTMLElement","EventTarget","clientY","clientX","contextMenu","_availableMenus","disableContextMenu","availableMenus","getMenuComponent","getMenuData","subs","onDragStart","onDragEnd","enter","onDragEnter","leave","onDragLeave","classes","canDrop","active","removeDragOverClass","executeAction","MoveEntriesDialogComponent","FoldersTreeComponent","expanded","showRootNode","folderSelected","selectedFolderId$","sub1","userFolders","fs","sub2","destination$","canMove$","failure","success","EntryActions","DriveContextActions","RenameEntryDialogComponent","FolderActions","TrashActions","SharesActions","TrashPageActions","DriveDomCacheService","entryName","updateStatus","multipleEntriesSelected","allStarred","allSelectedEntriesStarred","onlyFoldersSelected","getSelectedFolder","getSelectedEntries","icon","showInCompact","execute","visible","hasPermission","separatorBefore","openUploadWindow","noopTrue","shares","bodyBold","SEARCH_FILE_TYPES","EMPTY_PAGINATION_RESPONSE","MainSearchbarComponent","SidebarActionButtonsComponent","driveApi","defaultResults","results$","displayFn","lastQuery","setDefaultResults","q","search","content","openSearchPage","resetForm","closePanelAndBlur","getCurrentUserEntries","entryType","trigger","openUploadsPanel","openNewFolderDialog","canUpload","SKELETON_ANIMATIONS","AvailableSpaceIndicatorComponent","spaceUsedPercent","WorkspaceSelectorComponent","SidebarComponent","vcr","withCount","m","WorkspaceModule","components","crupdateModal","viewContainerRef","manageMembers","menuTrigger","closeMenu","urls","openFolder","EntryDescriptionPanelComponent","editingDescription$","savingDescription$","textArea","queryList","FileThumbnailComponent","thumbnail","separator","DetailsPanelComponent","owner$","DriveHammerInteractionsDirective","DragEntryService","FilesDragSelectService","FilesGridItemComponent","DetailsSidebarComponent","ToggleSelectedClassDirective","driveEntry","initial","cacheClientRects","createSelectBox","bindScroll","gridElements","getGridElements","hammerToRelative","scrollCont","selectBox","lastPanEvent","resizeBox","removeSelectBox","dispatchSelectedAction","unbindScroll","newPos","getNewSelectorPosition","scrollAndRepositionSelector","selectIntersectingElements","tmp","x1","y1","x2","y2","bottom","area","rectToRelative","filesContRect","edge","reachedAreaEdge","scrollBy","scrollDiff","scrollValue","abs","scrollHeight","applyPosition","selectedBoxRect","gridItem","rect","center","dataset","filesCont","scrollContRect","querySelectorAll","scrollListener","domCache","dragPreview","dragSelect","dragEntry","bindToHammer","hammerManager","enable","createHammerManager","onPanStart","onPan","onPanEnd","onTap","onDoubleTap","Hammer","Manager","Tap","pan","Pan","doubleTap","taps","recognizeWith","on","gridElement","getEntryEl","panService","getEntryByEl","en","entryEl","srcEvent","metaKey","closest","els","readDirRecursive","readEntriesRecursive","reader","allEntries","readEntries","createReader","childEntry","isDirectory","transformFileEntry","fullPath","DriveInfiniteScrollDirective","InfiniteScroll","UploadDropzoneDirective","DriveContextMenuComponent","disableDropzoneClick","disableDropzone","uploadConfig","filesDropped","handleDragEnter","handleDragOver","handleDragLeave","handleDrop","clickButton","handleClick","removeClassesFromDropzone","emitUploadEvent","dropzoneDisabled","dataTransfer","dropEffect","newEl","elementFromPoint","kind","webkitGetAsEntry","hasFiles","threshold","scrollSub","getScrollContainer","capture","passive","onScroll","canLoadMore","targetCanScroll","scrollY","documentElement","loadMoreItems","canLoadMoreEntries","DriveToolbarComponent","EntryBreadcrumbsComponent","breadcrumb","foldersLoaded","bindToActivePage","activePageSub","breadcrumbs","getRootBreadcrumb","folderPath","getBreadcrumbForFolder","allFolders","pathFolder","ROOT_FOLDER_PAGE","userOwnsActiveFolder","generateBreadCrumb","AVAILABLE_SORTS","EntriesSortButtonComponent","DEFAULT_VALUE","column","btnDisabled","availableSorts","ContextActionsContainerComponent","FileListHeaderComponent","ToolbarActionsComponent","hasMoreActions$","combined","setActions","moreActionsButton","getActions","setActionsForEntry","isOwner","userOwnsSelectedEntries","toggleViewMode","ToggleDetails","anythingSelected","detailsOpen","sortFormControl","DriveComponent","Keybinds","breakpoints","setViewMode","cacheDemoElements","observeBreakpointChanges","bindToWorkspace","getModel","model$","filesContainer","scrollContainer","observe","matches","sub3","bindToNotificationClick","toggleSidebar","uploadFiles","Keycodes","bindings","keybind","callback","parseKeybindString","keybindString","executeBindings","bindingMatches","toUpperCase","ctrl","shiftKey","shift","parsed","part","FilesGridComponent","disableInteractions","NoSearchEntriesComponent","NoSharedEntriesComponent","NoStarredEntriesComponent","NoTrashedEntriesComponent","NoRecentEntriesComponent","FilesListComponent","NoFolderEntriesComponent","UploadDropzoneComponent","EntriesContainerComponent","BaseFilePreview","keybinds","tabindex","keybindSub","listenOn","addWithPreventDefault","activePageName","entriesEmpty","CURRENT_PREVIEW_FILE","PREVIEW_URL_TRANSFORMER","sanitizer","filePreviewWrapper","bypassSecurityTrustResourceUrl","getSrc","responseType","DefaultPreviewComponent","TextPreviewComponent","content$","fileTooLarge$","loadFileContents","getContents","AudioPreviewComponent","invalidMedia","canPlayVideo","src","player","play","canPlayType","playerEl","VideoPreviewComponent","ImagePreviewComponent","PdfPreviewComponent","GoogleDocsViewerComponent","PreviewFilesService","DefaultPreviews","showDefaultPreview$","showDefaultPreview","iframe","onload","clearTimeout","timeoutRef","stopLoading","getIframeSrc","reject","previewUrl","preview_token","getFullPreviewUrl","encodeURIComponent","AVAILABLE_PREVIEWS","video","audio","pdf","spreadsheet","powerPoint","word","availablePreviews","previewUriTransformer","updateMeta","updatePortal","newPointer","oldPointer","pointer","getCurrent","createInjector","activeFile","injectionTokens","LinkPreviewPasswordPanelComponent","links","passwordControl","passwordError$","passwordValid","checkPassword","handlePasswordCheck","submitPassword","previewFiles","FilePreviewToolbarComponent","showLogo","disableDownload","showCloseButton","PreviewContainerComponent","downloadSub","comp","instance","FilePreviewOverlayComponent","bindToDownload","previewContainer","optionsButton","shareableLink","closeOverlay","FolderPreviewComponent","linkApi","breadcrumb$","pagination$","loadChildren","generateBreadcrumb","setPagination","folderChildren","ent","activeEntry","hideMoreOptionsBtn","getEntry","openPreviewOverlay","makeLinkHash","subFolder","replaceChildren","order","findByHash","withEntries","onClick","LinkPreviewContainerComponent","DriveRoutingModule","passwordPanelVisible$","linkChanged","setBackgroundClass","togglePasswordPanel","showPreview","importEntry","dashboardRoutes","canActivate","WorkspaceWrapperModule","forChild","MatProgressSpinner__svg_circle_1_Template","_spinnerAnimationLabel","_getStrokeDashOffset","_getStrokeCircumference","_getCircleStrokeWidth","_getCircleRadius","MatProgressSpinner__svg_circle_2_Template","ctx_r1","MatSpinner__svg_circle_1_Template","MatSpinner__svg_circle_2_Template","MatProgressSpinnerModule","MatSpinner","MatProgressSpinner","_MatProgressSpinnerMixinBase","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","diameter","_diameter","_fallbackAnimation","trackedDiameters","_diameters","_getSpinnerAnimationLabel","head","EDGE","TRIDENT","_noopAnimations","_forceAnimations","strokeWidth","_styleRoot","_attachStyleNode","viewBox","PI","styleRoot","currentDiameter","diameters","diametersForElement","styleTag","_getAnimationText","strokeCircumference","_strokeWidth","max","_getViewBox","DRIVE_CONTEXT_MENUS","UploadsPanelItemComponent","animationFrame","isEmpty","DownloadHandler","OverlayHandler","UploadsPanelComponent","ToastHandler","LoadingToastComponent","DialogHandler","UploadPanelHandler","RemoveStarHandler","PageLoadHandler","PageChangeHandler","ResetScrollHandler","SharingModule","ContextMenuModule","FilePreviewModule","WorkspaceSelectorModule","DriveModule","activeUploads","minimized$","toggleMinimized","getDownloadUrl","click","removeChild","hashes","getEntryHashes","entriesDeleted","entriesStarred","entriesUnstarred","entriesMoveFailed","folderCreated","entriesMoved","entriesDeletedForever","entriesRestoredFromTrash","entryRenamed","linkCopiedToClipboard","notEnoughSpace","loadingToast","oldName","toastRef","openComponent","dismiss","overlayConfig","closeUploadsPanel","uploadPanelRef","openConfirmDialog","scrollTo","urlAfterRedirects","isLoggedIn","getPageLoadAction","getPageUriParams","pageName","firstChild","useClass","STATE_HANDLERS","handler","ext","forFeature","baseIsEqualDeep","reIsUint","MatTab_ng_template_0_Template","MatTabBody_ng_template_2_Template","a0","animationDuration","a1","MatTabGroup_div_2_ng_template_2_ng_template_0_Template","MatTabGroup_div_2_ng_template_2_Template","tab_r4","templateLabel","MatTabGroup_div_2_ng_template_3_Template","textLabel","MatTabGroup_div_2_Template","_r12","i_r5","ctx_r11","_getTabLabelId","_getTabIndex","_tabs","_getTabContentId","MatTabGroup_mat_tab_body_5_Template","_r16","_removeTabBodyWrapperHeight","_setTabBodyWrapperHeight","tab_r13","i_r14","ctx_r3","_c6","_c7","_c8","_c9","_MAT_INK_BAR_POSITIONER","offsetLeft","MatInkBar","_inkBarPositioner","show","requestAnimationFrame","_setStyles","visibility","inkBar","MAT_TAB_CONTENT","MatTabContent","MAT_TAB_LABEL","MatTabLabel","ɵMatTabLabel_BaseFactory","_MatTabMixinBase","MatTabBase","MAT_TAB_GROUP","MatTab","_closestTabGroup","_contentPortal","_stateChanges","isActive","_explicitContent","_implicitContent","_templateLabel","_setTemplateLabelInput","matTabsAnimations","translateTab","minHeight","MatTabBodyPortal","componentFactoryResolver","_host","_centeringSub","_leavingSub","_beforeCentering","_isCenterPosition","isCentering","_afterLeavingCenter","MatTabBody","_MatTabBodyBase","_dirChangeSubscription","_translateTabComplete","_onCentering","_onCentered","_computePositionAnimationState","_computePositionFromOrigin","clientHeight","_getLayoutDirection","_positionIndex","_portalHost","_onTranslateTabStarted","MAT_TABS_CONFIG","nextId","MatTabChangeEvent","_MatTabGroupMixinBase","_MatTabGroupBase","defaultConfig","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_dynamicHeight","_selectedIndex","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","disablePagination","indexToSelect","_clampTabIndex","isFirstRun","_createChangeEvent","tab","_subscribeToAllTabChanges","_subscribeToTabLabels","tabs","_allTabs","_tabHeader","_alignInkBarToSelectedTab","tabHeight","wrapper","_tabBodyWrapper","tabHeader","focusIndex","idx","_animationDuration","_backgroundColor","backgroundColor","dynamicHeight","MatTabGroup","_focusChanged","MatTabHeader","MatTabLabelWrapper","_MatTabLabelWrapperMixinBase","MatTabLabelWrapperBase","passiveEventListenerOptions","MatPaginatedTabHeader","_scrollDistance","_selectedIndexChanged","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_stopScrolling","selectFocusedIndex","indexFocused","_stopInterval","_previousPaginator","_handlePaginatorPress","_nextPaginator","dirChange","resize","realign","updatePagination","_items","newFocusIndex","_setTabFocus","_tabLabelCount","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","_itemSelected","_currentTextContent","_checkPaginationEnabled","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","_tabList","round","_scrollTo","_scrollHeader","labelIndex","selectedLabel","viewLength","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","_getMaxScrollDistance","selectedItem","selectedLabelWrapper","_inkBar","alignToElement","hide","mouseEvent","button","maxScrollDistance","distance","_MatTabHeaderBase","_disableRipple","_handlePaginatorClick","_onContentChanges","_MatTabNavBase","updateActiveLink","MatTabNav","MatTabLink","attrs","_MatTabLinkMixinBase","MatTabLinkMixinBase","_MatTabLinkBase","_tabNavBar","_isActive","exitDuration","tabNavBar","_tabLinkRipple","MatTabsModule","cloneDataView","cloneRegExp","cloneSymbol","cloneTypedArray","typedArray","baseIsMap","nodeIsMap","arrayMap","symbolToString"],"mappings":"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","sourceRoot":"webpack:///","sourcesContent":["var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var Uint8Array = require('./_Uint8Array');\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nmodule.exports = cloneArrayBuffer;\n","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n","var baseCreate = require('./_baseCreate'),\n    getPrototype = require('./_getPrototype'),\n    isPrototype = require('./_isPrototype');\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nmodule.exports = initCloneObject;\n","import { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, EventEmitter, Directive, ChangeDetectorRef, ElementRef, Inject, ViewChild, TemplateRef, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, forwardRef, ViewContainerRef, NgZone, Optional, Host, NgModule } from '@angular/core';\nimport { mixinDisableRipple, MAT_OPTION_PARENT_COMPONENT, MAT_OPTGROUP, MatOption, MatOptionSelectionChange, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { Subscription, Subject, defer, merge, of, fromEvent } from 'rxjs';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ESCAPE, ENTER, UP_ARROW, DOWN_ARROW, TAB } from '@angular/cdk/keycodes';\nimport { _getShadowRoot } from '@angular/cdk/platform';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatFormField, MAT_FORM_FIELD } from '@angular/material/form-field';\nimport { take, switchMap, filter, map, tap, delay } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/cdk/overlay';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/cdk/scrolling';\nimport * as ɵngcc5 from '@angular/material/form-field';\n\nconst _c0 = [\"panel\"];\nfunction MatAutocomplete_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r0.id)(\"ngClass\", ctx_r0._classList);\n} }\nconst _c1 = [\"*\"];\nlet _uniqueAutocompleteIdCounter = 0;\n/** Event object that is emitted when an autocomplete option is selected. */\nclass MatAutocompleteSelectedEvent {\n    constructor(\n    /** Reference to the autocomplete panel that emitted the event. */\n    source, \n    /** Option that was selected. */\n    option) {\n        this.source = source;\n        this.option = option;\n    }\n}\n// Boilerplate for applying mixins to MatAutocomplete.\n/** @docs-private */\nclass MatAutocompleteBase {\n}\nconst _MatAutocompleteMixinBase = mixinDisableRipple(MatAutocompleteBase);\n/** Injection token to be used to override the default options for `mat-autocomplete`. */\nconst MAT_AUTOCOMPLETE_DEFAULT_OPTIONS = new InjectionToken('mat-autocomplete-default-options', {\n    providedIn: 'root',\n    factory: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY() {\n    return { autoActiveFirstOption: false };\n}\n/** Base class with all of the `MatAutocomplete` functionality. */\nclass _MatAutocompleteBase extends _MatAutocompleteMixinBase {\n    constructor(_changeDetectorRef, _elementRef, defaults) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._activeOptionChanges = Subscription.EMPTY;\n        /** Whether the autocomplete panel should be visible, depending on option length. */\n        this.showPanel = false;\n        this._isOpen = false;\n        /** Function that maps an option's control value to its display value in the trigger. */\n        this.displayWith = null;\n        /** Event that is emitted whenever an option from the list is selected. */\n        this.optionSelected = new EventEmitter();\n        /** Event that is emitted when the autocomplete panel is opened. */\n        this.opened = new EventEmitter();\n        /** Event that is emitted when the autocomplete panel is closed. */\n        this.closed = new EventEmitter();\n        /** Emits whenever an option is activated using the keyboard. */\n        this.optionActivated = new EventEmitter();\n        this._classList = {};\n        /** Unique ID to be used by autocomplete trigger's \"aria-owns\" property. */\n        this.id = `mat-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n        this._autoActiveFirstOption = !!defaults.autoActiveFirstOption;\n    }\n    /** Whether the autocomplete panel is open. */\n    get isOpen() { return this._isOpen && this.showPanel; }\n    /**\n     * Whether the first option should be highlighted when the autocomplete panel is opened.\n     * Can be configured globally through the `MAT_AUTOCOMPLETE_DEFAULT_OPTIONS` token.\n     */\n    get autoActiveFirstOption() { return this._autoActiveFirstOption; }\n    set autoActiveFirstOption(value) {\n        this._autoActiveFirstOption = coerceBooleanProperty(value);\n    }\n    /**\n     * Takes classes set on the host mat-autocomplete element and applies them to the panel\n     * inside the overlay container to allow for easy styling.\n     */\n    set classList(value) {\n        if (value && value.length) {\n            this._classList = value.split(' ').reduce((classList, className) => {\n                classList[className.trim()] = true;\n                return classList;\n            }, {});\n        }\n        else {\n            this._classList = {};\n        }\n        this._setVisibilityClasses(this._classList);\n        this._elementRef.nativeElement.className = '';\n    }\n    ngAfterContentInit() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap();\n        this._activeOptionChanges = this._keyManager.change.subscribe(index => {\n            this.optionActivated.emit({ source: this, option: this.options.toArray()[index] || null });\n        });\n        // Set the initial visibility state.\n        this._setVisibility();\n    }\n    ngOnDestroy() {\n        this._activeOptionChanges.unsubscribe();\n    }\n    /**\n     * Sets the panel scrollTop. This allows us to manually scroll to display options\n     * above or below the fold, as they are not actually being focused when active.\n     */\n    _setScrollTop(scrollTop) {\n        if (this.panel) {\n            this.panel.nativeElement.scrollTop = scrollTop;\n        }\n    }\n    /** Returns the panel's scrollTop. */\n    _getScrollTop() {\n        return this.panel ? this.panel.nativeElement.scrollTop : 0;\n    }\n    /** Panel should hide itself when the option list is empty. */\n    _setVisibility() {\n        this.showPanel = !!this.options.length;\n        this._setVisibilityClasses(this._classList);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits the `select` event. */\n    _emitSelectEvent(option) {\n        const event = new MatAutocompleteSelectedEvent(this, option);\n        this.optionSelected.emit(event);\n    }\n    /** Sets the autocomplete visibility classes on a classlist based on the panel is visible. */\n    _setVisibilityClasses(classList) {\n        classList[this._visibleClass] = this.showPanel;\n        classList[this._hiddenClass] = !this.showPanel;\n    }\n}\n_MatAutocompleteBase.ɵfac = function _MatAutocompleteBase_Factory(t) { return new (t || _MatAutocompleteBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS)); };\n_MatAutocompleteBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatAutocompleteBase, viewQuery: function _MatAutocompleteBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n    } }, inputs: { displayWith: \"displayWith\", autoActiveFirstOption: \"autoActiveFirstOption\", classList: [\"class\", \"classList\"], panelWidth: \"panelWidth\" }, outputs: { optionSelected: \"optionSelected\", opened: \"opened\", closed: \"closed\", optionActivated: \"optionActivated\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatAutocompleteBase.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS,] }] }\n];\n_MatAutocompleteBase.propDecorators = {\n    template: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    displayWith: [{ type: Input }],\n    autoActiveFirstOption: [{ type: Input }],\n    panelWidth: [{ type: Input }],\n    optionSelected: [{ type: Output }],\n    opened: [{ type: Output }],\n    closed: [{ type: Output }],\n    optionActivated: [{ type: Output }],\n    classList: [{ type: Input, args: ['class',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatAutocompleteBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n            }] }]; }, { displayWith: [{\n            type: Input\n        }], optionSelected: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], closed: [{\n            type: Output\n        }], optionActivated: [{\n            type: Output\n        }], autoActiveFirstOption: [{\n            type: Input\n        }], classList: [{\n            type: Input,\n            args: ['class']\n        }], template: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], panelWidth: [{\n            type: Input\n        }] }); })();\nclass MatAutocomplete extends _MatAutocompleteBase {\n    constructor() {\n        super(...arguments);\n        this._visibleClass = 'mat-autocomplete-visible';\n        this._hiddenClass = 'mat-autocomplete-hidden';\n    }\n}\nMatAutocomplete.ɵfac = function MatAutocomplete_Factory(t) { return ɵMatAutocomplete_BaseFactory(t || MatAutocomplete); };\nMatAutocomplete.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatAutocomplete, selectors: [[\"mat-autocomplete\"]], contentQueries: function MatAutocomplete_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_OPTGROUP, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n    } }, hostAttrs: [1, \"mat-autocomplete\"], inputs: { disableRipple: \"disableRipple\" }, exportAs: [\"matAutocomplete\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[\"role\", \"listbox\", 1, \"mat-autocomplete-panel\", 3, \"id\", \"ngClass\"], [\"panel\", \"\"]], template: function MatAutocomplete_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatAutocomplete_ng_template_0_Template, 3, 2, \"ng-template\");\n    } }, directives: [ɵngcc1.NgClass], styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatAutocomplete.propDecorators = {\n    optionGroups: [{ type: ContentChildren, args: [MAT_OPTGROUP, { descendants: true },] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }]\n};\nconst ɵMatAutocomplete_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatAutocomplete);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocomplete, [{\n        type: Component,\n        args: [{\n                selector: 'mat-autocomplete',\n                template: \"<ng-template>\\n  <div class=\\\"mat-autocomplete-panel\\\" role=\\\"listbox\\\" [id]=\\\"id\\\" [ngClass]=\\\"_classList\\\" #panel>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                exportAs: 'matAutocomplete',\n                inputs: ['disableRipple'],\n                host: {\n                    'class': 'mat-autocomplete'\n                },\n                providers: [\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n                ],\n                styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}\\n\"]\n            }]\n    }], null, { optionGroups: [{\n            type: ContentChildren,\n            args: [MAT_OPTGROUP, { descendants: true }]\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Base class containing all of the functionality for `MatAutocompleteOrigin`. */\nclass _MatAutocompleteOriginBase {\n    constructor(\n    /** Reference to the element on which the directive is applied. */\n    elementRef) {\n        this.elementRef = elementRef;\n    }\n}\n_MatAutocompleteOriginBase.ɵfac = function _MatAutocompleteOriginBase_Factory(t) { return new (t || _MatAutocompleteOriginBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\n_MatAutocompleteOriginBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatAutocompleteOriginBase });\n_MatAutocompleteOriginBase.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatAutocompleteOriginBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n */\nclass MatAutocompleteOrigin extends _MatAutocompleteOriginBase {\n}\nMatAutocompleteOrigin.ɵfac = function MatAutocompleteOrigin_Factory(t) { return ɵMatAutocompleteOrigin_BaseFactory(t || MatAutocompleteOrigin); };\nMatAutocompleteOrigin.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteOrigin, selectors: [[\"\", \"matAutocompleteOrigin\", \"\"]], exportAs: [\"matAutocompleteOrigin\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatAutocompleteOrigin_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatAutocompleteOrigin);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[matAutocompleteOrigin]',\n                exportAs: 'matAutocompleteOrigin'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the scrollTop of the panel. Because we are not\n * actually focusing the active item, scroll must be handled manually.\n */\n/**\n * The height of each autocomplete option.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 11.0.0\n */\nconst AUTOCOMPLETE_OPTION_HEIGHT = 48;\n/**\n * The total height of the autocomplete panel.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 11.0.0\n */\nconst AUTOCOMPLETE_PANEL_HEIGHT = 256;\n/** Injection token that determines the scroll handling while the autocomplete panel is open. */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY = new InjectionToken('mat-autocomplete-scroll-strategy');\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatAutocompleteTrigger),\n    multi: true\n};\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * @docs-private\n */\nfunction getMatAutocompleteMissingPanelError() {\n    return Error('Attempting to open an undefined instance of `mat-autocomplete`. ' +\n        'Make sure that the id passed to the `matAutocomplete` is correct and that ' +\n        'you\\'re attempting to open it after the ngAfterContentInit hook.');\n}\n/** Base class with all of the `MatAutocompleteTrigger` functionality. */\nclass _MatAutocompleteTriggerBase {\n    constructor(_element, _overlay, _viewContainerRef, _zone, _changeDetectorRef, scrollStrategy, _dir, _formField, _document, _viewportRuler) {\n        this._element = _element;\n        this._overlay = _overlay;\n        this._viewContainerRef = _viewContainerRef;\n        this._zone = _zone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._formField = _formField;\n        this._document = _document;\n        this._viewportRuler = _viewportRuler;\n        this._componentDestroyed = false;\n        this._autocompleteDisabled = false;\n        /** Whether or not the label state is being overridden. */\n        this._manuallyFloatingLabel = false;\n        /** Subscription to viewport size changes. */\n        this._viewportSubscription = Subscription.EMPTY;\n        /**\n         * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n         * closed autocomplete from being reopened if the user switches to another browser tab and then\n         * comes back.\n         */\n        this._canOpenOnNextFocus = true;\n        /** Stream of keyboard events that can close the panel. */\n        this._closeKeyEventStream = new Subject();\n        /**\n         * Event handler for when the window is blurred. Needs to be an\n         * arrow function in order to preserve the context.\n         */\n        this._windowBlurHandler = () => {\n            // If the user blurred the window while the autocomplete is focused, it means that it'll be\n            // refocused when they come back. In this case we want to skip the first focus event, if the\n            // pane was closed, in order to avoid reopening it unintentionally.\n            this._canOpenOnNextFocus =\n                this._document.activeElement !== this._element.nativeElement || this.panelOpen;\n        };\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when autocomplete has been touched` */\n        this._onTouched = () => { };\n        /**\n         * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n         * will render the panel underneath the trigger if there is enough space for it to fit in\n         * the viewport, otherwise the panel will be shown above it. If the position is set to\n         * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n         * whether it fits completely in the viewport.\n         */\n        this.position = 'auto';\n        /**\n         * `autocomplete` attribute to be set on the input element.\n         * @docs-private\n         */\n        this.autocompleteAttribute = 'off';\n        this._overlayAttached = false;\n        /** Stream of autocomplete option selections. */\n        this.optionSelections = defer(() => {\n            if (this.autocomplete && this.autocomplete.options) {\n                return merge(...this.autocomplete.options.map(option => option.onSelectionChange));\n            }\n            // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n            // Return a stream that we'll replace with the real one once everything is in place.\n            return this._zone.onStable\n                .pipe(take(1), switchMap(() => this.optionSelections));\n        });\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * Whether the autocomplete is disabled. When disabled, the element will\n     * act as a regular input and the user won't be able to open the panel.\n     */\n    get autocompleteDisabled() { return this._autocompleteDisabled; }\n    set autocompleteDisabled(value) {\n        this._autocompleteDisabled = coerceBooleanProperty(value);\n    }\n    ngAfterViewInit() {\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            this._zone.runOutsideAngular(() => window.addEventListener('blur', this._windowBlurHandler));\n        }\n    }\n    ngOnChanges(changes) {\n        if (changes['position'] && this._positionStrategy) {\n            this._setStrategyPositions(this._positionStrategy);\n            if (this.panelOpen) {\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    ngOnDestroy() {\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('blur', this._windowBlurHandler);\n        }\n        this._viewportSubscription.unsubscribe();\n        this._componentDestroyed = true;\n        this._destroyPanel();\n        this._closeKeyEventStream.complete();\n    }\n    /** Whether or not the autocomplete panel is open. */\n    get panelOpen() {\n        return this._overlayAttached && this.autocomplete.showPanel;\n    }\n    /** Opens the autocomplete suggestion panel. */\n    openPanel() {\n        this._attachOverlay();\n        this._floatLabel();\n    }\n    /** Closes the autocomplete suggestion panel. */\n    closePanel() {\n        this._resetLabel();\n        if (!this._overlayAttached) {\n            return;\n        }\n        if (this.panelOpen) {\n            // Only emit if the panel was visible.\n            this.autocomplete.closed.emit();\n        }\n        this.autocomplete._isOpen = this._overlayAttached = false;\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n            this._closingActionsSubscription.unsubscribe();\n        }\n        // Note that in some cases this can end up being called after the component is destroyed.\n        // Add a check to ensure that we don't try to run change detection on a destroyed view.\n        if (!this._componentDestroyed) {\n            // We need to trigger change detection manually, because\n            // `fromEvent` doesn't seem to do it at the proper time.\n            // This ensures that the label is reset when the\n            // user clicks outside.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * Updates the position of the autocomplete suggestion panel to ensure that it fits all options\n     * within the viewport.\n     */\n    updatePosition() {\n        if (this._overlayAttached) {\n            this._overlayRef.updatePosition();\n        }\n    }\n    /**\n     * A stream of actions that should close the autocomplete panel, including\n     * when an option is selected, on blur, and when TAB is pressed.\n     */\n    get panelClosingActions() {\n        return merge(this.optionSelections, this.autocomplete._keyManager.tabOut.pipe(filter(() => this._overlayAttached)), this._closeKeyEventStream, this._getOutsideClickStream(), this._overlayRef ?\n            this._overlayRef.detachments().pipe(filter(() => this._overlayAttached)) :\n            of()).pipe(\n        // Normalize the output so we return a consistent type.\n        map(event => event instanceof MatOptionSelectionChange ? event : null));\n    }\n    /** The currently active option, coerced to MatOption type. */\n    get activeOption() {\n        if (this.autocomplete && this.autocomplete._keyManager) {\n            return this.autocomplete._keyManager.activeItem;\n        }\n        return null;\n    }\n    /** Stream of clicks outside of the autocomplete panel. */\n    _getOutsideClickStream() {\n        return merge(fromEvent(this._document, 'click'), fromEvent(this._document, 'touchend'))\n            .pipe(filter(event => {\n            // If we're in the Shadow DOM, the event target will be the shadow root, so we have to\n            // fall back to check the first element in the path of the click event.\n            const clickTarget = (this._isInsideShadowRoot && event.composedPath ? event.composedPath()[0] :\n                event.target);\n            const formField = this._formField ? this._formField._elementRef.nativeElement : null;\n            const customOrigin = this.connectedTo ? this.connectedTo.elementRef.nativeElement : null;\n            return this._overlayAttached && clickTarget !== this._element.nativeElement &&\n                (!formField || !formField.contains(clickTarget)) &&\n                (!customOrigin || !customOrigin.contains(clickTarget)) &&\n                (!!this._overlayRef && !this._overlayRef.overlayElement.contains(clickTarget));\n        }));\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        Promise.resolve(null).then(() => this._setTriggerValue(value));\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this._element.nativeElement.disabled = isDisabled;\n    }\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        // Prevent the default action on all escape key presses. This is here primarily to bring IE\n        // in line with other browsers. By default, pressing escape on IE will cause it to revert\n        // the input value to the one that it had on focus, however it won't dispatch any events\n        // which means that the model value will be out of sync with the view.\n        if (keyCode === ESCAPE) {\n            event.preventDefault();\n        }\n        if (this.activeOption && keyCode === ENTER && this.panelOpen) {\n            this.activeOption._selectViaInteraction();\n            this._resetActiveItem();\n            event.preventDefault();\n        }\n        else if (this.autocomplete) {\n            const prevActiveItem = this.autocomplete._keyManager.activeItem;\n            const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n            if (this.panelOpen || keyCode === TAB) {\n                this.autocomplete._keyManager.onKeydown(event);\n            }\n            else if (isArrowKey && this._canOpen()) {\n                this.openPanel();\n            }\n            if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n                this._scrollToOption(this.autocomplete._keyManager.activeItemIndex || 0);\n            }\n        }\n    }\n    _handleInput(event) {\n        let target = event.target;\n        let value = target.value;\n        // Based on `NumberValueAccessor` from forms.\n        if (target.type === 'number') {\n            value = value == '' ? null : parseFloat(value);\n        }\n        // If the input has a placeholder, IE will fire the `input` event on page load,\n        // focus and blur, in addition to when the user actually changed the value. To\n        // filter out all of the extra events, we save the value on focus and between\n        // `input` events, and we check whether it changed.\n        // See: https://connect.microsoft.com/IE/feedback/details/885747/\n        if (this._previousValue !== value) {\n            this._previousValue = value;\n            this._onChange(value);\n            if (this._canOpen() && this._document.activeElement === event.target) {\n                this.openPanel();\n            }\n        }\n    }\n    _handleFocus() {\n        if (!this._canOpenOnNextFocus) {\n            this._canOpenOnNextFocus = true;\n        }\n        else if (this._canOpen()) {\n            this._previousValue = this._element.nativeElement.value;\n            this._attachOverlay();\n            this._floatLabel(true);\n        }\n    }\n    /**\n     * In \"auto\" mode, the label will animate down as soon as focus is lost.\n     * This causes the value to jump when selecting an option with the mouse.\n     * This method manually floats the label until the panel can be closed.\n     * @param shouldAnimate Whether the label should be animated when it is floated.\n     */\n    _floatLabel(shouldAnimate = false) {\n        if (this._formField && this._formField.floatLabel === 'auto') {\n            if (shouldAnimate) {\n                this._formField._animateAndLockLabel();\n            }\n            else {\n                this._formField.floatLabel = 'always';\n            }\n            this._manuallyFloatingLabel = true;\n        }\n    }\n    /** If the label has been manually elevated, return it to its normal state. */\n    _resetLabel() {\n        if (this._manuallyFloatingLabel) {\n            this._formField.floatLabel = 'auto';\n            this._manuallyFloatingLabel = false;\n        }\n    }\n    /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     */\n    _subscribeToClosingActions() {\n        const firstStable = this._zone.onStable.pipe(take(1));\n        const optionChanges = this.autocomplete.options.changes.pipe(tap(() => this._positionStrategy.reapplyLastPosition()), \n        // Defer emitting to the stream until the next tick, because changing\n        // bindings in here will cause \"changed after checked\" errors.\n        delay(0));\n        // When the zone is stable initially, and when the option list changes...\n        return merge(firstStable, optionChanges)\n            .pipe(\n        // create a new stream of panelClosingActions, replacing any previous streams\n        // that were created, and flatten it so our stream only emits closing events...\n        switchMap(() => {\n            const wasOpen = this.panelOpen;\n            this._resetActiveItem();\n            this.autocomplete._setVisibility();\n            if (this.panelOpen) {\n                this._overlayRef.updatePosition();\n                // If the `panelOpen` state changed, we need to make sure to emit the `opened`\n                // event, because we may not have emitted it when the panel was attached. This\n                // can happen if the users opens the panel and there are no options, but the\n                // options come in slightly later or as a result of the value changing.\n                if (wasOpen !== this.panelOpen) {\n                    this.autocomplete.opened.emit();\n                }\n            }\n            return this.panelClosingActions;\n        }), \n        // when the first closing event occurs...\n        take(1))\n            // set the value, close the panel, and complete.\n            .subscribe(event => this._setValueAndClose(event));\n    }\n    /** Destroys the autocomplete suggestion panel. */\n    _destroyPanel() {\n        if (this._overlayRef) {\n            this.closePanel();\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n    }\n    _setTriggerValue(value) {\n        const toDisplay = this.autocomplete && this.autocomplete.displayWith ?\n            this.autocomplete.displayWith(value) :\n            value;\n        // Simply falling back to an empty string if the display value is falsy does not work properly.\n        // The display value can also be the number zero and shouldn't fall back to an empty string.\n        const inputValue = toDisplay != null ? toDisplay : '';\n        // If it's used within a `MatFormField`, we should set it through the property so it can go\n        // through change detection.\n        if (this._formField) {\n            this._formField._control.value = inputValue;\n        }\n        else {\n            this._element.nativeElement.value = inputValue;\n        }\n        this._previousValue = inputValue;\n    }\n    /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     */\n    _setValueAndClose(event) {\n        if (event && event.source) {\n            this._clearPreviousSelectedOption(event.source);\n            this._setTriggerValue(event.source.value);\n            this._onChange(event.source.value);\n            this._element.nativeElement.focus();\n            this.autocomplete._emitSelectEvent(event.source);\n        }\n        this.closePanel();\n    }\n    /**\n     * Clear any previous selected option and emit a selection change event for this option\n     */\n    _clearPreviousSelectedOption(skip) {\n        this.autocomplete.options.forEach(option => {\n            if (option != skip && option.selected) {\n                option.deselect();\n            }\n        });\n    }\n    _attachOverlay() {\n        if (!this.autocomplete && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatAutocompleteMissingPanelError();\n        }\n        // We want to resolve this once, as late as possible so that we can be\n        // sure that the element has been moved into its final place in the DOM.\n        if (this._isInsideShadowRoot == null) {\n            this._isInsideShadowRoot = !!_getShadowRoot(this._element.nativeElement);\n        }\n        let overlayRef = this._overlayRef;\n        if (!overlayRef) {\n            this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef);\n            overlayRef = this._overlay.create(this._getOverlayConfig());\n            this._overlayRef = overlayRef;\n            // Use the `keydownEvents` in order to take advantage of\n            // the overlay event targeting provided by the CDK overlay.\n            overlayRef.keydownEvents().subscribe(event => {\n                // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n                // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n                if (event.keyCode === ESCAPE || (event.keyCode === UP_ARROW && event.altKey)) {\n                    this._resetActiveItem();\n                    this._closeKeyEventStream.next();\n                    // We need to stop propagation, otherwise the event will eventually\n                    // reach the input itself and cause the overlay to be reopened.\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n            });\n            this._viewportSubscription = this._viewportRuler.change().subscribe(() => {\n                if (this.panelOpen && overlayRef) {\n                    overlayRef.updateSize({ width: this._getPanelWidth() });\n                }\n            });\n        }\n        else {\n            // Update the trigger, panel width and direction, in case anything has changed.\n            this._positionStrategy.setOrigin(this._getConnectedElement());\n            overlayRef.updateSize({ width: this._getPanelWidth() });\n        }\n        if (overlayRef && !overlayRef.hasAttached()) {\n            overlayRef.attach(this._portal);\n            this._closingActionsSubscription = this._subscribeToClosingActions();\n        }\n        const wasOpen = this.panelOpen;\n        this.autocomplete._setVisibility();\n        this.autocomplete._isOpen = this._overlayAttached = true;\n        // We need to do an extra `panelOpen` check in here, because the\n        // autocomplete won't be shown if there are no options.\n        if (this.panelOpen && wasOpen !== this.panelOpen) {\n            this.autocomplete.opened.emit();\n        }\n    }\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._getOverlayPosition(),\n            scrollStrategy: this._scrollStrategy(),\n            width: this._getPanelWidth(),\n            direction: this._dir\n        });\n    }\n    _getOverlayPosition() {\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this._getConnectedElement())\n            .withFlexibleDimensions(false)\n            .withPush(false);\n        this._setStrategyPositions(strategy);\n        this._positionStrategy = strategy;\n        return strategy;\n    }\n    /** Sets the positions on a position strategy based on the directive's input state. */\n    _setStrategyPositions(positionStrategy) {\n        // Note that we provide horizontal fallback positions, even though by default the dropdown\n        // width matches the input, because consumers can override the width. See #18854.\n        const belowPositions = [\n            { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n            { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' }\n        ];\n        // The overlay edge connected to the trigger should have squared corners, while\n        // the opposite end has rounded corners. We apply a CSS class to swap the\n        // border-radius based on the overlay position.\n        const panelClass = this._aboveClass;\n        const abovePositions = [\n            { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom', panelClass },\n            { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom', panelClass }\n        ];\n        let positions;\n        if (this.position === 'above') {\n            positions = abovePositions;\n        }\n        else if (this.position === 'below') {\n            positions = belowPositions;\n        }\n        else {\n            positions = [...belowPositions, ...abovePositions];\n        }\n        positionStrategy.withPositions(positions);\n    }\n    _getConnectedElement() {\n        if (this.connectedTo) {\n            return this.connectedTo.elementRef;\n        }\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;\n    }\n    _getPanelWidth() {\n        return this.autocomplete.panelWidth || this._getHostWidth();\n    }\n    /** Returns the width of the input element, so the panel width can match it. */\n    _getHostWidth() {\n        return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n    }\n    /**\n     * Resets the active item to -1 so arrow events will activate the\n     * correct options, or to 0 if the consumer opted into it.\n     */\n    _resetActiveItem() {\n        this.autocomplete._keyManager.setActiveItem(this.autocomplete.autoActiveFirstOption ? 0 : -1);\n    }\n    /** Determines whether the panel can be opened. */\n    _canOpen() {\n        const element = this._element.nativeElement;\n        return !element.readOnly && !element.disabled && !this._autocompleteDisabled;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        var _a;\n        return ((_a = this._document) === null || _a === void 0 ? void 0 : _a.defaultView) || window;\n    }\n    /** Scrolls to a particular option in the list. */\n    _scrollToOption(index) {\n        // Given that we are not actually focusing active options, we must manually adjust scroll\n        // to reveal options below the fold. First, we find the offset of the option from the top\n        // of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n        // the panel height + the option height, so the active option will be just visible at the\n        // bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n        // will become the offset. If that offset is visible within the panel already, the scrollTop is\n        // not adjusted.\n        const autocomplete = this.autocomplete;\n        const labelCount = _countGroupLabelsBeforeOption(index, autocomplete.options, autocomplete.optionGroups);\n        if (index === 0 && labelCount === 1) {\n            // If we've got one group label before the option and we're at the top option,\n            // scroll the list to the top. This is better UX than scrolling the list to the\n            // top of the option, because it allows the user to read the top group's label.\n            autocomplete._setScrollTop(0);\n        }\n        else {\n            const option = autocomplete.options.toArray()[index];\n            if (option) {\n                const element = option._getHostElement();\n                const newScrollPosition = _getOptionScrollPosition(element.offsetTop, element.offsetHeight, autocomplete._getScrollTop(), autocomplete.panel.nativeElement.offsetHeight);\n                autocomplete._setScrollTop(newScrollPosition);\n            }\n        }\n    }\n}\n_MatAutocompleteTriggerBase.ɵfac = function _MatAutocompleteTriggerBase_Factory(t) { return new (t || _MatAutocompleteTriggerBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 9), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ViewportRuler)); };\n_MatAutocompleteTriggerBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatAutocompleteTriggerBase, inputs: { position: [\"matAutocompletePosition\", \"position\"], autocompleteAttribute: [\"autocomplete\", \"autocompleteAttribute\"], autocompleteDisabled: [\"matAutocompleteDisabled\", \"autocompleteDisabled\"], autocomplete: [\"matAutocomplete\", \"autocomplete\"], connectedTo: [\"matAutocompleteConnectedTo\", \"connectedTo\"] }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n_MatAutocompleteTriggerBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Overlay },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }, { type: Host }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ViewportRuler }\n];\n_MatAutocompleteTriggerBase.propDecorators = {\n    autocomplete: [{ type: Input, args: ['matAutocomplete',] }],\n    position: [{ type: Input, args: ['matAutocompletePosition',] }],\n    connectedTo: [{ type: Input, args: ['matAutocompleteConnectedTo',] }],\n    autocompleteAttribute: [{ type: Input, args: ['autocomplete',] }],\n    autocompleteDisabled: [{ type: Input, args: ['matAutocompleteDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatAutocompleteTriggerBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.Overlay }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc5.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }, {\n                type: Host\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc4.ViewportRuler }]; }, { position: [{\n            type: Input,\n            args: ['matAutocompletePosition']\n        }], autocompleteAttribute: [{\n            type: Input,\n            args: ['autocomplete']\n        }], autocompleteDisabled: [{\n            type: Input,\n            args: ['matAutocompleteDisabled']\n        }], autocomplete: [{\n            type: Input,\n            args: ['matAutocomplete']\n        }], connectedTo: [{\n            type: Input,\n            args: ['matAutocompleteConnectedTo']\n        }] }); })();\nclass MatAutocompleteTrigger extends _MatAutocompleteTriggerBase {\n    constructor() {\n        super(...arguments);\n        this._aboveClass = 'mat-autocomplete-panel-above';\n    }\n}\nMatAutocompleteTrigger.ɵfac = function MatAutocompleteTrigger_Factory(t) { return ɵMatAutocompleteTrigger_BaseFactory(t || MatAutocompleteTrigger); };\nMatAutocompleteTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteTrigger, selectors: [[\"input\", \"matAutocomplete\", \"\"], [\"textarea\", \"matAutocomplete\", \"\"]], hostAttrs: [1, \"mat-autocomplete-trigger\"], hostVars: 7, hostBindings: function MatAutocompleteTrigger_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focusin\", function MatAutocompleteTrigger_focusin_HostBindingHandler() { return ctx._handleFocus(); })(\"blur\", function MatAutocompleteTrigger_blur_HostBindingHandler() { return ctx._onTouched(); })(\"input\", function MatAutocompleteTrigger_input_HostBindingHandler($event) { return ctx._handleInput($event); })(\"keydown\", function MatAutocompleteTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"autocomplete\", ctx.autocompleteAttribute)(\"role\", ctx.autocompleteDisabled ? null : \"combobox\")(\"aria-autocomplete\", ctx.autocompleteDisabled ? null : \"list\")(\"aria-activedescendant\", ctx.panelOpen && ctx.activeOption ? ctx.activeOption.id : null)(\"aria-expanded\", ctx.autocompleteDisabled ? null : ctx.panelOpen.toString())(\"aria-owns\", ctx.autocompleteDisabled || !ctx.panelOpen ? null : ctx.autocomplete == null ? null : ctx.autocomplete.id)(\"aria-haspopup\", !ctx.autocompleteDisabled);\n    } }, exportAs: [\"matAutocompleteTrigger\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_AUTOCOMPLETE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatAutocompleteTrigger_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatAutocompleteTrigger);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `input[matAutocomplete], textarea[matAutocomplete]`,\n                host: {\n                    'class': 'mat-autocomplete-trigger',\n                    '[attr.autocomplete]': 'autocompleteAttribute',\n                    '[attr.role]': 'autocompleteDisabled ? null : \"combobox\"',\n                    '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : \"list\"',\n                    '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',\n                    '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',\n                    '[attr.aria-owns]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',\n                    '[attr.aria-haspopup]': '!autocompleteDisabled',\n                    // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n                    // a little earlier. This avoids issues where IE delays the focusing of the input.\n                    '(focusin)': '_handleFocus()',\n                    '(blur)': '_onTouched()',\n                    '(input)': '_handleInput($event)',\n                    '(keydown)': '_handleKeydown($event)'\n                },\n                exportAs: 'matAutocompleteTrigger',\n                providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatAutocompleteModule {\n}\nMatAutocompleteModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatAutocompleteModule });\nMatAutocompleteModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatAutocompleteModule_Factory(t) { return new (t || MatAutocompleteModule)(); }, providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n            CommonModule\n        ], CdkScrollableModule,\n        MatOptionModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatAutocompleteModule, { declarations: function () { return [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin]; }, imports: function () { return [OverlayModule,\n        MatOptionModule,\n        MatCommonModule,\n        CommonModule]; }, exports: function () { return [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin, CdkScrollableModule,\n        MatOptionModule,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                    CommonModule\n                ],\n                exports: [\n                    MatAutocomplete,\n                    MatAutocompleteTrigger,\n                    MatAutocompleteOrigin,\n                    CdkScrollableModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                declarations: [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin],\n                providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AUTOCOMPLETE_OPTION_HEIGHT, AUTOCOMPLETE_PANEL_HEIGHT, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_AUTOCOMPLETE_VALUE_ACCESSOR, MatAutocomplete, MatAutocompleteModule, MatAutocompleteOrigin, MatAutocompleteSelectedEvent, MatAutocompleteTrigger, _MatAutocompleteBase, _MatAutocompleteOriginBase, _MatAutocompleteTriggerBase, getMatAutocompleteMissingPanelError };\n\n//# sourceMappingURL=autocomplete.js.map","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {ChipInputComponent} from './chip-input/chip-input.component';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {TranslationsModule} from '@common/core/translations/translations.module';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatRippleModule} from '@angular/material/core';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        MatChipsModule,\r\n        MatAutocompleteModule,\r\n        ReactiveFormsModule,\r\n        TranslationsModule,\r\n\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatRippleModule,\r\n    ],\r\n    declarations: [\r\n        ChipInputComponent,\r\n    ],\r\n    exports: [\r\n        ChipInputComponent,\r\n    ]\r\n})\r\nexport class ChipsModule {\r\n}\r\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TableSortHeaderComponent} from './table-sort-header/table-sort-header.component';\nimport {MatIconModule} from '@angular/material/icon';\nimport {TranslationsModule} from '../core/translations/translations.module';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {UserColumnComponent} from './columns/user-column/user-column.component';\nimport {TableBodyCheckboxComponent} from './selection/table-body-checkbox.component';\nimport {TableHeaderCheckboxComponent} from './selection/table-header-checkbox.component';\nimport {DatatableFooterComponent} from './datatable-footer/datatable-footer.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatButtonModule} from '@angular/material/button';\nimport {DatatableHeaderComponent} from './datatable-header/datatable-header.component';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {DatatableFiltersPanelComponent} from './datatable-filters-panel/datatable-filters-panel.component';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {ChipsModule} from '../core/ui/chips/chips.module';\nimport { DatatableHeaderSearchInputComponent } from './datatable-header/datatable-header-search-input/datatable-header-search-input.component';\nimport {NoResultsMessageModule} from '../core/ui/no-results-message/no-results-message.module';\nimport {NoResultsMessageComponent} from '../core/ui/no-results-message/no-results-message.component';\n\n@NgModule({\n    declarations: [\n        TableSortHeaderComponent,\n        UserColumnComponent,\n        TableBodyCheckboxComponent,\n        TableHeaderCheckboxComponent,\n        DatatableFooterComponent,\n        DatatableHeaderComponent,\n        DatatableHeaderSearchInputComponent,\n        DatatableFiltersPanelComponent,\n        DatatableHeaderSearchInputComponent,\n    ],\n    imports: [\n        CommonModule,\n        TranslationsModule,\n        ReactiveFormsModule,\n        FormsModule,\n        ChipsModule,\n        NoResultsMessageModule,\n\n        // material\n        MatButtonModule,\n        MatIconModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatProgressBarModule,\n    ],\n    exports: [\n        TableSortHeaderComponent,\n        MatCheckboxModule,\n        UserColumnComponent,\n        TableBodyCheckboxComponent,\n        TableHeaderCheckboxComponent,\n        DatatableFooterComponent,\n        DatatableHeaderComponent,\n        DatatableFiltersPanelComponent,\n        DatatableHeaderSearchInputComponent,\n        NoResultsMessageComponent,\n    ]\n})\nexport class DatatableModule {\n}\n","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n","import { ObserversModule } from '@angular/cdk/observers';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Attribute, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/observers';\n\nconst _c0 = [\"thumbContainer\"];\nconst _c1 = [\"toggleBar\"];\nconst _c2 = [\"input\"];\nconst _c3 = function () { return { enterDuration: 150 }; };\nconst _c4 = [\"*\"];\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: () => ({ disableToggleValue: false })\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for slide-toggle components.\nlet nextUniqueId = 0;\n/** @docs-private */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlideToggle),\n    multi: true\n};\n/** Change event object emitted by a MatSlideToggle. */\nclass MatSlideToggleChange {\n    constructor(\n    /** The source MatSlideToggle of the event. */\n    source, \n    /** The new `checked` value of the MatSlideToggle. */\n    checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n}\n// Boilerplate for applying mixins to MatSlideToggle.\n/** @docs-private */\nclass MatSlideToggleBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatSlideToggleMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatSlideToggleBase)), 'accent'));\n/** Represents a slidable \"switch\" toggle that can be moved between on and off. */\nclass MatSlideToggle extends _MatSlideToggleMixinBase {\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, tabIndex, defaults, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.defaults = defaults;\n        this._animationMode = _animationMode;\n        this._onChange = (_) => { };\n        this._onTouched = () => { };\n        this._uniqueId = `mat-slide-toggle-${++nextUniqueId}`;\n        this._required = false;\n        this._checked = false;\n        /** Name value will be applied to the input element if present. */\n        this.name = null;\n        /** A unique id for the slide-toggle input. If none is supplied, it will be auto-generated. */\n        this.id = this._uniqueId;\n        /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n        this.labelPosition = 'after';\n        /** Used to set the aria-label attribute on the underlying input element. */\n        this.ariaLabel = null;\n        /** Used to set the aria-labelledby attribute on the underlying input element. */\n        this.ariaLabelledby = null;\n        /** An event will be dispatched each time the slide-toggle changes its value. */\n        this.change = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle input is toggled.\n         * This event is always emitted when the user toggles the slide toggle, but this does not mean\n         * the slide toggle's value has changed.\n         */\n        this.toggleChange = new EventEmitter();\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /** Whether the slide-toggle is required. */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /** Whether the slide-toggle element is checked or not. */\n    get checked() { return this._checked; }\n    set checked(value) {\n        this._checked = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    ngAfterContentInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe(focusOrigin => {\n            // Only forward focus manually when it was received programmatically or through the\n            // keyboard. We should not do this for mouse/touch focus for two reasons:\n            // 1. It can prevent clicks from landing in Chrome (see #18269).\n            // 2. They're already handled by the wrapping `label` element.\n            if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n                this._inputElement.nativeElement.focus();\n            }\n            else if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's 'ng-touched') will cause a changed-after-checked\n                // error. See https://github.com/angular/angular/issues/17793. To work around this,\n                // we defer telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => this._onTouched());\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Method being called whenever the underlying input emits a change event. */\n    _onChangeEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the component's `change` output.\n        event.stopPropagation();\n        this.toggleChange.emit();\n        // When the slide toggle's config disables toggle change event by setting\n        // `disableToggleValue: true`, the slide toggle's value does not change, and the\n        // checked state of the underlying input needs to be changed back.\n        if (this.defaults.disableToggleValue) {\n            this._inputElement.nativeElement.checked = this.checked;\n            return;\n        }\n        // Sync the value from the underlying input element with the component instance.\n        this.checked = this._inputElement.nativeElement.checked;\n        // Emit our custom change event only if the underlying input emitted one. This ensures that\n        // there is no change event, when the checked state changes programmatically.\n        this._emitChangeEvent();\n    }\n    /** Method being called whenever the slide-toggle has been clicked. */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the slide-toggle. */\n    focus(options) {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n    }\n    /** Toggles the checked state of the slide-toggle. */\n    toggle() {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     */\n    _emitChangeEvent() {\n        this._onChange(this.checked);\n        this.change.emit(new MatSlideToggleChange(this, this.checked));\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the\n        // slide-toggle component will be only marked for check, but no actual change detection runs\n        // automatically. Instead of going back into the zone in order to trigger a change detection\n        // which causes *all* components to be checked (if explicitly marked or not using OnPush),\n        // we only trigger an explicit change detection for the slide-toggle view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n}\nMatSlideToggle.ɵfac = function MatSlideToggle_Factory(t) { return new (t || MatSlideToggle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatSlideToggle.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSlideToggle, selectors: [[\"mat-slide-toggle\"]], viewQuery: function MatSlideToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbBarEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, hostAttrs: [1, \"mat-slide-toggle\"], hostVars: 12, hostBindings: function MatSlideToggle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : -1)(\"aria-label\", null)(\"aria-labelledby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checked\", ctx.checked)(\"mat-disabled\", ctx.disabled)(\"mat-slide-toggle-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", name: \"name\", id: \"id\", labelPosition: \"labelPosition\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], required: \"required\", checked: \"checked\" }, outputs: { change: \"change\", toggleChange: \"toggleChange\" }, exportAs: [\"matSlideToggle\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 16, vars: 18, consts: [[1, \"mat-slide-toggle-label\"], [\"label\", \"\"], [1, \"mat-slide-toggle-bar\"], [\"toggleBar\", \"\"], [\"type\", \"checkbox\", \"role\", \"switch\", 1, \"mat-slide-toggle-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"tabIndex\", \"checked\", \"disabled\", \"change\", \"click\"], [\"input\", \"\"], [1, \"mat-slide-toggle-thumb-container\"], [\"thumbContainer\", \"\"], [1, \"mat-slide-toggle-thumb\"], [\"mat-ripple\", \"\", 1, \"mat-slide-toggle-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-slide-toggle-persistent-ripple\"], [1, \"mat-slide-toggle-content\", 3, \"cdkObserveContent\"], [\"labelContent\", \"\"], [2, \"display\", \"none\"]], template: function MatSlideToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2, 3);\n        ɵngcc0.ɵɵelementStart(4, \"input\", 4, 5);\n        ɵngcc0.ɵɵlistener(\"change\", function MatSlideToggle_Template_input_change_4_listener($event) { return ctx._onChangeEvent($event); })(\"click\", function MatSlideToggle_Template_input_click_4_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 6, 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelement(10, \"div\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11, 12);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatSlideToggle_Template_span_cdkObserveContent_11_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(13, \"span\", 13);\n        ɵngcc0.ɵɵtext(14, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(15);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        const _r4 = ɵngcc0.ɵɵreference(12);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-slide-toggle-bar-no-side-margin\", !_r4.textContent || !_r4.textContent.trim());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"tabIndex\", ctx.tabIndex)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"aria-checked\", ctx.checked.toString())(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(17, _c3));\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSlideToggle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatSlideToggle.propDecorators = {\n    _thumbEl: [{ type: ViewChild, args: ['thumbContainer',] }],\n    _thumbBarEl: [{ type: ViewChild, args: ['toggleBar',] }],\n    name: [{ type: Input }],\n    id: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    required: [{ type: Input }],\n    checked: [{ type: Input }],\n    change: [{ type: Output }],\n    toggleChange: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slide-toggle',\n                exportAs: 'matSlideToggle',\n                host: {\n                    'class': 'mat-slide-toggle',\n                    '[id]': 'id',\n                    // Needs to be `-1` so it can still receive programmatic focus.\n                    '[attr.tabindex]': 'disabled ? null : -1',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[class.mat-checked]': 'checked',\n                    '[class.mat-disabled]': 'disabled',\n                    '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-slide-toggle-label\\\" #label>\\n  <div #toggleBar class=\\\"mat-slide-toggle-bar\\\"\\n       [class.mat-slide-toggle-bar-no-side-margin]=\\\"!labelContent.textContent || !labelContent.textContent.trim()\\\">\\n\\n    <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           role=\\\"switch\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.aria-checked]=\\\"checked.toString()\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           (change)=\\\"_onChangeEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n\\n    <div class=\\\"mat-slide-toggle-thumb-container\\\" #thumbContainer>\\n      <div class=\\\"mat-slide-toggle-thumb\\\"></div>\\n      <div class=\\\"mat-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n           [matRippleTrigger]=\\\"label\\\"\\n           [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n           [matRippleCentered]=\\\"true\\\"\\n           [matRippleRadius]=\\\"20\\\"\\n           [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n        <div class=\\\"mat-ripple-element mat-slide-toggle-persistent-ripple\\\"></div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <span class=\\\"mat-slide-toggle-content\\\" #labelContent (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR],\n                inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { name: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], change: [{\n            type: Output\n        }], toggleChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], _thumbEl: [{\n            type: ViewChild,\n            args: ['thumbContainer']\n        }], _thumbBarEl: [{\n            type: ViewChild,\n            args: ['toggleBar']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatSlideToggleRequiredValidator),\n    multi: true\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n */\nclass MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n}\nMatSlideToggleRequiredValidator.ɵfac = function MatSlideToggleRequiredValidator_Factory(t) { return ɵMatSlideToggleRequiredValidator_BaseFactory(t || MatSlideToggleRequiredValidator); };\nMatSlideToggleRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSlideToggleRequiredValidator, selectors: [[\"mat-slide-toggle\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"formControl\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatSlideToggleRequiredValidator_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatSlideToggleRequiredValidator);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggleRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-slide-toggle[required][formControlName],\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]`,\n                providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** This module is used by both original and MDC-based slide-toggle implementations. */\nclass _MatSlideToggleRequiredValidatorModule {\n}\n_MatSlideToggleRequiredValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatSlideToggleRequiredValidatorModule });\n_MatSlideToggleRequiredValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatSlideToggleRequiredValidatorModule_Factory(t) { return new (t || _MatSlideToggleRequiredValidatorModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatSlideToggleRequiredValidatorModule, { declarations: [MatSlideToggleRequiredValidator], exports: [MatSlideToggleRequiredValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatSlideToggleRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatSlideToggleRequiredValidator],\n                declarations: [MatSlideToggleRequiredValidator]\n            }]\n    }], null, null); })();\nclass MatSlideToggleModule {\n}\nMatSlideToggleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSlideToggleModule });\nMatSlideToggleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSlideToggleModule_Factory(t) { return new (t || MatSlideToggleModule)(); }, imports: [[\n            _MatSlideToggleRequiredValidatorModule,\n            MatRippleModule,\n            MatCommonModule,\n            ObserversModule,\n        ], _MatSlideToggleRequiredValidatorModule, MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSlideToggleModule, { declarations: function () { return [MatSlideToggle]; }, imports: function () { return [_MatSlideToggleRequiredValidatorModule, MatRippleModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [_MatSlideToggleRequiredValidatorModule, MatSlideToggle, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatRippleModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatSlideToggle,\n                    MatCommonModule\n                ],\n                declarations: [MatSlideToggle]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n\n//# sourceMappingURL=slide-toggle.js.map","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","import {Params, Router} from '@angular/router';\r\nimport {BehaviorSubject, of, Subscription} from 'rxjs';\r\nimport {map, switchMap, tap} from 'rxjs/operators';\r\nimport {PaginationResponse} from '@common/core/types/pagination/pagination-response';\r\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\r\nimport {PaginatedBackendResponse} from '@common/core/types/pagination/paginated-backend-response';\r\nimport {PaginationParams} from '@common/core/types/pagination/pagination-params';\r\nimport {Injectable} from '@angular/core';\r\nimport {LocalStorage} from '@common/core/services/local-storage.service';\r\n\r\n@Injectable()\r\nexport class Paginator<T> {\r\n    private subscription: Subscription;\r\n    private params$ = new BehaviorSubject<PaginationParams>({});\r\n    public paginatedOnce$ = new BehaviorSubject<boolean>(false);\r\n    public loading$ = new BehaviorSubject(false);\r\n    public response$ = new BehaviorSubject<{pagination: PaginationResponse<T>, [key: string]: any}>(null);\r\n    public dontUpdateQueryParams = false;\r\n    public perPageCacheKey: string = null;\r\n    /** only true if data was already loaded from backend and it was empty */\r\n    public noResults$ = this.response$.pipe(map(r => this.paginatedOnce$.value && r.pagination.data.length === 0));\r\n\r\n    get params(): PaginationParams {\r\n        return this.params$.value;\r\n    }\r\n\r\n    get currentPage(): number {\r\n        return this.response$.value?.pagination?.current_page;\r\n    }\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private http: AppHttpClient,\r\n        private localStorage?: LocalStorage,\r\n    ) {}\r\n\r\n    public paginate(userParams: object = {}, url?: string, initialData?: PaginationResponse<T>) {\r\n        // only use query params on first pagination, so query params can be removed via user params\r\n        const queryParams = !this.subscription ? this.currentQueryParams() : {};\r\n        const paginationParams = this.response$.value ? {\r\n            perPage: this.response$.value.pagination.per_page,\r\n            page: this.response$.value.pagination.current_page\r\n        } : {};\r\n        this.params$.next({...paginationParams, ...queryParams, ...userParams});\r\n\r\n        if ( ! this.subscription) {\r\n            this.init(url, initialData);\r\n        }\r\n    }\r\n\r\n    public nextPage() {\r\n        const current = this.response$.value.pagination.current_page;\r\n        const total = this.response$.value.pagination.total;\r\n        const next = current + 1;\r\n        this.paginate({\r\n            ...this.params$.value,\r\n            page: !current || next > total ? current : next\r\n        });\r\n    }\r\n\r\n    public previousPage() {\r\n        const current = this.response$.value.pagination.current_page;\r\n        this.paginate({\r\n            ...this.params$.value,\r\n            page: (current - 1) || 1\r\n        });\r\n    }\r\n\r\n    public changePerPage(newPerPage: number) {\r\n        if (newPerPage !== this.params$.value?.perPage) {\r\n            if (this.perPageCacheKey) {\r\n                this.localStorage.set(this.perPageCacheKey, newPerPage);\r\n            }\r\n            this.paginate({\r\n                ...this.params$.value,\r\n                perPage: newPerPage\r\n            });\r\n        }\r\n    }\r\n\r\n    public currentQueryParams(): Params {\r\n        return this.router.routerState.root.snapshot.queryParams;\r\n    }\r\n\r\n    private init(uri: string, initialData?: PaginationResponse<T>) {\r\n        this.subscription = this.params$.pipe(\r\n            switchMap(params => {\r\n                this.loading$.next(true);\r\n                const firstPagination = !this.paginatedOnce$.value;\r\n                if (firstPagination && this.perPageCacheKey && this.localStorage.get(this.perPageCacheKey)) {\r\n                    params = {perPage: this.localStorage.get(this.perPageCacheKey), ...params};\r\n                }\r\n\r\n                // if we got initial pagination response (of 1st page)\r\n                // return that instead of making 1st page http request\r\n                const request = firstPagination && initialData ?\r\n                    of({pagination: initialData}) :\r\n                    this.http.get(uri, params);\r\n\r\n                return (request as PaginatedBackendResponse<T>).pipe(\r\n                    // can't use \"finalize\" here as it will complete after loading$.next(true)\r\n                    // call above, which will prevent loading bar from showing\r\n                    // if pagination request is cancelled and new one is queued\r\n                    tap(() => {\r\n                        this.updateQueryParams(params);\r\n                        this.loading$.next(false);\r\n                        this.paginatedOnce$.next(true);\r\n                    }, () => {\r\n                        this.loading$.next(false);\r\n                        this.paginatedOnce$.next(true);\r\n                    })\r\n                ) as PaginatedBackendResponse<T>;\r\n            })\r\n        ).subscribe(response => {\r\n            this.response$.next(response);\r\n        });\r\n    }\r\n\r\n    private updateQueryParams(params = {}) {\r\n        if (this.dontUpdateQueryParams) return;\r\n        for (const key in params) {\r\n            if (Array.isArray(params[key])) {\r\n                params[key] = params[key].join(',');\r\n            }\r\n        }\r\n        this.router.navigate([], {queryParams: params, replaceUrl: true});\r\n    }\r\n\r\n    public canLoadNextPage() {\r\n        return this.response$.value &&\r\n            this.currentPage < this.response$.value?.pagination?.last_page;\r\n    }\r\n}\r\n","import * as Dot from \"dot-object\";\r\nimport {_isNumberValue} from '@angular/cdk/coercion';\r\nimport {Model} from '@common/core/types/models/model';\r\n\r\nconst MAX_SAFE_INTEGER = 9007199254740991;\r\n\r\nexport function sortDatatableData<T extends Model>(data: T[], orderBy: string, orderDir: string): T[] {\r\n    return data.sort((a, b) => {\r\n        let valueA = sortingDataAccessor(a, orderBy);\r\n        let valueB = sortingDataAccessor(b, orderBy);\r\n\r\n        // If there are data in the column that can be converted to a number,\r\n        // it must be ensured that the rest of the data\r\n        // is of the same type so as not to order incorrectly.\r\n        const valueAType = typeof valueA;\r\n        const valueBType = typeof valueB;\r\n\r\n        if (valueAType !== valueBType) {\r\n            if (valueAType === 'number') {\r\n                valueA += '';\r\n            }\r\n            if (valueBType === 'number') {\r\n                valueB += '';\r\n            }\r\n        }\r\n\r\n        // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\r\n        // one value exists while the other doesn't. In this case, existing value should come last.\r\n        // This avoids inconsistent results when comparing values to undefined/null.\r\n        // If neither value exists, return 0 (equal).\r\n        let comparatorResult = 0;\r\n        if (valueA != null && valueB != null) {\r\n            // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\r\n            if (valueA > valueB) {\r\n                comparatorResult = 1;\r\n            } else if (valueA < valueB) {\r\n                comparatorResult = -1;\r\n            }\r\n        } else if (valueA != null) {\r\n            comparatorResult = 1;\r\n        } else if (valueB != null) {\r\n            comparatorResult = -1;\r\n        }\r\n\r\n        return comparatorResult * (orderDir === 'asc' ? 1 : -1);\r\n    });\r\n}\r\n\r\n/**\r\n * Data accessor function that is used for accessing data properties for sorting through\r\n * the default sortData function.\r\n * This default function assumes that the sort header IDs (which defaults to the column name)\r\n * matches the data's properties (e.g. column Xyz represents data['Xyz']).\r\n * May be set to a custom function for different behavior.\r\n */\r\nfunction sortingDataAccessor(data: object, sortHeaderId: string): string {\r\n    const value = Dot.pick(sortHeaderId, data);\r\n\r\n    if (_isNumberValue(value)) {\r\n        const numberValue = Number(value);\r\n\r\n        // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\r\n        // leave them as strings. For more info: https://goo.gl/y5vbSg\r\n        return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\r\n    }\r\n\r\n    // if (Array.isArray(value)) {\r\n    //     return value.reduce((prev, curr) => prev += objectToStr(curr));\r\n    // }\r\n\r\n    return value;\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Subscription} from 'rxjs';\nimport {Paginator} from '../shared/paginator.service';\nimport {debounceTime, filter, map, pairwise, skip, tap} from 'rxjs/operators';\nimport {DatatableFilters, DatatableFilterValue} from './types/datatable-filters';\nimport {DatatableSort} from './types/datatable-sort';\nimport {PaginationParams} from '../core/types/pagination/pagination-params';\nimport {removeNullFromObject} from '../core/utils/remove-null-from-object';\nimport {ComponentType} from '@angular/cdk/portal';\nimport {MatDialogConfig} from '@angular/material/dialog';\nimport {Modal} from '../core/ui/dialogs/modal.service';\nimport {ConfirmModalComponent} from '../core/ui/confirm-modal/confirm-modal.component';\nimport {DELETE_RESOURCE_MESSAGE} from './delete-resource-message';\nimport {PaginationResponse} from '../core/types/pagination/pagination-response';\nimport {sortDatatableData} from '@common/datatable/utils/sort-datatable-data';\nimport {Model} from '@common/core/types/models/model';\nimport {filterDatatableData} from '@common/datatable/utils/filter-datatable-data';\nimport {Router} from '@angular/router';\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\nimport {LocalStorage} from '../core/services/local-storage.service';\n\nexport type DatatableStaticParams = Record<string, string|number|boolean|string[]>;\n\ninterface DatatableConfig<T> {\n    uri?: string;\n    staticParams?: DatatableStaticParams;\n    initialData?: PaginationResponse<T>|T[];\n    disableSort?: boolean;\n    infiniteScroll?: boolean;\n}\n\n@Injectable()\nexport class DatatableService<T extends Model> {\n    public sort$ = new BehaviorSubject<DatatableSort>({});\n    public filters$ = new BehaviorSubject<DatatableFilters>({});\n    public staticParams$ = new BehaviorSubject<DatatableStaticParams>({});\n    public paginator = new Paginator<T>(this.router, this.http, this.localStorage);\n    private paginatorSub: Subscription;\n    private mainSub: Subscription;\n    private ignoreNextParamChange = false;\n    private originalData$ = new BehaviorSubject<T[]>([]);\n    public data$ = new BehaviorSubject<T[]>([]);\n    public selectedRows$ = new BehaviorSubject<number[]>([]);\n    public config: DatatableConfig<T>;\n\n    constructor(\n        protected modal: Modal,\n        protected router: Router,\n        protected http: AppHttpClient,\n        protected localStorage: LocalStorage,\n    ) {}\n\n    get data() {\n        return this.data$.value;\n    }\n\n    set data(data: T[]) {\n        const tableData = [...data];\n        this.originalData$.next(tableData);\n        this.data$.next(tableData);\n\n        // Reset filters and sort without trigger data reload via pagination\n        this.ignoreNextParamChange = true;\n        this.reset();\n    }\n\n    public init(config: DatatableConfig<T> = {}) {\n        this.config = config;\n        this.staticParams$.next({...this.staticParams$.value, ...config.staticParams});\n        if (config.uri) {\n            this.connectToPaginator();\n        } else if (config.initialData) {\n            this.data = config.initialData as T[];\n        }\n\n        this.mainSub = combineLatest([this.sort$, this.filters$, this.staticParams$])\n            .pipe(debounceTime(0), map(params => Object.assign({}, ...params))).subscribe((params: PaginationParams) => {\n                if (this.ignoreNextParamChange) {\n                    return this.ignoreNextParamChange = false;\n                }\n                params = removeNullFromObject(params);\n                Object.entries(params).forEach(([key, value]) => {\n                    if (typeof value === 'object' && value.id) {\n                        params[`${key}Id`] = value.id;\n                        delete params[key];\n                    }\n                });\n                if (this.config.uri) {\n                    this.paginator.paginate(params, this.config.uri, this.config.initialData as PaginationResponse<T>);\n                } else if (Object.keys(params).length && this.data.length) {\n                    this.applyLocalTransforms(params);\n                }\n            });\n\n        return this;\n    }\n\n    private connectToPaginator() {\n        this.paginatorSub = this.paginator.response$.pipe(pairwise()).subscribe(([prev, current]) => {\n            // append data instead of overriding with next page data (infinite scroll).\n            // if page did not change, we can assume that it was filter or sort\n            // change and we should use only new data, even on infinite scroll\n            const data = this.config.infiniteScroll && prev?.pagination?.current_page !== current.pagination.current_page ?\n                [...this.data$.value, ...current.pagination.data] :\n                current.pagination.data;\n            this.data$.next(data);\n        });\n    }\n\n    private applyLocalTransforms(params: PaginationParams) {\n        let data = [...this.originalData$.value];\n        if (params.query) {\n            data = filterDatatableData<T>(data, params.query);\n        }\n        if (params.orderBy && params.orderDir) {\n            data = sortDatatableData<T>(data, params.orderBy, params.orderDir);\n        }\n        this.data$.next(data);\n    }\n\n    public addFilter(key: keyof DatatableFilters, value: DatatableFilterValue) {\n        this.filters$.next({\n            ...this.filters$.value,\n            [key]: value,\n        });\n    }\n\n    public removeFilter(key: keyof DatatableFilters) {\n        const filters = {...this.filters$.value};\n        delete filters[key];\n        this.filters$.next(filters);\n    }\n\n    public reset(staticParams: DatatableStaticParams = null) {\n        this.filters$.next({});\n        this.sort$.next({});\n        this.selectedRows$.next([]);\n        if (staticParams) {\n            this.staticParams$.next(staticParams);\n        }\n    }\n\n    public openCrupdateResourceModal(cmp: ComponentType<any>, data?: object, config?: MatDialogConfig) {\n        return this.modal.open(cmp, data, config).beforeClosed()\n            .pipe(\n                filter(modifiedResource => !!modifiedResource),\n                tap(() => this.reset())\n            );\n    }\n\n    public confirmResourceDeletion(resource: string) {\n        const data = {...DELETE_RESOURCE_MESSAGE, replacements: {resource}};\n        return this.modal.open(ConfirmModalComponent, data).afterClosed()\n            .pipe(filter(confirmed => confirmed));\n    }\n\n    public getCurrentParams() {\n        return {\n            ...this.sort$.value,\n            ...this.filters$.value,\n            ...this.staticParams$.value,\n            ...this.paginator.params,\n        };\n    }\n\n    public destroy() {\n        this.paginatorSub?.unsubscribe();\n        this.mainSub?.unsubscribe();\n    }\n}\n","import {Model} from '../../core/types/models/model';\r\n\r\nexport function filterDatatableData<T extends Model>(data: T[], filter: string): T[] {\r\n    return data.filter(obj => filterPredicate(obj, filter));\r\n}\r\n/**\r\n * Checks if a data object matches the data source's filter string. By default, each data object\r\n * is converted to a string of its properties and returns true if the filter has\r\n * at least one occurrence in that string. By default, the filter string has its whitespace\r\n * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\r\n * filter matching.\r\n * @param data Data object used to check against the filter.\r\n * @param filter Filter string that has been set on the data source.\r\n * @returns Whether the filter matches against the data\r\n */\r\nfunction filterPredicate(data: object, filter: string): boolean {\r\n    // Transform the data into a lowercase string of all property values.\r\n    const dataStr = objectToStr(data);\r\n\r\n    // Transform the filter by converting it to lowercase and removing whitespace.\r\n    const transformedFilter = filter.trim().toLowerCase();\r\n\r\n    return dataStr.indexOf(transformedFilter) !== -1;\r\n}\r\n\r\nexport function objectToStr(obj: object) {\r\n    return Object.keys(obj).reduce((currentTerm: string, key: string) => {\r\n        // Use an obscure Unicode character to delimit the words in the concatenated string.\r\n        // This avoids matches where the values of two columns combined will match the user's query\r\n        // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\r\n        // that has a very low chance of being typed in by somebody in a text field. This one in\r\n        // particular is \"White up-pointing triangle with dot\" from\r\n        // https://en.wikipedia.org/wiki/List_of_Unicode_characters\r\n        const term = (obj[key] && typeof obj[key] === 'object') ?\r\n            objectToStr(obj[key]) :\r\n            obj[key];\r\n        return currentTerm + term + '◬';\r\n    }, '').toLowerCase();\r\n}\r\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","var baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","var root = require('./_root');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;\n","import {ChangeDetectionStrategy, Component, ElementRef, Inject, TemplateRef} from '@angular/core';\nimport {OVERLAY_PANEL_DATA} from '../../core/ui/overlay-panel/overlay-panel-data';\nimport {OverlayPanelRef} from '../../core/ui/overlay-panel/overlay-panel-ref';\nimport {matDialogAnimations} from '@angular/material/dialog';\n\n@Component({\n    selector: 'datatable-filters-panel',\n    templateUrl: './datatable-filters-panel.component.html',\n    styleUrls: ['./datatable-filters-panel.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[@dialogContainer]': `'enter'`\n    },\n    animations: [\n        matDialogAnimations.dialogContainer,\n    ]\n})\nexport class DatatableFiltersPanelComponent {\n\n    constructor(\n        @Inject(OVERLAY_PANEL_DATA) public data: {filters: TemplateRef<ElementRef>},\n        private overlayPanelRef: OverlayPanelRef,\n    ) {}\n\n    public close() {\n        this.overlayPanelRef.close();\n    }\n}\n","<header>\n    <mat-icon svgIcon=\"filter-list\"></mat-icon>\n    <span trans>Filters</span>\n</header>\n\n<form class=\"body\" (ngSubmit)=\"close()\">\n    <ng-container *ngTemplateOutlet=\"data.filters\"></ng-container>\n</form>\n\n<footer>\n    <button (click)=\"close()\" type=\"button\" mat-button color=\"accent\" trans>Close</button>\n</footer>\n","import { UploadedFile } from '../../uploaded-file';\r\nimport { UploadValidation } from './upload-validation';\r\nimport { Translations } from '../../../core/translations/translations.service';\r\n\r\nexport class AllowedExtensionsValidation extends UploadValidation {\r\n    constructor(\r\n        protected params: {extensions: string[]},\r\n        protected i18n: Translations\r\n    ) {\r\n        super();\r\n\r\n        this.errorMessage = this.i18n.t(\r\n            'Only these file types are allowed: :extensions',\r\n            {extensions: this.params.extensions.join(', ')}\r\n        );\r\n    }\r\n\r\n    public fails(file: UploadedFile) {\r\n        return ! this.params.extensions.some(extension => {\r\n            return extension.toLowerCase() === file.extension.toLowerCase();\r\n        });\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { prettyBytes } from '../core/utils/pretty-bytes';\r\n\r\n@Pipe({\r\n    name: 'formattedFileSize',\r\n    pure: true,\r\n})\r\nexport class FormattedFileSizePipe implements PipeTransform {\r\n    transform(bytes: number = 0, precision?: number|string): string {\r\n        if (isNaN(parseFloat(String(bytes))) || ! isFinite(bytes)) return '-';\r\n        return prettyBytes(bytes, precision);\r\n    }\r\n}\r\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n","var ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport interface WorkspaceConfig {\r\n    description: string;\r\n}\r\n\r\nexport const WORKSPACE_CONFIG = new InjectionToken<WorkspaceConfig>('WORKSPACE_CONFIG');\r\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","import { SPACE, BACKSPACE, DELETE, TAB, hasModifierKey, ENTER } from '@angular/cdk/keycodes';\nimport { InjectionToken, Directive, EventEmitter, ElementRef, NgZone, Optional, Inject, ChangeDetectorRef, Attribute, ContentChild, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, Self, ContentChildren, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, RippleRenderer, MAT_RIPPLE_GLOBAL_OPTIONS, mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, merge } from 'rxjs';\nimport { take, takeUntil, startWith } from 'rxjs/operators';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material/form-field';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Event object emitted by MatChip when selected or deselected. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/forms';\nimport * as ɵngcc4 from '@angular/material/core';\n\nconst _c0 = [\"*\"];\nclass MatChipSelectionChange {\n    constructor(\n    /** Reference to the chip that emitted the event. */\n    source, \n    /** Whether the chip that emitted the event is selected. */\n    selected, \n    /** Whether the selection change was a result of a user interaction. */\n    isUserInput = false) {\n        this.source = source;\n        this.selected = selected;\n        this.isUserInput = isUserInput;\n    }\n}\n/**\n * Injection token that can be used to reference instances of `MatChipRemove`. It serves as\n * alternative token to the actual `MatChipRemove` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_REMOVE = new InjectionToken('MatChipRemove');\n/**\n * Injection token that can be used to reference instances of `MatChipAvatar`. It serves as\n * alternative token to the actual `MatChipAvatar` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_AVATAR = new InjectionToken('MatChipAvatar');\n/**\n * Injection token that can be used to reference instances of `MatChipTrailingIcon`. It serves as\n * alternative token to the actual `MatChipTrailingIcon` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_TRAILING_ICON = new InjectionToken('MatChipTrailingIcon');\n// Boilerplate for applying mixins to MatChip.\n/** @docs-private */\nclass MatChipBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatChipMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(MatChipBase), 'primary'), -1);\n/**\n * Dummy directive to add CSS class to chip avatar.\n * @docs-private\n */\nclass MatChipAvatar {\n}\nMatChipAvatar.ɵfac = function MatChipAvatar_Factory(t) { return new (t || MatChipAvatar)(); };\nMatChipAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipAvatar, selectors: [[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]], hostAttrs: [1, \"mat-chip-avatar\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar }])] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipAvatar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-chip-avatar, [matChipAvatar]',\n                host: { 'class': 'mat-chip-avatar' },\n                providers: [{ provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar }]\n            }]\n    }], null, null); })();\n/**\n * Dummy directive to add CSS class to chip trailing icon.\n * @docs-private\n */\nclass MatChipTrailingIcon {\n}\nMatChipTrailingIcon.ɵfac = function MatChipTrailingIcon_Factory(t) { return new (t || MatChipTrailingIcon)(); };\nMatChipTrailingIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipTrailingIcon, selectors: [[\"mat-chip-trailing-icon\"], [\"\", \"matChipTrailingIcon\", \"\"]], hostAttrs: [1, \"mat-chip-trailing-icon\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon }])] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipTrailingIcon, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n                host: { 'class': 'mat-chip-trailing-icon' },\n                providers: [{ provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon }]\n            }]\n    }], null, null); })();\n/**\n * Material design styled Chip component. Used inside the MatChipList component.\n */\nclass MatChip extends _MatChipMixinBase {\n    constructor(_elementRef, _ngZone, platform, globalRippleOptions, \n    // @breaking-change 8.0.0 `animationMode` parameter to become required.\n    animationMode, \n    // @breaking-change 9.0.0 `_changeDetectorRef` parameter to become required.\n    _changeDetectorRef, tabIndex, \n    // @breaking-change 11.0.0 `_document` parameter to become required.\n    _document) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Whether the chip has focus. */\n        this._hasFocus = false;\n        /** Whether the chip list is selectable */\n        this.chipListSelectable = true;\n        /** Whether the chip list is in multi-selection mode. */\n        this._chipListMultiple = false;\n        /** Whether the chip list as a whole is disabled. */\n        this._chipListDisabled = false;\n        this._selected = false;\n        this._selectable = true;\n        this._disabled = false;\n        this._removable = true;\n        /** Emits when the chip is focused. */\n        this._onFocus = new Subject();\n        /** Emits when the chip is blured. */\n        this._onBlur = new Subject();\n        /** Emitted when the chip is selected or deselected. */\n        this.selectionChange = new EventEmitter();\n        /** Emitted when the chip is destroyed. */\n        this.destroyed = new EventEmitter();\n        /** Emitted when a chip is to be removed. */\n        this.removed = new EventEmitter();\n        this._addHostClassName();\n        // Dynamically create the ripple target, append it within the chip, and use it as the\n        // chip's ripple target. Adding the class '.mat-chip-ripple' ensures that it will have\n        // the proper styles.\n        this._chipRippleTarget = (_document || document).createElement('div');\n        this._chipRippleTarget.classList.add('mat-chip-ripple');\n        this._elementRef.nativeElement.appendChild(this._chipRippleTarget);\n        this._chipRipple = new RippleRenderer(this, _ngZone, this._chipRippleTarget, platform);\n        this._chipRipple.setupTriggerEvents(_elementRef);\n        this.rippleConfig = globalRippleOptions || {};\n        this._animationsDisabled = animationMode === 'NoopAnimations';\n        this.tabIndex = tabIndex != null ? (parseInt(tabIndex) || -1) : -1;\n    }\n    /**\n     * Whether ripples are disabled on interaction\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || !!this.rippleConfig.disabled;\n    }\n    /** Whether the chip is selected. */\n    get selected() { return this._selected; }\n    set selected(value) {\n        const coercedValue = coerceBooleanProperty(value);\n        if (coercedValue !== this._selected) {\n            this._selected = coercedValue;\n            this._dispatchSelectionChange();\n        }\n    }\n    /** The value of the chip. Defaults to the content inside `<mat-chip>` tags. */\n    get value() {\n        return this._value !== undefined\n            ? this._value\n            : this._elementRef.nativeElement.textContent;\n    }\n    set value(value) { this._value = value; }\n    /**\n     * Whether or not the chip is selectable. When a chip is not selectable,\n     * changes to its selected state are always ignored. By default a chip is\n     * selectable, and it becomes non-selectable if its parent chip list is\n     * not selectable.\n     */\n    get selectable() { return this._selectable && this.chipListSelectable; }\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n    }\n    /** Whether the chip is disabled. */\n    get disabled() { return this._chipListDisabled || this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * Determines whether or not the chip displays the remove styling and emits (removed) events.\n     */\n    get removable() { return this._removable; }\n    set removable(value) {\n        this._removable = coerceBooleanProperty(value);\n    }\n    /** The ARIA selected applied to the chip. */\n    get ariaSelected() {\n        // Remove the `aria-selected` when the chip is deselected in single-selection mode, because\n        // it adds noise to NVDA users where \"not selected\" will be read out for each chip.\n        return this.selectable && (this._chipListMultiple || this.selected) ?\n            this.selected.toString() : null;\n    }\n    _addHostClassName() {\n        const basicChipAttrName = 'mat-basic-chip';\n        const element = this._elementRef.nativeElement;\n        if (element.hasAttribute(basicChipAttrName) ||\n            element.tagName.toLowerCase() === basicChipAttrName) {\n            element.classList.add(basicChipAttrName);\n            return;\n        }\n        else {\n            element.classList.add('mat-standard-chip');\n        }\n    }\n    ngOnDestroy() {\n        this.destroyed.emit({ chip: this });\n        this._chipRipple._removeTriggerEvents();\n    }\n    /** Selects the chip. */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._dispatchSelectionChange();\n            this._markForCheck();\n        }\n    }\n    /** Deselects the chip. */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._dispatchSelectionChange();\n            this._markForCheck();\n        }\n    }\n    /** Select this chip and emit selected event */\n    selectViaInteraction() {\n        if (!this._selected) {\n            this._selected = true;\n            this._dispatchSelectionChange(true);\n            this._markForCheck();\n        }\n    }\n    /** Toggles the current selected state of this chip. */\n    toggleSelected(isUserInput = false) {\n        this._selected = !this.selected;\n        this._dispatchSelectionChange(isUserInput);\n        this._markForCheck();\n        return this.selected;\n    }\n    /** Allows for programmatic focusing of the chip. */\n    focus() {\n        if (!this._hasFocus) {\n            this._elementRef.nativeElement.focus();\n            this._onFocus.next({ chip: this });\n        }\n        this._hasFocus = true;\n    }\n    /**\n     * Allows for programmatic removal of the chip. Called by the MatChipList when the DELETE or\n     * BACKSPACE keys are pressed.\n     *\n     * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n     */\n    remove() {\n        if (this.removable) {\n            this.removed.emit({ chip: this });\n        }\n    }\n    /** Handles click events on the chip. */\n    _handleClick(event) {\n        if (this.disabled) {\n            event.preventDefault();\n        }\n        else {\n            event.stopPropagation();\n        }\n    }\n    /** Handle custom key presses. */\n    _handleKeydown(event) {\n        if (this.disabled) {\n            return;\n        }\n        switch (event.keyCode) {\n            case DELETE:\n            case BACKSPACE:\n                // If we are removable, remove the focused chip\n                this.remove();\n                // Always prevent so page navigation does not occur\n                event.preventDefault();\n                break;\n            case SPACE:\n                // If we are selectable, toggle the focused chip\n                if (this.selectable) {\n                    this.toggleSelected(true);\n                }\n                // Always prevent space from scrolling the page since the list has focus\n                event.preventDefault();\n                break;\n        }\n    }\n    _blur() {\n        // When animations are enabled, Angular may end up removing the chip from the DOM a little\n        // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n        // that moves focus not the next item. To work around the issue, we defer marking the chip\n        // as not focused until the next time the zone stabilizes.\n        this._ngZone.onStable\n            .pipe(take(1))\n            .subscribe(() => {\n            this._ngZone.run(() => {\n                this._hasFocus = false;\n                this._onBlur.next({ chip: this });\n            });\n        });\n    }\n    _dispatchSelectionChange(isUserInput = false) {\n        this.selectionChange.emit({\n            source: this,\n            isUserInput,\n            selected: this._selected\n        });\n    }\n    _markForCheck() {\n        // @breaking-change 9.0.0 Remove this method once the _changeDetectorRef is a required param.\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n}\nMatChip.ɵfac = function MatChip_Factory(t) { return new (t || MatChip)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nMatChip.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChip, selectors: [[\"mat-basic-chip\"], [\"\", \"mat-basic-chip\", \"\"], [\"mat-chip\"], [\"\", \"mat-chip\", \"\"]], contentQueries: function MatChip_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_CHIP_AVATAR, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_CHIP_TRAILING_ICON, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_CHIP_REMOVE, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trailingIcon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.removeIcon = _t.first);\n    } }, hostAttrs: [\"role\", \"option\", 1, \"mat-chip\", \"mat-focus-indicator\"], hostVars: 14, hostBindings: function MatChip_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatChip_click_HostBindingHandler($event) { return ctx._handleClick($event); })(\"keydown\", function MatChip_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatChip_focus_HostBindingHandler() { return ctx.focus(); })(\"blur\", function MatChip_blur_HostBindingHandler() { return ctx._blur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : ctx.tabIndex)(\"disabled\", ctx.disabled || null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-selected\", ctx.ariaSelected);\n        ɵngcc0.ɵɵclassProp(\"mat-chip-selected\", ctx.selected)(\"mat-chip-with-avatar\", ctx.avatar)(\"mat-chip-with-trailing-icon\", ctx.trailingIcon || ctx.removeIcon)(\"mat-chip-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationsDisabled);\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", selected: \"selected\", value: \"value\", selectable: \"selectable\", disabled: \"disabled\", removable: \"removable\" }, outputs: { selectionChange: \"selectionChange\", destroyed: \"destroyed\", removed: \"removed\" }, exportAs: [\"matChip\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatChip.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nMatChip.propDecorators = {\n    avatar: [{ type: ContentChild, args: [MAT_CHIP_AVATAR,] }],\n    trailingIcon: [{ type: ContentChild, args: [MAT_CHIP_TRAILING_ICON,] }],\n    removeIcon: [{ type: ContentChild, args: [MAT_CHIP_REMOVE,] }],\n    selected: [{ type: Input }],\n    value: [{ type: Input }],\n    selectable: [{ type: Input }],\n    disabled: [{ type: Input }],\n    removable: [{ type: Input }],\n    selectionChange: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    removed: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChip, [{\n        type: Directive,\n        args: [{\n                selector: `mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]`,\n                inputs: ['color', 'disableRipple', 'tabIndex'],\n                exportAs: 'matChip',\n                host: {\n                    'class': 'mat-chip mat-focus-indicator',\n                    '[attr.tabindex]': 'disabled ? null : tabIndex',\n                    'role': 'option',\n                    '[class.mat-chip-selected]': 'selected',\n                    '[class.mat-chip-with-avatar]': 'avatar',\n                    '[class.mat-chip-with-trailing-icon]': 'trailingIcon || removeIcon',\n                    '[class.mat-chip-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationsDisabled',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-selected]': 'ariaSelected',\n                    '(click)': '_handleClick($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': 'focus()',\n                    '(blur)': '_blur()'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { selectionChange: [{\n            type: Output\n        }], destroyed: [{\n            type: Output\n        }], removed: [{\n            type: Output\n        }], selected: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selectable: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], removable: [{\n            type: Input\n        }], avatar: [{\n            type: ContentChild,\n            args: [MAT_CHIP_AVATAR]\n        }], trailingIcon: [{\n            type: ContentChild,\n            args: [MAT_CHIP_TRAILING_ICON]\n        }], removeIcon: [{\n            type: ContentChild,\n            args: [MAT_CHIP_REMOVE]\n        }] }); })();\n/**\n * Applies proper (click) support and adds styling for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n *     `<mat-chip>\n *       <mat-icon matChipRemove>cancel</mat-icon>\n *     </mat-chip>`\n *\n * You *may* use a custom icon, but you may need to override the `mat-chip-remove` positioning\n * styles to properly center the icon within the chip.\n */\nclass MatChipRemove {\n    constructor(_parentChip, \n    // @breaking-change 11.0.0 `elementRef` parameter to be made required.\n    elementRef) {\n        this._parentChip = _parentChip;\n        // @breaking-change 11.0.0 Remove null check for `elementRef`.\n        if (elementRef && elementRef.nativeElement.nodeName === 'BUTTON') {\n            elementRef.nativeElement.setAttribute('type', 'button');\n        }\n    }\n    /** Calls the parent chip's public `remove()` method if applicable. */\n    _handleClick(event) {\n        const parentChip = this._parentChip;\n        if (parentChip.removable && !parentChip.disabled) {\n            parentChip.remove();\n        }\n        // We need to stop event propagation because otherwise the event will bubble up to the\n        // form field and cause the `onContainerClick` method to be invoked. This method would then\n        // reset the focused chip that has been focused after chip removal. Usually the parent\n        // the parent click listener of the `MatChip` would prevent propagation, but it can happen\n        // that the chip is being removed before the event bubbles up.\n        event.stopPropagation();\n    }\n}\nMatChipRemove.ɵfac = function MatChipRemove_Factory(t) { return new (t || MatChipRemove)(ɵngcc0.ɵɵdirectiveInject(MatChip), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatChipRemove.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipRemove, selectors: [[\"\", \"matChipRemove\", \"\"]], hostAttrs: [1, \"mat-chip-remove\", \"mat-chip-trailing-icon\"], hostBindings: function MatChipRemove_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatChipRemove_click_HostBindingHandler($event) { return ctx._handleClick($event); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove }])] });\nMatChipRemove.ctorParameters = () => [\n    { type: MatChip },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipRemove, [{\n        type: Directive,\n        args: [{\n                selector: '[matChipRemove]',\n                host: {\n                    'class': 'mat-chip-remove mat-chip-trailing-icon',\n                    '(click)': '_handleClick($event)'\n                },\n                providers: [{ provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove }]\n            }]\n    }], function () { return [{ type: MatChip }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for the chips module. */\nconst MAT_CHIPS_DEFAULT_OPTIONS = new InjectionToken('mat-chips-default-options');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatChipList.\n/** @docs-private */\nclass MatChipListBase {\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, \n    /** @docs-private */\n    ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nconst _MatChipListMixinBase = mixinErrorState(MatChipListBase);\n// Increasing integer for generating unique ids for chip-list components.\nlet nextUniqueId = 0;\n/** Change event object that is emitted when the chip list value has changed. */\nclass MatChipListChange {\n    constructor(\n    /** Chip list that emitted the event. */\n    source, \n    /** Value of the chip list when the event was emitted. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * A material design chips component (named ChipList for its similarity to the List component).\n */\nclass MatChipList extends _MatChipListMixinBase {\n    constructor(_elementRef, _changeDetectorRef, _dir, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, \n    /** @docs-private */\n    ngControl) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this.ngControl = ngControl;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.controlType = 'mat-chip-list';\n        /**\n         * When a chip is destroyed, we store the index of the destroyed chip until the chips\n         * query list notifies about the update. This is necessary because we cannot determine an\n         * appropriate chip that should receive focus until the array of chips updated completely.\n         */\n        this._lastDestroyedChipIndex = null;\n        /** Subject that emits when the component has been destroyed. */\n        this._destroyed = new Subject();\n        /** Uid of the chip list */\n        this._uid = `mat-chip-list-${nextUniqueId++}`;\n        /** Tab index for the chip list. */\n        this._tabIndex = 0;\n        /**\n         * User defined tab index.\n         * When it is not null, use user defined tab index. Otherwise use _tabIndex\n         */\n        this._userTabIndex = null;\n        /** Function when touched */\n        this._onTouched = () => { };\n        /** Function when changed */\n        this._onChange = () => { };\n        this._multiple = false;\n        this._compareWith = (o1, o2) => o1 === o2;\n        this._required = false;\n        this._disabled = false;\n        /** Orientation of the chip list. */\n        this.ariaOrientation = 'horizontal';\n        this._selectable = true;\n        /** Event emitted when the selected chip list value has been changed by the user. */\n        this.change = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the chip-list changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            this.ngControl.valueAccessor = this;\n        }\n    }\n    /** The array of selected chips inside chip list. */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /** The ARIA role applied to the chip list. */\n    get role() { return this.empty ? null : 'listbox'; }\n    /** Whether the user should be allowed to select multiple chips. */\n    get multiple() { return this._multiple; }\n    set multiple(value) {\n        this._multiple = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * A function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    get compareWith() { return this._compareWith; }\n    set compareWith(fn) {\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() { return this._value; }\n    set value(value) {\n        this.writeValue(value);\n        this._value = value;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() {\n        return this._chipInput ? this._chipInput.id : this._uid;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() { return this._required; }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get placeholder() {\n        return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n    }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /** Whether any chips or the matChipInput inside of this chip-list has focus. */\n    get focused() {\n        return (this._chipInput && this._chipInput.focused) || this._hasFocusedChip();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return (!this._chipInput || this._chipInput.empty) && (!this.chips || this.chips.length === 0);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() { return !this.empty || this.focused; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() { return this.ngControl ? !!this.ngControl.disabled : this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * Whether or not this chip list is selectable. When a chip list is not selectable,\n     * the selected states for all the chips inside the chip list are always ignored.\n     */\n    get selectable() { return this._selectable; }\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n        if (this.chips) {\n            this.chips.forEach(chip => chip.chipListSelectable = this._selectable);\n        }\n    }\n    set tabIndex(value) {\n        this._userTabIndex = value;\n        this._tabIndex = value;\n    }\n    /** Combined stream of all of the child chips' selection change events. */\n    get chipSelectionChanges() {\n        return merge(...this.chips.map(chip => chip.selectionChange));\n    }\n    /** Combined stream of all of the child chips' focus change events. */\n    get chipFocusChanges() {\n        return merge(...this.chips.map(chip => chip._onFocus));\n    }\n    /** Combined stream of all of the child chips' blur change events. */\n    get chipBlurChanges() {\n        return merge(...this.chips.map(chip => chip._onBlur));\n    }\n    /** Combined stream of all of the child chips' remove change events. */\n    get chipRemoveChanges() {\n        return merge(...this.chips.map(chip => chip.destroyed));\n    }\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager(this.chips)\n            .withWrap()\n            .withVerticalOrientation()\n            .withHomeAndEnd()\n            .withHorizontalOrientation(this._dir ? this._dir.value : 'ltr');\n        if (this._dir) {\n            this._dir.change\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(dir => this._keyManager.withHorizontalOrientation(dir));\n        }\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._allowFocusEscape();\n        });\n        // When the list changes, re-subscribe\n        this.chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            if (this.disabled) {\n                // Since this happens after the content has been\n                // checked, we need to defer it to the next tick.\n                Promise.resolve().then(() => {\n                    this._syncChipsState();\n                });\n            }\n            this._resetChips();\n            // Reset chips selected/deselected status\n            this._initializeSelection();\n            // Check to see if we need to update our tab index\n            this._updateTabIndex();\n            // Check to see if we have a destroyed chip and need to refocus\n            this._updateFocusForDestroyedChips();\n            this.stateChanges.next();\n        });\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n        this.stateChanges.next();\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n            if (this.ngControl.disabled !== this._disabled) {\n                this.disabled = !!this.ngControl.disabled;\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.stateChanges.complete();\n        this._dropSubscriptions();\n    }\n    /** Associates an HTML input element with this chip list. */\n    registerInput(inputElement) {\n        this._chipInput = inputElement;\n        // We use this attribute to match the chip list to its input in test harnesses.\n        // Set the attribute directly here to avoid \"changed after checked\" errors.\n        this._elementRef.nativeElement.setAttribute('data-mat-chip-input', inputElement.id);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) { this._ariaDescribedby = ids.join(' '); }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        if (this.chips) {\n            this._setSelectionByValue(value, false);\n        }\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick(event) {\n        if (!this._originatesFromChip(event)) {\n            this.focus();\n        }\n    }\n    /**\n     * Focuses the first non-disabled chip in this chip list, or the associated input when there\n     * are no eligible chips.\n     */\n    focus(options) {\n        if (this.disabled) {\n            return;\n        }\n        // TODO: ARIA says this should focus the first `selected` chip if any are selected.\n        // Focus on first element if there's no chipInput inside chip-list\n        if (this._chipInput && this._chipInput.focused) {\n            // do nothing\n        }\n        else if (this.chips.length > 0) {\n            this._keyManager.setFirstItemActive();\n            this.stateChanges.next();\n        }\n        else {\n            this._focusInput(options);\n            this.stateChanges.next();\n        }\n    }\n    /** Attempt to focus an input if we have one. */\n    _focusInput(options) {\n        if (this._chipInput) {\n            this._chipInput.focus(options);\n        }\n    }\n    /**\n     * Pass events to the keyboard manager. Available here for tests.\n     */\n    _keydown(event) {\n        const target = event.target;\n        // If they are on an empty input and hit backspace, focus the last chip\n        if (event.keyCode === BACKSPACE && this._isInputEmpty(target)) {\n            this._keyManager.setLastItemActive();\n            event.preventDefault();\n        }\n        else if (target && target.classList.contains('mat-chip')) {\n            this._keyManager.onKeydown(event);\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Check the tab index as you should not be allowed to focus an empty list.\n     */\n    _updateTabIndex() {\n        // If we have 0 chips, we should not allow keyboard focus\n        this._tabIndex = this._userTabIndex || (this.chips.length === 0 ? -1 : 0);\n    }\n    /**\n     * If the amount of chips changed, we need to update the\n     * key manager state and focus the next closest chip.\n     */\n    _updateFocusForDestroyedChips() {\n        // Move focus to the closest chip. If no other chips remain, focus the chip-list itself.\n        if (this._lastDestroyedChipIndex != null) {\n            if (this.chips.length) {\n                const newChipIndex = Math.min(this._lastDestroyedChipIndex, this.chips.length - 1);\n                this._keyManager.setActiveItem(newChipIndex);\n            }\n            else {\n                this.focus();\n            }\n        }\n        this._lastDestroyedChipIndex = null;\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     *\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of chips.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.chips.length;\n    }\n    _isInputEmpty(element) {\n        if (element && element.nodeName.toLowerCase() === 'input') {\n            let input = element;\n            return !input.value;\n        }\n        return false;\n    }\n    _setSelectionByValue(value, isUserInput = true) {\n        this._clearSelection();\n        this.chips.forEach(chip => chip.deselect());\n        if (Array.isArray(value)) {\n            value.forEach(currentValue => this._selectValue(currentValue, isUserInput));\n            this._sortValues();\n        }\n        else {\n            const correspondingChip = this._selectValue(value, isUserInput);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what chip the user interacted with last.\n            if (correspondingChip) {\n                if (isUserInput) {\n                    this._keyManager.setActiveItem(correspondingChip);\n                }\n            }\n        }\n    }\n    /**\n     * Finds and selects the chip based on its value.\n     * @returns Chip that has the corresponding value.\n     */\n    _selectValue(value, isUserInput = true) {\n        const correspondingChip = this.chips.find(chip => {\n            return chip.value != null && this._compareWith(chip.value, value);\n        });\n        if (correspondingChip) {\n            isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n            this._selectionModel.select(correspondingChip);\n        }\n        return correspondingChip;\n    }\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            if (this.ngControl || this._value) {\n                this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value, false);\n                this.stateChanges.next();\n            }\n        });\n    }\n    /**\n     * Deselects every chip in the list.\n     * @param skip Chip that should not be deselected.\n     */\n    _clearSelection(skip) {\n        this._selectionModel.clear();\n        this.chips.forEach(chip => {\n            if (chip !== skip) {\n                chip.deselect();\n            }\n        });\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the model values, ensuring that they keep the same\n     * order that they have in the panel.\n     */\n    _sortValues() {\n        if (this._multiple) {\n            this._selectionModel.clear();\n            this.chips.forEach(chip => {\n                if (chip.selected) {\n                    this._selectionModel.select(chip);\n                }\n            });\n            this.stateChanges.next();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges(fallbackValue) {\n        let valueToEmit = null;\n        if (Array.isArray(this.selected)) {\n            valueToEmit = this.selected.map(chip => chip.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.change.emit(new MatChipListChange(this, valueToEmit));\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** When blurred, mark the field as touched when focus moved outside the chip list. */\n    _blur() {\n        if (!this._hasFocusedChip()) {\n            this._keyManager.setActiveItem(-1);\n        }\n        if (!this.disabled) {\n            if (this._chipInput) {\n                // If there's a chip input, we should check whether the focus moved to chip input.\n                // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n                // to chip input, do nothing.\n                // Timeout is needed to wait for the focus() event trigger on chip input.\n                setTimeout(() => {\n                    if (!this.focused) {\n                        this._markAsTouched();\n                    }\n                });\n            }\n            else {\n                // If there's no chip input, then mark the field as touched.\n                this._markAsTouched();\n            }\n        }\n    }\n    /** Mark the field as touched */\n    _markAsTouched() {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Removes the `tabindex` from the chip list and resets it back afterwards, allowing the\n     * user to tab out of it. This prevents the list from capturing focus and redirecting\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\n     */\n    _allowFocusEscape() {\n        if (this._tabIndex !== -1) {\n            this._tabIndex = -1;\n            setTimeout(() => {\n                this._tabIndex = this._userTabIndex || 0;\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    _resetChips() {\n        this._dropSubscriptions();\n        this._listenToChipsFocus();\n        this._listenToChipsSelection();\n        this._listenToChipsRemoved();\n    }\n    _dropSubscriptions() {\n        if (this._chipFocusSubscription) {\n            this._chipFocusSubscription.unsubscribe();\n            this._chipFocusSubscription = null;\n        }\n        if (this._chipBlurSubscription) {\n            this._chipBlurSubscription.unsubscribe();\n            this._chipBlurSubscription = null;\n        }\n        if (this._chipSelectionSubscription) {\n            this._chipSelectionSubscription.unsubscribe();\n            this._chipSelectionSubscription = null;\n        }\n        if (this._chipRemoveSubscription) {\n            this._chipRemoveSubscription.unsubscribe();\n            this._chipRemoveSubscription = null;\n        }\n    }\n    /** Listens to user-generated selection events on each chip. */\n    _listenToChipsSelection() {\n        this._chipSelectionSubscription = this.chipSelectionChanges.subscribe(event => {\n            event.source.selected\n                ? this._selectionModel.select(event.source)\n                : this._selectionModel.deselect(event.source);\n            // For single selection chip list, make sure the deselected value is unselected.\n            if (!this.multiple) {\n                this.chips.forEach(chip => {\n                    if (!this._selectionModel.isSelected(chip) && chip.selected) {\n                        chip.deselect();\n                    }\n                });\n            }\n            if (event.isUserInput) {\n                this._propagateChanges();\n            }\n        });\n    }\n    /** Listens to user-generated selection events on each chip. */\n    _listenToChipsFocus() {\n        this._chipFocusSubscription = this.chipFocusChanges.subscribe(event => {\n            let chipIndex = this.chips.toArray().indexOf(event.chip);\n            if (this._isValidIndex(chipIndex)) {\n                this._keyManager.updateActiveItem(chipIndex);\n            }\n            this.stateChanges.next();\n        });\n        this._chipBlurSubscription = this.chipBlurChanges.subscribe(() => {\n            this._blur();\n            this.stateChanges.next();\n        });\n    }\n    _listenToChipsRemoved() {\n        this._chipRemoveSubscription = this.chipRemoveChanges.subscribe(event => {\n            const chip = event.chip;\n            const chipIndex = this.chips.toArray().indexOf(event.chip);\n            // In case the chip that will be removed is currently focused, we temporarily store\n            // the index in order to be able to determine an appropriate sibling chip that will\n            // receive focus.\n            if (this._isValidIndex(chipIndex) && chip._hasFocus) {\n                this._lastDestroyedChipIndex = chipIndex;\n            }\n        });\n    }\n    /** Checks whether an event comes from inside a chip element. */\n    _originatesFromChip(event) {\n        let currentElement = event.target;\n        while (currentElement && currentElement !== this._elementRef.nativeElement) {\n            if (currentElement.classList.contains('mat-chip')) {\n                return true;\n            }\n            currentElement = currentElement.parentElement;\n        }\n        return false;\n    }\n    /** Checks whether any of the chips is focused. */\n    _hasFocusedChip() {\n        return this.chips && this.chips.some(chip => chip._hasFocus);\n    }\n    /** Syncs the list's state with the individual chips. */\n    _syncChipsState() {\n        if (this.chips) {\n            this.chips.forEach(chip => {\n                chip._chipListDisabled = this._disabled;\n                chip._chipListMultiple = this.multiple;\n            });\n        }\n    }\n}\nMatChipList.ɵfac = function MatChipList_Factory(t) { return new (t || MatChipList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NgControl, 10)); };\nMatChipList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatChipList, selectors: [[\"mat-chip-list\"]], contentQueries: function MatChipList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChip, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chips = _t);\n    } }, hostAttrs: [1, \"mat-chip-list\"], hostVars: 15, hostBindings: function MatChipList_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatChipList_focus_HostBindingHandler() { return ctx.focus(); })(\"blur\", function MatChipList_blur_HostBindingHandler() { return ctx._blur(); })(\"keydown\", function MatChipList_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx._uid);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : ctx._tabIndex)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-required\", ctx.role ? ctx.required : null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-multiselectable\", ctx.multiple)(\"role\", ctx.role)(\"aria-orientation\", ctx.ariaOrientation);\n        ɵngcc0.ɵɵclassProp(\"mat-chip-list-disabled\", ctx.disabled)(\"mat-chip-list-invalid\", ctx.errorState)(\"mat-chip-list-required\", ctx.required);\n    } }, inputs: { ariaOrientation: [\"aria-orientation\", \"ariaOrientation\"], multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", required: \"required\", placeholder: \"placeholder\", disabled: \"disabled\", selectable: \"selectable\", tabIndex: \"tabIndex\", errorStateMatcher: \"errorStateMatcher\" }, outputs: { change: \"change\", valueChange: \"valueChange\" }, exportAs: [\"matChipList\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatChipList }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-chip-list-wrapper\"]], template: function MatChipList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\\\"\\\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatChipList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] }\n];\nMatChipList.propDecorators = {\n    errorStateMatcher: [{ type: Input }],\n    multiple: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    required: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    disabled: [{ type: Input }],\n    ariaOrientation: [{ type: Input, args: ['aria-orientation',] }],\n    selectable: [{ type: Input }],\n    tabIndex: [{ type: Input }],\n    change: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    chips: [{ type: ContentChildren, args: [MatChip, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-chip-list',\n                template: `<div class=\"mat-chip-list-wrapper\"><ng-content></ng-content></div>`,\n                exportAs: 'matChipList',\n                host: {\n                    '[attr.tabindex]': 'disabled ? null : _tabIndex',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-required]': 'role ? required : null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.role]': 'role',\n                    '[class.mat-chip-list-disabled]': 'disabled',\n                    '[class.mat-chip-list-invalid]': 'errorState',\n                    '[class.mat-chip-list-required]': 'required',\n                    '[attr.aria-orientation]': 'ariaOrientation',\n                    'class': 'mat-chip-list',\n                    '(focus)': 'focus()',\n                    '(blur)': '_blur()',\n                    '(keydown)': '_keydown($event)',\n                    '[id]': '_uid'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatChipList }],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\\\"\\\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.ErrorStateMatcher }, { type: ɵngcc3.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }]; }, { ariaOrientation: [{\n            type: Input,\n            args: ['aria-orientation']\n        }], change: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], selectable: [{\n            type: Input\n        }], tabIndex: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }], chips: [{\n            type: ContentChildren,\n            args: [MatChip, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids.\nlet nextUniqueId$1 = 0;\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of an `<mat-chip-list>`.\n */\nclass MatChipInput {\n    constructor(_elementRef, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._defaultOptions = _defaultOptions;\n        /** Whether the control is focused. */\n        this.focused = false;\n        this._addOnBlur = false;\n        /**\n         * The list of key codes that will trigger a chipEnd event.\n         *\n         * Defaults to `[ENTER]`.\n         */\n        this.separatorKeyCodes = this._defaultOptions.separatorKeyCodes;\n        /** Emitted when a chip is to be added. */\n        this.chipEnd = new EventEmitter();\n        /** The input's placeholder text. */\n        this.placeholder = '';\n        /** Unique id for the input. */\n        this.id = `mat-chip-list-input-${nextUniqueId$1++}`;\n        this._disabled = false;\n        this._inputElement = this._elementRef.nativeElement;\n    }\n    /** Register input for chip list */\n    set chipList(value) {\n        if (value) {\n            this._chipList = value;\n            this._chipList.registerInput(this);\n        }\n    }\n    /**\n     * Whether or not the chipEnd event will be emitted when the input is blurred.\n     */\n    get addOnBlur() { return this._addOnBlur; }\n    set addOnBlur(value) { this._addOnBlur = coerceBooleanProperty(value); }\n    /** Whether the input is disabled. */\n    get disabled() { return this._disabled || (this._chipList && this._chipList.disabled); }\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /** Whether the input is empty. */\n    get empty() { return !this._inputElement.value; }\n    ngOnChanges() {\n        this._chipList.stateChanges.next();\n    }\n    /** Utility method to make host definition/tests more clear. */\n    _keydown(event) {\n        // Allow the user's focus to escape when they're tabbing forward. Note that we don't\n        // want to do this when going backwards, because focus should go back to the first chip.\n        if (event && event.keyCode === TAB && !hasModifierKey(event, 'shiftKey')) {\n            this._chipList._allowFocusEscape();\n        }\n        this._emitChipEnd(event);\n    }\n    /** Checks to see if the blur should emit the (chipEnd) event. */\n    _blur() {\n        if (this.addOnBlur) {\n            this._emitChipEnd();\n        }\n        this.focused = false;\n        // Blur the chip list if it is not focused\n        if (!this._chipList.focused) {\n            this._chipList._blur();\n        }\n        this._chipList.stateChanges.next();\n    }\n    _focus() {\n        this.focused = true;\n        this._chipList.stateChanges.next();\n    }\n    /** Checks to see if the (chipEnd) event needs to be emitted. */\n    _emitChipEnd(event) {\n        if (!this._inputElement.value && !!event) {\n            this._chipList._keydown(event);\n        }\n        if (!event || this._isSeparatorKey(event)) {\n            this.chipEnd.emit({ input: this._inputElement, value: this._inputElement.value });\n            if (event) {\n                event.preventDefault();\n            }\n        }\n    }\n    _onInput() {\n        // Let chip list know whenever the value changes.\n        this._chipList.stateChanges.next();\n    }\n    /** Focuses the input. */\n    focus(options) {\n        this._inputElement.focus(options);\n    }\n    /** Checks whether a keycode is one of the configured separators. */\n    _isSeparatorKey(event) {\n        return !hasModifierKey(event) && new Set(this.separatorKeyCodes).has(event.keyCode);\n    }\n}\nMatChipInput.ɵfac = function MatChipInput_Factory(t) { return new (t || MatChipInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_CHIPS_DEFAULT_OPTIONS)); };\nMatChipInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipInput, selectors: [[\"input\", \"matChipInputFor\", \"\"]], hostAttrs: [1, \"mat-chip-input\", \"mat-input-element\"], hostVars: 5, hostBindings: function MatChipInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatChipInput_keydown_HostBindingHandler($event) { return ctx._keydown($event); })(\"blur\", function MatChipInput_blur_HostBindingHandler() { return ctx._blur(); })(\"focus\", function MatChipInput_focus_HostBindingHandler() { return ctx._focus(); })(\"input\", function MatChipInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.disabled || null)(\"placeholder\", ctx.placeholder || null)(\"aria-invalid\", ctx._chipList && ctx._chipList.ngControl ? ctx._chipList.ngControl.invalid : null)(\"aria-required\", ctx._chipList && ctx._chipList.required || null);\n    } }, inputs: { separatorKeyCodes: [\"matChipInputSeparatorKeyCodes\", \"separatorKeyCodes\"], placeholder: \"placeholder\", id: \"id\", chipList: [\"matChipInputFor\", \"chipList\"], addOnBlur: [\"matChipInputAddOnBlur\", \"addOnBlur\"], disabled: \"disabled\" }, outputs: { chipEnd: \"matChipInputTokenEnd\" }, exportAs: [\"matChipInput\", \"matChipInputFor\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nMatChipInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_CHIPS_DEFAULT_OPTIONS,] }] }\n];\nMatChipInput.propDecorators = {\n    chipList: [{ type: Input, args: ['matChipInputFor',] }],\n    addOnBlur: [{ type: Input, args: ['matChipInputAddOnBlur',] }],\n    separatorKeyCodes: [{ type: Input, args: ['matChipInputSeparatorKeyCodes',] }],\n    chipEnd: [{ type: Output, args: ['matChipInputTokenEnd',] }],\n    placeholder: [{ type: Input }],\n    id: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipInput, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matChipInputFor]',\n                exportAs: 'matChipInput, matChipInputFor',\n                host: {\n                    'class': 'mat-chip-input mat-input-element',\n                    '(keydown)': '_keydown($event)',\n                    '(blur)': '_blur()',\n                    '(focus)': '_focus()',\n                    '(input)': '_onInput()',\n                    '[id]': 'id',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.placeholder]': 'placeholder || null',\n                    '[attr.aria-invalid]': '_chipList && _chipList.ngControl ? _chipList.ngControl.invalid : null',\n                    '[attr.aria-required]': '_chipList && _chipList.required || null'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_CHIPS_DEFAULT_OPTIONS]\n            }] }]; }, { separatorKeyCodes: [{\n            type: Input,\n            args: ['matChipInputSeparatorKeyCodes']\n        }], chipEnd: [{\n            type: Output,\n            args: ['matChipInputTokenEnd']\n        }], placeholder: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], chipList: [{\n            type: Input,\n            args: ['matChipInputFor']\n        }], addOnBlur: [{\n            type: Input,\n            args: ['matChipInputAddOnBlur']\n        }], disabled: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst CHIP_DECLARATIONS = [\n    MatChipList,\n    MatChip,\n    MatChipInput,\n    MatChipRemove,\n    MatChipAvatar,\n    MatChipTrailingIcon,\n];\nconst ɵ0 = {\n    separatorKeyCodes: [ENTER]\n};\nclass MatChipsModule {\n}\nMatChipsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatChipsModule });\nMatChipsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatChipsModule_Factory(t) { return new (t || MatChipsModule)(); }, providers: [\n        ErrorStateMatcher,\n        {\n            provide: MAT_CHIPS_DEFAULT_OPTIONS,\n            useValue: ɵ0\n        }\n    ] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatChipsModule, { declarations: [MatChipList, MatChip, MatChipInput, MatChipRemove, MatChipAvatar, MatChipTrailingIcon], exports: [MatChipList, MatChip, MatChipInput, MatChipRemove, MatChipAvatar, MatChipTrailingIcon] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipsModule, [{\n        type: NgModule,\n        args: [{\n                exports: CHIP_DECLARATIONS,\n                declarations: CHIP_DECLARATIONS,\n                providers: [\n                    ErrorStateMatcher,\n                    {\n                        provide: MAT_CHIPS_DEFAULT_OPTIONS,\n                        useValue: ɵ0\n                    }\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHIPS_DEFAULT_OPTIONS, MAT_CHIP_AVATAR, MAT_CHIP_REMOVE, MAT_CHIP_TRAILING_ICON, MatChip, MatChipAvatar, MatChipInput, MatChipList, MatChipListChange, MatChipRemove, MatChipSelectionChange, MatChipTrailingIcon, MatChipsModule, ɵ0 };\n\n//# sourceMappingURL=chips.js.map","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","import { Directive, ElementRef, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { openUploadWindow } from '../utils/open-upload-window';\r\nimport { UploadInputConfig } from '../upload-input-config';\r\nimport {UploadedFile} from '@common/uploads/uploaded-file';\r\n\r\n@Directive({\r\n    selector: '[uploadButton]'\r\n})\r\nexport class UploadButtonDirective implements OnInit {\r\n    @Input('uploadButton') config: UploadInputConfig = {};\r\n    @Output() filesSelected = new EventEmitter<UploadedFile[]>();\r\n\r\n    constructor(private el: ElementRef) {}\r\n\r\n    ngOnInit() {\r\n        this.el.nativeElement.addEventListener('click', e => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            openUploadWindow(this.config).then(files => {\r\n                if (files && files.length) {\r\n                    this.filesSelected.emit(files);\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","import { ConnectedPosition } from '@angular/cdk/overlay';\r\n\r\nexport const LEFT_POSITION: ConnectedPosition[] = [\r\n    {originX: 'start', originY: 'center', overlayX: 'end', overlayY: 'center', offsetX: 50},\r\n    {originX: 'end', originY: 'center', overlayX: 'start', overlayY: 'center', offsetX: 50},\r\n];\r\n","<mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"datatable.paginator && datatable.paginator.loading$ | async\"></mat-progress-bar>\n<div class=\"left-column\">\n    <div class=\"default-left-content\" *ngIf=\"!showSelectedActions || !numberOfRowsSelected\">\n        <ng-content select=\"[leftContent]\"></ng-content>\n    </div>\n    <div class=\"selected-left-content capitalize\" *ngIf=\"showSelectedActions && numberOfRowsSelected\">\n        {{ ':count :resource selected' | trans:{count: numberOfRowsSelected, resource: pluralResourceName} }}\n    </div>\n</div>\n<div class=\"right-column\">\n    <div class=\"default-right-content\" *ngIf=\"!showSelectedActions || !numberOfRowsSelected\">\n        <ng-container *ngIf=\"filterPanelTemplate\">\n            <mat-chip-list aria-label=\"Active Filters\" class=\"filter-chip-list\">\n                <mat-chip *ngFor=\"let filter of filters$ | async | keyvalue\" [removable]=\"true\" [selectable]=\"false\" (removed)=\"datatable.removeFilter(filter.key)\">\n                    {{filter.key | trans}}: {{isModel(filter.value) ? (filter.value.name || filter.value.display_name) : filter.value}}\n                    <mat-icon matChipRemove svgIcon=\"cancel\"></mat-icon>\n                </mat-chip>\n            </mat-chip-list>\n            <button (click)=\"openFiltersPanel()\" class=\"filter-button\" [class.active]=\"filterPanelRef\" #filterButton mat-icon-button>\n                <mat-icon svgIcon=\"filter-list\"></mat-icon>\n            </button>\n        </ng-container>\n        <datatable-header-search-input placeholder=\"Search {{ pluralResourceName }}\"></datatable-header-search-input>\n    </div>\n    <div class=\"selected-right-actions\" *ngIf=\"showSelectedActions && numberOfRowsSelected\">\n        <ng-content select=\"[rightContent]\"></ng-content>\n    </div>\n</div>\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    TemplateRef,\n    ViewChild\n} from '@angular/core';\nimport {DatatableService} from '../datatable.service';\nimport {Model} from '../../core/types/models/model';\nimport {Subscription} from 'rxjs';\nimport {OverlayPanel} from '../../core/ui/overlay-panel/overlay-panel.service';\nimport {LEFT_POSITION} from '../../core/ui/overlay-panel/positions/left-position';\nimport {OverlayPanelRef} from '../../core/ui/overlay-panel/overlay-panel-ref';\nimport {DatatableFiltersPanelComponent} from '../datatable-filters-panel/datatable-filters-panel.component';\nimport {map} from 'rxjs/operators';\nimport {removeNullFromObject} from '../../core/utils/remove-null-from-object';\nimport {DatatableFilterValue} from '../types/datatable-filters';\n\n@Component({\n    selector: 'datatable-header',\n    templateUrl: './datatable-header.component.html',\n    styleUrls: ['./datatable-header.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DatatableHeaderComponent implements OnInit, OnDestroy {\n    @HostBinding('class.rows-selected') public numberOfRowsSelected: number;\n    @ContentChild('tableFilters') filterPanelTemplate: TemplateRef<ElementRef>;\n    @ViewChild('filterButton', { read: ElementRef }) filterButton: ElementRef<HTMLButtonElement>;\n    @Input() pluralResourceName: string;\n    @Input() showSelectedActions = true;\n    private subscriptions: Subscription[] = [];\n    public filterPanelRef: OverlayPanelRef<any>;\n\n    public filters$ = this.datatable.filters$\n        .pipe(map(v => {\n            const filters = removeNullFromObject(v);\n            delete filters.query;\n            return filters;\n        }));\n\n    constructor(\n        public datatable: DatatableService<Model>,\n        private cd: ChangeDetectorRef,\n        private overlayPanel: OverlayPanel,\n    ) {}\n\n    ngOnInit() {\n        // close filter panel when any filter is selected.\n        const filterSub = this.datatable.filters$.subscribe(() => {\n            this.filterPanelRef && this.filterPanelRef.close();\n        });\n        const changeSub = this.datatable.selectedRows$.subscribe(value => {\n            this.numberOfRowsSelected = value.length;\n            this.cd.markForCheck();\n        });\n        this.subscriptions = [filterSub, changeSub];\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n    }\n\n    public openFiltersPanel() {\n        if (this.filterPanelRef) {\n            this.filterPanelRef.close();\n        } else {\n            const position = LEFT_POSITION.slice();\n            position[0].offsetY = 40;\n            position[1].offsetY = 40;\n            this.filterPanelRef = this.overlayPanel.open(DatatableFiltersPanelComponent, {\n                origin: this.filterButton,\n                position,\n                mobilePosition: 'center',\n                data: {filters: this.filterPanelTemplate},\n                maxWidth: '90%',\n            });\n            this.filterButton.nativeElement.classList.add('active');\n            this.filterPanelRef.afterClosed().subscribe(() => {\n                this.filterPanelRef = null;\n                this.filterButton.nativeElement.classList.remove('active');\n            });\n        }\n    }\n\n    public isModel(value: DatatableFilterValue) {\n        return typeof value === 'object' && value.id;\n    }\n}\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","export function removeNullFromObject<T>(obj: T): T {\r\n    const copy = {...obj};\r\n    Object.keys(copy).forEach(key => (copy[key] == null || copy[key] === '') && delete copy[key]);\r\n    return copy;\r\n}\r\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {UploadButtonDirective} from './directives/upload-button.directive';\r\nimport {UploadDropzoneDirective} from './directives/upload-dropzone.directive';\r\nimport {UploadProgressBarComponent} from './upload-progress-bar/upload-progress-bar.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n\r\n        // material\r\n        MatButtonModule,\r\n        MatProgressBarModule,\r\n        MatIconModule,\r\n    ],\r\n    declarations: [\r\n        UploadDropzoneDirective,\r\n        UploadButtonDirective,\r\n        UploadProgressBarComponent,\r\n    ],\r\n    exports: [\r\n        UploadDropzoneDirective,\r\n        UploadButtonDirective,\r\n        UploadProgressBarComponent,\r\n    ],\r\n})\r\nexport class UploadsModule {\r\n}\r\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","import {\r\n    AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, HostBinding, Input, OnInit, TemplateRef, ViewChild, ViewEncapsulation\r\n} from '@angular/core';\r\nimport {ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {BehaviorSubject, Observable, of} from 'rxjs';\r\nimport {MatAutocomplete} from '@angular/material/autocomplete';\r\nimport {catchError, debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\r\nimport {Model} from '../../../types/models/model';\r\n\r\ntype ChipValue = 'string' | Model;\r\n\r\n@Component({\r\n    selector: 'chip-input',\r\n    templateUrl: './chip-input.component.html',\r\n    styleUrls: ['./chip-input.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: ChipInputComponent,\r\n        multi: true,\r\n    }]\r\n})\r\nexport class ChipInputComponent implements ControlValueAccessor, OnInit, AfterViewInit {\r\n    @Input() placeholder: string;\r\n    @Input() type = 'text';\r\n    @Input() emailsInput = false;\r\n    @Input() suggestFn: (query: string) => Observable<ChipValue[]>;\r\n    @Input() @HostBinding('class.select-mode') selectMode = false;\r\n    @ViewChild('auto') matAutocomplete: MatAutocomplete;\r\n    @ViewChild('inputEl') inputEl: ElementRef<HTMLInputElement>;\r\n    @ViewChild('selectModeTemplate') selectModeTemplate: TemplateRef<any>;\r\n\r\n    public formControl = new FormControl();\r\n\r\n    public propagateChange: (items: ChipValue[]) => void;\r\n    public items$ = new BehaviorSubject<ChipValue[]>([]);\r\n    public suggestedValues$ = new BehaviorSubject<ChipValue[]>([]);\r\n    @Input() set suggestedValues(values: ChipValue[]) {\r\n        this.suggestedValues$.next(values);\r\n    }\r\n\r\n    constructor(\r\n        public el: ElementRef<HTMLElement>,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        if (this.suggestFn) {\r\n            this.bindToSearchControl();\r\n        }\r\n        if (this.selectMode) {\r\n           // TODO: implement\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.emailsInput) {\r\n            this.parseEmailsOnPaste();\r\n        }\r\n    }\r\n\r\n    public remove(index: number) {\r\n        const items = [...this.items$.value];\r\n        items.splice(index, 1);\r\n        this.items$.next(items);\r\n        this.propagateChange(this.items$.value);\r\n    }\r\n\r\n    public addFromChipInput(value: ChipValue, propagate = true) {\r\n        if (value && !this.matAutocomplete.isOpen && !this.selectMode) {\r\n            this.add(value, propagate);\r\n        }\r\n    }\r\n\r\n    public addFromAutocomplete(value: ChipValue, propagate = true) {\r\n        this.add(value, propagate);\r\n    }\r\n\r\n    private add(value: ChipValue, propagate = true) {\r\n        value = (typeof value === 'string' ? value.trim() : value) as ChipValue;\r\n        const duplicate = this.findValueIndex(value) > -1;\r\n        if (value && !duplicate) {\r\n            this.items$.next([...this.items$.value, value]);\r\n            if (propagate) {\r\n                this.propagateChange(this.items$.value);\r\n            }\r\n        }\r\n        if (this.inputEl) {\r\n            this.inputEl.nativeElement.value = '';\r\n        }\r\n        this.formControl.setValue(null);\r\n        this.suggestedValues$.next([]);\r\n    }\r\n\r\n    private findValueIndex(value: ChipValue) {\r\n        if (typeof value === 'string') {\r\n            return this.items$.value.indexOf(value);\r\n        } else {\r\n            return this.items$.value.findIndex(v => (v as Model).id === value.id);\r\n        }\r\n    }\r\n\r\n    public writeValue(value: ChipValue[] = []) {\r\n        if (value && value.length) {\r\n            value.forEach(item => this.add(item, false));\r\n        } else if (this.items$.value.length) {\r\n            while (this.items$.value.length !== 0) {\r\n                this.remove(0);\r\n            }\r\n        }\r\n    }\r\n\r\n    public registerOnChange(fn: (items: ChipValue[]) => void) {\r\n        this.propagateChange = fn;\r\n    }\r\n\r\n    public registerOnTouched() {}\r\n\r\n    private bindToSearchControl() {\r\n        this.formControl.valueChanges.pipe(\r\n            debounceTime(150),\r\n            distinctUntilChanged(),\r\n            switchMap(query => query ? this.suggestFn(query) : of([])),\r\n            catchError(() => of([])),\r\n        ).subscribe(values => {\r\n            const filtered = values.filter(v => this.findValueIndex(v) === -1);\r\n            this.suggestedValues$.next(filtered);\r\n        });\r\n    }\r\n\r\n    public displayChipValue(value: ChipValue): string {\r\n        return typeof value === 'object' ? value.name : value;\r\n    }\r\n\r\n    private parseEmailsOnPaste() {\r\n        this.inputEl.nativeElement.addEventListener('paste', e => {\r\n            const paste = (e.clipboardData || window['clipboardData']).getData('text');\r\n            const emails = paste.match(/([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+)/gi);\r\n            if (emails) {\r\n                e.preventDefault();\r\n                const selection = window.getSelection();\r\n                if (selection.rangeCount) {\r\n                    selection.deleteFromDocument();\r\n                    emails.forEach(email => this.add(email));\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n","<mat-chip-list #chipList [selectable]=\"false\">\r\n    <mat-chip\r\n        *ngFor=\"let item of items$ | async; index as i\"\r\n        [selectable]=\"false\"\r\n        [removable]=\"!selectMode\"\r\n        (removed)=\"remove(i)\"\r\n    >\r\n        {{displayChipValue(item)}}\r\n        <mat-icon matChipRemove svgIcon=\"cancel\"></mat-icon>\r\n    </mat-chip>\r\n    <input [placeholder]=\"placeholder | trans\"\r\n           *ngIf=\"!selectMode\"\r\n           #inputEl\r\n           [type]=\"type\"\r\n           class=\"mat-chip-input mat-input-element\"\r\n           [matChipInputFor]=\"chipList\"\r\n           [matChipInputAddOnBlur]=\"true\"\r\n           [matAutocomplete]=\"auto\"\r\n           [matAutocompleteConnectedTo]=\"{elementRef: el}\"\r\n           [formControl]=\"formControl\"\r\n           (matChipInputTokenEnd)=\"addFromChipInput($event.value)\" />\r\n</mat-chip-list>\r\n\r\n<mat-autocomplete class=\"chip-input-autocomplete-panel\" #auto=\"matAutocomplete\" (optionSelected)=\"addFromAutocomplete($event.option.value)\" [autoActiveFirstOption]=\"true\">\r\n    <mat-option *ngFor=\"let value of suggestedValues$ | async\" [value]=\"value\">{{displayChipValue(value)}}</mat-option>\r\n</mat-autocomplete>\r\n\r\n<ng-template #selectModeTemplate let-suggestions=\"suggestions\">\r\n    <mat-option *ngFor=\"let value of suggestions\" [value]=\"value\">{{displayChipValue(value)}}</mat-option>\r\n</ng-template>\r\n","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit} from '@angular/core';\nimport {DatatableService} from '../datatable.service';\nimport {Subscription} from 'rxjs';\nimport {Model} from '../../core/types/models/model';\n\n@Component({\n    selector: '[table-header-checkbox]',\n    template: `\n        <mat-checkbox\n            (change)=\"$event ? toggleAllRows() : null\"\n            [checked]=\"allRowsSelected()\"\n            [indeterminate]=\"anyRowsSelected() && ! allRowsSelected()\">\n        </mat-checkbox>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {'class': 'table-checkbox'},\n})\nexport class TableHeaderCheckboxComponent implements OnInit, OnDestroy{\n    private changeRef: Subscription;\n    constructor(\n        public datatable: DatatableService<Model>,\n        private cd: ChangeDetectorRef,\n    ) {}\n\n    ngOnInit() {\n        this.changeRef = this.datatable.selectedRows$.subscribe(() => {\n            this.cd.markForCheck();\n        });\n    }\n\n    ngOnDestroy() {\n        this.changeRef.unsubscribe();\n    }\n\n    public anyRowsSelected(): boolean {\n        return !!this.datatable.selectedRows$.value.length;\n    }\n\n    public allRowsSelected() {\n        return this.datatable.selectedRows$.value.length &&\n            this.datatable.selectedRows$.value.length === this.datatable.data$.value?.length;\n    }\n\n    public toggleAllRows() {\n        if (this.allRowsSelected()) {\n            this.datatable.selectedRows$.next([]);\n        } else {\n            this.datatable.selectedRows$.next(\n                this.datatable.data$.value.map(v => v.id)\n            );\n        }\n    }\n}\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n","import {ChangeDetectionStrategy, Component, HostBinding, Input} from '@angular/core';\nimport {ThemeService} from '../../theme.service';\n\n@Component({\n    selector: 'skeleton',\n    templateUrl: './skeleton.component.html',\n    styleUrls: ['./skeleton.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        'aria-busy': 'true',\n        'aria-valuemin': '0',\n        'aria-valuemax': '100',\n        'aria-valuetext': 'Loading...',\n        'role': 'progressbar',\n    }\n})\nexport class SkeletonComponent {\n    @Input() animation: 'pulsate' | 'wave' = 'wave';\n    @Input() variant: 'avatar' | 'text' | 'rect' = 'text';\n    @HostBinding('class.dark') dark = this.theme.isDarkMode();\n\n    @HostBinding('class.pulsate') get pulsate() {\n        return this.animation === 'pulsate';\n    }\n\n    @HostBinding('class.wave') get wave() {\n        return this.animation === 'wave';\n    }\n\n    @HostBinding('class.avatar') get avatar() {\n        return this.variant === 'avatar';\n    }\n\n    @HostBinding('class.text') get text() {\n        return this.variant === 'text';\n    }\n\n    @HostBinding('class.rect') get rect() {\n        return this.variant === 'rect';\n    }\n\n    constructor(private theme: ThemeService) {}\n}\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n","var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","export function hasKey<K extends string>(key: K, val: any): val is {[P in K]: any} {\r\n    return key in val;\r\n}\r\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys'),\n    keysIn = require('./keysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n","import { UploadedFile } from '../../uploaded-file';\r\nimport { UploadValidation } from './upload-validation';\r\nimport {Translations} from '@common/core/translations/translations.service';\r\n\r\nexport class BlockedExtensionsValidation extends UploadValidation {\r\n    constructor(\r\n        protected params: {extensions: string[]},\r\n        protected i18n: Translations\r\n    ) {\r\n        super();\r\n\r\n        this.errorMessage = this.i18n.t(\r\n            'These file types are not allowed: :extensions',\r\n            {extensions: this.params.extensions.join(', ')}\r\n        );\r\n    }\r\n\r\n    public fails(file: UploadedFile) {\r\n        return this.params.extensions.some(extension => {\r\n            return extension === file.extension;\r\n        });\r\n    }\r\n}\r\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n","var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n","<ng-container *ngIf=\"user\">\n    <img [src]=\"user.avatar\" alt=\"\">\n    <div class=\"content\">\n        <div>{{user.display_name}}</div>\n        <div class=\"email secondary\">{{user.email}}</div>\n    </div>\n</ng-container>\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {User} from '@common/core/types/models/User';\n\n@Component({\n    selector: 'user-column',\n    templateUrl: './user-column.component.html',\n    styleUrls: ['./user-column.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {'class': 'column-with-image'},\n})\nexport class UserColumnComponent {\n    @Input() user: User;\n    @Input() showEmail = false;\n}\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    ViewChild\n} from '@angular/core';\nimport {DatatableService} from '../datatable.service';\nimport {Subscription} from 'rxjs';\nimport {Model} from '../../core/types/models/model';\nimport {FocusMonitor} from '@angular/cdk/a11y';\nimport {filter} from 'rxjs/operators';\nimport {ENTER, SPACE} from '@angular/cdk/keycodes';\nimport {slugifyString} from '../../core/utils/slugify-string';\n\n@Component({\n    selector: '[table-sort-header]',\n    templateUrl: './table-sort-header.component.html',\n    styleUrls: ['./table-sort-header.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        'tabindex': '0',\n        '(click)': 'handleClick()',\n        '(keydown)': 'handleKeydown($event)',\n        '(mouseenter)': 'onMouseEnter()',\n        '(mouseleave)': 'onMouseLeave()',\n    }\n})\nexport class TableSortHeaderComponent implements OnInit, AfterViewInit, OnDestroy {\n    @ViewChild('columnName', {static: true}) columnName: ElementRef<HTMLElement>;\n    @Input('table-sort-header') public orderBy: string;\n\n    @HostBinding('class.active')\n    public orderDir: 'desc'|'asc'|null = null;\n\n    @HostBinding('class.sort-disabled') get sortDisabled() {\n        return this.datable.config?.disableSort;\n    }\n\n    private sortSub: Subscription;\n    public arrowVisible = false;\n    public arrowDirection: 'down'|'up' = 'down';\n\n    constructor(\n        public datable: DatatableService<Model>,\n        private cd: ChangeDetectorRef,\n        private focusMonitor: FocusMonitor,\n        private el: ElementRef<HTMLElement>,\n    ) {}\n\n    ngOnInit() {\n        // get column name from <ng-content> if none is explicitly provided\n        if ( ! this.orderBy) {\n            this.orderBy = slugifyString(this.columnName.nativeElement.textContent, '_');\n        }\n\n        // hide arrow when sort column is changed to different column\n        this.sortSub = this.datable.sort$\n            .pipe(filter(sort => (sort.orderBy !== this.orderBy)))\n            .subscribe(() => {\n                this.orderDir = null;\n                this.onMouseLeave();\n                this.cd.markForCheck();\n            });\n    }\n\n    ngAfterViewInit() {\n        // add '.cdk-keyboard-focused' when tabbing to other sort headers\n        this.focusMonitor.monitor(this.el).subscribe();\n    }\n\n    ngOnDestroy() {\n        this.sortSub.unsubscribe();\n        this.focusMonitor.stopMonitoring(this.el);\n    }\n\n    public changeSort() {\n        this.datable.sort$.next({\n            orderBy: this.orderBy,\n            orderDir: this.getDirection(this.orderDir),\n        });\n    }\n\n    private getDirection(current: string) {\n        switch (current) {\n            case 'asc':\n                this.arrowVisible = false;\n                return this.orderDir = null;\n            case 'desc':\n                this.arrowVisible = true;\n                this.arrowDirection = 'up';\n                return this.orderDir = 'asc';\n            default:\n                this.arrowVisible = true;\n                this.arrowDirection = 'down';\n                return this.orderDir = 'desc';\n        }\n    }\n\n    public onMouseEnter() {\n        if ( ! this.datable.config?.disableSort) {\n            this.arrowVisible = true;\n        }\n    }\n\n    public onMouseLeave() {\n        this.arrowVisible = false;\n        if ( ! this.orderDir) {\n            this.arrowDirection = 'down';\n        }\n    }\n\n    public handleClick() {\n        if ( ! this.datable.config?.disableSort) {\n            this.changeSort();\n        }\n    }\n\n    public handleKeydown(e: KeyboardEvent) {\n        if ( !this.datable.config?.disableSort && (e.keyCode === SPACE || e.keyCode === ENTER)) {\n            e.preventDefault();\n            this.changeSort();\n        }\n    }\n}\n","<span class=\"text\" #columnName>\n    <ng-content></ng-content>\n</span>\n<span class=\"icon-wrapper\" [ngClass]=\"arrowDirection\">\n    <mat-icon svgIcon=\"arrow-downward\" class=\"sort-icon\" [class.hint-visible]=\"arrowVisible\"></mat-icon>\n</span>\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n","import { Injectable } from '@angular/core';\nimport { Workspace } from './types/workspace';\nimport { PaginationParams } from '@common/core/types/pagination/pagination-params';\nimport { PaginatedBackendResponse } from '@common/core/types/pagination/paginated-backend-response';\nimport { BackendResponse } from '@common/core/types/backend-response';\nimport { AppHttpClient } from '@common/core/http/app-http-client.service';\nimport { WorkspaceMember } from './types/workspace-member';\nimport { WorkspaceInvite } from './types/workspace-invite';\nimport { filter, tap } from 'rxjs/operators';\nimport { CurrentUser } from '@common/auth/current-user';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { PaginationResponse } from '@common/core/types/pagination/pagination-response';\nimport { hasKey } from '@common/core/utils/has-key';\nimport { CookieService } from '../core/services/cookie.service';\nimport { NotificationService } from '../notifications/notification-list/notification.service';\nimport { WORKSPACE_INVITE_NOTIF_TYPE, WorkspaceInviteNotif } from './types/workspace-invite-notif';\nimport { Toast } from '../core/ui/toast.service';\nimport {BackendErrorResponse} from '../core/types/backend-error-response';\nimport {DatabaseNotification} from '../notifications/database-notification';\nimport {HttpErrors} from '../core/http/errors/http-errors.enum';\n\nconst PERSONAL_WORKSPACE = {name: 'Default', default: true, id: null};\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class WorkspacesService {\n    static BASE_URI = 'workspace';\n    public available$ = new BehaviorSubject<Workspace[]>([PERSONAL_WORKSPACE]);\n    public activeId$ = new BehaviorSubject<number>(this.getIdFromCookie());\n    public activeWorkspace$ = new BehaviorSubject<Workspace>(this.getIdFromCookie() ? null : PERSONAL_WORKSPACE);\n\n    constructor(\n        private http: AppHttpClient,\n        private currentUser: CurrentUser,\n        private cookie: CookieService,\n        private notifications: NotificationService,\n        private toast: Toast,\n    ) {}\n\n    public currentUserCan(permission: string): boolean {\n        const member = this.activeWorkspace$.value?.currentUser;\n        return member && (member.is_owner || member.permissions.findIndex(p => p.name === permission) > -1);\n    }\n\n    public select(workspaceId: number) {\n        if (workspaceId !== this.activeId$.value) {\n            this.cookie.set(this.cookieName(), workspaceId);\n            this.activeId$.next(workspaceId);\n        }\n        const workspace = this.available$.value.find(w => w.id === this.activeId$.value);\n        this.activeWorkspace$.next(workspace || this.available$.value[0]);\n    }\n\n    public pushAndSelect(workspace: Workspace) {\n        this.available$.next([...this.available$.value, workspace]);\n        this.select(workspace.id);\n    }\n\n    public replace(workspace: Workspace) {\n        const workspaces = [...this.available$.value];\n        const i = workspaces.findIndex(w => w.id === workspace.id);\n        if (i) {\n            workspaces[i] = workspace;\n        }\n        this.available$.next(workspaces);\n    }\n\n    public remove(ids: number[]) {\n        const workspaces = [...this.available$.value];\n        ids.forEach(id => {\n            const i = workspaces.findIndex(w => w.id === id);\n            if (i) {\n                workspaces.splice(i, 1);\n            }\n        });\n        this.available$.next(workspaces);\n        if (ids.includes(this.activeId$.value)) {\n            this.select(null);\n        }\n    }\n\n    public index(params: {userId?: number} & PaginationParams): PaginatedBackendResponse<Workspace> {\n        return this.http.get<{pagination: PaginationResponse<Workspace>}>(`${WorkspacesService.BASE_URI}`, params)\n            .pipe(tap(response => {\n                this.available$.next([...this.available$.value, ...response.pagination.data]);\n                this.select(this.activeId$.value);\n            }));\n    }\n\n    public get(workspaceId: number): BackendResponse<{workspace: Workspace}> {\n        return this.http.get(`${WorkspacesService.BASE_URI}/${workspaceId}`);\n    }\n\n    public delete(ids: number[]): BackendResponse<unknown> {\n        return this.http.delete(`${WorkspacesService.BASE_URI}/${ids}`)\n            .pipe(tap(() => {\n                this.remove(ids);\n            }));\n    }\n\n    public create(payload: Partial<Workspace>): BackendResponse<{workspace: Workspace}> {\n        return this.http.post<{workspace: Workspace}>(`${WorkspacesService.BASE_URI}`, payload)\n            .pipe(tap(response => this.pushAndSelect(response.workspace)));\n    }\n\n    public update(id: number, payload: Partial<Workspace>): BackendResponse<{workspace: Workspace}> {\n        return this.http.put<{workspace: Workspace}>(`${WorkspacesService.BASE_URI}/${id}`, payload)\n            .pipe(tap(response => this.replace(response.workspace)));\n    }\n\n    public invitePeople(workspaceId: number, params: {emails: string[], roleId: number}): BackendResponse<{invites: WorkspaceInvite[]}> {\n        return this.http.post(`${WorkspacesService.BASE_URI}/${workspaceId}/invite`, params);\n    }\n\n    public resendInvite(workspaceId: number, inviteId: string): BackendResponse<{invite: WorkspaceInvite}> {\n        return this.http.post(`${WorkspacesService.BASE_URI}/${workspaceId}/${inviteId}/resend`);\n    }\n\n    public deleteMember(workspaceId: number, userId: number): BackendResponse<unknown> {\n        return this.http.delete(`${WorkspacesService.BASE_URI}/${workspaceId}/member/${userId}`)\n            .pipe(tap(() => {\n                if (userId === this.currentUser.get('id')) {\n                    this.remove([workspaceId]);\n                }\n            }));\n    }\n\n    public deleteInvite(inviteId: string): BackendResponse<void> {\n        return this.http.delete(`${WorkspacesService.BASE_URI}/invite/${inviteId}`);\n    }\n\n    public changeRole(workspaceId: number, member: WorkspaceMember|WorkspaceInvite, roleId: number): BackendResponse<void> {\n        const memberId = hasKey('member_id', member) ? member.member_id : member.id;\n        return this.http.post(`${WorkspacesService.BASE_URI}/${workspaceId}/${member.model_type}/${memberId}/change-role`, {roleId});\n    }\n\n    public join(inviteId: string): BackendResponse<{workspace: Workspace}> {\n        return this.http.get(`workspace/join/${inviteId}`);\n    }\n\n    public bindToNotificationClick(): Subscription {\n        return this.notifications.clickedOnNotification$\n            .pipe(filter(data => data.notification.type === WORKSPACE_INVITE_NOTIF_TYPE))\n            .subscribe(data => {\n                const inviteId = (data.notification as WorkspaceInviteNotif).data.inviteId;\n                if (data.action.action === 'join') {\n                    this.join(inviteId).subscribe(response => {\n                        this.notifications.delete([data.notification]).subscribe();\n                        this.pushAndSelect(response.workspace);\n                        this.toast.open('Joined workspace.');\n                    }, (err: BackendErrorResponse) => {\n                        this.handleWorkspaceInviteClickError(err, data.notification);\n                    });\n                } else if (data.action.action === 'decline') {\n                    this.deleteInvite(inviteId).subscribe(() => {\n                        this.notifications.delete([data.notification]).subscribe();\n                        this.toast.open('Declined workspace invite.');\n                    }, (err: BackendErrorResponse) => {\n                        this.handleWorkspaceInviteClickError(err, data.notification);\n                    });\n                }\n            });\n    }\n\n    private handleWorkspaceInviteClickError(err: BackendErrorResponse, notif: DatabaseNotification) {\n        if (err.status === 404) {\n            this.notifications.delete([notif]).subscribe();\n            this.toast.open('That invite is no longer valid.');\n        } else {\n            this.toast.open(HttpErrors.Default);\n        }\n    }\n\n    private getIdFromCookie() {\n        const workspaceId = this.cookie.get(this.cookieName());\n        return typeof workspaceId === 'string' ? parseInt(workspaceId) : workspaceId;\n    }\n\n    private cookieName() {\n        return `${this.currentUser.get('id')}_activeWorkspace`;\n    }\n}\n","import { DatabaseNotification, DatabaseNotificationData } from '../../notifications/database-notification';\r\n\r\nexport const WORKSPACE_INVITE_NOTIF_TYPE = 'Common\\\\Workspaces\\\\Notifications\\\\WorkspaceInvitation';\r\n\r\nexport interface WorkspaceInviteNotif extends DatabaseNotification {\r\n    data: DatabaseNotificationData & {inviteId: string};\r\n}\r\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","import { Subscriber } from '../Subscriber';\nexport function mapTo(value) {\n    return (source) => source.lift(new MapToOperator(value));\n}\nclass MapToOperator {\n    constructor(value) {\n        this.value = value;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new MapToSubscriber(subscriber, this.value));\n    }\n}\nclass MapToSubscriber extends Subscriber {\n    constructor(destination, value) {\n        super(destination);\n        this.value = value;\n    }\n    _next(x) {\n        this.destination.next(this.value);\n    }\n}\n//# sourceMappingURL=mapTo.js.map","import { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { CdkScrollable, ScrollDispatcher, ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Inject, forwardRef, ElementRef, NgZone, EventEmitter, Optional, Input, HostBinding, Output, HostListener, QueryList, ContentChildren, ContentChild, ViewChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { FocusTrapFactory, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, map, mapTo, takeUntil, distinctUntilChanged, take, startWith, debounceTime } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material drawers.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/a11y';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/bidi';\nimport * as ɵngcc5 from '@angular/common';\n\nconst _c0 = [\"*\"];\nfunction MatDrawerContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatDrawerContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2._onBackdropClicked(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n} }\nfunction MatDrawerContainer_mat_drawer_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-drawer-content\");\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c1 = [[[\"mat-drawer\"]], [[\"mat-drawer-content\"]], \"*\"];\nconst _c2 = [\"mat-drawer\", \"mat-drawer-content\", \"*\"];\nfunction MatSidenavContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatSidenavContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2._onBackdropClicked(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n} }\nfunction MatSidenavContainer_mat_sidenav_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-sidenav-content\", 3);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c3 = [[[\"mat-sidenav\"]], [[\"mat-sidenav-content\"]], \"*\"];\nconst _c4 = [\"mat-sidenav\", \"mat-sidenav-content\", \"*\"];\nconst _c5 = \".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\";\nconst matDrawerAnimations = {\n    /** Animation that slides a drawer in and out. */\n    transformDrawer: trigger('transform', [\n        // We remove the `transform` here completely, rather than setting it to zero, because:\n        // 1. Having a transform can cause elements with ripples or an animated\n        //    transform to shift around in Chrome with an RTL layout (see #10023).\n        // 2. 3d transforms causes text to appear blurry on IE and Edge.\n        state('open, open-instant', style({\n            'transform': 'none',\n            'visibility': 'visible',\n        })),\n        state('void', style({\n            // Avoids the shadow showing up when closed in SSR.\n            'box-shadow': 'none',\n            'visibility': 'hidden',\n        })),\n        transition('void => open-instant', animate('0ms')),\n        transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n    ])\n};\n\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * @docs-private\n */\nfunction throwMatDuplicatedDrawerError(position) {\n    throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/** Configures whether drawers should use auto sizing by default. */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n    providedIn: 'root',\n    factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY,\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * @docs-private\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/** @docs-private */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n    return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n    constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n        super(elementRef, scrollDispatcher, ngZone);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._container = _container;\n    }\n    ngAfterContentInit() {\n        this._container._contentMarginChanges.subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n}\nMatDrawerContent.ɵfac = function MatDrawerContent_Factory(t) { return new (t || MatDrawerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatDrawerContainer)), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatDrawerContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContent, selectors: [[\"mat-drawer-content\"]], hostAttrs: [1, \"mat-drawer-content\"], hostVars: 4, hostBindings: function MatDrawerContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatDrawerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\nMatDrawerContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatDrawerContainer, decorators: [{ type: Inject, args: [forwardRef(() => MatDrawerContainer),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawerContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatDrawerContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatDrawerContainer)]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n    constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _doc, _container) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._focusMonitor = _focusMonitor;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._doc = _doc;\n        this._container = _container;\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        /** Whether the drawer is initialized. Used for disabling the initial animation. */\n        this._enableAnimations = false;\n        this._position = 'start';\n        this._mode = 'over';\n        this._disableClose = false;\n        this._opened = false;\n        /** Emits whenever the drawer has started animating. */\n        this._animationStarted = new Subject();\n        /** Emits whenever the drawer is done animating. */\n        this._animationEnd = new Subject();\n        /** Current state of the sidenav animation. */\n        // @HostBinding is used in the class as it is expected to be extended.  Since @Component decorator\n        // metadata is not inherited by child classes, instead the host binding data is defined in a way\n        // that can be inherited.\n        // tslint:disable:no-host-decorator-in-concrete\n        this._animationState = 'void';\n        /** Event emitted when the drawer open state is changed. */\n        this.openedChange = \n        // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n        new EventEmitter(/* isAsync */ true);\n        /** Event emitted when the drawer has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the drawer has started opening. */\n        this.openedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState.indexOf('open') === 0), mapTo(undefined));\n        /** Event emitted when the drawer has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the drawer has started closing. */\n        this.closedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState === 'void'), mapTo(undefined));\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Event emitted when the drawer's position changes. */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onPositionChanged = new EventEmitter();\n        /**\n         * An observable that emits when the drawer mode changes. This is used by the drawer container to\n         * to know when to when the mode changes so it can adapt the margins on the content.\n         */\n        this._modeChanged = new Subject();\n        this.openedChange.subscribe((opened) => {\n            if (opened) {\n                if (this._doc) {\n                    this._elementFocusedBeforeDrawerWasOpened = this._doc.activeElement;\n                }\n                this._takeFocus();\n            }\n            else if (this._isFocusWithinDrawer()) {\n                this._restoreFocus();\n            }\n        });\n        /**\n         * Listen to `keydown` events outside the zone so that change detection is not run every\n         * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n         * and we don't have close disabled.\n         */\n        this._ngZone.runOutsideAngular(() => {\n            fromEvent(this._elementRef.nativeElement, 'keydown').pipe(filter(event => {\n                return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n            }), takeUntil(this._destroyed)).subscribe(event => this._ngZone.run(() => {\n                this.close();\n                event.stopPropagation();\n                event.preventDefault();\n            }));\n        });\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._animationEnd.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe((event) => {\n            const { fromState, toState } = event;\n            if ((toState.indexOf('open') === 0 && fromState === 'void') ||\n                (toState === 'void' && fromState.indexOf('open') === 0)) {\n                this.openedChange.emit(this._opened);\n            }\n        });\n    }\n    /** The side that the drawer is attached to. */\n    get position() { return this._position; }\n    set position(value) {\n        // Make sure we have a valid value.\n        value = value === 'end' ? 'end' : 'start';\n        if (value != this._position) {\n            this._position = value;\n            this.onPositionChanged.emit();\n        }\n    }\n    /** Mode of the drawer; one of 'over', 'push' or 'side'. */\n    get mode() { return this._mode; }\n    set mode(value) {\n        this._mode = value;\n        this._updateFocusTrapState();\n        this._modeChanged.next();\n    }\n    /** Whether the drawer can be closed with the escape key or by clicking on the backdrop. */\n    get disableClose() { return this._disableClose; }\n    set disableClose(value) { this._disableClose = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n     * enabled, focus will be moved into the sidenav in `side` mode as well.\n     */\n    get autoFocus() {\n        const value = this._autoFocus;\n        // Note that usually we disable auto focusing in `side` mode, because we don't know how the\n        // sidenav is being used, but in some cases it still makes sense to do it. If the consumer\n        // explicitly enabled `autoFocus`, we take it as them always wanting to enable it.\n        return value == null ? this.mode !== 'side' : value;\n    }\n    set autoFocus(value) { this._autoFocus = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     */\n    get opened() { return this._opened; }\n    set opened(value) { this.toggle(coerceBooleanProperty(value)); }\n    /**\n     * Moves focus into the drawer. Note that this works even if\n     * the focus trap is disabled in `side` mode.\n     */\n    _takeFocus() {\n        if (!this.autoFocus || !this._focusTrap) {\n            return;\n        }\n        this._focusTrap.focusInitialElementWhenReady().then(hasMovedFocus => {\n            // If there were no focusable elements, focus the sidenav itself so the keyboard navigation\n            // still works. We need to check that `focus` is a function due to Universal.\n            if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n                this._elementRef.nativeElement.focus();\n            }\n        });\n    }\n    /**\n     * Restores focus to the element that was originally focused when the drawer opened.\n     * If no element was focused at that time, the focus will be restored to the drawer.\n     */\n    _restoreFocus() {\n        if (!this.autoFocus) {\n            return;\n        }\n        // Note that we don't check via `instanceof HTMLElement` so that we can cover SVGs as well.\n        if (this._elementFocusedBeforeDrawerWasOpened) {\n            this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia);\n        }\n        else {\n            this._elementRef.nativeElement.blur();\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        this._openedVia = null;\n    }\n    /** Whether focus is currently within the drawer. */\n    _isFocusWithinDrawer() {\n        var _a;\n        const activeEl = (_a = this._doc) === null || _a === void 0 ? void 0 : _a.activeElement;\n        return !!activeEl && this._elementRef.nativeElement.contains(activeEl);\n    }\n    ngAfterContentInit() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._updateFocusTrapState();\n    }\n    ngAfterContentChecked() {\n        // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n        // drawers that are open by default. When we're on the server, we shouldn't enable the\n        // animations, because we don't want the drawer to animate the first time the user sees\n        // the page.\n        if (this._platform.isBrowser) {\n            this._enableAnimations = true;\n        }\n    }\n    ngOnDestroy() {\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n        this._animationStarted.complete();\n        this._animationEnd.complete();\n        this._modeChanged.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Open the drawer.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    open(openedVia) {\n        return this.toggle(true, openedVia);\n    }\n    /** Close the drawer. */\n    close() {\n        return this.toggle(false);\n    }\n    /** Closes the drawer with context that the backdrop was clicked. */\n    _closeViaBackdropClick() {\n        // If the drawer is closed upon a backdrop click, we always want to restore focus. We\n        // don't need to check whether focus is currently in the drawer, as clicking on the\n        // backdrop causes blurring of the active element.\n        return this._setOpen(/* isOpen */ false, /* restoreFocus */ true);\n    }\n    /**\n     * Toggle this drawer.\n     * @param isOpen Whether the drawer should be open.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    toggle(isOpen = !this.opened, openedVia) {\n        // If the focus is currently inside the drawer content and we are closing the drawer,\n        // restore the focus to the initially focused element (when the drawer opened).\n        return this._setOpen(isOpen, /* restoreFocus */ !isOpen && this._isFocusWithinDrawer(), openedVia);\n    }\n    /**\n     * Toggles the opened state of the drawer.\n     * @param isOpen Whether the drawer should open or close.\n     * @param restoreFocus Whether focus should be restored on close.\n     * @param openedVia Focus origin that can be optionally set when opening a drawer. The\n     *   origin will be used later when focus is restored on drawer close.\n     */\n    _setOpen(isOpen, restoreFocus, openedVia = 'program') {\n        this._opened = isOpen;\n        if (isOpen) {\n            this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n            this._openedVia = openedVia;\n        }\n        else {\n            this._animationState = 'void';\n            if (restoreFocus) {\n                this._restoreFocus();\n            }\n        }\n        this._updateFocusTrapState();\n        return new Promise(resolve => {\n            this.openedChange.pipe(take(1)).subscribe(open => resolve(open ? 'open' : 'close'));\n        });\n    }\n    _getWidth() {\n        return this._elementRef.nativeElement ? (this._elementRef.nativeElement.offsetWidth || 0) : 0;\n    }\n    /** Updates the enabled state of the focus trap. */\n    _updateFocusTrapState() {\n        if (this._focusTrap) {\n            // The focus trap is only enabled when the drawer is open in any mode other than side.\n            this._focusTrap.enabled = this.opened && this.mode !== 'side';\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationStartListener(event) {\n        this._animationStarted.next(event);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationDoneListener(event) {\n        this._animationEnd.next(event);\n    }\n}\nMatDrawer.ɵfac = function MatDrawer_Factory(t) { return new (t || MatDrawer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_CONTAINER, 8)); };\nMatDrawer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawer, selectors: [[\"mat-drawer\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\"], hostVars: 12, hostBindings: function MatDrawer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵsyntheticHostListener(\"@transform.start\", function MatDrawer_animation_transform_start_HostBindingHandler($event) { return ctx._animationStartListener($event); })(\"@transform.done\", function MatDrawer_animation_transform_done_HostBindingHandler($event) { return ctx._animationDoneListener($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@transform\", ctx._animationState);\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened);\n    } }, inputs: { position: \"position\", mode: \"mode\", disableClose: \"disableClose\", autoFocus: \"autoFocus\", opened: \"opened\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", openedStart: \"openedStart\", _closedStream: \"closed\", closedStart: \"closedStart\", onPositionChanged: \"positionChanged\" }, exportAs: [\"matDrawer\"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-drawer-inner-container\"]], template: function MatDrawer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\nMatDrawer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: FocusMonitor },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDrawerContainer, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DRAWER_CONTAINER,] }] }\n];\nMatDrawer.propDecorators = {\n    position: [{ type: Input }],\n    mode: [{ type: Input }],\n    disableClose: [{ type: Input }],\n    autoFocus: [{ type: Input }],\n    opened: [{ type: Input }],\n    _animationState: [{ type: HostBinding, args: ['@transform',] }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    openedStart: [{ type: Output }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    closedStart: [{ type: Output }],\n    onPositionChanged: [{ type: Output, args: ['positionChanged',] }],\n    _animationStartListener: [{ type: HostListener, args: ['@transform.start', ['$event'],] }],\n    _animationDoneListener: [{ type: HostListener, args: ['@transform.done', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer',\n                exportAs: 'matDrawer',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    'tabIndex': '-1'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.FocusTrapFactory }, { type: ɵngcc2.FocusMonitor }, { type: ɵngcc3.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatDrawerContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DRAWER_CONTAINER]\n            }] }]; }, { _animationState: [{\n            type: HostBinding,\n            args: ['@transform']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], openedStart: [{\n            type: Output\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], closedStart: [{\n            type: Output\n        }], onPositionChanged: [{\n            type: Output,\n            args: ['positionChanged']\n        }], position: [{\n            type: Input\n        }], mode: [{\n            type: Input\n        }], disableClose: [{\n            type: Input\n        }], autoFocus: [{\n            type: Input\n        }], opened: [{\n            type: Input\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationStartListener: [{\n            type: HostListener,\n            args: ['@transform.start', ['$event']]\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationDoneListener: [{\n            type: HostListener,\n            args: ['@transform.done', ['$event']]\n        }] }); })();\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n    constructor(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize = false, _animationMode) {\n        this._dir = _dir;\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** Drawers that belong to this container. */\n        this._drawers = new QueryList();\n        /** Event emitted when the drawer backdrop is clicked. */\n        this.backdropClick = new EventEmitter();\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Emits on every ngDoCheck. Used for debouncing reflows. */\n        this._doCheckSubject = new Subject();\n        /**\n         * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n         * drawer is open. We use margin rather than transform even for push mode because transform breaks\n         * fixed position elements inside of the transformed element.\n         */\n        this._contentMargins = { left: null, right: null };\n        this._contentMarginChanges = new Subject();\n        // If a `Dir` directive exists up the tree, listen direction changes\n        // and update the left/right properties to point to the proper start/end.\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                this._validateDrawers();\n                this.updateContentMargins();\n            });\n        }\n        // Since the minimum width of the sidenav depends on the viewport width,\n        // we need to recompute the margins if the viewport changes.\n        viewportRuler.change()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this.updateContentMargins());\n        this._autosize = defaultAutosize;\n    }\n    /** The drawer child with the `start` position. */\n    get start() { return this._start; }\n    /** The drawer child with the `end` position. */\n    get end() { return this._end; }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     */\n    get autosize() { return this._autosize; }\n    set autosize(value) { this._autosize = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     */\n    get hasBackdrop() {\n        if (this._backdropOverride == null) {\n            return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n        }\n        return this._backdropOverride;\n    }\n    set hasBackdrop(value) {\n        this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    /** Reference to the CdkScrollable instance that wraps the scrollable content. */\n    get scrollable() {\n        return this._userContent || this._content;\n    }\n    ngAfterContentInit() {\n        this._allDrawers.changes\n            .pipe(startWith(this._allDrawers), takeUntil(this._destroyed))\n            .subscribe((drawer) => {\n            this._drawers.reset(drawer.filter(item => !item._container || item._container === this));\n            this._drawers.notifyOnChanges();\n        });\n        this._drawers.changes.pipe(startWith(null)).subscribe(() => {\n            this._validateDrawers();\n            this._drawers.forEach((drawer) => {\n                this._watchDrawerToggle(drawer);\n                this._watchDrawerPosition(drawer);\n                this._watchDrawerMode(drawer);\n            });\n            if (!this._drawers.length ||\n                this._isDrawerOpen(this._start) ||\n                this._isDrawerOpen(this._end)) {\n                this.updateContentMargins();\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n        // Avoid hitting the NgZone through the debounce timeout.\n        this._ngZone.runOutsideAngular(() => {\n            this._doCheckSubject.pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n            takeUntil(this._destroyed)).subscribe(() => this.updateContentMargins());\n        });\n    }\n    ngOnDestroy() {\n        this._contentMarginChanges.complete();\n        this._doCheckSubject.complete();\n        this._drawers.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Calls `open` of both start and end drawers */\n    open() {\n        this._drawers.forEach(drawer => drawer.open());\n    }\n    /** Calls `close` of both start and end drawers */\n    close() {\n        this._drawers.forEach(drawer => drawer.close());\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     */\n    updateContentMargins() {\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        let left = 0;\n        let right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._getWidth();\n            }\n            else if (this._left.mode == 'push') {\n                const width = this._left._getWidth();\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._getWidth();\n            }\n            else if (this._right.mode == 'push') {\n                const width = this._right._getWidth();\n                right += width;\n                left -= width;\n            }\n        }\n        // If either `right` or `left` is zero, don't set a style to the element. This\n        // allows users to specify a custom size via CSS class in SSR scenarios where the\n        // measured widths will always be zero. Note that we reset to `null` here, rather\n        // than below, in order to ensure that the types in the `if` below are consistent.\n        left = left || null;\n        right = right || null;\n        if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n            this._contentMargins = { left, right };\n            // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n            // to do it only when something changed, otherwise we can end up hitting the zone too often.\n            this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins));\n        }\n    }\n    ngDoCheck() {\n        // If users opted into autosizing, do a check every change detection cycle.\n        if (this._autosize && this._isPushed()) {\n            // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n            this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());\n        }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     */\n    _watchDrawerToggle(drawer) {\n        drawer._animationStarted.pipe(filter((event) => event.fromState !== event.toState), takeUntil(this._drawers.changes))\n            .subscribe((event) => {\n            // Set the transition class on the container so that the animations occur. This should not\n            // be set initially because animations should only be triggered via a change in state.\n            if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n                this._element.nativeElement.classList.add('mat-drawer-transition');\n            }\n            this.updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (drawer.mode !== 'side') {\n            drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe(() => this._setContainerClass(drawer.opened));\n        }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     */\n    _watchDrawerPosition(drawer) {\n        if (!drawer) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n            this._ngZone.onMicrotaskEmpty.pipe(take(1)).subscribe(() => {\n                this._validateDrawers();\n            });\n        });\n    }\n    /** Subscribes to changes in drawer mode so we can run change detection. */\n    _watchDrawerMode(drawer) {\n        if (drawer) {\n            drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n                .subscribe(() => {\n                this.updateContentMargins();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /** Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element. */\n    _setContainerClass(isAdd) {\n        const classList = this._element.nativeElement.classList;\n        const className = 'mat-drawer-container-has-open';\n        if (isAdd) {\n            classList.add(className);\n        }\n        else {\n            classList.remove(className);\n        }\n    }\n    /** Validate the state of the drawer children components. */\n    _validateDrawers() {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach(drawer => {\n            if (drawer.position == 'end') {\n                if (this._end != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                this._end = drawer;\n            }\n            else {\n                if (this._start != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                this._start = drawer;\n            }\n        });\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir && this._dir.value === 'rtl') {\n            this._left = this._end;\n            this._right = this._start;\n        }\n        else {\n            this._left = this._start;\n            this._right = this._end;\n        }\n    }\n    /** Whether the container is being pushed to the side by one of the drawers. */\n    _isPushed() {\n        return (this._isDrawerOpen(this._start) && this._start.mode != 'over') ||\n            (this._isDrawerOpen(this._end) && this._end.mode != 'over');\n    }\n    _onBackdropClicked() {\n        this.backdropClick.emit();\n        this._closeModalDrawersViaBackdrop();\n    }\n    _closeModalDrawersViaBackdrop() {\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter(drawer => drawer && !drawer.disableClose && this._canHaveBackdrop(drawer))\n            .forEach(drawer => drawer._closeViaBackdropClick());\n    }\n    _isShowingBackdrop() {\n        return (this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start)) ||\n            (this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end));\n    }\n    _canHaveBackdrop(drawer) {\n        return drawer.mode !== 'side' || !!this._backdropOverride;\n    }\n    _isDrawerOpen(drawer) {\n        return drawer != null && drawer.opened;\n    }\n}\nMatDrawerContainer.ɵfac = function MatDrawerContainer_Factory(t) { return new (t || MatDrawerContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_DEFAULT_AUTOSIZE), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatDrawerContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContainer, selectors: [[\"mat-drawer-container\"]], contentQueries: function MatDrawerContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawerContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawer, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, viewQuery: function MatDrawerContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatDrawerContent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._userContent = _t.first);\n    } }, hostAttrs: [1, \"mat-drawer-container\"], hostVars: 2, hostBindings: function MatDrawerContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, inputs: { autosize: \"autosize\", hasBackdrop: \"hasBackdrop\" }, outputs: { backdropClick: \"backdropClick\" }, exportAs: [\"matDrawerContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatDrawerContainer\n            }])], ngContentSelectors: _c2, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]], template: function MatDrawerContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵtemplate(0, MatDrawerContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatDrawerContainer_mat_drawer_content_3_Template, 2, 0, \"mat-drawer-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, directives: [ɵngcc5.NgIf, MatDrawerContent], styles: [_c5], encapsulation: 2, changeDetection: 0 });\nMatDrawerContainer.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DRAWER_DEFAULT_AUTOSIZE,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatDrawerContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatDrawerContent,] }],\n    _userContent: [{ type: ViewChild, args: [MatDrawerContent,] }],\n    autosize: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    backdropClick: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawerContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer-container',\n                exportAs: 'matDrawerContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n<mat-drawer-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-drawer-content>\\n\",\n                host: {\n                    'class': 'mat-drawer-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatDrawerContainer\n                    }],\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc4.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { backdropClick: [{\n            type: Output\n        }], autosize: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], _allDrawers: [{\n            type: ContentChildren,\n            args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatDrawerContent]\n        }], _userContent: [{\n            type: ViewChild,\n            args: [MatDrawerContent]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSidenavContent extends MatDrawerContent {\n    constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n        super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n    }\n}\nMatSidenavContent.ɵfac = function MatSidenavContent_Factory(t) { return new (t || MatSidenavContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatSidenavContainer)), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatSidenavContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContent, selectors: [[\"mat-sidenav-content\"]], hostAttrs: [1, \"mat-drawer-content\", \"mat-sidenav-content\"], hostVars: 4, hostBindings: function MatSidenavContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSidenavContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\nMatSidenavContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatSidenavContainer, decorators: [{ type: Inject, args: [forwardRef(() => MatSidenavContainer),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content mat-sidenav-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatSidenavContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatSidenavContainer)]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nclass MatSidenav extends MatDrawer {\n    constructor() {\n        super(...arguments);\n        this._fixedInViewport = false;\n        this._fixedTopGap = 0;\n        this._fixedBottomGap = 0;\n    }\n    /** Whether the sidenav is fixed in the viewport. */\n    get fixedInViewport() { return this._fixedInViewport; }\n    set fixedInViewport(value) { this._fixedInViewport = coerceBooleanProperty(value); }\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     */\n    get fixedTopGap() { return this._fixedTopGap; }\n    set fixedTopGap(value) { this._fixedTopGap = coerceNumberProperty(value); }\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     */\n    get fixedBottomGap() { return this._fixedBottomGap; }\n    set fixedBottomGap(value) { this._fixedBottomGap = coerceNumberProperty(value); }\n}\nMatSidenav.ɵfac = function MatSidenav_Factory(t) { return ɵMatSidenav_BaseFactory(t || MatSidenav); };\nMatSidenav.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenav, selectors: [[\"mat-sidenav\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\", \"mat-sidenav\"], hostVars: 17, hostBindings: function MatSidenav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵstyleProp(\"top\", ctx.fixedInViewport ? ctx.fixedTopGap : null, \"px\")(\"bottom\", ctx.fixedInViewport ? ctx.fixedBottomGap : null, \"px\");\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened)(\"mat-sidenav-fixed\", ctx.fixedInViewport);\n    } }, inputs: { fixedInViewport: \"fixedInViewport\", fixedTopGap: \"fixedTopGap\", fixedBottomGap: \"fixedBottomGap\" }, exportAs: [\"matSidenav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-drawer-inner-container\"]], template: function MatSidenav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\nMatSidenav.propDecorators = {\n    fixedInViewport: [{ type: Input }],\n    fixedTopGap: [{ type: Input }],\n    fixedBottomGap: [{ type: Input }]\n};\nconst ɵMatSidenav_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatSidenav);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenav, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav',\n                exportAs: 'matSidenav',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer mat-sidenav',\n                    'tabIndex': '-1',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    '[class.mat-sidenav-fixed]': 'fixedInViewport',\n                    '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n                    '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, { fixedInViewport: [{\n            type: Input\n        }], fixedTopGap: [{\n            type: Input\n        }], fixedBottomGap: [{\n            type: Input\n        }] }); })();\nclass MatSidenavContainer extends MatDrawerContainer {\n}\nMatSidenavContainer.ɵfac = function MatSidenavContainer_Factory(t) { return ɵMatSidenavContainer_BaseFactory(t || MatSidenavContainer); };\nMatSidenavContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContainer, selectors: [[\"mat-sidenav-container\"]], contentQueries: function MatSidenavContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenavContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenav, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, hostAttrs: [1, \"mat-drawer-container\", \"mat-sidenav-container\"], hostVars: 2, hostBindings: function MatSidenavContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, exportAs: [\"matSidenavContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatSidenavContainer\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [\"cdkScrollable\", \"\", 4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"], [\"cdkScrollable\", \"\"]], template: function MatSidenavContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵtemplate(0, MatSidenavContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatSidenavContainer_mat_sidenav_content_3_Template, 2, 0, \"mat-sidenav-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, directives: [ɵngcc5.NgIf, MatSidenavContent, ɵngcc1.CdkScrollable], styles: [_c5], encapsulation: 2, changeDetection: 0 });\nMatSidenavContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatSidenavContent,] }]\n};\nconst ɵMatSidenavContainer_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatSidenavContainer);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav-container',\n                exportAs: 'matSidenavContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n<mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable>\\n  <ng-content></ng-content>\\n</mat-sidenav-content>\\n\",\n                host: {\n                    'class': 'mat-drawer-container mat-sidenav-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatSidenavContainer\n                    }],\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n            }]\n    }], null, { _allDrawers: [{\n            type: ContentChildren,\n            args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatSidenavContent]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSidenavModule {\n}\nMatSidenavModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSidenavModule });\nMatSidenavModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSidenavModule_Factory(t) { return new (t || MatSidenavModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            PlatformModule,\n            CdkScrollableModule,\n        ], CdkScrollableModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSidenavModule, { declarations: function () { return [MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PlatformModule,\n        CdkScrollableModule]; }, exports: function () { return [CdkScrollableModule,\n        MatCommonModule, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PlatformModule,\n                    CdkScrollableModule,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    MatCommonModule,\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ],\n                declarations: [\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError, MAT_DRAWER_CONTAINER as ɵangular_material_src_material_sidenav_sidenav_a };\n\n//# sourceMappingURL=sidenav.js.map","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","import {ChangeDetectionStrategy, Component, Input, OnInit} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\nimport {DatatableService} from '../../datatable.service';\nimport {Model} from '@common/core/types/models/model';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n    selector: 'datatable-header-search-input',\n    templateUrl: './datatable-header-search-input.component.html',\n    styleUrls: ['./datatable-header-search-input.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DatatableHeaderSearchInputComponent implements OnInit {\n    public searchControl = new FormControl(this.route.snapshot.queryParams.query);\n    @Input() placeholder: string;\n    @Input() hideIcon = false;\n\n    constructor(\n        public datatable: DatatableService<Model>,\n        private route: ActivatedRoute,\n    ) {}\n\n    ngOnInit() {\n        this.searchControl.valueChanges\n            .pipe(debounceTime(400), distinctUntilChanged())\n            .subscribe(query => {\n                this.datatable.addFilter('query', query);\n            });\n    }\n}\n","<div class=\"input-container search-input-container\">\n    <input type=\"text\" class=\"search-input\" [placeholder]=\"placeholder | trans\" [formControl]=\"searchControl\">\n    <mat-icon svgIcon=\"search\" *ngIf=\"!hideIcon\"></mat-icon>\n</div>\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n","var isObject = require('./isObject');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {DatatableService} from '../datatable.service';\nimport {Subscription} from 'rxjs';\nimport {Model} from '../../core/types/models/model';\n\n@Component({\n    selector: '[table-body-checkbox]',\n    template: `\n        <mat-checkbox (click)=\"$event.stopPropagation()\"\n                      (change)=\"$event ? toggleRow(rowId) : null\"\n                      [checked]=\"isRowSelected(rowId)\">\n        </mat-checkbox>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {'class': 'table-checkbox'}\n})\nexport class TableBodyCheckboxComponent implements OnInit, OnDestroy {\n    @Input('table-body-checkbox') rowId: number;\n    private changeRef: Subscription;\n\n    constructor(\n        public datatable: DatatableService<Model>,\n        private cd: ChangeDetectorRef,\n    ) {}\n\n    ngOnInit() {\n        this.changeRef = this.datatable.selectedRows$.subscribe(value => {\n            this.cd.markForCheck();\n        });\n    }\n\n    ngOnDestroy() {\n        this.changeRef.unsubscribe();\n    }\n\n    public isRowSelected(id: number): boolean {\n        return this.datatable.selectedRows$.value.indexOf(id) > -1;\n    }\n\n    public toggleRow(id: number) {\n        if (this.isRowSelected(id)) {\n            const array = this.datatable.selectedRows$.value.slice();\n            const i = this.datatable.selectedRows$.value.indexOf(id);\n            array.splice(i, 1);\n            this.datatable.selectedRows$.next(array);\n        } else {\n            this.datatable.selectedRows$.next(\n                [...this.datatable.selectedRows$.value, id]\n            );\n        }\n    }\n}\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport const defaultThrottleConfig = {\n    leading: true,\n    trailing: false\n};\nexport function throttle(durationSelector, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleOperator(durationSelector, !!config.leading, !!config.trailing));\n}\nclass ThrottleOperator {\n    constructor(durationSelector, leading, trailing) {\n        this.durationSelector = durationSelector;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n    }\n}\nclass ThrottleSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, durationSelector, _leading, _trailing) {\n        super(destination);\n        this.destination = destination;\n        this.durationSelector = durationSelector;\n        this._leading = _leading;\n        this._trailing = _trailing;\n        this._hasValue = false;\n    }\n    _next(value) {\n        this._hasValue = true;\n        this._sendValue = value;\n        if (!this._throttled) {\n            if (this._leading) {\n                this.send();\n            }\n            else {\n                this.throttle(value);\n            }\n        }\n    }\n    send() {\n        const { _hasValue, _sendValue } = this;\n        if (_hasValue) {\n            this.destination.next(_sendValue);\n            this.throttle(_sendValue);\n        }\n        this._hasValue = false;\n        this._sendValue = undefined;\n    }\n    throttle(value) {\n        const duration = this.tryDurationSelector(value);\n        if (!!duration) {\n            this.add(this._throttled = innerSubscribe(duration, new SimpleInnerSubscriber(this)));\n        }\n    }\n    tryDurationSelector(value) {\n        try {\n            return this.durationSelector(value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return null;\n        }\n    }\n    throttlingDone() {\n        const { _throttled, _trailing } = this;\n        if (_throttled) {\n            _throttled.unsubscribe();\n        }\n        this._throttled = undefined;\n        if (_trailing) {\n            this.send();\n        }\n    }\n    notifyNext() {\n        this.throttlingDone();\n    }\n    notifyComplete() {\n        this.throttlingDone();\n    }\n}\n//# sourceMappingURL=throttle.js.map","import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { defaultThrottleConfig } from './throttle';\nexport function throttleTime(duration, scheduler = async, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\nclass ThrottleTimeOperator {\n    constructor(duration, scheduler, leading, trailing) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n    }\n}\nclass ThrottleTimeSubscriber extends Subscriber {\n    constructor(destination, duration, scheduler, leading, trailing) {\n        super(destination);\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n        this._hasTrailingValue = false;\n        this._trailingValue = null;\n    }\n    _next(value) {\n        if (this.throttled) {\n            if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n        else {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n            if (this.leading) {\n                this.destination.next(value);\n            }\n            else if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n    }\n    _complete() {\n        if (this._hasTrailingValue) {\n            this.destination.next(this._trailingValue);\n            this.destination.complete();\n        }\n        else {\n            this.destination.complete();\n        }\n    }\n    clearThrottle() {\n        const throttled = this.throttled;\n        if (throttled) {\n            if (this.trailing && this._hasTrailingValue) {\n                this.destination.next(this._trailingValue);\n                this._trailingValue = null;\n                this._hasTrailingValue = false;\n            }\n            throttled.unsubscribe();\n            this.remove(throttled);\n            this.throttled = null;\n        }\n    }\n}\nfunction dispatchNext(arg) {\n    const { subscriber } = arg;\n    subscriber.clearThrottle();\n}\n//# sourceMappingURL=throttleTime.js.map","import { Injectable } from '@angular/core';\r\nimport {UploadValidator} from './upload-validator';\r\nimport {FileSizeValidation} from './validations/file-size-validation';\r\nimport {AllowedExtensionsValidation} from './validations/allowed-extensions-validation';\r\nimport {BlockedExtensionsValidation} from './validations/blocked-extensions-validation';\r\nimport {convertToBytes} from '../../core/utils/convertToBytes';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DefaultUploadValidator extends UploadValidator {\r\n    protected readonly DEFAULT_MAX_FILE_SIZE_MB = 8;\r\n    public showToast = true;\r\n\r\n    protected initValidations() {\r\n        this.validations.push(\r\n            new FileSizeValidation(\r\n                {maxSize: this.getMaxFileSize()},\r\n                this.i18n\r\n            )\r\n        );\r\n\r\n        const allowedExtensions = this.getAllowedExtensions(),\r\n            blockedExtensions = this.getBlockedExtensions();\r\n\r\n        if (allowedExtensions && allowedExtensions.length) {\r\n            this.validations.push(new AllowedExtensionsValidation(\r\n                {extensions: allowedExtensions}, this.i18n\r\n            ));\r\n        }\r\n\r\n        if (blockedExtensions && blockedExtensions.length) {\r\n            this.validations.push(new BlockedExtensionsValidation(\r\n                {extensions: blockedExtensions}, this.i18n\r\n            ));\r\n        }\r\n    }\r\n\r\n    protected getMaxFileSize(): number {\r\n        return this.settings.get(\r\n            'uploads.max_size',\r\n            convertToBytes(this.DEFAULT_MAX_FILE_SIZE_MB, 'MB')\r\n        );\r\n    }\r\n\r\n    protected getAllowedExtensions() {\r\n        return this.settings.getJson('uploads.allowed_extensions');\r\n    }\r\n\r\n    protected getBlockedExtensions() {\r\n        return this.settings.getJson('uploads.blocked_extensions');\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {UploadQueueItem} from './upload-queue-item';\r\nimport {BehaviorSubject, EMPTY, from, ReplaySubject, Subject, throwError} from 'rxjs';\r\nimport {catchError, filter, map, mergeMap, takeUntil} from 'rxjs/operators';\r\nimport {UploadedFile} from '../uploaded-file';\r\nimport {UploadCompletedEvent, UploadEvent, UploadEventTypes, UploadProgressEvent} from '../utils/upload-progress-event';\r\nimport {UploadFileResponse, UploadsApiService} from '../uploads-api.service';\r\nimport {FileEntry} from '../types/file-entry';\r\nimport {UploadValidator} from '../validation/upload-validator';\r\nimport {BackendErrorResponse} from '../../core/types/backend-error-response';\r\nimport {DefaultUploadValidator} from '../validation/default-upload-validator';\r\nimport {BackendResponse} from '@common/core/types/backend-response';\r\nimport {Toast} from '@common/core/ui/toast.service';\r\nimport {HttpErrors, UPLOAD_FAIL_LEARN_MORE_LINK} from '@common/core/http/errors/http-errors.enum';\r\nimport {UploadApiConfig} from '@common/uploads/types/upload-api-config';\r\nimport {CurrentUser} from '@common/auth/current-user';\r\nimport {Settings} from '@common/core/config/settings.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UploadQueueService {\r\n    public uploads$ = new BehaviorSubject<UploadQueueItem[]>([]);\r\n    public totalProgress$ = new ReplaySubject<number>(1);\r\n    public uploadsAdded$ = new Subject<UploadQueueItem[]>();\r\n    public count$ = new BehaviorSubject<{pending: number, completed: number}>({pending: 0, completed: 0});\r\n\r\n    constructor(\r\n        private api: UploadsApiService,\r\n        private defaultValidator: DefaultUploadValidator,\r\n        private toast: Toast,\r\n        private currentUser: CurrentUser,\r\n        private settings: Settings,\r\n    ) {}\r\n\r\n    public isEmpty(): boolean {\r\n        return !this.uploads$.value.length;\r\n    }\r\n\r\n    public getAllCompleted(): FileEntry[] {\r\n        return this.uploads$.value\r\n            .filter(queueItem => queueItem.completed)\r\n            .map(queueItem => queueItem.fileEntry);\r\n    }\r\n\r\n    public updateTotalProgress() {\r\n        const progress = this.uploads$.value.map(upload => upload.progress$.value.percentage || 0);\r\n        this.totalProgress$.next(progress.reduce((p, c) => p + c, 0) / progress.length);\r\n    }\r\n\r\n    public totalProgress() {\r\n        return this.totalProgress$.asObservable();\r\n    }\r\n\r\n    public start(files: UploadedFile[]|{[key: string]: UploadedFile}, config: UploadApiConfig = {}): BackendResponse<UploadFileResponse> {\r\n        const validator = config.validator || this.defaultValidator;\r\n        let uploadQueueItems = [] as UploadQueueItem[];\r\n\r\n        // push new uploads onto existing queue\r\n        if (Array.isArray(files)) {\r\n            uploadQueueItems = this.transformUploads(files, validator);\r\n            this.uploads$.next(this.uploads$.value.concat(uploadQueueItems));\r\n            this.uploadsAdded$.next(uploadQueueItems);\r\n\r\n        // replace existing uploads in the queue with new upload by specified upload ID\r\n        } else {\r\n            const replacements = this.uploads$.value.map(queueItem => {\r\n                if (files[queueItem.id]) {\r\n                    const transformed = this.transformUploads([files[queueItem.id]], validator, queueItem.id)[0];\r\n                    uploadQueueItems.push(transformed);\r\n                    return transformed;\r\n                } else {\r\n                    return queueItem;\r\n                }\r\n            });\r\n            this.uploads$.next(replacements);\r\n        }\r\n\r\n        this.updateCount();\r\n\r\n        return from(uploadQueueItems.filter(u => !u.error$.value))\r\n            .pipe(\r\n                mergeMap(uploadQueueItem => {\r\n                    return this.api.upload(uploadQueueItem.uploadedFile, config).pipe(\r\n                        catchError((errResponse: BackendErrorResponse) => {\r\n                            this.handleUploadFailure(errResponse, uploadQueueItem, validator);\r\n                            // if one item in the queue fails, either continue uploading other items\r\n                            // or immediately stop uploading and bubble up error to subscribers\r\n                            return config.bubbleError ? throwError(errResponse) : EMPTY;\r\n                        }),\r\n                        takeUntil(uploadQueueItem.canceled$),\r\n                        map(response => {\r\n                            this.handleUploadEvent(response, uploadQueueItem, config.willProcessFiles);\r\n                            // assign queue item ID to upload completed response so\r\n                            // file entry can be matched to specific upload queue item\r\n                            if (response.name === UploadEventTypes.COMPLETED) {\r\n                                response.body.queueItemId = uploadQueueItem.id;\r\n                            }\r\n                            return response;\r\n                        }),\r\n                    );\r\n                }, 1),\r\n                filter(e => e.name === UploadEventTypes.COMPLETED),\r\n                map((e: UploadCompletedEvent) => e.body)\r\n            );\r\n    }\r\n\r\n    public updateProgress(id: string, e: UploadProgressEvent) {\r\n        const queueItem = this.find(id);\r\n        if ( ! queueItem) return;\r\n\r\n        queueItem.setProgress({\r\n            eta: e.eta,\r\n            speed: e.speed,\r\n            percentage: e.progress,\r\n            totalBytes: e.totalBytes,\r\n            completedBytes: e.completedBytes,\r\n        });\r\n\r\n        this.updateTotalProgress();\r\n    }\r\n\r\n    public completeUpload(id: string, response: UploadFileResponse) {\r\n        const queueItem = this.find(id);\r\n        if ( ! queueItem) return;\r\n\r\n        queueItem.uploadedResponse$.next(response);\r\n        queueItem.fileEntry = response.fileEntry;\r\n        queueItem.complete();\r\n        this.updateTotalProgress();\r\n    }\r\n\r\n    public errorUpload(id: string, message?: string) {\r\n        this.find(id).addError(message);\r\n    }\r\n\r\n    public reset() {\r\n        this.uploads$.value.forEach(u => u.cancel());\r\n        this.uploads$.next([]);\r\n    }\r\n\r\n    public remove(id: string) {\r\n        const i = this.uploads$.value.findIndex(u => u.id === id),\r\n            upload = this.uploads$.value[i];\r\n        upload.completed ? upload.finalize() : upload.cancel();\r\n        this.uploads$.value.splice(i, 1);\r\n        this.uploads$.next(this.uploads$.value);\r\n    }\r\n\r\n    public find(id: string): UploadQueueItem {\r\n        return this.uploads$.value.find(u => u.id === id);\r\n    }\r\n\r\n    /**\r\n     * Transform specified files into upload queue items.\r\n     */\r\n    protected transformUploads(files: UploadedFile[], validator: UploadValidator, queueId?: string) {\r\n        return files.map(file => {\r\n            const activeUpload = new UploadQueueItem(file, queueId);\r\n\r\n            // validate upload\r\n            if (validator) {\r\n                const result = validator.validate(file);\r\n                if (result.failed) activeUpload.addError(result.errorMessage);\r\n            }\r\n\r\n            return activeUpload;\r\n        });\r\n    }\r\n\r\n    protected handleUploadEvent(event: UploadEvent, upload: UploadQueueItem, willProcessFiles = false) {\r\n        if (event.name === UploadEventTypes.PROGRESS) {\r\n            // upload is considered complete when progress equals 100\r\n            // but file processing for large files might take some time\r\n            // after file is fully uploaded so we should only set\r\n            // progress as 100 on final completed response\r\n            if (event.progress === 100) {\r\n                // TODO: implement processing functionality for chunked upploading\r\n                event = {...event, progress: 99};\r\n                if (willProcessFiles) {\r\n                    upload.processing$.next(true);\r\n                }\r\n            }\r\n            this.updateProgress(upload.id, event);\r\n        } else if (event.name === UploadEventTypes.COMPLETED) {\r\n            this.completeUpload(upload.id, event.body);\r\n            this.updateCount();\r\n        }\r\n    }\r\n\r\n    protected handleUploadFailure(response: BackendErrorResponse, upload: UploadQueueItem, validator: UploadValidator) {\r\n        let msg = response?.errors?.file,\r\n            showLearnMoreButton = null;\r\n        if ( ! msg) {\r\n            msg = HttpErrors.DefaultUpload;\r\n            showLearnMoreButton = this.currentUser.isAdmin() && !this.settings.get('site.hide_docs_buttons');\r\n        }\r\n\r\n        this.errorUpload(upload.id, msg);\r\n        this.updateCount();\r\n        this.updateTotalProgress();\r\n\r\n        if (validator.showToast) {\r\n            this.toast.open(msg, {action: showLearnMoreButton ? 'Learn More' : null})\r\n                .onAction()\r\n                .subscribe(() => {\r\n                    window.open(UPLOAD_FAIL_LEARN_MORE_LINK);\r\n                });\r\n        }\r\n    }\r\n\r\n    private updateCount() {\r\n        const pending = this.uploads$.value.filter(u => u.inProgress).length;\r\n        this.count$.next({pending, completed: this.uploads$.value.length - pending});\r\n    }\r\n}\r\n","import { BehaviorSubject, ReplaySubject, Subject } from 'rxjs';\r\nimport { randomString } from '../../core/utils/random-string';\r\nimport { UploadedFile } from '../uploaded-file';\r\nimport { FileEntry } from '../types/file-entry';\r\nimport { UploadFileResponse } from '@common/uploads/uploads-api.service';\r\n\r\nexport interface UploadQueueItemProgress {\r\n    percentage?: number;\r\n    speed?: string;\r\n    eta?: string;\r\n    totalBytes?: number;\r\n    completedBytes?: number;\r\n}\r\n\r\nexport class UploadQueueItem {\r\n    id: string;\r\n    canceled$: Subject<boolean> = new Subject();\r\n    processing$ = new BehaviorSubject<boolean>(false);\r\n\r\n    // file info (static)\r\n    uploadedFile: UploadedFile;\r\n\r\n    // backend response once file is uploaded\r\n    uploadedResponse$ = new ReplaySubject<UploadFileResponse>(1);\r\n\r\n    // uploaded file entry (only available on completed uploads)\r\n    fileEntry: FileEntry;\r\n\r\n    // upload progress information (will change)\r\n    progress$ = new BehaviorSubject<UploadQueueItemProgress>({percentage: 0});\r\n\r\n    error$ = new BehaviorSubject<string>(null);\r\n\r\n    // custom data that can be attached to queue item\r\n    public customData: object = {};\r\n\r\n    get completed(): boolean {\r\n        return !this.processing$.value && this.progress$.value.percentage === 100;\r\n    }\r\n\r\n    get inProgress(): boolean {\r\n        return !this.error$.value && !this.completed;\r\n    }\r\n\r\n    constructor(file: UploadedFile, queueId?: string) {\r\n        this.uploadedFile = file;\r\n        this.id = queueId || randomString();\r\n    }\r\n\r\n    public cancel() {\r\n        // cancelling before finalizing might cause infinite loop\r\n        this.canceled$.next(true);\r\n        this.finalize();\r\n    }\r\n\r\n    public complete() {\r\n        this.setProgress({percentage: 100, eta: null});\r\n        this.finalize();\r\n    }\r\n\r\n    public finalize() {\r\n        this.uploadedResponse$.complete();\r\n        this.canceled$.complete();\r\n        this.progress$.complete();\r\n    }\r\n\r\n    public finishProcessing() {\r\n        this.processing$.next(false);\r\n        this.processing$.complete();\r\n    }\r\n\r\n    public addError(message: string) {\r\n        this.error$.next(message);\r\n    }\r\n\r\n    public setProgress(data: Partial<UploadQueueItemProgress>) {\r\n        this.progress$.next({\r\n            ...this.progress$.value,\r\n            ...data,\r\n        });\r\n    }\r\n}\r\n","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","import {ConfirmModalData} from '../core/ui/confirm-modal/confirm-modal.component';\r\n\r\nexport const DELETE_RESOURCE_MESSAGE: ConfirmModalData = {\r\n    title: `Delete :resource`,\r\n    body:  `Are you sure you want to delete selected :resource?`,\r\n    ok:    'Delete'\r\n};\r\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","import { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Inject, NgZone, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MAT_LABEL_GLOBAL_OPTIONS, MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"underline\"];\nconst _c1 = [\"connectionContainer\"];\nconst _c2 = [\"inputContainer\"];\nconst _c3 = [\"label\"];\nfunction MatFormField_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵelement(3, \"div\", 16);\n    ɵngcc0.ɵɵelement(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15);\n    ɵngcc0.ɵɵelement(7, \"div\", 16);\n    ɵngcc0.ɵɵelement(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nfunction MatFormField_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r10._control.placeholder);\n} }\nfunction MatFormField_label_9_ng_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatFormField_label_9_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.updateOutlineGap(); });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_ng_content_3_Template, 1, 0, \"ng-content\", 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat())(\"mat-form-field-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat())(\"mat-accent\", ctx_r4.color == \"accent\")(\"mat-warn\", ctx_r4.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r4.appearance != \"outline\")(\"id\", ctx_r4._labelId)(\"ngSwitch\", ctx_r4._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r4._control.id)(\"aria-owns\", ctx_r4._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r4.hideRequiredMarker && ctx_r4._control.required && !ctx_r4._control.disabled);\n} }\nfunction MatFormField_div_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_div_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r6.color == \"accent\")(\"mat-warn\", ctx_r6.color == \"warn\");\n} }\nfunction MatFormField_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r7._subscriptAnimationState);\n} }\nfunction MatFormField_div_14_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r16._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r16.hintLabel);\n} }\nfunction MatFormField_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r8._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r8.hintLabel);\n} }\nconst _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet nextUniqueId = 0;\n/**\n * Injection token that can be used to reference instances of `MatError`. It serves as\n * alternative token to the actual `MatError` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_ERROR = new InjectionToken('MatError');\n/** Single error message to be shown underneath the form field. */\nclass MatError {\n    constructor() {\n        this.id = `mat-error-${nextUniqueId++}`;\n    }\n}\nMatError.ɵfac = function MatError_Factory(t) { return new (t || MatError)(); };\nMatError.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatError, selectors: [[\"mat-error\"]], hostAttrs: [\"role\", \"alert\", 1, \"mat-error\"], hostVars: 1, hostBindings: function MatError_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_ERROR, useExisting: MatError }])] });\nMatError.propDecorators = {\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatError, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    'role': 'alert',\n                    '[attr.id]': 'id'\n                },\n                providers: [{ provide: MAT_ERROR, useExisting: MatError }]\n            }]\n    }], function () { return []; }, { id: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the MatFormField.\n * @docs-private\n */\nconst matFormFieldAnimations = {\n    /** Animation that transitions the form field's error and hint messages. */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-100%)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** An interface which allows a control to work inside of a `MatFormField`. */\nclass MatFormFieldControl {\n}\nMatFormFieldControl.ɵfac = function MatFormFieldControl_Factory(t) { return new (t || MatFormFieldControl)(); };\nMatFormFieldControl.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFormFieldControl });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldControl, [{\n        type: Directive\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/** @docs-private */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/** @docs-private */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `MatHint`. It serves as\n * alternative token to the actual `MatHint` class which could cause unnecessary\n * retention of the class and its directive metadata.\n *\n * *Note*: This is not part of the public API as the MDC-based form-field will not\n * need a lightweight token for `MatHint` and we want to reduce breaking changes.\n */\nconst _MAT_HINT = new InjectionToken('MatHint');\n/** Hint text to be shown underneath the form field control. */\nclass MatHint {\n    constructor() {\n        /** Whether to align the hint label at the start or end of the line. */\n        this.align = 'start';\n        /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = function MatHint_Factory(t) { return new (t || MatHint)(); };\nMatHint.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHint, selectors: [[\"mat-hint\"]], hostAttrs: [1, \"mat-hint\"], hostVars: 4, hostBindings: function MatHint_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-right\", ctx.align == \"end\");\n    } }, inputs: { align: \"align\", id: \"id\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: _MAT_HINT, useExisting: MatHint }])] });\nMatHint.propDecorators = {\n    align: [{ type: Input }],\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHint, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-right]': 'align == \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null'\n                },\n                providers: [{ provide: _MAT_HINT, useExisting: MatHint }]\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The floating label for a `mat-form-field`. */\nclass MatLabel {\n}\nMatLabel.ɵfac = function MatLabel_Factory(t) { return new (t || MatLabel)(); };\nMatLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLabel, selectors: [[\"mat-label\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-label'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * @breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) { return new (t || MatPlaceholder)(); };\nMatPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPlaceholder, selectors: [[\"mat-placeholder\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-placeholder'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatPrefix`. It serves as\n * alternative token to the actual `MatPrefix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_PREFIX = new InjectionToken('MatPrefix');\n/** Prefix to be placed in front of the form field. */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = function MatPrefix_Factory(t) { return new (t || MatPrefix)(); };\nMatPrefix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPrefix, selectors: [[\"\", \"matPrefix\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_PREFIX, useExisting: MatPrefix }])] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n        type: Directive,\n        args: [{\n                selector: '[matPrefix]',\n                providers: [{ provide: MAT_PREFIX, useExisting: MatPrefix }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatSuffix`. It serves as\n * alternative token to the actual `MatSuffix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SUFFIX = new InjectionToken('MatSuffix');\n/** Suffix to be placed at the end of the form field. */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = function MatSuffix_Factory(t) { return new (t || MatSuffix)(); };\nMatSuffix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSuffix, selectors: [[\"\", \"matSuffix\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_SUFFIX, useExisting: MatSuffix }])] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n        type: Directive,\n        args: [{\n                selector: '[matSuffix]',\n                providers: [{ provide: MAT_SUFFIX, useExisting: MatSuffix }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$2 = 0;\nconst floatingLabelScale = 0.75;\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * @docs-private\n */\nclass MatFormFieldBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/**\n * Base class to which we're applying the form field mixins.\n * @docs-private\n */\nconst _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/** Container for form controls that applies Material Design styling and behavior. */\nclass MatFormField extends _MatFormFieldMixinBase {\n    constructor(_elementRef, _changeDetectorRef, labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /** Whether the outline gap needs to be calculated next time the zone has stabilized. */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /** Override for the logic that disables the label animation in certain cases. */\n        this._showAlwaysAnimate = false;\n        /** State of the mat-hint and mat-error animations. */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId$2++}`;\n        // Unique id for the label element.\n        this._labelId = `mat-form-field-label-${nextUniqueId$2++}`;\n        this._labelOptions = labelOptions ? labelOptions : {};\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n            _defaults.hideRequiredMarker : false;\n    }\n    /** The form-field appearance style. */\n    get appearance() { return this._appearance; }\n    set appearance(value) {\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /** Whether the required marker should be hidden. */\n    get hideRequiredMarker() { return this._hideRequiredMarker; }\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /** Whether the floating label should always float or not. */\n    _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /** Whether the label can float or not. */\n    _canLabelFloat() { return this.floatLabel !== 'never'; }\n    /** Text for the form field hint. */\n    get hintLabel() { return this._hintLabel; }\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * Gets the id of the label element. If no label is present, returns `null`.\n     */\n    getLabelId() {\n        return this._hasFloatingLabel() ? this._labelId : null;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    ngAfterContentInit() {\n        this._validateControlChild();\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith(null)).subscribe(() => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            });\n        });\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        });\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular(() => {\n                        requestAnimationFrame(() => this.updateOutlineGap());\n                    });\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            });\n        }\n    }\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop) {\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    _hasPlaceholder() {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n    _hasLabel() {\n        return !!(this._labelChildNonStatic || this._labelChildStatic);\n    }\n    _shouldLabelFloat() {\n        return this._canLabelFloat() &&\n            ((this._control && this._control.shouldLabelFloat) || this._shouldAlwaysFloat());\n    }\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() ||\n            this._hasLabel() && !this._shouldLabelFloat();\n    }\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /** Determines whether to display hints or errors. */\n    _getDisplayedMessages() {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    }\n    /** Animates the placeholder up and locks it in position. */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat()) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled && this._label) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe(() => {\n                    this._showAlwaysAnimate = false;\n                });\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /** Does any extra processing that is required when handling the hints. */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     */\n    _validateHints() {\n        if (this._hintChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            let startHint;\n            let endHint;\n            this._hintChildren.forEach((hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            });\n        }\n    }\n    /** Gets the default float label state. */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || this._labelOptions.float || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            let ids = [];\n            // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.\n            if (this._control.userAriaDescribedBy &&\n                typeof this._control.userAriaDescribedBy === 'string') {\n                ids.push(...this._control.userAriaDescribedBy.split(' '));\n            }\n            if (this._getDisplayedMessages() === 'hint') {\n                const startHint = this._hintChildren ?\n                    this._hintChildren.find(hint => hint.align === 'start') : null;\n                const endHint = this._hintChildren ?\n                    this._hintChildren.find(hint => hint.align === 'end') : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids.push(...this._errorChildren.map(error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /** Throws an error if the form field's control is missing. */\n    _validateControlChild() {\n        if (!this._control && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     */\n    updateOutlineGap() {\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        let startWidth = 0;\n        let gapWidth = 0;\n        const container = this._connectionContainerRef.nativeElement;\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            const containerStart = this._getStartEnd(containerRect);\n            const labelChildren = labelEl.children;\n            const labelStart = this._getStartEnd(labelChildren[0].getBoundingClientRect());\n            let labelWidth = 0;\n            for (let i = 0; i < labelChildren.length; i++) {\n                labelWidth += labelChildren[i].offsetWidth;\n            }\n            startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable =\n            this._outlineGapCalculationNeededImmediately = false;\n    }\n    /** Gets the start end of the rect considering the current directionality. */\n    _getStartEnd(rect) {\n        return (this._dir && this._dir.value === 'rtl') ? rect.right : rect.left;\n    }\n    /** Checks whether the form field is attached to the DOM. */\n    _isAttachedToDOM() {\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return document.documentElement.contains(element);\n    }\n}\nMatFormField.ɵfac = function MatFormField_Factory(t) { return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_LABEL_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatFormField.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFormField, selectors: [[\"mat-form-field\"]], contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_ERROR, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, _MAT_HINT, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_PREFIX, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_SUFFIX, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    } }, viewQuery: function MatFormField_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    } }, hostAttrs: [1, \"mat-form-field\"], hostVars: 44, hostBindings: function MatFormField_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat())(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"mat-accent\", ctx.color == \"accent\")(\"mat-warn\", ctx.color == \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    } }, inputs: { color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\" }, exportAs: [\"matFormField\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 15, vars: 8, consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]], template: function MatFormField_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) { return ctx._control.onContainerClick && ctx._control.onContainerClick($event); });\n        ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n        ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc4.CdkObserveContent], styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"], encapsulation: 2, data: { animation: [matFormFieldAnimations.transitionMessages] }, changeDetection: 0 });\nMatFormField.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LABEL_GLOBAL_OPTIONS,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n    { type: Platform },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatFormField.propDecorators = {\n    appearance: [{ type: Input }],\n    hideRequiredMarker: [{ type: Input }],\n    hintLabel: [{ type: Input }],\n    floatLabel: [{ type: Input }],\n    underlineRef: [{ type: ViewChild, args: ['underline',] }],\n    _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer', { static: true },] }],\n    _inputContainerRef: [{ type: ViewChild, args: ['inputContainer',] }],\n    _label: [{ type: ViewChild, args: ['label',] }],\n    _controlNonStatic: [{ type: ContentChild, args: [MatFormFieldControl,] }],\n    _controlStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: true },] }],\n    _labelChildNonStatic: [{ type: ContentChild, args: [MatLabel,] }],\n    _labelChildStatic: [{ type: ContentChild, args: [MatLabel, { static: true },] }],\n    _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder,] }],\n    _errorChildren: [{ type: ContentChildren, args: [MAT_ERROR, { descendants: true },] }],\n    _hintChildren: [{ type: ContentChildren, args: [_MAT_HINT, { descendants: true },] }],\n    _prefixChildren: [{ type: ContentChildren, args: [MAT_PREFIX, { descendants: true },] }],\n    _suffixChildren: [{ type: ContentChildren, args: [MAT_SUFFIX, { descendants: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n        type: Component,\n        args: [{\n                selector: 'mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\" #underline\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\",\n                animations: [matFormFieldAnimations.transitionMessages],\n                host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat()',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.mat-accent]': 'color == \"accent\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled'\n                },\n                inputs: ['color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n                ],\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_LABEL_GLOBAL_OPTIONS]\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n            }] }, { type: ɵngcc2.Platform }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { floatLabel: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], hideRequiredMarker: [{\n            type: Input\n        }], hintLabel: [{\n            type: Input\n        }], underlineRef: [{\n            type: ViewChild,\n            args: ['underline']\n        }], _connectionContainerRef: [{\n            type: ViewChild,\n            args: ['connectionContainer', { static: true }]\n        }], _inputContainerRef: [{\n            type: ViewChild,\n            args: ['inputContainer']\n        }], _label: [{\n            type: ViewChild,\n            args: ['label']\n        }], _controlNonStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl]\n        }], _controlStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: true }]\n        }], _labelChildNonStatic: [{\n            type: ContentChild,\n            args: [MatLabel]\n        }], _labelChildStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: true }]\n        }], _placeholderChild: [{\n            type: ContentChild,\n            args: [MatPlaceholder]\n        }], _errorChildren: [{\n            type: ContentChildren,\n            args: [MAT_ERROR, { descendants: true }]\n        }], _hintChildren: [{\n            type: ContentChildren,\n            args: [_MAT_HINT, { descendants: true }]\n        }], _prefixChildren: [{\n            type: ContentChildren,\n            args: [MAT_PREFIX, { descendants: true }]\n        }], _suffixChildren: [{\n            type: ContentChildren,\n            args: [MAT_SUFFIX, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatFormFieldModule });\nMatFormFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatFormFieldModule_Factory(t) { return new (t || MatFormFieldModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            ObserversModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, { declarations: function () { return [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [MatCommonModule, MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_ERROR, MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MAT_PREFIX, MAT_SUFFIX, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, _MAT_HINT, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n\n//# sourceMappingURL=form-field.js.map","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SkeletonComponent} from './skeleton.component';\n\n@NgModule({\n    declarations: [\n        SkeletonComponent,\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        SkeletonComponent,\n    ]\n})\nexport class SkeletonModule {\n}\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n","var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, HostBinding, OnDestroy } from '@angular/core';\r\nimport { UploadQueueService } from '../upload-queue/upload-queue.service';\r\nimport { animationFrameScheduler, Subscription } from 'rxjs';\r\nimport { throttleTime } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'upload-progress-bar',\r\n    templateUrl: './upload-progress-bar.component.html',\r\n    styleUrls: ['./upload-progress-bar.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UploadProgressBarComponent implements OnDestroy {\r\n    @HostBinding('class.hidden') hidden = true;\r\n    private subscription: Subscription;\r\n    public progress: number;\r\n\r\n    constructor(\r\n        private el: ElementRef,\r\n        public uploadQueue: UploadQueueService,\r\n        private cd: ChangeDetectorRef,\r\n    ) {\r\n        this.subscription = this.uploadQueue.totalProgress()\r\n            // material progress bar animation lasts 250ms\r\n            .pipe(throttleTime(260, animationFrameScheduler, {leading: true, trailing: true}))\r\n            .subscribe(progress => {\r\n                this.progress = progress;\r\n                this.hidden = progress === 100 || this.uploadQueue.count$.value.pending === 0;\r\n                this.cd.markForCheck();\r\n            });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscription.unsubscribe();\r\n    }\r\n}\r\n\r\n","<mat-progress-bar mode=\"determinate\" [value]=\"progress\" color=\"accent\"></mat-progress-bar>\r\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {DatatableService} from '../datatable.service';\nimport {Subscription} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\n\n@Component({\n    selector: 'datatable-footer',\n    templateUrl: './datatable-footer.component.html',\n    styleUrls: ['./datatable-footer.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DatatableFooterComponent implements OnInit, OnDestroy {\n    @Input() hidePerPage = false;\n    public perPageControl = new FormControl(15);\n    public from: number;\n    public to: number;\n    public totalRecords: number;\n    public havePrevious: boolean;\n    public haveNext: boolean;\n    private changeRef: Subscription;\n\n    constructor(\n        public datable: DatatableService<any>,\n        private cd: ChangeDetectorRef,\n    ) {}\n\n    ngOnInit() {\n        this.changeRef = this.datable.paginator.response$\n            .pipe(filter(r => !!r?.pagination), map(r => r.pagination))\n            .subscribe(pagination => {\n                this.to = pagination.per_page * pagination.current_page;\n                this.from = (this.to - pagination.per_page) || 1;\n                this.totalRecords = pagination.total;\n                this.havePrevious = pagination.current_page > 1;\n                this.haveNext = pagination.current_page < pagination.last_page;\n                this.perPageControl.setValue(parseInt('' + pagination.per_page), {emitEvent: false});\n                this.cd.markForCheck();\n            });\n\n        this.perPageControl.valueChanges\n            .subscribe(perPage => {\n                this.datable.paginator.changePerPage(perPage);\n            });\n    }\n\n    ngOnDestroy() {\n        this.changeRef.unsubscribe();\n        this.datable.destroy();\n    }\n\n    public previousPage() {\n        this.datable.paginator.previousPage();\n    }\n\n    public nextPage() {\n        this.datable.paginator.nextPage();\n    }\n}\n","<div class=\"page-size\" *ngIf=\"!hidePerPage\">\n    <div class=\"page-size-label\" trans>Items per page</div>\n    <div class=\"input-container\">\n        <select class=\"page-size-input\" [formControl]=\"perPageControl\">\n            <option [ngValue]=\"10\">10</option>\n            <option [ngValue]=\"15\">15</option>\n            <option [ngValue]=\"20\">20</option>\n            <option [ngValue]=\"50\">50</option>\n            <option [ngValue]=\"100\">100</option>\n        </select>\n    </div>\n</div>\n<div class=\"range-actions\">\n    <div class=\"range-label\" *ngIf=\"from && to && totalRecords\">\n        {{from}} - {{to}} {{'of' | trans}} {{totalRecords}}\n    </div>\n    <button type=\"button\" [disabled]=\"!havePrevious || (datable.paginator.loading$ | async)\" class=\"range-button\" (click)=\"previousPage()\" mat-icon-button>\n        <mat-icon svgIcon=\"chevron-left\"></mat-icon>\n    </button>\n    <button type=\"button\" [disabled]=\"!haveNext || (datable.paginator.loading$ | async)\" class=\"range-button\" (click)=\"nextPage()\" mat-icon-button>\n        <mat-icon svgIcon=\"chevron-right\"></mat-icon>\n    </button>\n</div>\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {getFaviconFromUrl} from '@common/core/utils/get-favicon-from-url';\n\n@Pipe({\n    name: 'favicon'\n})\nexport class FaviconPipe implements PipeTransform {\n    transform(url: string): string {\n        if (!url) {\n            return null;\n        }\n        if (url.includes('youtube')) {\n            return 'https://www.youtube.com/s/desktop/ca54e1bd/img/favicon.ico';\n        } else {\n            return getFaviconFromUrl(url);\n        }\n    }\n}\n","import {isAbsoluteUrl} from '@common/core/utils/is-absolute-url';\r\n\r\nexport function getFaviconFromUrl(url: string) {\r\n    if ( ! url) {\r\n        return null;\r\n    }\r\n    // relative url to current site\r\n    if ( ! isAbsoluteUrl(url)) {\r\n        url = window.location.protocol + '//' + window.location.host;\r\n    }\r\n    const domain = new URL(url).origin;\r\n    return 'https://www.google.com/s2/favicons?domain=' + domain;\r\n}\r\n","var getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","import { DriveEntry } from '../../files/models/drive-entry';\r\nimport { DriveFolder } from '../../folders/models/driveFolder';\r\nimport { DriveApiIndexParams } from '../../drive-entry-api.service';\r\nimport { SortColumn } from '../../entries/available-sorts';\r\nimport {\r\n    DrivePage,\r\n    FolderPage,\r\n    RECENT_PAGE,\r\n    SEARCH_PAGE,\r\n    SHARES_PAGE,\r\n    STARRED_PAGE,\r\n    TRASH_PAGE,\r\n    WORKSPACE_INDEX_PAGE,\r\n} from '../models/drive-page';\r\n\r\nexport interface LoadEntriesAction {\r\n    queryParams: DriveApiIndexParams;\r\n    page?: DrivePage;\r\n    folder?: DriveFolder;\r\n    loadMore?: boolean;\r\n}\r\n\r\nexport class RecentEntriesPageOpened implements LoadEntriesAction {\r\n    static readonly type = '[Drive] Recent Entries Page Opened';\r\n    public page = RECENT_PAGE;\r\n    public queryParams = {orderBy: 'created_at' as SortColumn, recentOnly: true};\r\n}\r\n\r\nexport class FolderPageOpened implements LoadEntriesAction {\r\n    static readonly type = '[Drive] Folder Page Opened';\r\n    public page: DrivePage;\r\n    public queryParams = {};\r\n    constructor(folderHash: string|null) {\r\n        this.page = new FolderPage({hash: folderHash} as DriveFolder);\r\n    }\r\n}\r\n\r\nexport class SharesFolderOpened implements LoadEntriesAction {\r\n    static readonly type = '[Drive] Shared folder opened';\r\n    public page = SHARES_PAGE;\r\n    public queryParams = {sharedOnly: true};\r\n}\r\n\r\nexport class TrashPageOpened implements LoadEntriesAction {\r\n    static readonly type = '[Drive] Trash Page Opened';\r\n    public page = TRASH_PAGE;\r\n    public queryParams = {deletedOnly: true};\r\n}\r\n\r\nexport class WorkspacesIndexPageOpened {\r\n    static readonly type = '[Drive] Workspaces Index Page Opened';\r\n    public page = WORKSPACE_INDEX_PAGE;\r\n}\r\n\r\nexport class SearchPageOpened implements LoadEntriesAction {\r\n    static readonly type = '[Drive] Search Page Opened';\r\n    public page = SEARCH_PAGE;\r\n    constructor(public queryParams: {\r\n        type?: string;\r\n        query?: string;\r\n    } = {}) {}\r\n}\r\n\r\nexport class StarredPageOpened implements LoadEntriesAction {\r\n    static readonly type = '[Drive] Starred Entries Page Opened';\r\n    public page = STARRED_PAGE;\r\n    public queryParams = {starredOnly: true};\r\n}\r\n\r\nexport class EntriesSelectedViaDrag {\r\n    static readonly type = '[Drive] Entries Selected Via Drag';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class EntrySelectedViaContextMenu {\r\n    static readonly type = '[Drive] File Selected Via ContextMenu';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class EntryTapped {\r\n    static readonly type = '[Drive] User Tapped File';\r\n    constructor(public entry: DriveEntry, public ctrlKey = false) {}\r\n}\r\n\r\nexport class EntryDoubleTapped {\r\n    static readonly type = '[Drive] User Double Tapped Entry';\r\n    constructor(public entry: DriveEntry) {}\r\n}\r\n\r\nexport class FileDeleteSuccess {\r\n    static readonly type = '[Drive] Successfully Deleted Files';\r\n    constructor(public deletedFiles: DriveEntry[]) {}\r\n}\r\n\r\nexport class EntryContextMenuOpened {\r\n    static readonly type = '[Drive] Entry Context Menu Opened';\r\n    constructor(public entry: DriveEntry) {}\r\n}\r\n\r\nexport class NewFolderCreated {\r\n    static readonly type = '[Drive] New Folder Created';\r\n    constructor(public folder: DriveFolder) {}\r\n}\r\n\r\nexport class EntryRenamed {\r\n    static readonly type = '[Drive] Entry Renamed';\r\n    constructor(public entry: DriveEntry, public newName: string) {}\r\n}\r\n\r\nexport class StartedDragging {\r\n    static readonly type = '[Drive] Started Dragging';\r\n}\r\n\r\nexport class StoppedDragging {\r\n    static readonly type = '[Drive] Stopped Dragging';\r\n}\r\n\r\nexport class MoveEntriesSuccess {\r\n    static readonly type = '[Drive API] Move Entries Success';\r\n    constructor(\r\n        public destination: number,\r\n        public oldLocation: number,\r\n        public entries: DriveEntry[]\r\n    ) {}\r\n}\r\n\r\nexport class MoveEntriesFailed {\r\n    static readonly type = '[Drive API] Move Entries Failed';\r\n    constructor(public messages: object) {}\r\n}\r\n\r\nexport class TrashedEntriesDeleteSuccess {\r\n    static readonly type = '[Drive API] Trashed Entries Delete Forever Success';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class TrashedEntriesRestoreSuccess {\r\n    static readonly type = '[Drive API] Trashed Entries Restore Success';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class NotEnoughSpaceError {\r\n    static readonly type = '[Drive] Not Enough Space Error';\r\n}\r\n\r\nexport class UserSpaceUsageChanged {\r\n    static readonly type = '[Drive] User Space Usage Changed';\r\n}\r\n\r\nexport class BreakpointChanged {\r\n    static readonly type = '[Drive] BreakpointChanged';\r\n    constructor(public status: {isMobile: boolean}) {}\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\nimport { DriveFolder } from './folders/models/driveFolder';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DriveUrlsService {\n    public driveRoot() {\n        return '/drive';\n    }\n\n    public folder(folder: DriveFolder) {\n        if ( ! folder?.id) {\n            return this.driveRoot();\n        } else {\n            return `/drive/folders/${(folder as DriveFolder).hash}`;\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AppHttpClient } from '@common/core/http/app-http-client.service';\nimport { DriveEntry } from './files/models/drive-entry';\nimport { BackendResponse } from '@common/core/types/backend-response';\nimport { DriveFolder } from './folders/models/driveFolder';\nimport { Observable } from 'rxjs';\nimport { CurrentUser } from '@common/auth/current-user';\nimport { Tag } from '@common/core/types/models/Tag';\nimport { SortColumn, SortDirection } from './entries/available-sorts';\nimport { UserSpaceUsage } from './state/models/user-space-usage';\nimport { PaginationResponse } from '@common/core/types/pagination/pagination-response';\n\nexport interface DriveApiIndexParams {\n    orderBy?: SortColumn;\n    orderDir?: SortDirection;\n    folderId?: number;\n    userId?: number;\n    query?: string;\n    type?: string;\n    deletedOnly?: boolean;\n    starredOnly?: boolean;\n    sharedOnly?: boolean;\n    per_page?: number;\n    page?: number;\n    recentOnly?: boolean;\n}\n\nexport interface DriveEntriesPaginationResponse extends PaginationResponse<DriveFolder> {\n    folder: DriveFolder;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DriveEntryApiService {\n    constructor(private http: AppHttpClient, private currentUser: CurrentUser) {}\n\n    public getEntriesForFolder(params: DriveApiIndexParams = {}): Observable<DriveEntriesPaginationResponse> {\n        return this.http.get('drive/entries', params);\n    }\n\n    public getCurrentUserEntries(params: DriveApiIndexParams): Observable<DriveEntriesPaginationResponse> {\n        params.userId = this.currentUser.get('id');\n        return this.http.get('drive/entries', params);\n    }\n\n    public update(entryId: number, params: {name?: string, description?: string}): BackendResponse<{fileEntry: DriveEntry}> {\n        return this.http.put('uploads/' + entryId, params);\n    }\n\n    public delete(params: {entryIds?: number[], deleteForever?: boolean, emptyTrash?: boolean}): BackendResponse<void> {\n        return this.http.delete('drive/entries', params);\n    }\n\n    public copy(params: {entryIds: number[]}): BackendResponse<{entries: DriveEntry[]}> {\n        return this.http.post('drive/entries/copy', params);\n    }\n\n    public restore(params: {entryIds: number[]}): BackendResponse<void> {\n        return this.http.post('drive/entries/restore', params);\n    }\n\n    public emptyTrash(): BackendResponse<void> {\n        return this.delete({emptyTrash: true});\n    }\n\n    public moveEntries(params: {entryIds: number[], destination: number}): BackendResponse<{entries: DriveEntry[]}> {\n        return this.http.post('drive/entries/move', params);\n    }\n\n    public addStar(entryIds: number[]): BackendResponse<{tag: Tag}> {\n        return this.http.post('drive/entries/star', {entryIds});\n    }\n\n    public removeStar(entryIds: number[]): BackendResponse<{tag: Tag}> {\n        return this.http.post('drive/entries/unstar', {entryIds});\n    }\n\n    public getSpaceUsage(): BackendResponse<UserSpaceUsage> {\n        return this.http.get('drive/user/space-usage');\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\nimport {FOLDERS_API_ROUTES} from './folders-api-routes.enum';\nimport {DriveFolder} from '../models/driveFolder';\nimport {CurrentUser} from '@common/auth/current-user';\nimport { BackendResponse } from '@common/core/types/backend-response';\nimport { PaginatedBackendResponse } from '@common/core/types/pagination/paginated-backend-response';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FoldersApiService {\n\n    constructor(\n        private http: AppHttpClient,\n        private currentUser: CurrentUser\n    ) {}\n\n    public getAll(params?: {userId?: number}): PaginatedBackendResponse<DriveFolder> {\n        return this.http.get(FOLDERS_API_ROUTES.GET_ALL, params);\n    }\n\n    public getAllForCurrentUser(): BackendResponse<{folders: DriveFolder[], rootFolder: DriveFolder}> {\n        return this.http.get('drive/users/' + this.currentUser.get('id') + '/folders');\n    }\n\n    public create(params: {name: string, parentId: number|null}): BackendResponse<{folder: DriveFolder}> {\n        return this.http.post(FOLDERS_API_ROUTES.CREATE, params);\n    }\n\n    public getByHash(hash: string): BackendResponse<{folder: DriveFolder}> {\n        return this.http.get('drive/folders/find', {hash});\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { UploadValidator } from '@common/uploads/validation/upload-validator';\nimport { FileSizeValidation } from '@common/uploads/validation/validations/file-size-validation';\nimport { convertToBytes } from '@common/core/utils/convertToBytes';\nimport { AllowedExtensionsValidation } from '@common/uploads/validation/validations/allowed-extensions-validation';\nimport { BlockedExtensionsValidation } from '@common/uploads/validation/validations/blocked-extensions-validation';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DriveUploadValidator extends UploadValidator {\n    protected readonly DEFAULT_MAX_FILE_SIZE_MB = 8;\n\n    protected initValidations() {\n        this.validations.push(\n            new FileSizeValidation(\n                {maxSize: this.getMaxFileSize()},\n                this.i18n\n            )\n        );\n\n        const allowedExtensions = this.getAllowedExtensions(),\n            blockedExtensions = this.getBlockedExtensions();\n\n        if (allowedExtensions && allowedExtensions.length) {\n            this.validations.push(new AllowedExtensionsValidation(\n                {extensions: allowedExtensions}, this.i18n\n            ));\n        }\n\n        if (blockedExtensions && blockedExtensions.length) {\n            this.validations.push(new BlockedExtensionsValidation(\n                {extensions: blockedExtensions}, this.i18n\n            ));\n        }\n    }\n\n    protected getMaxFileSize(): number {\n        return this.settings.get(\n            'uploads.max_size',\n            convertToBytes(this.DEFAULT_MAX_FILE_SIZE_MB, 'MB')\n        );\n    }\n\n    protected getAllowedExtensions() {\n        return this.settings.getJson('uploads.allowed_extensions');\n    }\n\n    protected getBlockedExtensions() {\n        return this.settings.getJson('uploads.blocked_extensions');\n    }\n}\n","import { DriveFolder } from '../folders/models/driveFolder';\r\nimport { DriveEntry } from '../files/models/drive-entry';\r\nimport { Action, Selector, State, StateContext, Store } from '@ngxs/store';\r\nimport { FoldersApiService } from '../folders/api/folders-api.service';\r\nimport { finalize, tap } from 'rxjs/operators';\r\nimport { DriveApiIndexParams, DriveEntryApiService } from '../drive-entry-api.service';\r\nimport { Router } from '@angular/router';\r\nimport { DriveUrlsService } from '../drive-urls.service';\r\nimport { RouterState } from '@ngxs/router-plugin';\r\nimport isEqual from 'lodash/isEqual';\r\nimport {\r\n    AddEntries,\r\n    AddStar,\r\n    BuildFolderTree,\r\n    CopySelectedEntries,\r\n    DeleteSelectedEntries,\r\n    DeleteTrashedEntriesForever,\r\n    DeselectAllEntries,\r\n    EmptyTrash,\r\n    HideLoadingToast,\r\n    LoadMoreEntries,\r\n    LoadUserFolders,\r\n    LoadUserSpaceUsage,\r\n    MoveEntries,\r\n    OpenConfirmDialog,\r\n    OpenFilePreview,\r\n    OpenFolder,\r\n    OpenSearchPage,\r\n    OpenUploadsPanel,\r\n    OpenUploadWindow,\r\n    ReloadPageEntries,\r\n    RemoveEntries,\r\n    RemoveStar,\r\n    ResetState,\r\n    RestoreTrashedEntries,\r\n    SelectAllEntries,\r\n    SelectEntries,\r\n    SetCurrentUser,\r\n    SetViewMode,\r\n    SetWorkspace,\r\n    ShowLoadingToast,\r\n    ToggleDetailsSidebar,\r\n    ToggleSidebar,\r\n    UpdateEntries,\r\n    UpdateEntryDescription,\r\n    UploadFiles,\r\n} from './actions/commands';\r\nimport {\r\n    BreakpointChanged,\r\n    EntriesSelectedViaDrag,\r\n    EntryContextMenuOpened,\r\n    EntryDoubleTapped,\r\n    EntryRenamed,\r\n    EntrySelectedViaContextMenu,\r\n    EntryTapped,\r\n    FileDeleteSuccess,\r\n    FolderPageOpened,\r\n    LoadEntriesAction,\r\n    MoveEntriesFailed,\r\n    MoveEntriesSuccess,\r\n    NewFolderCreated,\r\n    NotEnoughSpaceError,\r\n    RecentEntriesPageOpened,\r\n    SearchPageOpened,\r\n    SharesFolderOpened,\r\n    StarredPageOpened,\r\n    StartedDragging,\r\n    StoppedDragging,\r\n    TrashedEntriesDeleteSuccess,\r\n    TrashedEntriesRestoreSuccess,\r\n    TrashPageOpened,\r\n    UserSpaceUsageChanged,\r\n    WorkspacesIndexPageOpened,\r\n} from './actions/events';\r\nimport { DriveStateModel, VIEW_MODE_KEY } from './models/drive-state-model';\r\nimport { DRIVE_STATE_MODEL_DEFAULTS } from './models/drive-state-model-defaults';\r\nimport { LocalStorage } from '@common/core/services/local-storage.service';\r\nimport { UploadQueueService } from '@common/uploads/upload-queue/upload-queue.service';\r\nimport { DriveUploadValidator } from '../uploads/drive-upload-validator';\r\nimport { openUploadWindow } from '@common/uploads/utils/open-upload-window';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { UploadInputConfig } from '@common/uploads/upload-input-config';\r\nimport { UploadedFile } from '@common/uploads/uploaded-file';\r\nimport { UserSpaceUsage } from './models/user-space-usage';\r\nimport { LoadingToastMessages } from '../messages/loading-toast/loading-toast-messages';\r\nimport { User } from '@common/core/types/models/User';\r\nimport { DRIVE_PAGE_NAMES, DrivePage, TRASH_PAGE } from './models/drive-page';\r\nimport { DRIVE_UPLOAD_INPUT_CONFIG } from '../upload-input-config';\r\nimport { Tag } from '@common/core/types/models/Tag';\r\nimport { FileEntry } from '@common/uploads/types/file-entry';\r\nimport { hasKey } from '@common/core/utils/has-key';\r\nimport { BackendErrorResponse } from '../../../common/core/types/backend-error-response';\r\nimport { buildFolderTree } from '../sidebar/folders-tree/build-folder-tree';\r\nimport { WorkspacesService } from '../../../common/workspaces/workspaces.service';\r\nimport { Workspace } from '../../../common/workspaces/types/workspace';\r\nimport { Toast } from '../../../common/core/ui/toast.service';\r\n\r\n@State<DriveStateModel>({\r\n    name: 'drive',\r\n    defaults: DRIVE_STATE_MODEL_DEFAULTS,\r\n})\r\n@Injectable()\r\nexport class DriveState {\r\n    constructor(\r\n        private foldersApi: FoldersApiService,\r\n        private entriesApi: DriveEntryApiService,\r\n        private router: Router,\r\n        private driveUrls: DriveUrlsService,\r\n        private uploads: UploadQueueService,\r\n        private store: Store,\r\n        private localStore: LocalStorage,\r\n        private validator: DriveUploadValidator,\r\n        private workspaces: WorkspacesService,\r\n        private toast: Toast,\r\n        @Inject(DRIVE_UPLOAD_INPUT_CONFIG) private uploadInputConfig: UploadInputConfig,\r\n    ) {}\r\n\r\n    @Selector()\r\n    static flatFolders(state: DriveStateModel) {\r\n        return state.flatFolders;\r\n    }\r\n\r\n    @Selector()\r\n    static userFoldersLoaded(state: DriveStateModel) {\r\n        return state.userFoldersLoaded;\r\n    }\r\n\r\n    @Selector()\r\n    static activePage(state: DriveStateModel) {\r\n        return state.activePage;\r\n    }\r\n\r\n    @Selector()\r\n    static activePageName(state: DriveStateModel) {\r\n        return state.activePage.name;\r\n    }\r\n\r\n    @Selector()\r\n    static userFolders(state: DriveStateModel) {\r\n        return state.folderTree;\r\n    }\r\n\r\n    @Selector()\r\n    static selectedEntries(state: DriveStateModel) {\r\n        return state.selectedEntries;\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries])\r\n    static selectedEntryIds(state: DriveStateModel, selectedEntries: DriveEntry[]) {\r\n        return selectedEntries.map(entry => entry.id);\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries])\r\n    static selectedEntry(state: DriveStateModel, selected: DriveEntry[]) {\r\n        return selected ? selected[selected.length - 1] : null;\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntry])\r\n    static selectedEntryOrActiveFolder(state: DriveStateModel, selected: DriveEntry[]) {\r\n        return selected || state.activePage.folder;\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntryOrActiveFolder, DriveState.flatFolders])\r\n    static selectedEntryParent(state: DriveStateModel, selected: DriveFolder, folders: DriveFolder[]) {\r\n        if ( ! selected || ! folders || ! selected.parent_id) {\r\n            return state.rootFolder;\r\n        }\r\n        return folders.find(f => f.id === selected.parent_id);\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries])\r\n    static anythingSelected(state: DriveStateModel, selectedEntries: DriveEntry[]) {\r\n        return selectedEntries.length > 0;\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries])\r\n    static allSelectedEntriesStarred(state: DriveStateModel, selectedEntries: DriveEntry[]) {\r\n        return selectedEntries.every(entry => !!entry.tags.find(tag => tag.name === 'starred'));\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries])\r\n    static onlyFoldersSelected(state: DriveStateModel, selectedEntries: DriveEntry[]) {\r\n        return selectedEntries.every(entry => entry.type === 'folder');\r\n    }\r\n\r\n    @Selector()\r\n    static entries(state: DriveStateModel) {\r\n        return state.entries;\r\n    }\r\n\r\n    @Selector()\r\n    static entriesEmpty(state: DriveStateModel) {\r\n        // only return true if entries have already loaded\r\n        return state.meta.currentPage && ! state.loading && state.entries.length === 0;\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries])\r\n    static multipleEntriesSelected(state: DriveStateModel, selectedEntries: DriveEntry[]) {\r\n        return selectedEntries.length > 1;\r\n    }\r\n\r\n    @Selector()\r\n    static activeFolder(state: DriveStateModel) {\r\n        return state.activePage.folder;\r\n    }\r\n\r\n    @Selector()\r\n    static rootFolder(state: DriveStateModel) {\r\n        return state.rootFolder;\r\n    }\r\n\r\n    @Selector()\r\n    static meta(state: DriveStateModel) {\r\n        return state.meta;\r\n    }\r\n\r\n    @Selector()\r\n    static dragging(state: DriveStateModel) {\r\n        return state.dragging;\r\n    }\r\n\r\n    @Selector()\r\n    static loading(state: DriveStateModel) {\r\n        return state.loading;\r\n    }\r\n\r\n    @Selector()\r\n    static currentPage(state: DriveStateModel) {\r\n        return state.meta.currentPage;\r\n    }\r\n\r\n    @Selector()\r\n    static viewMode(state: DriveStateModel) {\r\n        return state.viewMode;\r\n    }\r\n\r\n    @Selector()\r\n    static detailsOpen(state: DriveStateModel) {\r\n        return state.detailsVisible;\r\n    }\r\n\r\n    @Selector()\r\n    static sidebarOpen(state: DriveStateModel) {\r\n        return state.sidebarOpen;\r\n    }\r\n\r\n    @Selector()\r\n    static sortColumn(state: DriveStateModel) {\r\n        return state.meta.sortColumn;\r\n    }\r\n\r\n    @Selector()\r\n    static sortDirection(state: DriveStateModel) {\r\n        return state.meta.sortDirection;\r\n    }\r\n\r\n    @Selector()\r\n    static canLoadMoreEntries(state: DriveStateModel) {\r\n        return state.meta.currentPage < state.meta.lastPage;\r\n    }\r\n\r\n    @Selector()\r\n    static userSpaceUsed(state: DriveStateModel) {\r\n        return state.spaceUsage.used;\r\n    }\r\n\r\n    @Selector()\r\n    static userSpaceAvailable(state: DriveStateModel) {\r\n        return state.spaceUsage.available;\r\n    }\r\n\r\n    @Selector([DriveState.userSpaceUsed, DriveState.userSpaceAvailable])\r\n    static spaceUsedPercent(state: DriveStateModel, spaceUsed: number, spaceAvail: number) {\r\n        // null means that user has unlimited space available\r\n        return spaceAvail === null ? 0 : ((spaceUsed * 100) / spaceAvail);\r\n    }\r\n\r\n    @Selector()\r\n    static isMobile(state: DriveStateModel) {\r\n        return state.isMobile;\r\n    }\r\n\r\n    static userHasPermission(permission: 'edit'|'owner', folder: DriveEntry, user: User) {\r\n        // we are not in a folder view, can bail\r\n        if ( ! folder || ! user) return false;\r\n\r\n        // check if user is the owner of currently open folder\r\n        const folderUser = (folder as DriveEntry).users.find(u => u.id === user.id);\r\n        if (folderUser.owns_entry || folderUser.entry_permissions[permission]) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    @Selector()\r\n    static currentUser(state: DriveStateModel) {\r\n        return state.currentUser;\r\n    }\r\n\r\n    @Selector()\r\n    static activeWorkspace(state: DriveStateModel) {\r\n        return state.activeWorkspace;\r\n    }\r\n\r\n    @Selector([DriveState.activeFolder, DriveState.currentUser])\r\n    static userOwnsActiveFolder(state: DriveStateModel, activeFolder: DriveEntry, currentUser: User) {\r\n       return DriveState.userHasPermission('owner', activeFolder, currentUser);\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries, DriveState.currentUser])\r\n    static userOwnsSelectedEntries(state: DriveStateModel, selectedEntries: DriveEntry[], currentUser: User) {\r\n        return selectedEntries.every(entry => {\r\n            return DriveState.userHasPermission('owner', entry, currentUser);\r\n        });\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries, DriveState.currentUser])\r\n    static userCanEditSelectedEntries(state: DriveStateModel, entries: DriveEntry[], currentUser: User) {\r\n        return entries.every(entry => {\r\n            const user = entry.users.find(u => u.id === currentUser.id);\r\n            return user && (user.owns_entry || user.entry_permissions.edit);\r\n        });\r\n    }\r\n\r\n    @Selector([DriveState.activePage, DriveState.currentUser, DriveState.activeWorkspace])\r\n    static canUpload(state: DriveStateModel, page: DrivePage, currentUser: User, workspace: Workspace) {\r\n        if (!page.folder || !currentUser || !workspace) {\r\n            return false;\r\n        }\r\n\r\n        // check if user can create files in this workspace\r\n        if (workspace?.id && page.folder.workspace_id === workspace.id) {\r\n            const member = workspace.currentUser;\r\n            return member && (member.is_owner || member.permissions.findIndex(p => p.name === 'files.create') > -1);\r\n\r\n        // check if user has \"edit\" permission for folder if it's not part of workspace\r\n        } else {\r\n            return DriveState.userHasPermission('edit', page.folder, currentUser);\r\n        }\r\n    }\r\n\r\n    @Action(LoadUserFolders)\r\n    loadUserFolders(ctx: StateContext<DriveStateModel>) {\r\n        return this.foldersApi.getAllForCurrentUser().pipe(tap(response => {\r\n            ctx.patchState({rootFolder: response.rootFolder});\r\n            return ctx.dispatch(new BuildFolderTree(response.folders));\r\n        }));\r\n    }\r\n\r\n    @Action(BuildFolderTree)\r\n    buildFolderTree(ctx: StateContext<DriveStateModel>, action: BuildFolderTree) {\r\n        const flatFolders = action.folders || ctx.getState().flatFolders;\r\n        const tree = buildFolderTree(flatFolders);\r\n        ctx.patchState({\r\n            folderTree: tree,\r\n            flatFolders,\r\n            userFoldersLoaded: true,\r\n        });\r\n    }\r\n\r\n    @Action(WorkspacesIndexPageOpened)\r\n    workspacesIndexPageOpened(ctx: StateContext<DriveStateModel>, action: WorkspacesIndexPageOpened) {\r\n        ctx.patchState({activePage: action.page});\r\n    }\r\n\r\n    @Action(FolderPageOpened)\r\n    @Action(RecentEntriesPageOpened)\r\n    @Action(TrashPageOpened)\r\n    @Action(StarredPageOpened)\r\n    @Action(SearchPageOpened)\r\n    @Action(SharesFolderOpened)\r\n    @Action(ReloadPageEntries)\r\n    @Action(LoadMoreEntries)\r\n    loadDriveEntries(ctx: StateContext<DriveStateModel>, action: LoadEntriesAction) {\r\n        const oldState = ctx.getState();\r\n        const newState = {loading: true, meta: {...oldState.meta}} as Partial<DriveStateModel>;\r\n\r\n        // only replace active page if it's actually specified, this way\r\n        // \"Reload\" and \"LoadMore\" actions will not remove active page\r\n        newState.activePage = action.page ? action.page : oldState.activePage;\r\n\r\n        // set sorting from specified query params or specified page or currently active page\r\n        newState.meta.sortColumn = action.queryParams.orderBy || oldState.meta.sortColumn || newState.activePage.sortColumn;\r\n        newState.meta.sortDirection = action.queryParams.orderDir || oldState.meta.sortDirection || newState.activePage.sortDirection;\r\n\r\n        // if it's not search page, clear type and query\r\n        if (newState.activePage.name !== 'search') {\r\n            newState.meta.query = null;\r\n            newState.meta.type = null;\r\n        }\r\n\r\n        newState.meta.query = action.queryParams.query || newState.meta.query;\r\n        newState.meta.type = action.queryParams.type || newState.meta.type;\r\n\r\n        ctx.patchState(newState);\r\n        const params = this.transformQueryParams({\r\n            ...action.queryParams,\r\n            ...newState.activePage.queryParams,\r\n        });\r\n\r\n        return this.entriesApi.getEntriesForFolder(params).pipe(tap(response => {\r\n            const entries = action.loadMore ? oldState.entries : [];\r\n\r\n            const state = {\r\n                entries: entries.concat(response.data),\r\n                meta: {\r\n                    ...newState.meta,\r\n                    lastPage: response.last_page,\r\n                    currentPage: response.current_page\r\n                },\r\n                loading: false\r\n            } as Partial<DriveStateModel>;\r\n\r\n            state.activePage = {\r\n                ...newState.activePage,\r\n                folder: response.folder,\r\n            };\r\n\r\n            return ctx.patchState(state);\r\n        }, () => {\r\n            return ctx.patchState({loading: false});\r\n        }));\r\n    }\r\n\r\n    @Action(OpenFolder, {cancelUncompleted: true})\r\n    openFolder(ctx: StateContext<DriveStateModel>, action: OpenFolder) {\r\n        const currentFolder = ctx.getState().activePage.folder;\r\n        if (currentFolder && action.folder.id === currentFolder.id) return;\r\n\r\n        if (action.folder && action.folder.deleted_at) {\r\n            return ctx.dispatch(new OpenConfirmDialog({\r\n                title: 'Folder is in trash',\r\n                body: 'To view this folder, you need to restore it first.',\r\n                ok: 'Restore'\r\n            }, new RestoreTrashedEntries([action.folder as DriveFolder])));\r\n        } else {\r\n            ctx.patchState({loading: true});\r\n            return this.router.navigate([this.driveUrls.folder(action.folder)]);\r\n        }\r\n    }\r\n\r\n    @Action(OpenSearchPage, {cancelUncompleted: true})\r\n    openSearchPage(ctx: StateContext<DriveStateModel>, action: OpenSearchPage) {\r\n        const oldParams = this.store.selectSnapshot(RouterState.state).root.queryParams;\r\n        if (isEqual(oldParams, action.queryParams)) return;\r\n        ctx.patchState({loading: true});\r\n        return this.router.navigate(['/drive/search'], {queryParams: action.queryParams});\r\n    }\r\n\r\n    @Action(EntriesSelectedViaDrag)\r\n    @Action(EntrySelectedViaContextMenu)\r\n    @Action(SelectEntries)\r\n    selectEntries(ctx: StateContext<DriveStateModel>, action: EntriesSelectedViaDrag | EntrySelectedViaContextMenu | SelectEntries) {\r\n        ctx.patchState({selectedEntries: action.entries});\r\n    }\r\n\r\n    @Action(DeselectAllEntries)\r\n    deselectAllEntries(ctx: StateContext<DriveStateModel>) {\r\n        if ( ! ctx.getState().selectedEntries.length) return;\r\n        ctx.patchState({selectedEntries: []});\r\n    }\r\n\r\n    @Action(SelectAllEntries)\r\n    SelectAllEntries(ctx: StateContext<DriveStateModel>) {\r\n        ctx.patchState({selectedEntries: ctx.getState().entries.slice()});\r\n    }\r\n\r\n    @Action(EntryTapped)\r\n    entryTapped(ctx: StateContext<DriveStateModel>, action: EntryTapped) {\r\n        const current = ctx.getState().selectedEntries.slice();\r\n        let alreadySelected = false;\r\n\r\n        // remove entry with matching ID (if exists) to avoid duplicates\r\n        const i = current.findIndex(curr => curr.id === action.entry.id);\r\n        if (i > -1) {\r\n            current.splice(i, 1);\r\n            alreadySelected = true;\r\n        }\r\n\r\n        if (action.ctrlKey) {\r\n            if (alreadySelected) {\r\n                ctx.patchState({selectedEntries: current});\r\n            } else {\r\n                ctx.patchState({selectedEntries: [...current, action.entry]});\r\n            }\r\n        } else {\r\n            ctx.patchState({selectedEntries: [action.entry]});\r\n        }\r\n\r\n        if (ctx.getState().isMobile) {\r\n            this.entryDoubleTapped(ctx, action);\r\n        }\r\n    }\r\n\r\n    @Action(EntryDoubleTapped)\r\n    entryDoubleTapped(ctx: StateContext<DriveStateModel>, action: EntryDoubleTapped) {\r\n        if (action.entry.type === 'folder') {\r\n            return ctx.dispatch(new OpenFolder(action.entry as DriveFolder));\r\n        } else {\r\n            return ctx.dispatch(new OpenFilePreview([action.entry]));\r\n        }\r\n    }\r\n\r\n    @Action(DeleteSelectedEntries)\r\n    deleteSelectedEntries(ctx: StateContext<DriveStateModel>) {\r\n        const entries = this.store.selectSnapshot(DriveState.selectedEntries),\r\n            entryIds = this.store.selectSnapshot(DriveState.selectedEntryIds),\r\n            flatFolders = this.store.selectSnapshot(DriveState.flatFolders),\r\n            activePage = ctx.getState().activePage;\r\n\r\n        return this.entriesApi.delete({entryIds}).pipe(tap(() => {\r\n            // filter out deleted entries\r\n            const newEntries = ctx.getState().entries\r\n                .filter(entry => entryIds.indexOf(entry.id) === -1);\r\n\r\n            const newState = {entries: newEntries} as Partial<DriveStateModel>,\r\n                actions = [new FileDeleteSuccess(entries)] as any[];\r\n\r\n            // clear selected entries\r\n            newState.selectedEntries = [];\r\n\r\n            // if selected folder was active, navigate to its parent\r\n            if (activePage.folder && entryIds.indexOf(activePage.folder.id) > -1) {\r\n                this.store.dispatch(new OpenFolder(this.store.selectSnapshot(DriveState.selectedEntryParent)));\r\n            }\r\n\r\n            // rebuild folders tree\r\n            const folders = entries.filter(entry => entry.type === 'folder');\r\n            if (folders.length) {\r\n                folders.forEach(folder => delete flatFolders[folder.id]);\r\n                newState.flatFolders = flatFolders;\r\n                actions.push(new BuildFolderTree());\r\n            }\r\n\r\n            ctx.patchState(newState);\r\n            return ctx.dispatch(actions);\r\n        }));\r\n    }\r\n\r\n    @Action(EntryContextMenuOpened)\r\n    fileContextMenuOpened(ctx: StateContext<DriveStateModel>, action: EntryContextMenuOpened) {\r\n        if ( ! action?.entry?.id) return;\r\n\r\n        const fileAlreadySelected = ctx.getState().selectedEntries\r\n            .find(entry => entry.id === action.entry.id);\r\n\r\n        if ( ! fileAlreadySelected) {\r\n            return ctx.dispatch(new EntrySelectedViaContextMenu([action.entry]));\r\n        }\r\n    }\r\n\r\n    @Action(NewFolderCreated)\r\n    newFolderCreated(ctx: StateContext<DriveStateModel>, action: NewFolderCreated) {\r\n        const state = ctx.getState();\r\n        const parentFolderId = action.folder.parent_id;\r\n\r\n        // start new folder into user folders cache\r\n        const newState: Partial<DriveStateModel> = {\r\n            flatFolders: [...state.flatFolders, action.folder]\r\n        };\r\n\r\n        // push new folder into parent folder entries, if parent is currently open\r\n        if (parentFolderId === state.activePage.folder.id) {\r\n            newState.entries = [action.folder, ...state.entries];\r\n        }\r\n\r\n        ctx.patchState(newState);\r\n\r\n        // rebuild folder tree\r\n        return ctx.dispatch(new BuildFolderTree());\r\n    }\r\n\r\n    @Action(EntryRenamed)\r\n    entryRenamed(ctx: StateContext<DriveStateModel>, action: EntryRenamed) {\r\n        const state = ctx.getState(),\r\n            newState = {entries: state.entries.slice()} as Partial<DriveStateModel>,\r\n            i = newState.entries.findIndex(curr => curr.id === action.entry.id);\r\n\r\n        // rename entry inside main entries array\r\n        if (i > -1) {\r\n            newState.entries[i] = {...newState.entries[i], name: action.newName};\r\n        }\r\n\r\n        // rename entry inside selected entries array\r\n        newState.selectedEntries = [{...state.selectedEntries[0], name: action.newName}];\r\n\r\n        // rename active folder\r\n        if (state.activePage.folder && state.activePage.folder.id === action.entry.id) {\r\n            newState.activePage = {...state.activePage, folder: action.entry};\r\n        }\r\n\r\n        // rebuild folder tree\r\n        if (action.entry.type === 'folder') {\r\n            const flatFolders = {...state.flatFolders};\r\n            flatFolders[action.entry.id] = {...flatFolders[action.entry.id], name: action.newName};\r\n            newState.flatFolders = flatFolders;\r\n            ctx.dispatch(new BuildFolderTree());\r\n        }\r\n\r\n        ctx.patchState(newState);\r\n    }\r\n\r\n    @Action(StartedDragging)\r\n    startedDragging(ctx: StateContext<DriveStateModel>) {\r\n        ctx.patchState({dragging: true});\r\n    }\r\n\r\n    @Action(StoppedDragging)\r\n    stoppedDragging(ctx: StateContext<DriveStateModel>) {\r\n        ctx.patchState({dragging: false});\r\n    }\r\n\r\n    @Action(MoveEntries)\r\n    movieEntries(ctx: StateContext<DriveStateModel>, action: MoveEntries) {\r\n        const entries = action.entries || ctx.getState().selectedEntries;\r\n\r\n        if ( ! DriveState.canMoveEntriesTo(entries, action.destination)) return;\r\n\r\n        ctx.dispatch(new ShowLoadingToast(LoadingToastMessages.moveEntries));\r\n\r\n        const oldLocation = entries[0].parent_id;\r\n\r\n        return this.entriesApi.moveEntries({entryIds: entries.map(entry => entry.id), destination: action.destination?.id}).pipe(\r\n            finalize(() => ctx.dispatch(new HideLoadingToast())),\r\n            tap(response => {\r\n                return ctx.dispatch(new MoveEntriesSuccess(action.destination?.id, oldLocation, response.entries));\r\n            }, (errResponse: BackendErrorResponse) => {\r\n                return ctx.dispatch(new MoveEntriesFailed(errResponse.errors));\r\n            })\r\n        );\r\n    }\r\n\r\n    @Action(MoveEntriesSuccess)\r\n    moveEntriesSuccess(ctx: StateContext<DriveStateModel>, action: MoveEntriesSuccess) {\r\n        const state = ctx.getState(),\r\n            entryIds = action.entries.map(entry => entry.id),\r\n            folders = action.entries.filter(entry => entry.type === 'folder');\r\n\r\n        // remove moved entries from old folder\r\n        const newState = {\r\n            selectedEntries: [],\r\n            entries: state.entries.filter(entry => entryIds.indexOf(entry.id) === -1)\r\n        } as Partial<DriveStateModel>;\r\n\r\n        // rebuild folder tree\r\n        if (folders.length) {\r\n            newState.flatFolders = {...state.flatFolders};\r\n            action.entries\r\n                .filter(entry => entry.type === 'folder')\r\n                .forEach(entry => newState.flatFolders[entry.id] = entry as DriveFolder);\r\n        }\r\n\r\n        // update active folder\r\n        if (state.activePage.folder) {\r\n            const folder = action.entries.find(entry => state.activePage.folder.id === entry.id);\r\n            if (folder) newState.activePage = {...state.activePage, folder};\r\n        }\r\n\r\n        ctx.patchState(newState);\r\n        return ctx.dispatch(new BuildFolderTree());\r\n    }\r\n\r\n    @Action(SetViewMode)\r\n    setViewMode(ctx: StateContext<DriveStateModel>, action: SetViewMode) {\r\n        this.localStore.set(VIEW_MODE_KEY, action.mode);\r\n        ctx.patchState({viewMode: action.mode});\r\n    }\r\n\r\n    @Action(ToggleDetailsSidebar)\r\n    toggleDetailsSidebar(ctx: StateContext<DriveStateModel>) {\r\n        ctx.patchState({\r\n            detailsVisible: !ctx.getState().detailsVisible\r\n        });\r\n    }\r\n\r\n    @Action(ToggleSidebar)\r\n    toggleSidebar(ctx: StateContext<DriveStateModel>) {\r\n        ctx.patchState({\r\n            sidebarOpen: !ctx.getState().sidebarOpen\r\n        });\r\n    }\r\n\r\n    @Action(AddEntries)\r\n    addEntries(ctx: StateContext<DriveStateModel>, action: AddEntries) {\r\n        const currentEntries = ctx.getState().entries,\r\n            spaceUsage = ctx.getState().spaceUsage;\r\n\r\n        const newEntries = action.entries\r\n            .filter(entry => !currentEntries.find(curr => curr.id === entry.id));\r\n\r\n        const newSize = newEntries.filter(entry => entry.type !== 'folder')\r\n            .reduce((sum, entry) => sum + entry.file_size, 0);\r\n\r\n        ctx.patchState({\r\n            entries: [...newEntries, ...currentEntries],\r\n            spaceUsage: {...spaceUsage, used: spaceUsage.used + newSize}\r\n        });\r\n    }\r\n\r\n    @Action(UploadFiles)\r\n    uploadFiles(ctx: StateContext<DriveStateModel>, action: UploadFiles) {\r\n        if ( ! this.enoughSpaceLeftToUpload(ctx.getState().spaceUsage, action.files)) {\r\n            return ctx.dispatch(new NotEnoughSpaceError());\r\n        }\r\n\r\n        if ( ! action.files.length) return;\r\n\r\n        ctx.dispatch(new OpenUploadsPanel());\r\n\r\n        const state = ctx.getState();\r\n        const destinationPage = state.activePage;\r\n        const destinationId = destinationPage.folder.id || null;\r\n\r\n        const config = {\r\n            httpParams: {parentId: destinationId},\r\n            validator: this.validator,\r\n        };\r\n\r\n        return this.uploads.start(action.files, config).pipe(\r\n            tap(response => {\r\n                // get parent folders, if user has uploaded folders and not single files\r\n                const entries = [...response.fileEntry.all_parents, response.fileEntry];\r\n\r\n                // remove all entries that are not direct child of currently open folder\r\n                const newEntries = entries.filter(newEntry => newEntry && newEntry.parent_id === destinationId);\r\n                const currentPage = ctx.getState().activePage;\r\n\r\n                // add newly uploaded files and created folders\r\n                if (currentPage.folder && currentPage.folder.id === destinationId) {\r\n                    ctx.dispatch(new AddEntries(newEntries as DriveEntry[]));\r\n                }\r\n\r\n                // rebuild folder tree, if there are any folders\r\n                const folders = entries.filter(entry => entry && entry.type === 'folder');\r\n                if (folders.length) {\r\n                    const flatFolders = [...ctx.getState().flatFolders, ...folders] as DriveFolder[];\r\n                    ctx.patchState({flatFolders});\r\n                    ctx.dispatch(new BuildFolderTree());\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    @Action(DeleteTrashedEntriesForever)\r\n    deleteTrashedEntriesForever(ctx: StateContext<DriveStateModel>) {\r\n        const selectedEntries = this.store.selectSnapshot(DriveState.selectedEntries),\r\n            entryIds = selectedEntries.map(entry => entry.id);\r\n\r\n        const newEntries = ctx.getState().entries\r\n                .filter(entry => entryIds.indexOf(entry.id) === -1);\r\n\r\n        return this.entriesApi.delete({entryIds, deleteForever: true}).pipe(tap(() => {\r\n            ctx.patchState({\r\n                entries: newEntries,\r\n                selectedEntries: [],\r\n            });\r\n\r\n            return ctx.dispatch([\r\n                new TrashedEntriesDeleteSuccess(selectedEntries),\r\n                new UserSpaceUsageChanged(),\r\n            ]);\r\n        }));\r\n    }\r\n\r\n    @Action(RestoreTrashedEntries)\r\n    restoreTrashedEntries(ctx: StateContext<DriveStateModel>, action: RestoreTrashedEntries) {\r\n        const activePage = this.store.selectSnapshot(DriveState.activePage);\r\n        const restoredEntries = action.entries || this.store.selectSnapshot(DriveState.selectedEntries);\r\n        const entryIds = restoredEntries.map(entry => entry.id);\r\n        let newEntries: DriveEntry[];\r\n\r\n        if (activePage.name === TRASH_PAGE.name) {\r\n            newEntries = ctx.getState().entries\r\n                .filter(entry => entryIds.indexOf(entry.id) === -1);\r\n        } else {\r\n            newEntries = [...ctx.getState().entries, ...action.entries];\r\n        }\r\n\r\n        return this.entriesApi.restore({entryIds}).pipe(tap(() => {\r\n            ctx.patchState({\r\n                entries: newEntries,\r\n                selectedEntries: [],\r\n            });\r\n\r\n            return ctx.dispatch(new TrashedEntriesRestoreSuccess(restoredEntries));\r\n        }));\r\n    }\r\n\r\n    @Action(EmptyTrash, {cancelUncompleted: true})\r\n    emptyTrash(ctx: StateContext<DriveStateModel>) {\r\n        ctx.dispatch(new ShowLoadingToast(LoadingToastMessages.emptyTrash));\r\n\r\n        return this.entriesApi.emptyTrash().pipe(\r\n            finalize(() => ctx.dispatch(new HideLoadingToast())),\r\n            tap(() => {\r\n                ctx.patchState({\r\n                    entries: [],\r\n                    selectedEntries: [],\r\n                });\r\n\r\n                return ctx.dispatch(new UserSpaceUsageChanged());\r\n            })\r\n        );\r\n    }\r\n\r\n    @Action(AddStar, {cancelUncompleted: true})\r\n    addStar(ctx: StateContext<DriveStateModel>, action: AddStar) {\r\n        const state = ctx.getState(),\r\n            ids = action.entries.map(entry => entry.id);\r\n\r\n        return this.entriesApi.addStar(ids).pipe(tap(response => {\r\n            const newEntries = state.entries.map(entry => {\r\n                if (ids.indexOf(entry.id) > -1) {\r\n                    if ( ! entry.tags) entry.tags = [];\r\n                    entry.tags.push(response.tag);\r\n                }\r\n                return entry;\r\n            });\r\n\r\n            const selectedEntries = state.selectedEntries.map(entry => {\r\n                entry.tags.push(response.tag);\r\n                return entry;\r\n            });\r\n\r\n            ctx.patchState({\r\n                entries: newEntries,\r\n                selectedEntries: selectedEntries,\r\n            });\r\n        }));\r\n    }\r\n\r\n    @Action(RemoveStar, {cancelUncompleted: true})\r\n    removeStar(ctx: StateContext<DriveStateModel>, action: RemoveStar) {\r\n        const state = ctx.getState(),\r\n            ids = action.entries.map(entry => entry.id);\r\n\r\n        return this.entriesApi.removeStar(ids).pipe(tap(response => {\r\n            const newEntries = state.entries.map(entry => {\r\n                if (ids.indexOf(entry.id) > -1) this.removeTag(entry, response.tag);\r\n                return entry;\r\n            });\r\n\r\n            const selectedEntries = state.selectedEntries\r\n                .map(entry => this.removeTag(entry, response.tag));\r\n\r\n            ctx.patchState({\r\n                entries: newEntries,\r\n                selectedEntries: selectedEntries\r\n            });\r\n        }));\r\n    }\r\n\r\n    @Action(RemoveEntries)\r\n    removeEntries(ctx: StateContext<DriveStateModel>, action: RemoveEntries) {\r\n        const ids = action.entries.map(entry => entry.id);\r\n        const newEntries = ctx.getState().entries\r\n            .filter(entry => ids.indexOf(entry.id) === -1);\r\n        ctx.patchState({\r\n            entries: newEntries\r\n        });\r\n        this.toast.open({message: 'Removed :count items.', replacements: {count: ids.length}});\r\n    }\r\n\r\n    @Action(CopySelectedEntries)\r\n    copySelectedEntries(ctx: StateContext<DriveStateModel>) {\r\n        const entries = this.store.selectSnapshot(DriveState.selectedEntries),\r\n            entryIds = entries.map(entry => entry.id),\r\n            folders = entries.filter(entry => entry.type === 'folder'),\r\n            oldState = ctx.getState();\r\n\r\n        if ( ! this.enoughSpaceLeftToUpload(ctx.getState().spaceUsage, entries)) {\r\n            return ctx.dispatch(new NotEnoughSpaceError());\r\n        }\r\n\r\n        ctx.dispatch(new ShowLoadingToast(LoadingToastMessages.copyEntries));\r\n\r\n        return this.entriesApi.copy({entryIds}).pipe(\r\n            finalize(() => ctx.dispatch(new HideLoadingToast())),\r\n            tap(response => {\r\n                const newState = {} as Partial<DriveStateModel>;\r\n\r\n                // show copied entries, if we are in a folder view\r\n                if (ctx.getState().activePage.folder) {\r\n                    newState.entries = oldState.entries.concat(response.entries);\r\n                }\r\n\r\n                // rebuild folder tree\r\n                if (folders.length) {\r\n                    newState.flatFolders = {...oldState.flatFolders};\r\n                    response.entries\r\n                        .filter(folder => folder.type === 'folder')\r\n                        .forEach(folder => newState.flatFolders.push(folder as DriveFolder));\r\n                }\r\n\r\n                ctx.patchState(newState);\r\n\r\n                // update user space usage\r\n                ctx.dispatch(new UserSpaceUsageChanged());\r\n\r\n                // rebuild folder tree\r\n                if (folders.length) ctx.dispatch(new BuildFolderTree());\r\n\r\n                const activePage = this.store.selectSnapshot(DriveState.activePage);\r\n                const location = activePage.name === DRIVE_PAGE_NAMES.SHARES ? `${this.workspaces.activeWorkspace$.value.name} workspace` : activePage.folder.name;\r\n                this.toast.open({message: `Copied :count file(s) into :location.`, replacements: {count: entryIds.length, location}});\r\n            })\r\n        );\r\n    }\r\n\r\n    @Action(OpenUploadWindow)\r\n    openUploadWindow(ctx: StateContext<DriveStateModel>, action: OpenUploadWindow) {\r\n        const config = {\r\n            ...this.uploadInputConfig,\r\n            directory: action.type === 'directory'\r\n        };\r\n\r\n        openUploadWindow(config).then(files => {\r\n            if ( ! files || ! files.length) return;\r\n            ctx.dispatch(new UploadFiles(files));\r\n        });\r\n    }\r\n\r\n    @Action(LoadUserSpaceUsage)\r\n    @Action(UserSpaceUsageChanged)\r\n    loadUserSpaceUsage(ctx: StateContext<DriveStateModel>) {\r\n        return this.entriesApi.getSpaceUsage().pipe(tap(spaceUsage => {\r\n            ctx.patchState({spaceUsage: {used: spaceUsage.used, available: spaceUsage.available}});\r\n        }));\r\n    }\r\n\r\n    @Action(UpdateEntries)\r\n    updateEntries(ctx: StateContext<DriveStateModel>, action: UpdateEntries) {\r\n        const mainEntries = ctx.getState().entries.slice(),\r\n            selectedEntries = ctx.getState().selectedEntries.slice();\r\n\r\n        action.entries.forEach(updatedEntry => {\r\n            // update main entries\r\n            const mainIndex = mainEntries.findIndex(entry => updatedEntry.id === entry.id);\r\n            mainEntries[mainIndex] = {...mainEntries[mainIndex], ...updatedEntry};\r\n\r\n            // update selected entries\r\n            const selectedIndex = selectedEntries.findIndex(entry => updatedEntry.id === entry.id);\r\n            if (selectedIndex > -1) {\r\n                selectedEntries[selectedIndex] = {...selectedEntries[selectedIndex], ...updatedEntry};\r\n            }\r\n        });\r\n\r\n        ctx.patchState({entries: mainEntries, selectedEntries});\r\n    }\r\n\r\n    @Action(UpdateEntryDescription)\r\n    updateEntryDescription(ctx: StateContext<DriveStateModel>, {entry, description}: UpdateEntryDescription) {\r\n        return this.entriesApi.update(entry.id, {description})\r\n            .pipe(tap(response => {\r\n                ctx.dispatch(new UpdateEntries([response.fileEntry]));\r\n            }));\r\n    }\r\n\r\n    @Action(BreakpointChanged)\r\n    breakpointChanged(ctx: StateContext<DriveStateModel>, action: BreakpointChanged) {\r\n        ctx.patchState({\r\n            isMobile: action.status.isMobile,\r\n            sidebarOpen: !action.status.isMobile,\r\n            detailsVisible: !action.status.isMobile,\r\n        });\r\n    }\r\n\r\n    @Action(SetCurrentUser)\r\n    setCurrentUser(ctx: StateContext<DriveStateModel>, action: SetCurrentUser) {\r\n        ctx.patchState({currentUser: action.user});\r\n    }\r\n\r\n    @Action(SetWorkspace)\r\n    setWorkspace(ctx: StateContext<DriveStateModel>, action: SetWorkspace) {\r\n        ctx.patchState({activeWorkspace: action.workspace});\r\n    }\r\n\r\n    @Action(ResetState)\r\n    resetState(ctx: StateContext<DriveStateModel>) {\r\n        ctx.setState({...DRIVE_STATE_MODEL_DEFAULTS, viewMode: ctx.getState().viewMode});\r\n    }\r\n\r\n    private transformQueryParams(params: DriveApiIndexParams): DriveApiIndexParams {\r\n        const page = this.store.selectSnapshot(DriveState.activePage),\r\n            meta = this.store.selectSnapshot(DriveState.meta);\r\n\r\n        const queryParams = {\r\n            orderBy: meta.sortColumn,\r\n            orderDir: meta.sortDirection,\r\n            ...params\r\n        };\r\n\r\n        if (page.name === DRIVE_PAGE_NAMES.FOLDER) {\r\n            queryParams.folderId = page.folderHash;\r\n        }\r\n        if (meta.query) queryParams.query = meta.query;\r\n        if (meta.type) queryParams.type = meta.type;\r\n\r\n        return queryParams;\r\n    }\r\n\r\n    /**\r\n     * Check if user has enough space left to upload all specified files.\r\n     */\r\n    private enoughSpaceLeftToUpload(spaceUsage: UserSpaceUsage, files: (UploadedFile|FileEntry)[]) {\r\n        const newSize = files.reduce((sum, file) => {\r\n            const size = hasKey('size', file) ? file.size : file.file_size;\r\n            return sum + size;\r\n        }, 0);\r\n        const currentlyUsing = spaceUsage.used;\r\n        const availableSpace = spaceUsage.available;\r\n        return (newSize + currentlyUsing) < availableSpace;\r\n    }\r\n\r\n    private removeTag(entry: DriveEntry, tag: Tag) {\r\n        entry.tags = entry.tags.filter(t => t.id !== tag.id);\r\n        return entry;\r\n    }\r\n\r\n    static canMoveEntriesTo(movingEntries: DriveEntry[], destination?: DriveFolder) {\r\n        if (destination && destination.type !== 'folder') return false;\r\n\r\n        // should not be able to move folder into it's\r\n        // own child or same folder it's already in\r\n        return movingEntries.every(entry => {\r\n            // entry is already in this folder\r\n            if (destination?.id === entry.parent_id) return false;\r\n\r\n            // trying to move folder into it's own child\r\n            if (destination && destination.path.startsWith(entry.path)) return false;\r\n\r\n            return true;\r\n        });\r\n    }\r\n}\r\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, OnChanges } from '@angular/core';\nimport { SUPPORTED_ENTRY_TYPES } from '../../../entries/supported-entry-types';\nimport { kebabCase } from '@common/core/utils/kebab-case';\n\n@Component({\n    selector: 'file-icon',\n    templateUrl: './file-icon.component.html',\n    styleUrls: ['./file-icon.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FileIconComponent implements OnChanges {\n    @Input() type: string;\n    @Input() mime: string;\n\n    ngOnChanges() {\n        if ( ! this.type && this.mime) {\n            this.type = this.mime.split('/')[0];\n        }\n        if ( ! SUPPORTED_ENTRY_TYPES.includes(this.type)) {\n            this.type = 'default';\n        }\n    }\n\n    public getType() {\n        return kebabCase(this.type);\n    }\n}\n","import { DriveFolder } from '../../folders/models/driveFolder';\r\nimport { DriveEntry } from '../../files/models/drive-entry';\r\nimport { ConfirmModalData } from '@common/core/ui/confirm-modal/confirm-modal.component';\r\nimport { ComponentType } from '@angular/cdk/portal';\r\nimport { UploadedFile } from '@common/uploads/uploaded-file';\r\nimport { SortColumn, SortDirection } from '../../entries/available-sorts';\r\nimport { LoadEntriesAction } from './events';\r\nimport { DriveApiIndexParams } from '../../drive-entry-api.service';\r\nimport { FileEntry } from '@common/uploads/types/file-entry';\r\nimport { ShareableLink } from '../../sharing/links/models/shareable-link';\r\nimport { MatDialogConfig } from '@angular/material/dialog';\r\nimport { User } from '../../../../common/core/types/models/User';\r\nimport { Workspace } from '../../../../common/workspaces/types/workspace';\r\nimport { DrivePage } from '../models/drive-page';\r\n\r\nexport class LoadUserFolders {\r\n    static readonly type = '[Drive] Load User Folders';\r\n}\r\n\r\nexport class LoadUserSpaceUsage {\r\n    static readonly type = '[Drive] Load User Space Usage';\r\n}\r\n\r\nexport class BuildFolderTree {\r\n    static readonly type = '[Drive] Build Folder Tree';\r\n    constructor(public folders?: DriveFolder[]) {}\r\n}\r\n\r\nexport class OpenFolder {\r\n    static readonly type = '[Drive] Open Folder';\r\n    constructor(public folder?: DriveFolder) {}\r\n}\r\n\r\nexport class OpenSearchPage {\r\n    static readonly type = '[Drive] Open Search Page';\r\n    constructor(public queryParams: {\r\n        type?: string,\r\n        query?: string,\r\n    }) {}\r\n}\r\n\r\nexport class SelectEntries {\r\n    static readonly type = '[Drive] Select Entries';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class SelectAllEntries {\r\n    static readonly type = '[Drive] Select All Entries';\r\n}\r\n\r\nexport class DeselectAllEntries {\r\n    static readonly type = '[Drive] Deselect All Entries';\r\n}\r\n\r\nexport class DeleteSelectedEntries {\r\n    static readonly type = '[Drive] Delete Selected Entries';\r\n}\r\n\r\nexport class OpenUploadsPanel {\r\n    static readonly type = '[Drive] Open UploadsApiService Panel';\r\n}\r\n\r\nexport class CloseUploadsPanel {\r\n    static readonly type = '[Drive] Close UploadsApiService Panel';\r\n}\r\n\r\nexport class AddEntries {\r\n    static readonly type = '[Drive] Add Entries';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class MoveEntries {\r\n    static readonly type = '[Drive API] Move Entries';\r\n    constructor(public destination: DriveFolder, public entries?: DriveEntry[]) {}\r\n}\r\n\r\nexport class OpenDialog {\r\n    static readonly type = '[Drive] Open Dialog';\r\n    constructor(public dialog: ComponentType<any>, public data?: object, public config?: MatDialogConfig) {}\r\n}\r\n\r\nexport class OpenConfirmDialog {\r\n    static readonly type = '[Drive] Open Confirm Dialog';\r\n    constructor(public data: ConfirmModalData, public confirmAction: any) {}\r\n}\r\n\r\nexport class SetViewMode {\r\n    static readonly type = '[Drive] Set View Mode';\r\n    constructor(public mode: 'list'|'grid') {}\r\n}\r\n\r\nexport class ToggleDetailsSidebar {\r\n    static readonly type = '[Drive] Toggle Details';\r\n}\r\n\r\nexport class ToggleSidebar {\r\n    static readonly type = '[Drive] Toggle Sidebar';\r\n}\r\n\r\nexport class UploadFiles {\r\n    static readonly type = '[Drive] Upload Files';\r\n    constructor(public files: UploadedFile[]) {}\r\n}\r\n\r\nexport class RestoreTrashedEntries {\r\n    static readonly type = '[Drive] Restore Trashed Entries';\r\n    constructor(public entries?: DriveEntry[]) {}\r\n}\r\n\r\nexport class DeleteTrashedEntriesForever {\r\n    static readonly type = '[Drive] Delete Trashed Entries Forever';\r\n}\r\n\r\nexport class EmptyTrash {\r\n    static readonly type = '[Drive] Empty Trash';\r\n}\r\n\r\nexport class OpenFilePreview {\r\n    static readonly type = '[Drive] Open File Preview Overlay';\r\n    constructor(public entries?: DriveEntry[]) {}\r\n}\r\n\r\nexport class DownloadEntries {\r\n    static readonly type = '[Drive] Download Files';\r\n    constructor(public entries?: FileEntry[], public link?: ShareableLink, public password?: string) {}\r\n}\r\n\r\nexport class AddStar {\r\n    static readonly type = '[Drive] Add a Star';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class RemoveStar {\r\n    static readonly type = '[Drive] Remove Star';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class RemoveEntries {\r\n    static readonly type = '[Drive] Remove Entries';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class ChangeSort {\r\n    static readonly type = '[Drive] Change Sort';\r\n    constructor(public sort: SortColumn, public direction: SortDirection = 'desc') {}\r\n}\r\n\r\nexport class LoadMoreEntries implements LoadEntriesAction {\r\n    static readonly type = '[Drive Infinite Scroll] Load More Entries';\r\n    public loadMore = true;\r\n    constructor(public queryParams: DriveApiIndexParams = {}) {}\r\n}\r\n\r\nexport class ReloadPageEntries implements LoadEntriesAction {\r\n    static readonly type = '[Drive] Reload Page Entries';\r\n    constructor(public queryParams: DriveApiIndexParams = {}, public page?: DrivePage) {}\r\n}\r\n\r\nexport class CopySelectedEntries {\r\n    static readonly type = '[Drive] Copy Selected Entries';\r\n}\r\n\r\nexport class OpenUploadWindow {\r\n    static readonly type = '[Drive] Open Upload Window';\r\n    constructor(public type: 'file'|'directory') {}\r\n}\r\n\r\nexport class ShowLoadingToast {\r\n    static readonly type = '[Drive] Show Loading Toast';\r\n    constructor(public message: string) {}\r\n}\r\n\r\nexport class HideLoadingToast {\r\n    static readonly type = '[Drive] Hide Loading Toast';\r\n}\r\n\r\nexport class ResetState {\r\n    static readonly type = '[Drive] Reset State';\r\n}\r\n\r\nexport class UpdateEntries {\r\n    static readonly type = '[Drive] Update Entries';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class SetCurrentUser {\r\n    static readonly type = '[Drive] Set Current User';\r\n    constructor(public user: User) {}\r\n}\r\n\r\nexport class SetWorkspace {\r\n    static readonly type = '[Drive] Set Workspace';\r\n    constructor(public workspace: Workspace) {}\r\n}\r\n\r\nexport class UpdateEntryDescription {\r\n    static readonly type = '[Drive] Update Entry Description';\r\n    constructor(public entry: FileEntry, public description: string) {}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { DrivePageType } from './available-pages';\r\nimport { DriveFolder } from '../../folders/models/driveFolder';\r\nimport { SortColumn, SortDirection } from '../../entries/available-sorts';\r\n\r\nexport const DRIVE_PAGE_NAMES: {[key: string]: DrivePageType} = {\r\n    FOLDER: 'folder',\r\n    RECENT: 'recent',\r\n    TRASH: 'trash',\r\n    SHARES: 'shares',\r\n    STARRED: 'starred',\r\n    SEARCH: 'search',\r\n    WORKSPACES: 'workspaces',\r\n};\r\n\r\nexport interface DrivePageParams {\r\n    name: DrivePageType;\r\n    viewName: string;\r\n    folder?: DriveFolder;\r\n    folderHash?: string;\r\n    hasActions?: boolean;\r\n    disableSort?: boolean;\r\n    sortColumn?: SortColumn;\r\n    queryParams?: object;\r\n    sortDirection?: SortDirection;\r\n}\r\n\r\nexport class DrivePage implements DrivePageParams {\r\n    name = null;\r\n    viewName = null;\r\n    folder = null;\r\n    folderHash = null;\r\n    hasActions = false;\r\n    sortColumn = 'updated_at' as SortColumn;\r\n    sortDirection = 'desc' as SortDirection;\r\n    queryParams = {};\r\n\r\n    constructor(params: DrivePageParams) {\r\n        Object.keys(params).forEach(key => {\r\n            this[key] = params[key];\r\n        });\r\n    }\r\n}\r\n\r\nexport const RECENT_PAGE = new DrivePage({\r\n    name: DRIVE_PAGE_NAMES.RECENT,\r\n    viewName: 'Recent',\r\n    disableSort: true,\r\n    sortColumn: 'created_at',\r\n    sortDirection: 'desc',\r\n    queryParams: {\r\n        recentOnly: true,\r\n    }\r\n});\r\n\r\nexport const SEARCH_PAGE = new DrivePage({\r\n    name: DRIVE_PAGE_NAMES.SEARCH,\r\n    viewName: 'Search results',\r\n});\r\n\r\nexport const SHARES_PAGE = new DrivePage({\r\n    name: DRIVE_PAGE_NAMES.SHARES,\r\n    viewName: 'Shared',\r\n    queryParams: {\r\n        sharedOnly: true,\r\n    }\r\n});\r\n\r\nexport const TRASH_PAGE = new DrivePage({\r\n    name: DRIVE_PAGE_NAMES.TRASH,\r\n    viewName: 'Trash',\r\n    hasActions: true,\r\n    queryParams: {\r\n        deletedOnly: true,\r\n    }\r\n});\r\n\r\nexport const WORKSPACE_INDEX_PAGE = new DrivePage({\r\n    name: DRIVE_PAGE_NAMES.WORKSPACES,\r\n    viewName: 'Workspaces',\r\n});\r\n\r\nexport const STARRED_PAGE = new DrivePage({\r\n    name: DRIVE_PAGE_NAMES.STARRED,\r\n    viewName: 'Starred',\r\n    queryParams: {\r\n        starredOnly: true,\r\n    }\r\n});\r\n\r\nexport class FolderPage extends DrivePage {\r\n    constructor(folder?: DriveFolder) {\r\n        super({\r\n            name: DRIVE_PAGE_NAMES.FOLDER,\r\n            viewName: folder?.name,\r\n            folder,\r\n            folderHash: folder?.hash,\r\n            hasActions: true\r\n        });\r\n    }\r\n}\r\n","import { DriveStateModel } from './drive-state-model';\r\n\r\nexport const DRIVE_STATE_MODEL_DEFAULTS: DriveStateModel = {\r\n    isMobile: false,\r\n    activePage: null,\r\n    folderTree: [],\r\n    flatFolders: [],\r\n    userFoldersLoaded: false,\r\n    entries: [],\r\n    selectedEntries: [],\r\n    dragging: false,\r\n    loading: false,\r\n    uploadsPanelOpen: false,\r\n    viewMode: 'grid' as 'grid'|'list',\r\n    detailsVisible: true,\r\n    sidebarOpen: true,\r\n    currentUser: null,\r\n    activeWorkspace: null,\r\n    spaceUsage: {\r\n        available: null,\r\n        used: null,\r\n    },\r\n    meta: {\r\n        sortColumn: 'updated_at',\r\n        sortDirection: 'desc',\r\n        currentPage: 0,\r\n        lastPage: 0,\r\n    },\r\n};\r\n","import { SortColumn, SortDirection } from '../../entries/available-sorts';\r\nimport { DriveEntry } from '../../files/models/drive-entry';\r\nimport { DriveFolder } from '../../folders/models/driveFolder';\r\nimport { DrivePage } from './drive-page';\r\nimport { UserSpaceUsage } from './user-space-usage';\r\nimport { User } from '@common/core/types/models/User';\r\nimport { Workspace } from '../../../../common/workspaces/types/workspace';\r\n\r\nexport interface DriveStateModel {\r\n    isMobile: boolean;\r\n    activePage: DrivePage;\r\n    folderTree: DriveFolder[];\r\n    flatFolders: DriveFolder[];\r\n    userFoldersLoaded: boolean;\r\n    entries: DriveEntry[];\r\n    selectedEntries: DriveEntry[];\r\n    spaceUsage: UserSpaceUsage;\r\n    rootFolder?: DriveFolder;\r\n    meta: {\r\n        currentPage: number;\r\n        lastPage: number;\r\n        sortColumn: SortColumn;\r\n        sortDirection: SortDirection;\r\n        type?: string|null,\r\n        query?: string|null\r\n    };\r\n    dragging: boolean;\r\n    loading: boolean;\r\n    uploadsPanelOpen: boolean;\r\n    viewMode: 'list'|'grid';\r\n    detailsVisible: boolean;\r\n    sidebarOpen: boolean;\r\n    currentUser: User|null;\r\n    activeWorkspace: Workspace|null;\r\n}\r\n\r\nexport const VIEW_MODE_KEY = 'bedrive.viewMode';\r\n","export enum LoadingToastMessages {\r\n    copyEntries =  'Copying items...',\r\n    emptyTrash = 'Emptying trash...',\r\n    moveEntries = 'Moving items...',\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\nimport { UploadInputConfig } from '../../common/uploads/upload-input-config';\r\n\r\nexport const DRIVE_UPLOAD_INPUT_CONFIG = new InjectionToken<UploadInputConfig>('DRIVE_UPLOAD_INPUT_CONFIG');","export enum FOLDERS_API_ROUTES {\r\n    GET_ALL = 'drive/folders',\r\n    CREATE = 'drive/folders',\r\n}\r\n","import { DriveFolder } from '../../folders/models/driveFolder';\r\n\r\nexport function buildFolderTree(folders: DriveFolder[]) {\r\n    const hashTable = {}; const tree = [];\r\n\r\n    for (let i = 0, len = folders.length; i < len; i++) {\r\n        const folder = folders[i];\r\n        // clear children from previous builds, to prevent duplicates\r\n        folder.children = [];\r\n        hashTable[folder.id] = folder;\r\n    }\r\n\r\n    for (const treeHash in hashTable) {\r\n        if ( ! hashTable.hasOwnProperty(treeHash)) continue;\r\n        const folder = hashTable[treeHash];\r\n        if (folder.parent_id) {\r\n            const parent = hashTable[folder.parent_id];\r\n            if (parent) {\r\n                parent.children.push(folder);\r\n            }\r\n        } else {\r\n            tree.push(folder);\r\n        }\r\n    }\r\n\r\n    return tree;\r\n}\r\n","export const SUPPORTED_ENTRY_TYPES = [\r\n    'audio',\r\n    'video',\r\n    'text',\r\n    'pdf',\r\n    'archive',\r\n    'folder',\r\n    'shared-folder',\r\n    'image',\r\n    'powerPoint',\r\n    'word',\r\n    'spreadsheet',\r\n];\r\n","import { snakeCase } from './snake-case';\r\n\r\nexport function kebabCase(text: string) {\r\n    return snakeCase(text).replace('_', '-');\r\n}\r\n","<mat-icon\n        [svgIcon]=\"getType() + '-file-custom'\"\n        class=\"file-color\"\n        [ngClass]=\"getType() + '-file'\"\n></mat-icon>","<ng-container *ngIf=\"entries | async as selectedEntries\">\n    <ng-container *ngIf=\"selectedEntries[0]\">\n        <file-icon [type]=\"selectedEntries[0].type\"></file-icon>\n        <div class=\"text\">{{selectedEntries[0].name}}</div>\n        <div class=\"selected-entry-count\" *ngIf=\"selectedEntries.length > 1\">{{selectedEntries.length}}</div>\n    </ng-container>\n</ng-container>","import { Component, ViewEncapsulation, ChangeDetectionStrategy, HostBinding } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { Observable } from 'rxjs';\nimport { DriveEntry } from '../../files/models/drive-entry';\n\n@Component({\n    selector: 'entry-drag-preview',\n    templateUrl: './entry-drag-preview.component.html',\n    styleUrls: ['./entry-drag-preview.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EntryDragPreviewComponent {\n    @Select(DriveState.selectedEntries) entries: Observable<DriveEntry[]>;\n    @HostBinding('class') className = 'files-grid-item-footer';\n    @HostBinding('class.hidden') get dragging() {\n        return !this.store.selectSnapshot(DriveState.dragging);\n    }\n\n    constructor(private store: Store) {}\n}\n","import { Action, Selector, State, StateContext, Store } from '@ngxs/store';\r\nimport { DriveState } from '../../state/drive-state';\r\nimport { DriveEntryUser } from '../../files/models/drive-entry';\r\nimport { DriveEntryPermissions } from '../../permissions/drive-entry-permissions';\r\nimport { finalize, tap } from 'rxjs/operators';\r\nimport { SharesApiService } from '../shares-api.service';\r\nimport isEqual from 'lodash/isEqual';\r\nimport cloneDeep from 'lodash/cloneDeep';\r\nimport uniqBy from 'lodash/uniqBy';\r\nimport {\r\n    BackendErrorMessages, BackendErrorResponse\r\n} from '@common/core/types/backend-error-response';\r\nimport { ShareDialogEntryPermissions } from '../share-dialog/types/ShareDialogEntryPermissions';\r\nimport { UpdateEntries } from '../../state/actions/commands';\r\nimport { Injectable } from '@angular/core';\r\n\r\nexport class SetInitialUsers {\r\n    static readonly type = '[ShareDialog] Set Initial Users';\r\n}\r\n\r\nexport class UpdateUserPermissions {\r\n    static readonly type = '[ShareDialog] Update User Permissions';\r\n    constructor(public user: DriveEntryUser, public permissions: DriveEntryPermissions) {}\r\n}\r\n\r\nexport class RemoveUser {\r\n    static readonly type = '[ShareDialog] Remove User';\r\n    constructor(public user: DriveEntryUser) {}\r\n}\r\n\r\nexport class SetUsers {\r\n    static readonly type = '[ShareDialog] Set Users';\r\n    constructor(public users: DriveEntryUser[]) {}\r\n}\r\n\r\nexport class ResetState {\r\n    static readonly type = '[ShareDialog] Reset';\r\n}\r\n\r\nexport class ShareEntries {\r\n    static readonly type = '[ShareDialog] Share Entries';\r\n    constructor(public payload: {emails: string[], permissions: DriveEntryPermissions}) {}\r\n}\r\n\r\nexport class ShareEntriesFailed {\r\n    static readonly type = '[ShareDialog] Share Entries Failed';\r\n    constructor(public messages: BackendErrorMessages) {}\r\n}\r\n\r\nexport interface ShareDialogEntryUser extends DriveEntryUser {\r\n    removed?: boolean;\r\n    entry_permissions: ShareDialogEntryPermissions;\r\n}\r\n\r\nexport interface ShareDialogStateModel {\r\n    loading: boolean;\r\n    loadingUsers: number[];\r\n    original: ShareDialogEntryUser[];\r\n    usersWithAccess: ShareDialogEntryUser[];\r\n}\r\n\r\n@State<ShareDialogStateModel>({\r\n    name: 'shareDialog',\r\n    defaults: {\r\n        usersWithAccess: [],\r\n        original: [],\r\n        loading: false,\r\n        loadingUsers: [],\r\n    }\r\n})\r\n@Injectable()\r\nexport class ShareDialogState {\r\n    constructor(\r\n        private store: Store,\r\n        private sharesApi: SharesApiService\r\n    ) {}\r\n\r\n    @Selector()\r\n    static usersWithAccess(state: ShareDialogStateModel) {\r\n        return state.usersWithAccess;\r\n    }\r\n\r\n    @Selector()\r\n    static dirty(state: ShareDialogStateModel) {\r\n        return !isEqual(state.original, state.usersWithAccess);\r\n    }\r\n\r\n    @Selector()\r\n    static loading(state: ShareDialogStateModel) {\r\n        return state.loading;\r\n    }\r\n\r\n    @Selector()\r\n    static loadingUsers(state: ShareDialogStateModel) {\r\n        return state.loadingUsers;\r\n    }\r\n\r\n    @Action(SetInitialUsers)\r\n    setInitialUsers(ctx: StateContext<ShareDialogStateModel>) {\r\n        const entries = this.store.selectSnapshot(DriveState.selectedEntries);\r\n\r\n        let users = entries\r\n            .map(entry => entry.users)\r\n            .reduce((all, curr) => all.concat(curr), []);\r\n\r\n        // make sure we don't override anything in main drive store\r\n        users = cloneDeep(users);\r\n        users = users.filter(user => !!user);\r\n\r\n        // multiple entries might contain same users\r\n        const uniqueUsers = uniqBy(users, user => user.id) as ShareDialogEntryUser[];\r\n\r\n        // if permissions for same user are not same on\r\n        // all selected entries, show \"varies\" permission\r\n        if (entries.length > 1) {\r\n            uniqueUsers.forEach(user => {\r\n                const permissions = entries\r\n                    .map(entry => entry.users.find(u => u.id === user.id))\r\n                    .filter(u => !!u)\r\n                    .map(u => Object.assign({}, u.entry_permissions));\r\n\r\n                if (entries.length !== permissions.length || permissions.some(p => !isEqual(p, permissions[0]))) {\r\n                    user.entry_permissions = {varies: true};\r\n                }\r\n            });\r\n        }\r\n\r\n        ctx.patchState({\r\n            usersWithAccess: cloneDeep(uniqueUsers),\r\n            original: uniqueUsers,\r\n        });\r\n    }\r\n\r\n    @Action(SetUsers)\r\n    setUsers(ctx: StateContext<ShareDialogStateModel>, action: SetUsers) {\r\n        ctx.patchState({\r\n            usersWithAccess: action.users,\r\n            original: cloneDeep(action.users)\r\n        });\r\n    }\r\n\r\n    @Action(UpdateUserPermissions)\r\n    updateUserPermissions(ctx: StateContext<ShareDialogStateModel>, action: UpdateUserPermissions) {\r\n        this.toggleUserLoading(ctx, action.user.id, true);\r\n        const entryIds = this.store.selectSnapshot(DriveState.selectedEntries).map(e => e.id);\r\n        const userId = action.user.id;\r\n        return this.sharesApi.changePermissions(userId, entryIds, action.permissions).pipe(\r\n            finalize(() => this.toggleUserLoading(ctx, action.user.id, false)),\r\n            tap(response => this.updateUsers(ctx, response.users))\r\n        );\r\n    }\r\n\r\n    @Action(RemoveUser)\r\n    removeUser(ctx: StateContext<ShareDialogStateModel>, action: RemoveUser) {\r\n        this.toggleUserLoading(ctx, action.user.id, true);\r\n        return this.sharesApi.detachUser(\r\n            action.user.id,\r\n            this.store.selectSnapshot(DriveState.selectedEntries).map(e => e.id)\r\n        ).pipe(\r\n            finalize(() => this.toggleUserLoading(ctx, action.user.id, false)),\r\n            tap(response => this.updateUsers(ctx, response.users))\r\n        );\r\n    }\r\n\r\n    @Action(ResetState)\r\n    resetState(ctx: StateContext<ShareDialogStateModel>) {\r\n       ctx.setState({\r\n           loading: false,\r\n           usersWithAccess: [],\r\n           original: [],\r\n           loadingUsers: [],\r\n       });\r\n    }\r\n\r\n    @Action(ShareEntries, {cancelUncompleted: true})\r\n    shareEntries(ctx: StateContext<ShareDialogStateModel>, action: ShareEntries) {\r\n        ctx.patchState({loading: true});\r\n\r\n        const payload = {\r\n            ...action.payload,\r\n            entries: this.store.selectSnapshot(DriveState.selectedEntries)\r\n        };\r\n\r\n        return this.sharesApi.shareEntries(payload)\r\n            .pipe(\r\n                finalize(() => ctx.patchState({loading: false})),\r\n                tap(response => {\r\n                    ctx.dispatch(new SetUsers(response.users));\r\n                    this.updateEntriesInDriveStore(response.users);\r\n                }, (errorResponse: BackendErrorResponse) => {\r\n                    ctx.dispatch(new ShareEntriesFailed(errorResponse.errors));\r\n                })\r\n            );\r\n    }\r\n\r\n    private toggleUserLoading(ctx: StateContext<ShareDialogStateModel>, userId: number, isLoading: boolean) {\r\n        if (isLoading) {\r\n            ctx.patchState({loadingUsers: [...ctx.getState().loadingUsers, userId]});\r\n        } else {\r\n            ctx.patchState({loadingUsers: ctx.getState().loadingUsers.filter(u => u !== userId)});\r\n        }\r\n    }\r\n\r\n    private updateUsers(ctx, newUsers: DriveEntryUser[]) {\r\n        ctx.patchState({\r\n            usersWithAccess: newUsers,\r\n            original: cloneDeep(newUsers),\r\n        });\r\n        this.updateEntriesInDriveStore(newUsers);\r\n    }\r\n\r\n    private updateEntriesInDriveStore(newUsers: DriveEntryUser[]) {\r\n        const entries = this.store.selectSnapshot(DriveState.selectedEntries);\r\n\r\n        // update permissions in main drive store, otherwise we'll get old\r\n        // permissions if user re-opens share dialog without page reload\r\n        const updatedEntries = entries.map(entry => {\r\n            entry.users = newUsers;\r\n            return entry;\r\n        });\r\n\r\n        this.store.dispatch(new UpdateEntries(updatedEntries));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { AppHttpClient } from '@common/core/http/app-http-client.service';\nimport { DriveEntryUser } from '../files/models/drive-entry';\nimport { DriveEntryPermissions } from '../permissions/drive-entry-permissions';\nimport { BackendResponse } from '@common/core/types/backend-response';\nimport { FileEntry } from '@common/uploads/types/file-entry';\n\nexport interface DriveEntryApiParams {\n    entries: FileEntry[];\n    emails: string[];\n    permissions: DriveEntryPermissions;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SharesApiService {\n    constructor(private http: AppHttpClient) {}\n\n    public changePermissions(userId: number, entryIds: number[], permissions: DriveEntryPermissions): BackendResponse<{users: DriveEntryUser[]}> {\n        return this.http.put(`drive/shares/change-permissions/${userId}`, {permissions, entryIds});\n    }\n\n    /**\n     * Attach specified users to entries.\n     */\n    public shareEntries(params: DriveEntryApiParams): BackendResponse<{users: DriveEntryUser[]}> {\n        return this.http.post('drive/shares/add-users', {\n            ...params,\n            entryIds: params.entries.map(entry => entry.id)\n        });\n    }\n\n    /**\n     * Detach specified user from entries.\n     */\n    public detachUser(userId: number, entryIds: number[]): BackendResponse<{users: DriveEntryUser[]}> {\n        return this.http.post('drive/shares/remove-user/' + userId, {entryIds});\n    }\n}\n","export interface DriveEntryPermissions {\r\n    edit?: boolean;\r\n    view?: boolean;\r\n    download?: boolean;\r\n}\r\n\r\nexport const DRIVE_ENTRY_FULL_PERMISSIONS = {\r\n    edit: true,\r\n    view: true,\r\n    download: true,\r\n};\r\n","<button mat-flat-button color=\"gray\" [matMenuTriggerFor]=\"shareMenu\" [disabled]=\"(loadingUsers$ | async).includes(user?.id)\">\n    <ng-container *ngIf=\"overallPermission() === 'varies'\">\n        <mat-icon class=\"button-icon\" svgIcon=\"priority-high\"></mat-icon>\n        <span class=\"button-text\" trans>Varies</span>\n    </ng-container>\n\n    <ng-container *ngIf=\"overallPermission() === 'edit'\">\n        <mat-icon class=\"button-icon\" svgIcon=\"edit\"></mat-icon>\n        <span class=\"button-text\" trans>Can edit</span>\n    </ng-container>\n\n    <ng-container *ngIf=\"overallPermission() === 'view'\">\n        <mat-icon class=\"button-icon\" svgIcon=\"remove-red-eye\"></mat-icon>\n        <span class=\"button-text\" trans>Can View</span>\n    </ng-container>\n\n    <ng-container *ngIf=\"overallPermission() === 'download'\">\n        <mat-icon class=\"button-icon\" svgIcon=\"file-download\"></mat-icon>\n        <span class=\"button-text\" trans>Can Download</span>\n    </ng-container>\n\n    <mat-icon class=\"dropdown-icon\" svgIcon=\"arrow-drop-down\"></mat-icon>\n</button>\n\n<mat-menu #shareMenu=\"matMenu\" classList=\"mat-menu-with-description\">\n    <div mat-menu-item (click)=\"selectPermission('edit')\">\n        <mat-icon class=\"mat-icon\" svgIcon=\"check\" [class.visually-hidden]=\"overallPermission() !== 'edit'\"></mat-icon>\n        <div>\n            <div trans>Can edit</div>\n            <div class=\"description\" trans>People can edit, delete and copy the item to their own drive.</div>\n        </div>\n    </div>\n    <div mat-menu-item (click)=\"selectPermission('download')\">\n        <mat-icon class=\"mat-icon\" svgIcon=\"check\" [class.visually-hidden]=\"overallPermission() !== 'download'\"></mat-icon>\n        <div>\n            <div trans>Can download</div>\n            <div class=\"description\" trans>People can view and download the item.</div>\n        </div>\n    </div>\n\n    <div mat-menu-item (click)=\"selectPermission('view')\">\n        <mat-icon class=\"mat-icon\" svgIcon=\"check\" [class.visually-hidden]=\"overallPermission() !== 'view'\"></mat-icon>\n        <div>\n            <div trans>Can view</div>\n            <div class=\"description\" trans>People can view the item.</div>\n        </div>\n    </div>\n</mat-menu>\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    HostBinding,\n    Input,\n    Output,\n    ViewEncapsulation\n} from '@angular/core';\nimport {\n    DRIVE_ENTRY_FULL_PERMISSIONS, DriveEntryPermissions\n} from '../../permissions/drive-entry-permissions';\nimport { ShareDialogEntryPermissions } from '../share-dialog/types/ShareDialogEntryPermissions';\nimport { Select, Store } from '@ngxs/store';\nimport { SharesApiService } from '../shares-api.service';\nimport { Toast } from '../../../../common/core/ui/toast.service';\nimport {\n    ShareDialogEntryUser, ShareDialogState, UpdateUserPermissions\n} from '../state/share-dialog.state';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'sharing-permissions-button',\n    templateUrl: './sharing-permissions-button.component.html',\n    styleUrls: ['./sharing-permissions-button.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SharingPermissionsButtonComponent {\n    @Input() permissions: ShareDialogEntryPermissions = DRIVE_ENTRY_FULL_PERMISSIONS;\n    @Input() user: ShareDialogEntryUser;\n    @Output() change: EventEmitter<DriveEntryPermissions> = new EventEmitter();\n    @Input() @HostBinding('class.compact') compact = false;\n    @Select(ShareDialogState.loadingUsers) loadingUsers$: Observable<number[]>;\n\n    constructor(\n        private store: Store,\n        private api: SharesApiService,\n        private toast: Toast,\n    ) {}\n\n    public overallPermission(): keyof ShareDialogEntryPermissions {\n        if (this.permissions.varies) {\n            return 'varies';\n        } else if (this.permissions.edit) {\n            return 'edit';\n        } else if (this.permissions.download) {\n            return 'download';\n        } else {\n            return 'view';\n        }\n    }\n\n    public selectPermission(permission: keyof ShareDialogEntryPermissions) {\n        if (permission === 'edit') {\n            this.permissions = {...DRIVE_ENTRY_FULL_PERMISSIONS};\n        } else if (permission === 'download') {\n            this.permissions = {...DRIVE_ENTRY_FULL_PERMISSIONS, edit: false};\n        } else {\n            this.permissions = {...DRIVE_ENTRY_FULL_PERMISSIONS, edit: false, download: false};\n        }\n\n        if (this.user) {\n            this.updateUserPermissions(this.permissions);\n        } else {\n            this.change.emit(this.permissions);\n        }\n    }\n\n    public updateUserPermissions(newPermissions: DriveEntryPermissions) {\n        this.store.dispatch(new UpdateUserPermissions(this.user, newPermissions))\n            .subscribe(() => {\n                this.toast.open('Changed permissions.');\n            });\n    }\n}\n","<div class=\"header\" trans>Who has access</div>\n<div class=\"users-list\">\n    <div class=\"list-item\" *ngIf=\"activeWorkspace$ | async as workspace\">\n        <mat-icon svgIcon=\"groups\" class=\"list-item-img\"></mat-icon>\n        <div class=\"text\">\n            <div class=\"display_name\" [transValues]=\"{workspace: workspace.name}\" trans>Everyone at \":workspace\" workspace</div>\n            <div class=\"email\">{{workspace.members_count}} {{ 'members' | trans }}</div>\n        </div>\n    </div>\n    <div class=\"list-item\" *ngFor=\"let user of users | async; trackBy: trackByUser\" [class.removed]=\"user.removed\" [@flyInOut]=\"'in'\">\n        <img [src]=\"user.avatar\" class=\"list-item-img\" alt=\"\">\n        <div class=\"text\">\n            <div class=\"display_name\">{{user.display_name}}</div>\n            <div class=\"email\">{{user.email}}</div>\n        </div>\n        <div class=\"actions\">\n            <span class=\"owner-label\" *ngIf=\"user.owns_entry || (currentUser.getModel().id === user.id); else permissionSelector\" trans>\n                {{ user.owns_entry ? 'Owner' : 'You' }}\n            </span>\n\n            <ng-template #permissionSelector>\n                <sharing-permissions-button [permissions]=\"user.entry_permissions\" [user]=\"user\"></sharing-permissions-button>\n                <button mat-icon-button [disabled]=\"(loadingUsers$ | async).includes(user.id)\" (click)=\"removeUser(user)\">\n                    <mat-icon svgIcon=\"close\"></mat-icon>\n                </button>\n            </ng-template>\n        </div>\n    </div>\n</div>\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { DriveEntryUser } from '../../files/models/drive-entry';\nimport {\n    RemoveUser, ShareDialogEntryUser, ShareDialogState\n} from '../state/share-dialog.state';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { CurrentUser } from '../../../../common/auth/current-user';\nimport { WorkspacesService } from '../../../../common/workspaces/workspaces.service';\nimport { DriveState } from '../../state/drive-state';\nimport { filter, map, switchMap } from 'rxjs/operators';\n\n@Component({\n    selector: 'entries-access-table',\n    templateUrl: './entries-access-table.component.html',\n    styleUrls: ['./entries-access-table.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [\n        trigger('flyInOut', [\n            state('in', style({transform: 'translateX(0)'})),\n            transition('void => *', [\n                style({transform: 'translateX(-100%)'}),\n                animate(100)\n            ]),\n            transition('* => void', [\n                animate(100, style({transform: 'translateX(100%)'}))\n            ])\n        ])\n    ]\n})\nexport class EntriesAccessTableComponent {\n    @Select(ShareDialogState.usersWithAccess) users: Observable<ShareDialogEntryUser[]>;\n    @Select(ShareDialogState.loadingUsers) loadingUsers$: Observable<number[]>;\n    public activeWorkspace$ = this.store.select(DriveState.selectedEntries)\n        .pipe(\n            map(entries => entries.every(e => e.workspace_id)),\n            filter(x => !!x),\n            switchMap(() => this.workspaces.activeWorkspace$)\n        );\n\n    constructor(\n        private store: Store,\n        public currentUser: CurrentUser,\n        public workspaces: WorkspacesService,\n    ) {}\n\n    public removeUser(user: DriveEntryUser) {\n        this.store.dispatch(new RemoveUser(user));\n    }\n\n    trackByUser(index: number, user: DriveEntryUser): number { return user.id; }\n}\n","<div class=\"modal-header\">\r\n    <h2 mat-dialog-title trans>Add people</h2>\r\n    <button type=\"button\" mat-icon-button (click)=\"dialogRef.close()\" class=\"close-button\" tabindex=\"-1\">\r\n        <mat-icon svgIcon=\"close\"></mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n    <div class=\"emails-container\">\r\n        <chip-input [formControl]=\"shareModel.emails\" [emailsInput]=\"true\" [suggestFn]=\"settings.get('share.suggest_emails') ? suggestUserEmails : null\" placeholder=\"Enter email addresses...\" email required></chip-input>\r\n        <sharing-permissions-button [compact]=\"true\" (change)=\"shareModel.permissions = $event\"></sharing-permissions-button>\r\n    </div>\r\n\r\n    <div class=\"errors\">\r\n        <div class=\"error\" *ngFor=\"let error of errors | async | keyvalue\">{{error.value}}</div>\r\n    </div>\r\n\r\n    <entries-access-table></entries-access-table>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions>\r\n    <button type=\"button\" mat-button (click)=\"dialogRef.close()\" [disabled]=\"loading$ | async\" trans>Close</button>\r\n    <button type=\"submit\" mat-raised-button color=\"accent\" (click)=\"share()\" [disabled]=\"(loading$ | async)\" *ngIf=\"shareModel.emails.value?.length\" trans>Share</button>\r\n</mat-dialog-actions>\r\n\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Actions, ofActionDispatched, Select, Store } from '@ngxs/store';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { DRIVE_ENTRY_FULL_PERMISSIONS, DriveEntryPermissions } from '../../permissions/drive-entry-permissions';\nimport { ResetState, SetInitialUsers, ShareDialogState, ShareEntries, ShareEntriesFailed } from '../state/share-dialog.state';\nimport { FormControl } from '@angular/forms';\nimport { BackendErrorMessages } from '@common/core/types/backend-error-response';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { Users } from '@common/auth/users.service';\nimport { Settings } from '@common/core/config/settings.service';\n\n@Component({\n    selector: 'share-dialog',\n    templateUrl: './share-dialog.component.html',\n    styleUrls: ['./share-dialog.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ShareDialogComponent implements OnDestroy {\n    @Select(ShareDialogState.loading) loading$: Observable<boolean>;\n\n    private destroyed$ = new Subject();\n    public errors: BehaviorSubject<BackendErrorMessages> = new BehaviorSubject({});\n    public shareModel: { emails: FormControl, permissions: DriveEntryPermissions};\n\n    constructor(\n        public dialogRef: MatDialogRef<ShareDialogComponent>,\n        public settings: Settings,\n        private store: Store,\n        private actions$: Actions,\n        private users: Users,\n    ) {\n        this.resetModel();\n        this.store.dispatch(new SetInitialUsers());\n\n        this.bindToShareError();\n        this.bindToShareModel();\n    }\n\n    ngOnDestroy() {\n        this.store.dispatch(new ResetState());\n        this.destroyed$.next();\n        this.destroyed$.complete();\n    }\n\n    public share() {\n        const payload = {\n            emails: this.shareModel.emails.value,\n            permissions: this.shareModel.permissions,\n        };\n\n        this.store.dispatch(new ShareEntries(payload)).subscribe(() => {\n            this.setErrorMessages();\n            this.resetModel();\n        });\n    }\n\n    private resetModel() {\n        this.shareModel = {\n            emails: new FormControl([]),\n            permissions: DRIVE_ENTRY_FULL_PERMISSIONS\n        };\n    }\n\n    private setErrorMessages(messages?: BackendErrorMessages) {\n        this.errors.next(messages || {});\n    }\n\n    private bindToShareModel() {\n        this.shareModel.emails.valueChanges\n            .pipe(takeUntil(this.destroyed$))\n            .subscribe(() => this.setErrorMessages());\n    }\n\n    private bindToShareError() {\n        this.actions$.pipe(\n            takeUntil(this.destroyed$),\n            ofActionDispatched(ShareEntriesFailed)\n        ).subscribe((action: ShareEntriesFailed) => {\n            this.setErrorMessages(action.messages);\n        });\n    }\n\n    suggestUserEmails = (query: string): Observable<string[]> => {\n        return this.users.getAll({query, perPage: 7})\n            .pipe(map(users => users.map(u => u.email)));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BackendResponse } from '@common/core/types/backend-response';\nimport { ShareableLink } from './models/shareable-link';\nimport { AppHttpClient } from '@common/core/http/app-http-client.service';\nimport { ShareableLinkOptions } from './models/shareable-link-options';\nimport { User } from '@common/core/types/models/User';\nimport { PaginationResponse } from '@common/core/types/pagination/pagination-response';\nimport { FileEntry } from '@common/uploads/types/file-entry';\n\nexport interface GetLinkData {\n    link: ShareableLink;\n    folderChildren: PaginationResponse<FileEntry>;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ShareableLinksApiService {\n    constructor(private http: AppHttpClient) {}\n\n    public findByEntryId(entryId: number, params: {autoCreate?: boolean}): BackendResponse<{ link: ShareableLink }> {\n        return this.http.get(`drive/entries/${entryId}/shareable-link`, params);\n    }\n\n    public findByHash(hash: string, params?: {withEntries?: boolean, page?: number, order?: string}): BackendResponse<GetLinkData> {\n        return this.http.get(`drive/shareable-links/${hash}`, params);\n    }\n\n    public create(entryId: number, params: Partial<ShareableLinkOptions>): BackendResponse<{ link: ShareableLink }> {\n        return this.http.post(`drive/entries/${entryId}/shareable-link`, params);\n    }\n\n    public update(id: number, params: Partial<ShareableLinkOptions>): BackendResponse<{ link: ShareableLink }> {\n        return this.http.put(`drive/shareable-links/${id}`, params);\n    }\n\n    public delete(id: number): BackendResponse<void> {\n        return this.http.delete(`drive/shareable-links/${id})`);\n    }\n\n    public checkPassword(linkId: number, password: string): BackendResponse<{matches: boolean}> {\n        return this.http.post(`drive/shareable-links/${linkId}/check-password`, {password});\n    }\n\n    /**\n     * Import shareable link entry into current user's drive.\n     */\n    public importEntry(linkId: number, password?: string): BackendResponse<{users: User[]}> {\n        return this.http.post(`drive/shareable-links/${linkId}/import`, {password});\n    }\n}\n","import { Action, Selector, State, StateContext, Store } from '@ngxs/store';\r\nimport { ShareableLinkOptions } from './models/shareable-link-options';\r\nimport { ShareableLinksApiService } from './shareable-links-api.service';\r\nimport { ShareableLink } from './models/shareable-link';\r\nimport { finalize, tap } from 'rxjs/operators';\r\nimport { DriveState } from '../../state/drive-state';\r\nimport { Settings } from '@common/core/config/settings.service';\r\nimport {\r\n    BackendErrorMessages, BackendErrorResponse\r\n} from '@common/core/types/backend-error-response';\r\nimport { Injectable } from '@angular/core';\r\n\r\nexport interface ShareLinkStateModel {\r\n    cache: {[key: number]: ShareableLink};\r\n    backendErrors: BackendErrorMessages;\r\n    link: ShareableLink;\r\n    loading: boolean;\r\n    linkOptions: ShareableLinkOptions;\r\n    optionsPanelVisible: boolean;\r\n}\r\n\r\nexport class LoadShareableLink {\r\n    static readonly type = '[Shareable Link] Load From Backend';\r\n    constructor(public options: {autoCreate?: boolean} = {}) {}\r\n}\r\n\r\nexport class UpdateShareableLink {\r\n    static readonly type = '[Shareable Link] Update';\r\n    constructor(public options: ShareableLinkOptions) {}\r\n}\r\n\r\nexport class CreateShareableLink {\r\n    static readonly type = '[Shareable Link] Create';\r\n    constructor(public options: ShareableLinkOptions) {}\r\n}\r\n\r\nexport class DeleteShareableLink {\r\n    static readonly type = '[Shareable Link] Delete';\r\n}\r\n\r\nexport class ToggleOptionsPanel {\r\n    static readonly type = '[Shareable Link] Toggle Options Panel Visibility';\r\n}\r\n\r\nexport class LinkCopySuccess {\r\n    static readonly type = '[Shareable Link] Copy To Clipboard Success';\r\n}\r\n\r\nexport class ResetShareLinkState {\r\n    static readonly type = '[Shareable Link] Reset State';\r\n}\r\n\r\nconst defaultState = {\r\n    link: null,\r\n    loading: false,\r\n    optionsPanelVisible: true,\r\n    backendErrors: {},\r\n    cache: {},\r\n    linkOptions: {\r\n        allowDownload: false,\r\n        allowEdit: false,\r\n        expiresAt: null,\r\n        password: null,\r\n    }\r\n};\r\n\r\n@State<ShareLinkStateModel>({\r\n    name: 'shareLink',\r\n    defaults: defaultState\r\n})\r\n@Injectable()\r\nexport class ShareLinkState {\r\n    constructor(\r\n        private store: Store,\r\n        private settings: Settings,\r\n        private linksApi: ShareableLinksApiService\r\n    ) {}\r\n\r\n    @Selector()\r\n    static loading(state: ShareLinkStateModel) {\r\n        return state.loading;\r\n    }\r\n\r\n    @Selector()\r\n    static link(state: ShareLinkStateModel) {\r\n        return state.link;\r\n    }\r\n\r\n    @Selector()\r\n    static optionsVisible(state: ShareLinkStateModel) {\r\n        return ! state.loading && state.optionsPanelVisible;\r\n    }\r\n\r\n    @Selector()\r\n    static backendErrors(state: ShareLinkStateModel) {\r\n        return state.backendErrors;\r\n    }\r\n\r\n    @Action(CreateShareableLink)\r\n    createShareableLink(ctx: StateContext<ShareLinkStateModel>, action: UpdateShareableLink) {\r\n        const entryId = this.store.selectSnapshot(DriveState.selectedEntryIds)[0];\r\n\r\n        ctx.patchState({loading: true});\r\n\r\n        return this.linksApi.create(entryId, action.options)\r\n            .pipe(\r\n                finalize(() => ctx.patchState({loading: false, backendErrors: {}})),\r\n                tap(response => {\r\n                    const link = response.link;\r\n                    ctx.patchState({\r\n                        cache: {...ctx.getState().cache, [link.entry_id]: link},\r\n                        link: response.link,\r\n                        optionsPanelVisible: false\r\n                    });\r\n                }, (errorResponse: BackendErrorResponse) => {\r\n                    ctx.patchState({backendErrors: errorResponse.errors});\r\n                })\r\n            );\r\n    }\r\n\r\n    @Action(UpdateShareableLink)\r\n    updateLink(ctx: StateContext<ShareLinkStateModel>, action: UpdateShareableLink) {\r\n        const link = ctx.getState().link;\r\n\r\n        ctx.patchState({loading: true});\r\n\r\n        return this.linksApi.update(link.id, action.options)\r\n            .pipe(\r\n                finalize(() => ctx.patchState({loading: false, backendErrors: {}})),\r\n                tap(response => ctx.patchState({\r\n                    link: response.link,\r\n                    cache: {...ctx.getState().cache, [link.entry_id]: response.link},\r\n                    optionsPanelVisible: false\r\n                }), (errorResponse: BackendErrorResponse) => {\r\n                    ctx.patchState({backendErrors: errorResponse.errors});\r\n                })\r\n            );\r\n    }\r\n\r\n    @Action(LoadShareableLink)\r\n    loadShareableLink(ctx: StateContext<ShareLinkStateModel>, action: LoadShareableLink) {\r\n        const entryId = this.store.selectSnapshot(DriveState.selectedEntryIds)[0],\r\n            cachedLink = ctx.getState().cache[entryId];\r\n\r\n        if (cachedLink) {\r\n            return ctx.patchState({link: cachedLink, optionsPanelVisible: false});\r\n        }\r\n\r\n        ctx.patchState({loading: true});\r\n\r\n        return this.linksApi.findByEntryId(entryId, {autoCreate: action.options.autoCreate})\r\n            .pipe(\r\n                finalize(() => ctx.patchState({loading: false})),\r\n                tap(response => ctx.patchState({\r\n                    link: response.link,\r\n                    optionsPanelVisible: false,\r\n                    cache: {...ctx.getState().cache, [response.link.entry_id]: response.link},\r\n                }), () => {})\r\n            );\r\n    }\r\n\r\n    @Action(DeleteShareableLink)\r\n    deleteShareableLink(ctx: StateContext<ShareLinkStateModel>) {\r\n        const link = ctx.getState().link;\r\n\r\n        ctx.patchState({loading: true});\r\n\r\n        return this.linksApi.delete(link.id)\r\n            .pipe(\r\n                finalize(() => ctx.patchState({loading: false})),\r\n                tap(() => {\r\n                    const cache = ctx.getState().cache;\r\n                    delete cache[link.entry_id];\r\n\r\n                    ctx.patchState({\r\n                        link: null,\r\n                        cache: cache,\r\n                    });\r\n                })\r\n            );\r\n    }\r\n\r\n    @Action(ToggleOptionsPanel)\r\n    toggleOptionsPanel(ctx: StateContext<ShareLinkStateModel>) {\r\n        ctx.patchState({\r\n           optionsPanelVisible: !ctx.getState().optionsPanelVisible\r\n        });\r\n    }\r\n\r\n    @Action(ResetShareLinkState, {cancelUncompleted: true})\r\n    resetShareLinkState(ctx: StateContext<ShareLinkStateModel>) {\r\n        return ctx.patchState({...ctx.getState(), ...defaultState});\r\n    }\r\n}\r\n","<form class=\"update-link-panel\" [formGroup]=\"form\" (ngSubmit)=\"saveChanges()\">\n    <div class=\"link-options\">\n        <div class=\"link-option\">\n            <div class=\"label\" trans>Link expiration</div>\n            <div class=\"content\">\n                <mat-checkbox color=\"accent\" [formControl]=\"expirationVisible\" trans>Link is valid until:</mat-checkbox>\n                <div class=\"input-container expiration-input-container\" formGroupName=\"expiresAt\"  [class.hidden]=\"!expirationVisible.value\">\n                    <div class=\"date-input-container\">\n                        <input type=\"date\" formControlName=\"date\" class=\"date-input\" placeholder=\"Expiration date...\" trans-placeholder [min]=\"getMinDate()\">\n                    </div>\n                    <input type=\"time\" class=\"time-input\" formControlName=\"time\" placeholder=\"Expiration time...\" trans-placeholder>\n                </div>\n                <div class=\"error\" *ngIf=\"(backendErrors$ | async)?.expiresAt as error\">{{error}}</div>\n            </div>\n        </div>\n        <div class=\"link-option\">\n            <div class=\"label\" trans>Password Protect</div>\n            <div class=\"content\">\n                <mat-checkbox color=\"accent\" [formControl]=\"passwordVisible\" trans>Require password:</mat-checkbox>\n                <ng-container *ngIf=\"passwordVisible.value\">\n                    <div class=\"input-container password-input-container\">\n                        <input type=\"password\" formControlName=\"password\" placeholder=\"Enter new password...\" trans-placeholder>\n                    </div>\n                </ng-container>\n            </div>\n        </div>\n        <div class=\"link-option\">\n            <div class=\"label\" trans>Allow editing</div>\n            <mat-checkbox color=\"accent\" formControlName=\"allowEdit\" trans>Users with link can modify this item.</mat-checkbox>\n        </div>\n        <div class=\"link-option\">\n            <div class=\"label\" trans>Allow download</div>\n            <mat-checkbox color=\"accent\" formControlName=\"allowDownload\" trans>Users with link can download this item.</mat-checkbox>\n        </div>\n    </div>\n\n    <button type=\"button\" (click)=\"toggleOptionsPanel()\" mat-button trans>Cancel</button>\n\n    <button type=\"submit\" class=\"update-button\" mat-raised-button color=\"accent\" [disabled]=\"loading$ | async\">\n        {{ ((link$ | async) ? 'Update Link' : 'Create Link') | trans }}\n    </button>\n</form>\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Select, Store } from '@ngxs/store';\nimport { CreateShareableLink, ShareLinkState, ToggleOptionsPanel, UpdateShareableLink } from '../share-link.state';\nimport { Observable } from 'rxjs';\nimport { ShareableLink } from '../models/shareable-link';\nimport { filter } from 'rxjs/operators';\nimport { ShareableLinkOptions } from '../models/shareable-link-options';\nimport { BackendErrorMessages } from '@common/core/types/backend-error-response';\n\n@Component({\n    selector: 'link-options',\n    templateUrl: './link-options.component.html',\n    styleUrls: ['./link-options.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LinkOptionsComponent implements OnInit {\n    @Select(ShareLinkState.link) link$: Observable<ShareableLink>;\n    @Select(ShareLinkState.loading) loading$: Observable<boolean>;\n    @Select(ShareLinkState.backendErrors) backendErrors$: Observable<BackendErrorMessages>;\n\n    public form = new FormGroup({\n        password: new FormControl(),\n        expiresAt: new FormGroup({\n            date: new FormControl(),\n            time: new FormControl(),\n        }),\n        allowEdit: new FormControl(false),\n        allowDownload: new FormControl(true)\n    });\n\n    public passwordVisible = new FormControl(false);\n    public expirationVisible = new FormControl(false);\n\n    constructor(private store: Store) {}\n\n    ngOnInit() {\n        this.bindToLinkChange();\n    }\n\n    public toggleOptionsPanel() {\n        this.store.dispatch(new ToggleOptionsPanel());\n    }\n\n    public saveChanges() {\n        if (this.store.selectSnapshot(ShareLinkState.link)) {\n            this.store.dispatch(new UpdateShareableLink(this.getPayload()));\n        } else {\n            this.store.dispatch(new CreateShareableLink(this.getPayload()));\n        }\n    }\n\n    private getPayload() {\n        const payload = {\n            allowEdit: this.form.get('allowEdit').value,\n            allowDownload: this.form.get('allowDownload').value,\n        } as ShareableLinkOptions;\n\n        if (this.expirationVisible.value) {\n            payload.expiresAt = this.form.get('expiresAt.date').value;\n            if (this.form.get('expiresAt.time').value) {\n                payload.expiresAt += ' ' + this.form.get('expiresAt.time').value;\n            }\n        }\n\n        // not sending \"password\" with request will remove it from link\n        if (this.passwordVisible.value) {\n            payload.password = this.form.get('password').value;\n        }\n\n        return payload;\n    }\n\n    private bindToLinkChange() {\n        this.link$.pipe(filter(link => !!link))\n            .subscribe(link => {\n                this.hydrateExpirationForm(link);\n\n                // show or hide password form field\n                this.passwordVisible.setValue(!!link.password);\n                this.expirationVisible.setValue(!!link.expires_at);\n\n                this.form.patchValue({\n                    allowEdit: link.allow_edit,\n                    allowDownload: link.allow_download\n                });\n            });\n    }\n\n    private hydrateExpirationForm(link: ShareableLink) {\n        if ( ! link || ! link.expires_at) return;\n\n        const parts = link.expires_at.split(/[ T]/);\n\n        this.form.get('expiresAt').setValue({\n            date: parts[0],\n            time: parts[1] ? parts[1].substr(0, 5) : '',\n        });\n    }\n\n    public getMinDate(): string {\n        return new Date().toJSON().split('T')[0];\n    }\n}\n","<div class=\"modal-header\">\n    <h2 mat-dialog-title trans>Shareable link</h2>\n    <button type=\"button\" mat-icon-button (click)=\"close()\" class=\"close-button\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<mat-dialog-content>\n    <ng-container *ngIf=\"link$ | async\">\n        <div class=\"title\">\n            <div class=\"left\">\n                {{ 'Link sharing is' | trans}} <span class=\"state on\"><button class=\"on-text text no-style\" (click)=\"deleteLink()\" trans>on</button></span>\n            </div>\n            <div class=\"right\">\n                <button type=\"button\" mat-icon-button (click)=\"deleteLink()\">\n                    <mat-icon svgIcon=\"delete\"></mat-icon>\n                </button>\n                <button type=\"button\" mat-icon-button (click)=\"toggleOptionsPanel()\">\n                    <mat-icon svgIcon=\"settings\"></mat-icon>\n                </button>\n            </div>\n        </div>\n\n        <div class=\"link-container\">\n            <div class=\"link-input-container input-container\">\n                <input type=\"text\" id=\"link-input\" readonly (click)=\"focusInput()\" (change)=\"focusInput()\" [value]=\"shareableLink$ | async\" tabindex=\"1\">\n                <button mat-flat-button color=\"accent\" (click)=\"copyLinkToClipboard()\" trans>Copy</button>\n            </div>\n            <div class=\"social-icons\">\n                <button type=\"button\" mat-icon-button class=\"social-icon no-style facebook\" (click)=\"shareLink('facebook')\">\n                    <mat-icon svgIcon=\"facebook\"></mat-icon>\n                </button>\n                <button type=\"button\" mat-icon-button class=\"social-icon no-style twitter\" (click)=\"shareLink('twitter')\">\n                    <mat-icon svgIcon=\"twitter\"></mat-icon>\n                </button>\n                <button type=\"button\" mat-icon-button class=\"social-icon no-style mail\" (click)=\"shareLink('mail')\">\n                    <mat-icon svgIcon=\"mail\"></mat-icon>\n                </button>\n            </div>\n        </div>\n    </ng-container>\n\n    <link-options [@visibility]=\"optionsVisible$ | async\"></link-options>\n    <loading-indicator [isVisible]=\"loading$ | async\" class=\"overlay-transparent\"></loading-indicator>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n    <button type=\"button\" mat-button class=\"submit-button\" (click)=\"close()\" [disabled]=\"loading$ | async\" trans>Close</button>\n</mat-dialog-actions>\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, OnInit, OnDestroy, AfterViewInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Actions, ofActionDispatched, Select, Store } from '@ngxs/store';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport {\n    DeleteShareableLink,\n    LinkCopySuccess,\n    LoadShareableLink, ResetShareLinkState,\n    ShareLinkState,\n    ToggleOptionsPanel\n} from '../links/share-link.state';\nimport { Settings } from '@common/core/config/settings.service';\nimport { ShareableLink } from '../links/models/shareable-link';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport copy from 'copy-to-clipboard';\nimport { Toast } from '@common/core/ui/toast.service';\nimport { ShareableNetworks, shareLinkSocially } from '@common/core/utils/share-link-socially';\n\n@Component({\n    selector: 'share-link-dialog',\n    templateUrl: './share-link-dialog.component.html',\n    styleUrls: ['./share-link-dialog.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [\n        trigger('visibility', [\n            state('true', style({\n                height: '*',\n                padding: '*',\n                opacity: '1',\n                overflow: '*',\n            })),\n            state('false', style({\n                height: '0',\n                padding: '0',\n                opacity: '0',\n                overflow: 'hidden',\n            })),\n            transition('true <=> false', animate('225ms cubic-bezier(.4,0,.2,1)'))\n        ]),\n    ],\n})\nexport class ShareLinkDialogComponent implements AfterViewInit, OnInit, OnDestroy {\n    @Select(ShareLinkState.loading) loading$: Observable<boolean>;\n    @Select(ShareLinkState.link) link$: Observable<ShareableLink>;\n    @Select(ShareLinkState.optionsVisible) optionsVisible$: Observable<boolean>;\n    public shareableLink$ = new BehaviorSubject(null);\n    private subscriptions: Subscription[] = [];\n\n    constructor(\n        protected store: Store,\n        protected toast: Toast,\n        protected actions$: Actions,\n        protected settings: Settings,\n        protected dialogRef: MatDialogRef<ShareLinkDialogComponent>,\n    ) {}\n\n    ngOnInit() {\n        this.store.dispatch(new LoadShareableLink());\n        this.bindToOptionsPanelToggle();\n    }\n\n    ngAfterViewInit() {\n        this.bindToLinkChange();\n    }\n\n    ngOnDestroy() {\n        this.store.dispatch(new ResetShareLinkState());\n        this.subscriptions.forEach(s => s.unsubscribe());\n    }\n\n    public toggleOptionsPanel() {\n        this.store.dispatch(new ToggleOptionsPanel());\n    }\n\n    public deleteLink() {\n        this.store.dispatch(new DeleteShareableLink()).subscribe(() => {\n            this.toast.open('Link deleted.');\n            this.dialogRef.close();\n        });\n    }\n\n    public copyLinkToClipboard() {\n        this.focusInput();\n        const success = copy(this.shareableLink$.value);\n\n        if (success) {\n            this.store.dispatch(new LinkCopySuccess());\n        }\n    }\n\n    private bindToLinkChange() {\n        this.link$.subscribe(link => {\n            if ( ! link) return;\n            this.shareableLink$.next(this.settings.getBaseUrl() + 'drive/s/' + link.hash);\n            setTimeout(() => this.focusInput());\n        });\n    }\n\n    private bindToOptionsPanelToggle() {\n        const sub = this.actions$.pipe(ofActionDispatched(ToggleOptionsPanel))\n            .subscribe(() => {\n                // close dialog if user canceled link creation\n                if ( ! this.store.selectSnapshot(ShareLinkState.optionsVisible) && ! this.shareableLink$.value) {\n                    this.close();\n                }\n            });\n        this.subscriptions.push(sub);\n    }\n\n    public shareLink(network: ShareableNetworks) {\n        shareLinkSocially(network, this.shareableLink$.value);\n    }\n\n    public focusInput() {\n        const input = document.getElementById('link-input') as HTMLInputElement;\n        input.focus();\n        input.select();\n    }\n\n    public close() {\n        this.dialogRef.close();\n    }\n}\n","export type ShareableNetworks = 'facebook'|'twitter'|'pinterest'|'tumblr'|'blogger'|'mail';\r\n\r\nexport function shareLinkSocially(network: ShareableNetworks, link: string, name?: string, image?: string) {\r\n    const url = generateShareUrl(network, link, name, image);\r\n\r\n    if (network === 'mail') {\r\n        window.location.href = url;\r\n    } else {\r\n        openNewWindow(url);\r\n    }\r\n}\r\n\r\nfunction openNewWindow(url: string) {\r\n    const width  = 575,\r\n        height = 400,\r\n        left   = (window.innerWidth  - width)  / 2,\r\n        top    = (window.innerHeight - height) / 2,\r\n        opts   = 'status=1, scrollbars=1' + ',width=' + width + ',height=' + height + ',top=' + top + ',left=' + left;\r\n\r\n    window.open(url, 'share', opts);\r\n}\r\n\r\nfunction generateShareUrl(type: string, link: string, name?: string, image?: string) {\r\n    switch (type) {\r\n        case 'facebook':\r\n            return 'https://www.facebook.com/sharer/sharer.php?u=' + link ;\r\n        case 'twitter':\r\n            return `https://twitter.com/intent/tweet?text=${name}&url=${link}`;\r\n        case 'google-plus':\r\n            return 'https://plus.google.com/share?url=' + link ;\r\n        case 'pinterest':\r\n            return 'https://pinterest.com/pin/create/button/?url=' + link + '&media=' + image;\r\n        case 'tumblr':\r\n            const base = 'https://www.tumblr.com/widgets/share/tool?shareSource=legacy&canonicalUrl=&posttype=photo&title=&caption=';\r\n            return base + name + '&content=' + image + '&url=' + link ;\r\n        case 'blogger':\r\n            return 'https://www.blogger.com/blog_this.pyra?t&u=' + link + '&n=' + name;\r\n        case 'mail':\r\n            return `mailto:?subject=Check out this link.&body=${link}`;\r\n    }\r\n}\r\n","<div class=\"modal-header\">\n    <h2 mat-dialog-title trans>New Folder</h2>\n    <button type=\"button\" mat-icon-button (click)=\"close()\" class=\"close-button\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<form ngNativeValidate (ngSubmit)=\"confirm()\">\n    <mat-dialog-content class=\"many-inputs\">\n        <div class=\"input-container\">\n            <input type=\"text\" [formControl]=\"folderName\" placeholder=\"Folder name...\" trans-placeholder required min=\"3\">\n            <div class=\"error\" *ngIf=\"errors.name\">{{errors.name}}</div>\n        </div>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <button (click)=\"close()\" type=\"button\" mat-button class=\"cancel-button\" trans>Cancel</button>\n        <button type=\"submit\" mat-raised-button color=\"accent\" class=\"submit-button\" [disabled]=\"loading | async\" trans>Create</button>\n    </mat-dialog-actions>\n</form>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { DriveFolder } from '../../models/driveFolder';\nimport { FoldersApiService } from '../../api/folders-api.service';\nimport { Store } from '@ngxs/store';\nimport { BackendErrorResponse } from '@common/core/types/backend-error-response';\nimport { DriveState } from '../../../state/drive-state';\nimport { finalize } from 'rxjs/operators';\nimport { NewFolderCreated } from '../../../state/actions/events';\n\nexport interface CrupdateFolderDialogData {\n    folder?: DriveFolder;\n}\n\nexport interface CrupdateFolderErrors {\n    name?: string;\n}\n\n@Component({\n    selector: 'crupdate-folder-dialog',\n    templateUrl: './crupdate-folder-dialog.component.html',\n    styleUrls: ['./crupdate-folder-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CrupdateFolderDialogComponent {\n    public folderName = new FormControl();\n    public loading = new BehaviorSubject(false);\n    public errors: CrupdateFolderErrors = {};\n\n    constructor(\n        private dialogRef: MatDialogRef<CrupdateFolderDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: CrupdateFolderDialogData,\n        private store: Store,\n        private foldersApi: FoldersApiService,\n        private changeDetection: ChangeDetectorRef,\n    ) {}\n\n    public confirm() {\n        this.loading.next(true);\n\n        const activeFolder = this.data.folder || this.store.selectSnapshot(DriveState.activeFolder);\n        const params = {\n            name: this.folderName.value,\n            parentId: activeFolder?.id || null,\n        };\n\n        return this.foldersApi.create(params)\n            .pipe(finalize(() => this.loading.next(false)))\n            .subscribe(response => {\n                this.setErrors();\n                this.store.dispatch(new NewFolderCreated(response.folder));\n                this.close();\n            }, response => this.setErrors(response));\n    }\n\n    public setErrors(response?: BackendErrorResponse<CrupdateFolderErrors>) {\n        this.errors = response ? response.errors : {};\n        this.changeDetection.detectChanges();\n    }\n\n    public close() {\n        this.dialogRef.close();\n    }\n}\n","import { SelectionModel, isDataSource } from '@angular/cdk/collections';\nimport { isObservable, Subject, BehaviorSubject, of } from 'rxjs';\nimport { take, filter, takeUntil } from 'rxjs/operators';\nimport { InjectionToken, Directive, ViewContainerRef, Inject, Optional, TemplateRef, Component, ViewEncapsulation, ChangeDetectionStrategy, IterableDiffers, ChangeDetectorRef, Input, ViewChild, ContentChildren, ElementRef, Renderer2, HostListener, NgModule } from '@angular/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Base tree control. It has basic toggle/expand/collapse operations on a single data node. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nclass BaseTreeControl {\n    constructor() {\n        /** A selection model with multi-selection to track expansion status. */\n        this.expansionModel = new SelectionModel(true);\n    }\n    /** Toggles one single data node's expanded/collapsed state. */\n    toggle(dataNode) {\n        this.expansionModel.toggle(this._trackByValue(dataNode));\n    }\n    /** Expands one single data node. */\n    expand(dataNode) {\n        this.expansionModel.select(this._trackByValue(dataNode));\n    }\n    /** Collapses one single data node. */\n    collapse(dataNode) {\n        this.expansionModel.deselect(this._trackByValue(dataNode));\n    }\n    /** Whether a given data node is expanded or not. Returns true if the data node is expanded. */\n    isExpanded(dataNode) {\n        return this.expansionModel.isSelected(this._trackByValue(dataNode));\n    }\n    /** Toggles a subtree rooted at `node` recursively. */\n    toggleDescendants(dataNode) {\n        this.expansionModel.isSelected(this._trackByValue(dataNode)) ?\n            this.collapseDescendants(dataNode) :\n            this.expandDescendants(dataNode);\n    }\n    /** Collapse all dataNodes in the tree. */\n    collapseAll() {\n        this.expansionModel.clear();\n    }\n    /** Expands a subtree rooted at given data node recursively. */\n    expandDescendants(dataNode) {\n        let toBeProcessed = [dataNode];\n        toBeProcessed.push(...this.getDescendants(dataNode));\n        this.expansionModel.select(...toBeProcessed.map(value => this._trackByValue(value)));\n    }\n    /** Collapses a subtree rooted at given data node recursively. */\n    collapseDescendants(dataNode) {\n        let toBeProcessed = [dataNode];\n        toBeProcessed.push(...this.getDescendants(dataNode));\n        this.expansionModel.deselect(...toBeProcessed.map(value => this._trackByValue(value)));\n    }\n    _trackByValue(value) {\n        return this.trackBy ? this.trackBy(value) : value;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Flat tree control. Able to expand/collapse a subtree recursively for flattened tree. */\nclass FlatTreeControl extends BaseTreeControl {\n    /** Construct with flat tree data node functions getLevel and isExpandable. */\n    constructor(getLevel, isExpandable, options) {\n        super();\n        this.getLevel = getLevel;\n        this.isExpandable = isExpandable;\n        this.options = options;\n        if (this.options) {\n            this.trackBy = this.options.trackBy;\n        }\n    }\n    /**\n     * Gets a list of the data node's subtree of descendent data nodes.\n     *\n     * To make this working, the `dataNodes` of the TreeControl must be flattened tree nodes\n     * with correct levels.\n     */\n    getDescendants(dataNode) {\n        const startIndex = this.dataNodes.indexOf(dataNode);\n        const results = [];\n        // Goes through flattened tree nodes in the `dataNodes` array, and get all descendants.\n        // The level of descendants of a tree node must be greater than the level of the given\n        // tree node.\n        // If we reach a node whose level is equal to the level of the tree node, we hit a sibling.\n        // If we reach a node whose level is greater than the level of the tree node, we hit a\n        // sibling of an ancestor.\n        for (let i = startIndex + 1; i < this.dataNodes.length && this.getLevel(dataNode) < this.getLevel(this.dataNodes[i]); i++) {\n            results.push(this.dataNodes[i]);\n        }\n        return results;\n    }\n    /**\n     * Expands all data nodes in the tree.\n     *\n     * To make this working, the `dataNodes` variable of the TreeControl must be set to all flattened\n     * data nodes of the tree.\n     */\n    expandAll() {\n        this.expansionModel.select(...this.dataNodes.map(node => this._trackByValue(node)));\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Nested tree control. Able to expand/collapse a subtree recursively for NestedNode type. */\nclass NestedTreeControl extends BaseTreeControl {\n    /** Construct with nested tree function getChildren. */\n    constructor(getChildren, options) {\n        super();\n        this.getChildren = getChildren;\n        this.options = options;\n        if (this.options) {\n            this.trackBy = this.options.trackBy;\n        }\n    }\n    /**\n     * Expands all dataNodes in the tree.\n     *\n     * To make this working, the `dataNodes` variable of the TreeControl must be set to all root level\n     * data nodes of the tree.\n     */\n    expandAll() {\n        this.expansionModel.clear();\n        const allNodes = this.dataNodes.reduce((accumulator, dataNode) => [...accumulator, ...this.getDescendants(dataNode), dataNode], []);\n        this.expansionModel.select(...allNodes.map(node => this._trackByValue(node)));\n    }\n    /** Gets a list of descendant dataNodes of a subtree rooted at given data node recursively. */\n    getDescendants(dataNode) {\n        const descendants = [];\n        this._getDescendants(descendants, dataNode);\n        // Remove the node itself\n        return descendants.splice(1);\n    }\n    /** A helper function to get descendants recursively. */\n    _getDescendants(descendants, dataNode) {\n        descendants.push(dataNode);\n        const childrenNodes = this.getChildren(dataNode);\n        if (Array.isArray(childrenNodes)) {\n            childrenNodes.forEach((child) => this._getDescendants(descendants, child));\n        }\n        else if (isObservable(childrenNodes)) {\n            // TypeScript as of version 3.5 doesn't seem to treat `Boolean` like a function that\n            // returns a `boolean` specifically in the context of `filter`, so we manually clarify that.\n            childrenNodes.pipe(take(1), filter(Boolean))\n                .subscribe(children => {\n                for (const child of children) {\n                    this._getDescendants(descendants, child);\n                }\n            });\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide a `CdkTreeNode` to its outlet.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst CDK_TREE_NODE_OUTLET_NODE = new InjectionToken('CDK_TREE_NODE_OUTLET_NODE');\n/**\n * Outlet for nested CdkNode. Put `[cdkTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\nclass CdkTreeNodeOutlet {\n    constructor(viewContainer, _node) {\n        this.viewContainer = viewContainer;\n        this._node = _node;\n    }\n}\nCdkTreeNodeOutlet.ɵfac = function CdkTreeNodeOutlet_Factory(t) { return new (t || CdkTreeNodeOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_TREE_NODE_OUTLET_NODE, 8)); };\nCdkTreeNodeOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTreeNodeOutlet, selectors: [[\"\", \"cdkTreeNodeOutlet\", \"\"]] });\nCdkTreeNodeOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TREE_NODE_OUTLET_NODE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTreeNodeOutlet, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkTreeNodeOutlet]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TREE_NODE_OUTLET_NODE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Context provided to the tree node component. */\nclass CdkTreeNodeOutletContext {\n    constructor(data) {\n        this.$implicit = data;\n    }\n}\n/**\n * Data node definition for the CdkTree.\n * Captures the node's template and a when predicate that describes when this node should be used.\n */\nclass CdkTreeNodeDef {\n    /** @docs-private */\n    constructor(template) {\n        this.template = template;\n    }\n}\nCdkTreeNodeDef.ɵfac = function CdkTreeNodeDef_Factory(t) { return new (t || CdkTreeNodeDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkTreeNodeDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTreeNodeDef, selectors: [[\"\", \"cdkTreeNodeDef\", \"\"]], inputs: { when: [\"cdkTreeNodeDefWhen\", \"when\"] } });\nCdkTreeNodeDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTreeNodeDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkTreeNodeDef]',\n                inputs: [\n                    'when: cdkTreeNodeDefWhen'\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when there is no usable data.\n * @docs-private\n */\nfunction getTreeNoValidDataSourceError() {\n    return Error(`A valid data source must be provided.`);\n}\n/**\n * Returns an error to be thrown when there are multiple nodes that are missing a when function.\n * @docs-private\n */\nfunction getTreeMultipleDefaultNodeDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching node defs for a particular set of data.\n * @docs-private\n */\nfunction getTreeMissingMatchingNodeDefError() {\n    return Error(`Could not find a matching node definition for the provided node data.`);\n}\n/**\n * Returns an error to be thrown when there are tree control.\n * @docs-private\n */\nfunction getTreeControlMissingError() {\n    return Error(`Could not find a tree control for the tree.`);\n}\n/**\n * Returns an error to be thrown when tree control did not implement functions for flat/nested node.\n * @docs-private\n */\nfunction getTreeControlFunctionsMissingError() {\n    return Error(`Could not find functions for nested/flat tree in tree control.`);\n}\n\n/**\n * CDK tree component that connects with a data source to retrieve data of type `T` and renders\n * dataNodes with hierarchy. Updates the dataNodes when new data is provided by the data source.\n */\nclass CdkTree {\n    constructor(_differs, _changeDetectorRef) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Subject that emits when the component has been destroyed. */\n        this._onDestroy = new Subject();\n        /** Level of nodes */\n        this._levels = new Map();\n        // TODO(tinayuangao): Setup a listener for scrolling, emit the calculated view to viewChange.\n        //     Remove the MAX_VALUE in viewChange\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         */\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\n    }\n    /**\n     * Provides a stream containing the latest data array to render. Influenced by the tree's\n     * stream of view window (what dataNodes are currently on screen).\n     * Data source can be an observable of data array, or a data array to render.\n     */\n    get dataSource() { return this._dataSource; }\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    ngOnInit() {\n        this._dataDiffer = this._differs.find([]).create(this.trackBy);\n        if (!this.treeControl && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeControlMissingError();\n        }\n    }\n    ngOnDestroy() {\n        this._nodeOutlet.viewContainer.clear();\n        this.viewChange.complete();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (this._dataSource && typeof this._dataSource.disconnect === 'function') {\n            this.dataSource.disconnect(this);\n        }\n        if (this._dataSubscription) {\n            this._dataSubscription.unsubscribe();\n            this._dataSubscription = null;\n        }\n    }\n    ngAfterContentChecked() {\n        const defaultNodeDefs = this._nodeDefs.filter(def => !def.when);\n        if (defaultNodeDefs.length > 1 && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeMultipleDefaultNodeDefsError();\n        }\n        this._defaultNodeDef = defaultNodeDefs[0];\n        if (this.dataSource && this._nodeDefs && !this._dataSubscription) {\n            this._observeRenderChanges();\n        }\n    }\n    // TODO(tinayuangao): Work on keyboard traversal and actions, make sure it's working for RTL\n    //     and nested trees.\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the node outlet. Otherwise start listening for new data.\n     */\n    _switchDataSource(dataSource) {\n        if (this._dataSource && typeof this._dataSource.disconnect === 'function') {\n            this.dataSource.disconnect(this);\n        }\n        if (this._dataSubscription) {\n            this._dataSubscription.unsubscribe();\n            this._dataSubscription = null;\n        }\n        // Remove the all dataNodes if there is now no data source\n        if (!dataSource) {\n            this._nodeOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n        if (this._nodeDefs) {\n            this._observeRenderChanges();\n        }\n    }\n    /** Set up a subscription for the data provided by the data source. */\n    _observeRenderChanges() {\n        let dataStream;\n        if (isDataSource(this._dataSource)) {\n            dataStream = this._dataSource.connect(this);\n        }\n        else if (isObservable(this._dataSource)) {\n            dataStream = this._dataSource;\n        }\n        else if (Array.isArray(this._dataSource)) {\n            dataStream = of(this._dataSource);\n        }\n        if (dataStream) {\n            this._dataSubscription = dataStream.pipe(takeUntil(this._onDestroy))\n                .subscribe(data => this.renderNodeChanges(data));\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getTreeNoValidDataSourceError();\n        }\n    }\n    /** Check for changes made in the data and render each change (node added/removed/moved). */\n    renderNodeChanges(data, dataDiffer = this._dataDiffer, viewContainer = this._nodeOutlet.viewContainer, parentData) {\n        const changes = dataDiffer.diff(data);\n        if (!changes) {\n            return;\n        }\n        changes.forEachOperation((item, adjustedPreviousIndex, currentIndex) => {\n            if (item.previousIndex == null) {\n                this.insertNode(data[currentIndex], currentIndex, viewContainer, parentData);\n            }\n            else if (currentIndex == null) {\n                viewContainer.remove(adjustedPreviousIndex);\n                this._levels.delete(item.item);\n            }\n            else {\n                const view = viewContainer.get(adjustedPreviousIndex);\n                viewContainer.move(view, currentIndex);\n            }\n        });\n        this._changeDetectorRef.detectChanges();\n    }\n    /**\n     * Finds the matching node definition that should be used for this node data. If there is only\n     * one node definition, it is returned. Otherwise, find the node definition that has a when\n     * predicate that returns true with the data. If none return true, return the default node\n     * definition.\n     */\n    _getNodeDef(data, i) {\n        if (this._nodeDefs.length === 1) {\n            return this._nodeDefs.first;\n        }\n        const nodeDef = this._nodeDefs.find(def => def.when && def.when(i, data)) || this._defaultNodeDef;\n        if (!nodeDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeMissingMatchingNodeDefError();\n        }\n        return nodeDef;\n    }\n    /**\n     * Create the embedded view for the data node template and place it in the correct index location\n     * within the data node view container.\n     */\n    insertNode(nodeData, index, viewContainer, parentData) {\n        const node = this._getNodeDef(nodeData, index);\n        // Node context that will be provided to created embedded view\n        const context = new CdkTreeNodeOutletContext(nodeData);\n        // If the tree is flat tree, then use the `getLevel` function in flat tree control\n        // Otherwise, use the level of parent node.\n        if (this.treeControl.getLevel) {\n            context.level = this.treeControl.getLevel(nodeData);\n        }\n        else if (typeof parentData !== 'undefined' && this._levels.has(parentData)) {\n            context.level = this._levels.get(parentData) + 1;\n        }\n        else {\n            context.level = 0;\n        }\n        this._levels.set(nodeData, context.level);\n        // Use default tree nodeOutlet, or nested node's nodeOutlet\n        const container = viewContainer ? viewContainer : this._nodeOutlet.viewContainer;\n        container.createEmbeddedView(node.template, context, index);\n        // Set the data to just created `CdkTreeNode`.\n        // The `CdkTreeNode` created from `createEmbeddedView` will be saved in static variable\n        //     `mostRecentTreeNode`. We get it from static variable and pass the node data to it.\n        if (CdkTreeNode.mostRecentTreeNode) {\n            CdkTreeNode.mostRecentTreeNode.data = nodeData;\n        }\n    }\n}\nCdkTree.ɵfac = function CdkTree_Factory(t) { return new (t || CdkTree)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nCdkTree.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkTree, selectors: [[\"cdk-tree\"]], contentQueries: function CdkTree_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkTreeNodeDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nodeDefs = _t);\n    } }, viewQuery: function CdkTree_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkTreeNodeOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nodeOutlet = _t.first);\n    } }, hostAttrs: [\"role\", \"tree\", 1, \"cdk-tree\"], inputs: { dataSource: \"dataSource\", treeControl: \"treeControl\", trackBy: \"trackBy\" }, exportAs: [\"cdkTree\"], decls: 1, vars: 0, consts: [[\"cdkTreeNodeOutlet\", \"\"]], template: function CdkTree_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkTreeNodeOutlet], encapsulation: 2 });\nCdkTree.ctorParameters = () => [\n    { type: IterableDiffers },\n    { type: ChangeDetectorRef }\n];\nCdkTree.propDecorators = {\n    dataSource: [{ type: Input }],\n    treeControl: [{ type: Input }],\n    trackBy: [{ type: Input }],\n    _nodeOutlet: [{ type: ViewChild, args: [CdkTreeNodeOutlet, { static: true },] }],\n    _nodeDefs: [{ type: ContentChildren, args: [CdkTreeNodeDef, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTree, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-tree',\n                exportAs: 'cdkTree',\n                template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n                host: {\n                    'class': 'cdk-tree',\n                    'role': 'tree'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // The \"OnPush\" status for the `CdkTree` component is effectively a noop, so we are removing it.\n                // The view for `CdkTree` consists entirely of templates declared in other views. As they are\n                // declared elsewhere, they are checked when their declaration points are checked.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return [{ type: ɵngcc0.IterableDiffers }, { type: ɵngcc0.ChangeDetectorRef }]; }, { dataSource: [{\n            type: Input\n        }], treeControl: [{\n            type: Input\n        }], trackBy: [{\n            type: Input\n        }], _nodeOutlet: [{\n            type: ViewChild,\n            args: [CdkTreeNodeOutlet, { static: true }]\n        }], _nodeDefs: [{\n            type: ContentChildren,\n            args: [CdkTreeNodeDef, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }] }); })();\n/**\n * Tree node for CdkTree. It contains the data in the tree node.\n */\nclass CdkTreeNode {\n    constructor(_elementRef, _tree) {\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        /** Subject that emits when the component has been destroyed. */\n        this._destroyed = new Subject();\n        /** Emits when the node's data has changed. */\n        this._dataChanges = new Subject();\n        /**\n         * The role of the node should always be 'treeitem'.\n         */\n        // TODO: mark as deprecated\n        this.role = 'treeitem';\n        CdkTreeNode.mostRecentTreeNode = this;\n    }\n    /** The tree node's data. */\n    get data() { return this._data; }\n    set data(value) {\n        if (value !== this._data) {\n            this._data = value;\n            this._setRoleFromData();\n            this._dataChanges.next();\n        }\n    }\n    get isExpanded() {\n        return this._tree.treeControl.isExpanded(this._data);\n    }\n    get level() {\n        return this._tree.treeControl.getLevel ? this._tree.treeControl.getLevel(this._data) : 0;\n    }\n    ngOnDestroy() {\n        // If this is the last tree node being destroyed,\n        // clear out the reference to avoid leaking memory.\n        if (CdkTreeNode.mostRecentTreeNode === this) {\n            CdkTreeNode.mostRecentTreeNode = null;\n        }\n        this._dataChanges.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Focuses the menu item. Implements for FocusableOption. */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    // TODO: role should eventually just be set in the component host\n    _setRoleFromData() {\n        if (!this._tree.treeControl.isExpandable && !this._tree.treeControl.getChildren &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeControlFunctionsMissingError();\n        }\n        this.role = 'treeitem';\n    }\n}\nCdkTreeNode.ɵfac = function CdkTreeNode_Factory(t) { return new (t || CdkTreeNode)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CdkTree)); };\nCdkTreeNode.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTreeNode, selectors: [[\"cdk-tree-node\"]], hostAttrs: [1, \"cdk-tree-node\"], hostVars: 3, hostBindings: function CdkTreeNode_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.isExpanded)(\"aria-level\", ctx.level + 1)(\"role\", ctx.role);\n    } }, inputs: { role: \"role\" }, exportAs: [\"cdkTreeNode\"] });\n/**\n * The most recently created `CdkTreeNode`. We save it in static variable so we can retrieve it\n * in `CdkTree` and set the data to it.\n */\nCdkTreeNode.mostRecentTreeNode = null;\nCdkTreeNode.ctorParameters = () => [\n    { type: ElementRef },\n    { type: CdkTree }\n];\nCdkTreeNode.propDecorators = {\n    role: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTreeNode, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-tree-node',\n                exportAs: 'cdkTreeNode',\n                host: {\n                    '[attr.aria-expanded]': 'isExpanded',\n                    '[attr.aria-level]': 'level + 1',\n                    '[attr.role]': 'role',\n                    'class': 'cdk-tree-node'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: CdkTree }]; }, { role: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Nested node is a child of `<cdk-tree>`. It works with nested tree.\n * By using `cdk-nested-tree-node` component in tree node template, children of the parent node will\n * be added in the `cdkTreeNodeOutlet` in tree node template.\n * The children of node will be automatically added to `cdkTreeNodeOutlet`.\n */\nclass CdkNestedTreeNode extends CdkTreeNode {\n    constructor(_elementRef, _tree, _differs) {\n        super(_elementRef, _tree);\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        this._differs = _differs;\n    }\n    ngAfterContentInit() {\n        this._dataDiffer = this._differs.find([]).create(this._tree.trackBy);\n        if (!this._tree.treeControl.getChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeControlFunctionsMissingError();\n        }\n        const childrenNodes = this._tree.treeControl.getChildren(this.data);\n        if (Array.isArray(childrenNodes)) {\n            this.updateChildrenNodes(childrenNodes);\n        }\n        else if (isObservable(childrenNodes)) {\n            childrenNodes.pipe(takeUntil(this._destroyed))\n                .subscribe(result => this.updateChildrenNodes(result));\n        }\n        this.nodeOutlet.changes.pipe(takeUntil(this._destroyed))\n            .subscribe(() => this.updateChildrenNodes());\n    }\n    ngOnDestroy() {\n        this._clear();\n        super.ngOnDestroy();\n    }\n    /** Add children dataNodes to the NodeOutlet */\n    updateChildrenNodes(children) {\n        const outlet = this._getNodeOutlet();\n        if (children) {\n            this._children = children;\n        }\n        if (outlet && this._children) {\n            const viewContainer = outlet.viewContainer;\n            this._tree.renderNodeChanges(this._children, this._dataDiffer, viewContainer, this._data);\n        }\n        else {\n            // Reset the data differ if there's no children nodes displayed\n            this._dataDiffer.diff([]);\n        }\n    }\n    /** Clear the children dataNodes. */\n    _clear() {\n        const outlet = this._getNodeOutlet();\n        if (outlet) {\n            outlet.viewContainer.clear();\n            this._dataDiffer.diff([]);\n        }\n    }\n    /** Gets the outlet for the current node. */\n    _getNodeOutlet() {\n        const outlets = this.nodeOutlet;\n        // Note that since we use `descendants: true` on the query, we have to ensure\n        // that we don't pick up the outlet of a child node by accident.\n        return outlets && outlets.find(outlet => !outlet._node || outlet._node === this);\n    }\n}\nCdkNestedTreeNode.ɵfac = function CdkNestedTreeNode_Factory(t) { return new (t || CdkNestedTreeNode)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CdkTree), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\nCdkNestedTreeNode.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkNestedTreeNode, selectors: [[\"cdk-nested-tree-node\"]], contentQueries: function CdkNestedTreeNode_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkTreeNodeOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.nodeOutlet = _t);\n    } }, hostAttrs: [1, \"cdk-tree-node\", \"cdk-nested-tree-node\"], hostVars: 2, hostBindings: function CdkNestedTreeNode_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.isExpanded)(\"role\", ctx.role);\n    } }, exportAs: [\"cdkNestedTreeNode\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkTreeNode, useExisting: CdkNestedTreeNode },\n            { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: CdkNestedTreeNode }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkNestedTreeNode.ctorParameters = () => [\n    { type: ElementRef },\n    { type: CdkTree },\n    { type: IterableDiffers }\n];\nCdkNestedTreeNode.propDecorators = {\n    nodeOutlet: [{ type: ContentChildren, args: [CdkTreeNodeOutlet, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkNestedTreeNode, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-nested-tree-node',\n                exportAs: 'cdkNestedTreeNode',\n                host: {\n                    '[attr.aria-expanded]': 'isExpanded',\n                    '[attr.role]': 'role',\n                    'class': 'cdk-tree-node cdk-nested-tree-node'\n                },\n                providers: [\n                    { provide: CdkTreeNode, useExisting: CdkNestedTreeNode },\n                    { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: CdkNestedTreeNode }\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: CdkTree }, { type: ɵngcc0.IterableDiffers }]; }, { nodeOutlet: [{\n            type: ContentChildren,\n            args: [CdkTreeNodeOutlet, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * Indent for the children tree dataNodes.\n * This directive will add left-padding to the node to show hierarchy.\n */\nclass CdkTreeNodePadding {\n    constructor(_treeNode, _tree, \n    /**\n     * @deprecated _renderer parameter no longer being used. To be removed.\n     * @breaking-change 11.0.0\n     */\n    _renderer, _element, _dir) {\n        this._treeNode = _treeNode;\n        this._tree = _tree;\n        this._element = _element;\n        this._dir = _dir;\n        /** Subject that emits when the component has been destroyed. */\n        this._destroyed = new Subject();\n        /** CSS units used for the indentation value. */\n        this.indentUnits = 'px';\n        this._indent = 40;\n        this._setPadding();\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => this._setPadding(true));\n        }\n        // In Ivy the indentation binding might be set before the tree node's data has been added,\n        // which means that we'll miss the first render. We have to subscribe to changes in the\n        // data to ensure that everything is up to date.\n        _treeNode._dataChanges.subscribe(() => this._setPadding());\n    }\n    /** The level of depth of the tree node. The padding will be `level * indent` pixels. */\n    get level() { return this._level; }\n    set level(value) { this._setLevelInput(value); }\n    /**\n     * The indent for each level. Can be a number or a CSS string.\n     * Default number 40px from material design menu sub-menu spec.\n     */\n    get indent() { return this._indent; }\n    set indent(indent) { this._setIndentInput(indent); }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** The padding indent value for the tree node. Returns a string with px numbers if not null. */\n    _paddingIndent() {\n        const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\n            ? this._tree.treeControl.getLevel(this._treeNode.data)\n            : null;\n        const level = this._level == null ? nodeLevel : this._level;\n        return typeof level === 'number' ? `${level * this._indent}${this.indentUnits}` : null;\n    }\n    _setPadding(forceChange = false) {\n        const padding = this._paddingIndent();\n        if (padding !== this._currentPadding || forceChange) {\n            const element = this._element.nativeElement;\n            const paddingProp = this._dir && this._dir.value === 'rtl' ? 'paddingRight' : 'paddingLeft';\n            const resetProp = paddingProp === 'paddingLeft' ? 'paddingRight' : 'paddingLeft';\n            element.style[paddingProp] = padding || '';\n            element.style[resetProp] = '';\n            this._currentPadding = padding;\n        }\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setLevelInput(value) {\n        // Set to null as the fallback value so that _setPadding can fall back to the node level if the\n        // consumer set the directive as `cdkTreeNodePadding=\"\"`. We still want to take this value if\n        // they set 0 explicitly.\n        this._level = coerceNumberProperty(value, null);\n        this._setPadding();\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setIndentInput(indent) {\n        let value = indent;\n        let units = 'px';\n        if (typeof indent === 'string') {\n            const parts = indent.split(cssUnitPattern);\n            value = parts[0];\n            units = parts[1] || units;\n        }\n        this.indentUnits = units;\n        this._indent = coerceNumberProperty(value);\n        this._setPadding();\n    }\n}\nCdkTreeNodePadding.ɵfac = function CdkTreeNodePadding_Factory(t) { return new (t || CdkTreeNodePadding)(ɵngcc0.ɵɵdirectiveInject(CdkTreeNode), ɵngcc0.ɵɵdirectiveInject(CdkTree), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8)); };\nCdkTreeNodePadding.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTreeNodePadding, selectors: [[\"\", \"cdkTreeNodePadding\", \"\"]], inputs: { level: [\"cdkTreeNodePadding\", \"level\"], indent: [\"cdkTreeNodePaddingIndent\", \"indent\"] } });\nCdkTreeNodePadding.ctorParameters = () => [\n    { type: CdkTreeNode },\n    { type: CdkTree },\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nCdkTreeNodePadding.propDecorators = {\n    level: [{ type: Input, args: ['cdkTreeNodePadding',] }],\n    indent: [{ type: Input, args: ['cdkTreeNodePaddingIndent',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTreeNodePadding, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkTreeNodePadding]'\n            }]\n    }], function () { return [{ type: CdkTreeNode }, { type: CdkTree }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { level: [{\n            type: Input,\n            args: ['cdkTreeNodePadding']\n        }], indent: [{\n            type: Input,\n            args: ['cdkTreeNodePaddingIndent']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Node toggle to expand/collapse the node.\n */\nclass CdkTreeNodeToggle {\n    constructor(_tree, _treeNode) {\n        this._tree = _tree;\n        this._treeNode = _treeNode;\n        this._recursive = false;\n    }\n    /** Whether expand/collapse the node recursively. */\n    get recursive() { return this._recursive; }\n    set recursive(value) { this._recursive = coerceBooleanProperty(value); }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _toggle(event) {\n        this.recursive\n            ? this._tree.treeControl.toggleDescendants(this._treeNode.data)\n            : this._tree.treeControl.toggle(this._treeNode.data);\n        event.stopPropagation();\n    }\n}\nCdkTreeNodeToggle.ɵfac = function CdkTreeNodeToggle_Factory(t) { return new (t || CdkTreeNodeToggle)(ɵngcc0.ɵɵdirectiveInject(CdkTree), ɵngcc0.ɵɵdirectiveInject(CdkTreeNode)); };\nCdkTreeNodeToggle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTreeNodeToggle, selectors: [[\"\", \"cdkTreeNodeToggle\", \"\"]], hostBindings: function CdkTreeNodeToggle_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkTreeNodeToggle_click_HostBindingHandler($event) { return ctx._toggle($event); });\n    } }, inputs: { recursive: [\"cdkTreeNodeToggleRecursive\", \"recursive\"] } });\nCdkTreeNodeToggle.ctorParameters = () => [\n    { type: CdkTree },\n    { type: CdkTreeNode }\n];\nCdkTreeNodeToggle.propDecorators = {\n    recursive: [{ type: Input, args: ['cdkTreeNodeToggleRecursive',] }],\n    _toggle: [{ type: HostListener, args: ['click', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTreeNodeToggle, [{\n        type: Directive,\n        args: [{ selector: '[cdkTreeNodeToggle]' }]\n    }], function () { return [{ type: CdkTree }, { type: CdkTreeNode }]; }, { recursive: [{\n            type: Input,\n            args: ['cdkTreeNodeToggleRecursive']\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _toggle: [{\n            type: HostListener,\n            args: ['click', ['$event']]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    CdkNestedTreeNode,\n    CdkTreeNodeDef,\n    CdkTreeNodePadding,\n    CdkTreeNodeToggle,\n    CdkTree,\n    CdkTreeNode,\n    CdkTreeNodeOutlet,\n];\nclass CdkTreeModule {\n}\nCdkTreeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkTreeModule });\nCdkTreeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkTreeModule_Factory(t) { return new (t || CdkTreeModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkTreeModule, { declarations: [CdkNestedTreeNode, CdkTreeNodeDef, CdkTreeNodePadding, CdkTreeNodeToggle, CdkTree, CdkTreeNode, CdkTreeNodeOutlet], exports: [CdkNestedTreeNode, CdkTreeNodeDef, CdkTreeNodePadding, CdkTreeNodeToggle, CdkTree, CdkTreeNode, CdkTreeNodeOutlet] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTreeModule, [{\n        type: NgModule,\n        args: [{\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseTreeControl, CDK_TREE_NODE_OUTLET_NODE, CdkNestedTreeNode, CdkTree, CdkTreeModule, CdkTreeNode, CdkTreeNodeDef, CdkTreeNodeOutlet, CdkTreeNodeOutletContext, CdkTreeNodePadding, CdkTreeNodeToggle, FlatTreeControl, NestedTreeControl, getTreeControlFunctionsMissingError, getTreeControlMissingError, getTreeMissingMatchingNodeDefError, getTreeMultipleDefaultNodeDefsError, getTreeNoValidDataSourceError };\n\n//# sourceMappingURL=tree.js.map","import { CdkTreeNode, CdkTree, CdkTreeNodeDef, CdkNestedTreeNode, CDK_TREE_NODE_OUTLET_NODE, CdkTreeNodePadding, CdkTreeNodeOutlet, CdkTreeNodeToggle, CdkTreeModule } from '@angular/cdk/tree';\nimport { Directive, ElementRef, Attribute, Input, IterableDiffers, ViewContainerRef, Inject, Optional, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject, merge } from 'rxjs';\nimport { take, map } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/tree';\nconst _MatTreeNodeMixinBase = mixinTabIndex(mixinDisabled(CdkTreeNode));\n/**\n * Wrapper for the CdkTree node with Material design styles.\n */\nclass MatTreeNode extends _MatTreeNodeMixinBase {\n    constructor(_elementRef, _tree, tabIndex) {\n        super(_elementRef, _tree);\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        this.role = 'treeitem';\n        this.tabIndex = Number(tabIndex) || 0;\n    }\n}\nMatTreeNode.ɵfac = function MatTreeNode_Factory(t) { return new (t || MatTreeNode)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkTree), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatTreeNode.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTreeNode, selectors: [[\"mat-tree-node\"]], hostAttrs: [1, \"mat-tree-node\"], hostVars: 3, hostBindings: function MatTreeNode_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.isExpanded)(\"aria-level\", ctx.level + 1)(\"role\", ctx.role);\n    } }, inputs: { disabled: \"disabled\", tabIndex: \"tabIndex\", role: \"role\" }, exportAs: [\"matTreeNode\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkTreeNode, useExisting: MatTreeNode }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTreeNode.ctorParameters = () => [\n    { type: ElementRef },\n    { type: CdkTree },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatTreeNode.propDecorators = {\n    role: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeNode, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-tree-node',\n                exportAs: 'matTreeNode',\n                inputs: ['disabled', 'tabIndex'],\n                host: {\n                    '[attr.aria-expanded]': 'isExpanded',\n                    '[attr.aria-level]': 'level + 1',\n                    '[attr.role]': 'role',\n                    'class': 'mat-tree-node'\n                },\n                providers: [{ provide: CdkTreeNode, useExisting: MatTreeNode }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.CdkTree }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, { role: [{\n            type: Input\n        }] }); })();\n/**\n * Wrapper for the CdkTree node definition with Material design styles.\n */\nclass MatTreeNodeDef extends CdkTreeNodeDef {\n}\nMatTreeNodeDef.ɵfac = function MatTreeNodeDef_Factory(t) { return ɵMatTreeNodeDef_BaseFactory(t || MatTreeNodeDef); };\nMatTreeNodeDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTreeNodeDef, selectors: [[\"\", \"matTreeNodeDef\", \"\"]], inputs: { when: [\"matTreeNodeDefWhen\", \"when\"], data: [\"matTreeNode\", \"data\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkTreeNodeDef, useExisting: MatTreeNodeDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTreeNodeDef.propDecorators = {\n    data: [{ type: Input, args: ['matTreeNode',] }]\n};\nconst ɵMatTreeNodeDef_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatTreeNodeDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeNodeDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matTreeNodeDef]',\n                inputs: [\n                    'when: matTreeNodeDefWhen'\n                ],\n                providers: [{ provide: CdkTreeNodeDef, useExisting: MatTreeNodeDef }]\n            }]\n    }], null, { data: [{\n            type: Input,\n            args: ['matTreeNode']\n        }] }); })();\n/**\n * Wrapper for the CdkTree nested node with Material design styles.\n */\nclass MatNestedTreeNode extends CdkNestedTreeNode {\n    constructor(_elementRef, _tree, _differs, tabIndex) {\n        super(_elementRef, _tree, _differs);\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        this._differs = _differs;\n        this._disabled = false;\n        this.tabIndex = Number(tabIndex) || 0;\n    }\n    /** Whether the node is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /** Tabindex for the node. */\n    get tabIndex() { return this.disabled ? -1 : this._tabIndex; }\n    set tabIndex(value) {\n        // If the specified tabIndex value is null or undefined, fall back to the default value.\n        this._tabIndex = value != null ? value : 0;\n    }\n    // This is a workaround for https://github.com/angular/angular/issues/23091\n    // In aot mode, the lifecycle hooks from parent class are not called.\n    // TODO(tinayuangao): Remove when the angular issue #23091 is fixed\n    ngAfterContentInit() {\n        super.ngAfterContentInit();\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n    }\n}\nMatNestedTreeNode.ɵfac = function MatNestedTreeNode_Factory(t) { return new (t || MatNestedTreeNode)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkTree), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatNestedTreeNode.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatNestedTreeNode, selectors: [[\"mat-nested-tree-node\"]], hostAttrs: [1, \"mat-nested-tree-node\"], hostVars: 2, hostBindings: function MatNestedTreeNode_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.isExpanded)(\"role\", ctx.role);\n    } }, inputs: { tabIndex: \"tabIndex\", disabled: \"disabled\", node: [\"matNestedTreeNode\", \"node\"] }, exportAs: [\"matNestedTreeNode\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkNestedTreeNode, useExisting: MatNestedTreeNode },\n            { provide: CdkTreeNode, useExisting: MatNestedTreeNode },\n            { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: MatNestedTreeNode }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatNestedTreeNode.ctorParameters = () => [\n    { type: ElementRef },\n    { type: CdkTree },\n    { type: IterableDiffers },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatNestedTreeNode.propDecorators = {\n    node: [{ type: Input, args: ['matNestedTreeNode',] }],\n    disabled: [{ type: Input }],\n    tabIndex: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatNestedTreeNode, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-nested-tree-node',\n                exportAs: 'matNestedTreeNode',\n                host: {\n                    '[attr.aria-expanded]': 'isExpanded',\n                    '[attr.role]': 'role',\n                    'class': 'mat-nested-tree-node'\n                },\n                providers: [\n                    { provide: CdkNestedTreeNode, useExisting: MatNestedTreeNode },\n                    { provide: CdkTreeNode, useExisting: MatNestedTreeNode },\n                    { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: MatNestedTreeNode }\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.CdkTree }, { type: ɵngcc0.IterableDiffers }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, { tabIndex: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], node: [{\n            type: Input,\n            args: ['matNestedTreeNode']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Wrapper for the CdkTree padding with Material design styles.\n */\nclass MatTreeNodePadding extends CdkTreeNodePadding {\n    /** The level of depth of the tree node. The padding will be `level * indent` pixels. */\n    get level() { return this._level; }\n    set level(value) { this._setLevelInput(value); }\n    /** The indent for each level. Default number 40px from material design menu sub-menu spec. */\n    get indent() { return this._indent; }\n    set indent(indent) { this._setIndentInput(indent); }\n}\nMatTreeNodePadding.ɵfac = function MatTreeNodePadding_Factory(t) { return ɵMatTreeNodePadding_BaseFactory(t || MatTreeNodePadding); };\nMatTreeNodePadding.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTreeNodePadding, selectors: [[\"\", \"matTreeNodePadding\", \"\"]], inputs: { level: [\"matTreeNodePadding\", \"level\"], indent: [\"matTreeNodePaddingIndent\", \"indent\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkTreeNodePadding, useExisting: MatTreeNodePadding }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTreeNodePadding.propDecorators = {\n    level: [{ type: Input, args: ['matTreeNodePadding',] }],\n    indent: [{ type: Input, args: ['matTreeNodePaddingIndent',] }]\n};\nconst ɵMatTreeNodePadding_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatTreeNodePadding);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeNodePadding, [{\n        type: Directive,\n        args: [{\n                selector: '[matTreeNodePadding]',\n                providers: [{ provide: CdkTreeNodePadding, useExisting: MatTreeNodePadding }]\n            }]\n    }], null, { level: [{\n            type: Input,\n            args: ['matTreeNodePadding']\n        }], indent: [{\n            type: Input,\n            args: ['matTreeNodePaddingIndent']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Outlet for nested CdkNode. Put `[matTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\nclass MatTreeNodeOutlet {\n    constructor(viewContainer, _node) {\n        this.viewContainer = viewContainer;\n        this._node = _node;\n    }\n}\nMatTreeNodeOutlet.ɵfac = function MatTreeNodeOutlet_Factory(t) { return new (t || MatTreeNodeOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_TREE_NODE_OUTLET_NODE, 8)); };\nMatTreeNodeOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTreeNodeOutlet, selectors: [[\"\", \"matTreeNodeOutlet\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkTreeNodeOutlet,\n                useExisting: MatTreeNodeOutlet\n            }])] });\nMatTreeNodeOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TREE_NODE_OUTLET_NODE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeNodeOutlet, [{\n        type: Directive,\n        args: [{\n                selector: '[matTreeNodeOutlet]',\n                providers: [{\n                        provide: CdkTreeNodeOutlet,\n                        useExisting: MatTreeNodeOutlet\n                    }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TREE_NODE_OUTLET_NODE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\nclass MatTree extends CdkTree {\n}\nMatTree.ɵfac = function MatTree_Factory(t) { return ɵMatTree_BaseFactory(t || MatTree); };\nMatTree.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTree, selectors: [[\"mat-tree\"]], viewQuery: function MatTree_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatTreeNodeOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nodeOutlet = _t.first);\n    } }, hostAttrs: [\"role\", \"tree\", 1, \"mat-tree\"], exportAs: [\"matTree\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkTree, useExisting: MatTree }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"matTreeNodeOutlet\", \"\"]], template: function MatTree_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [MatTreeNodeOutlet], styles: [\".mat-tree{display:block}.mat-tree-node{display:flex;align-items:center;flex:1;word-wrap:break-word}.mat-nested-tree-node{border-bottom-width:0}\\n\"], encapsulation: 2 });\nMatTree.propDecorators = {\n    _nodeOutlet: [{ type: ViewChild, args: [MatTreeNodeOutlet, { static: true },] }]\n};\nconst ɵMatTree_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatTree);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTree, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tree',\n                exportAs: 'matTree',\n                template: `<ng-container matTreeNodeOutlet></ng-container>`,\n                host: {\n                    'class': 'mat-tree',\n                    'role': 'tree'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // See note on CdkTree for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                providers: [{ provide: CdkTree, useExisting: MatTree }],\n                styles: [\".mat-tree{display:block}.mat-tree-node{display:flex;align-items:center;flex:1;word-wrap:break-word}.mat-nested-tree-node{border-bottom-width:0}\\n\"]\n            }]\n    }], null, { _nodeOutlet: [{\n            type: ViewChild,\n            args: [MatTreeNodeOutlet, { static: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Wrapper for the CdkTree's toggle with Material design styles.\n */\n// tslint:disable-next-line: coercion-types\nclass MatTreeNodeToggle extends CdkTreeNodeToggle {\n    get recursive() { return this._recursive; }\n    set recursive(value) {\n        // TODO: when we remove support for ViewEngine, change this setter to an input\n        // alias in the decorator metadata.\n        this._recursive = coerceBooleanProperty(value);\n    }\n}\nMatTreeNodeToggle.ɵfac = function MatTreeNodeToggle_Factory(t) { return ɵMatTreeNodeToggle_BaseFactory(t || MatTreeNodeToggle); };\nMatTreeNodeToggle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTreeNodeToggle, selectors: [[\"\", \"matTreeNodeToggle\", \"\"]], inputs: { recursive: [\"matTreeNodeToggleRecursive\", \"recursive\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkTreeNodeToggle, useExisting: MatTreeNodeToggle }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTreeNodeToggle.propDecorators = {\n    recursive: [{ type: Input, args: ['matTreeNodeToggleRecursive',] }]\n};\nconst ɵMatTreeNodeToggle_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatTreeNodeToggle);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeNodeToggle, [{\n        type: Directive,\n        args: [{\n                selector: '[matTreeNodeToggle]',\n                providers: [{ provide: CdkTreeNodeToggle, useExisting: MatTreeNodeToggle }]\n            }]\n    }], null, { recursive: [{\n            type: Input,\n            args: ['matTreeNodeToggleRecursive']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_TREE_DIRECTIVES = [\n    MatNestedTreeNode,\n    MatTreeNodeDef,\n    MatTreeNodePadding,\n    MatTreeNodeToggle,\n    MatTree,\n    MatTreeNode,\n    MatTreeNodeOutlet\n];\nclass MatTreeModule {\n}\nMatTreeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTreeModule });\nMatTreeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTreeModule_Factory(t) { return new (t || MatTreeModule)(); }, imports: [[CdkTreeModule, MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTreeModule, { declarations: function () { return [MatNestedTreeNode, MatTreeNodeDef, MatTreeNodePadding, MatTreeNodeToggle, MatTree, MatTreeNode, MatTreeNodeOutlet]; }, imports: function () { return [CdkTreeModule, MatCommonModule]; }, exports: function () { return [MatCommonModule, MatNestedTreeNode, MatTreeNodeDef, MatTreeNodePadding, MatTreeNodeToggle, MatTree, MatTreeNode, MatTreeNodeOutlet]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CdkTreeModule, MatCommonModule],\n                exports: [MatCommonModule, MAT_TREE_DIRECTIVES],\n                declarations: MAT_TREE_DIRECTIVES\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nclass MatTreeFlattener {\n    constructor(transformFunction, getLevel, isExpandable, getChildren) {\n        this.transformFunction = transformFunction;\n        this.getLevel = getLevel;\n        this.isExpandable = isExpandable;\n        this.getChildren = getChildren;\n    }\n    _flattenNode(node, level, resultNodes, parentMap) {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n        if (this.isExpandable(flatNode)) {\n            const childrenNodes = this.getChildren(node);\n            if (childrenNodes) {\n                if (Array.isArray(childrenNodes)) {\n                    this._flattenChildren(childrenNodes, level, resultNodes, parentMap);\n                }\n                else {\n                    childrenNodes.pipe(take(1)).subscribe(children => {\n                        this._flattenChildren(children, level, resultNodes, parentMap);\n                    });\n                }\n            }\n        }\n        return resultNodes;\n    }\n    _flattenChildren(children, level, resultNodes, parentMap) {\n        children.forEach((child, index) => {\n            let childParentMap = parentMap.slice();\n            childParentMap.push(index != children.length - 1);\n            this._flattenNode(child, level + 1, resultNodes, childParentMap);\n        });\n    }\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData) {\n        let resultNodes = [];\n        structuredData.forEach(node => this._flattenNode(node, 0, resultNodes, []));\n        return resultNodes;\n    }\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes, treeControl) {\n        let results = [];\n        let currentExpand = [];\n        currentExpand[0] = true;\n        nodes.forEach(node => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n            if (expand) {\n                results.push(node);\n            }\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n        return results;\n    }\n}\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `MatTree`.\n * The nested tree nodes of type `T` are flattened through `MatTreeFlattener`, and converted\n * to type `F` for `MatTree` to consume.\n */\nclass MatTreeFlatDataSource extends DataSource {\n    constructor(_treeControl, _treeFlattener, initialData = []) {\n        super();\n        this._treeControl = _treeControl;\n        this._treeFlattener = _treeFlattener;\n        this._flattenedData = new BehaviorSubject([]);\n        this._expandedData = new BehaviorSubject([]);\n        this._data = new BehaviorSubject(initialData);\n    }\n    get data() { return this._data.value; }\n    set data(value) {\n        this._data.next(value);\n        this._flattenedData.next(this._treeFlattener.flattenNodes(this.data));\n        this._treeControl.dataNodes = this._flattenedData.value;\n    }\n    connect(collectionViewer) {\n        const changes = [\n            collectionViewer.viewChange,\n            this._treeControl.expansionModel.changed,\n            this._flattenedData\n        ];\n        return merge(...changes).pipe(map(() => {\n            this._expandedData.next(this._treeFlattener.expandFlattenedNodes(this._flattenedData.value, this._treeControl));\n            return this._expandedData.value;\n        }));\n    }\n    disconnect() {\n        // no op\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by TreeControl and each non-leaf node.\n */\nclass MatTreeNestedDataSource extends DataSource {\n    constructor() {\n        super(...arguments);\n        this._data = new BehaviorSubject([]);\n    }\n    /**\n     * Data for the nested tree\n     */\n    get data() { return this._data.value; }\n    set data(value) { this._data.next(value); }\n    connect(collectionViewer) {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => {\n            return this.data;\n        }));\n    }\n    disconnect() {\n        // no op\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatNestedTreeNode, MatTree, MatTreeFlatDataSource, MatTreeFlattener, MatTreeModule, MatTreeNestedDataSource, MatTreeNode, MatTreeNodeDef, MatTreeNodeOutlet, MatTreeNodePadding, MatTreeNodeToggle };\n\n//# sourceMappingURL=tree.js.map","import { Injectable } from '@angular/core';\nimport { DriveFolder } from '../../folders/models/driveFolder';\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { Observable, of as observableOf } from 'rxjs';\n\n/** Flat node with expandable and level information */\nexport interface FolderFlatNode extends DriveFolder {\n    level: number;\n    expandable: boolean;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FoldersTreeService {\n    public control: FlatTreeControl<FolderFlatNode>;\n    public flattener: MatTreeFlattener<DriveFolder, FolderFlatNode>;\n    public dataSource: MatTreeFlatDataSource<DriveFolder, FolderFlatNode>;\n    public set data(items: DriveFolder[]) {\n        this.dataSource.data = items;\n    }\n\n    constructor() {\n        this.createTreeFlattener();\n        this.createTreeControl();\n        this.createTreeDataSource();\n    }\n\n    private createTreeFlattener() {\n        this.flattener = new MatTreeFlattener(\n            this.transformer,\n            this.getLevel,\n            this.isExpandable, this.getChildren\n        );\n    }\n\n    private createTreeControl() {\n        this.control = new FlatTreeControl<FolderFlatNode>(\n            this.getLevel,\n            this.isExpandable\n        );\n    }\n\n    private createTreeDataSource() {\n        this.dataSource = new MatTreeFlatDataSource(\n            this.control,\n            this.flattener\n        );\n    }\n\n    public transformer(node: DriveFolder, level: number) {\n        const flatNode = Object.assign({}, node) as FolderFlatNode;\n        flatNode.level = level;\n        flatNode.expandable = !!node.children;\n        return flatNode;\n    }\n\n    private getLevel(node: FolderFlatNode): number {\n        return node.level;\n    }\n\n    private isExpandable(node: FolderFlatNode): boolean {\n        return node.expandable;\n    }\n\n    private getChildren(node: DriveFolder): Observable<DriveFolder[]> {\n        return observableOf(node.children);\n    }\n}\n","import {Directive, ElementRef, Inject, Input, OnInit} from '@angular/core';\r\nimport {ContextMenu} from './context-menu.service';\r\nimport { AVAILABLE_CONTEXT_MENUS } from './available-context-menus';\r\n\r\n@Directive({\r\n    selector: '[contextMenu]'\r\n})\r\nexport class ContextMenuDirective implements OnInit {\r\n    @Input('contextMenu') params: string|{type: string, [key: string]: any};\r\n    @Input('disableContextMenu') disableContextMenu = false;\r\n\r\n    public availableMenus: object = {};\r\n\r\n    constructor(\r\n        private el: ElementRef,\r\n        private contextMenu: ContextMenu,\r\n        @Inject(AVAILABLE_CONTEXT_MENUS) _availableMenus: object[]\r\n    ) {\r\n        _availableMenus.forEach(config => {\r\n            Object.assign(this.availableMenus, config);\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.el.nativeElement.addEventListener('contextmenu', e => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            if (this.disableContextMenu) return;\r\n\r\n            this.contextMenu.open(\r\n                this.getMenuComponent(),\r\n                e,\r\n                {\r\n                    overlayX: 'start',\r\n                    overlayY: 'top',\r\n                    data: this.getMenuData()\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    private getMenuComponent() {\r\n        if (typeof this.params === 'string') {\r\n            return this.availableMenus[this.params];\r\n        } else {\r\n            return this.availableMenus[this.params.type];\r\n        }\r\n    }\r\n\r\n    private getMenuData() {\r\n        return (typeof this.params === 'string') ? {type: this.params} : this.params;\r\n    }\r\n}\r\n","import {ComponentFactoryResolver, ElementRef, Injectable, Injector, NgZone} from '@angular/core';\r\nimport {NavigationStart, Router} from '@angular/router';\r\nimport {ComponentPortal, ComponentType, PortalInjector} from '@angular/cdk/portal';\r\nimport {Overlay, PositionStrategy} from '@angular/cdk/overlay';\r\nimport {filter} from 'rxjs/operators';\r\nimport {ContextMenuRef} from './context-menu-ref';\r\nimport {CONTEXT_MENU_DATA} from './context-menu-data';\r\n\r\nexport interface ContextMenuParams {\r\n    data?: { [key: string]: any };\r\n    offsetX?: number;\r\n    offsetY?: number;\r\n    originX?: 'start' | 'center' | 'end';\r\n    originY?: 'top' | 'center' | 'bottom';\r\n    overlayX?: 'start' | 'center' | 'end';\r\n    overlayY?: 'top' | 'center' | 'bottom';\r\n}\r\n\r\ntype MenuOrigin = MouseEvent | EventTarget | HTMLElement;\r\n\r\nconst ORIGIN_ID = 'dynamic-context-menu-origin';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ContextMenu {\r\n    private lastOrigin: HTMLElement;\r\n    private openContextMenu: ContextMenuRef<any>|null;\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private zone: NgZone,\r\n        private injector: Injector,\r\n        private resolver: ComponentFactoryResolver,\r\n        private overlay: Overlay,\r\n    ) {\r\n        this.router.events\r\n            .pipe(filter(e => e instanceof NavigationStart))\r\n            .subscribe(() => this.close());\r\n    }\r\n\r\n    public open<T>(component: ComponentType<T>, e: MenuOrigin, params: ContextMenuParams = {}): ContextMenuRef<T> {\r\n        this.close();\r\n\r\n        if ( ! component) {\r\n            return;\r\n        }\r\n\r\n        const overlayRef = this.createOverlay(e, params);\r\n        this.openContextMenu = new ContextMenuRef(overlayRef);\r\n\r\n        const injector = new PortalInjector(this.injector, new WeakMap<any, any>([\r\n            [CONTEXT_MENU_DATA, params.data],\r\n            [ContextMenuRef, this.openContextMenu],\r\n        ]));\r\n\r\n        const portal = new ComponentPortal(component, null, injector);\r\n\r\n        overlayRef.attach(portal);\r\n        this.bindEventsToOverlay();\r\n\r\n        return this.openContextMenu;\r\n    }\r\n\r\n    /**\r\n     * Close currently open context menu.\r\n     */\r\n    public close() {\r\n        this.removeLastOrigin();\r\n\r\n        if (this.openContextMenu) {\r\n            this.openContextMenu.close();\r\n            this.openContextMenu = null;\r\n        }\r\n    }\r\n\r\n    private createOverlay(e: MenuOrigin, params: ContextMenuParams) {\r\n        return this.overlay.create({\r\n            positionStrategy: this.getMenuPositionStrategy(e, params),\r\n            scrollStrategy: this.overlay.scrollStrategies.close(),\r\n            hasBackdrop: true,\r\n            backdropClass: 'context-menu-backdrop',\r\n            panelClass: 'context-menu-overlay'\r\n        });\r\n    }\r\n\r\n    private bindEventsToOverlay() {\r\n        this.openContextMenu.contextMenuElement().addEventListener('click', () => {\r\n            this.close();\r\n        });\r\n\r\n        this.openContextMenu.backdropClick().subscribe(() => {\r\n            this.close();\r\n        });\r\n\r\n        this.openContextMenu.backdropElement().addEventListener('contextmenu', e => {\r\n            e.preventDefault();\r\n            this.close();\r\n        });\r\n\r\n        this.openContextMenu.detachments().subscribe(() => {\r\n            this.close();\r\n        });\r\n    }\r\n\r\n    private getMenuPositionStrategy(e: MenuOrigin, params: ContextMenuParams): PositionStrategy {\r\n        this.createOriginFromEvent(e, params);\r\n\r\n        const primary = {\r\n            originX: params.originX || 'center',\r\n            originY: params.originY || 'bottom',\r\n            overlayX: params.overlayX || 'center',\r\n            overlayY: params.overlayY || 'top',\r\n        };\r\n\r\n        return this.overlay.position().flexibleConnectedTo(new ElementRef(this.lastOrigin))\r\n            .withPositions([\r\n                primary,\r\n                {originX: 'end', originY: 'bottom', overlayX: 'start', overlayY: 'bottom'},\r\n                {originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top'},\r\n                {originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'bottom'}\r\n            ]);\r\n    }\r\n\r\n    private createOriginFromEvent(e: MenuOrigin, params: ContextMenuParams) {\r\n        this.removeLastOrigin();\r\n\r\n        if (e instanceof HTMLElement || e instanceof EventTarget) {\r\n            this.lastOrigin = e as HTMLElement;\r\n        } else {\r\n            this.lastOrigin = document.createElement('div');\r\n            this.lastOrigin.style.position = 'fixed';\r\n            this.lastOrigin.style.top = e.clientY + (params.offsetY || 0) + 'px';\r\n            this.lastOrigin.style.left = e.clientX + (params.offsetX || 0) + 'px';\r\n            this.lastOrigin.id = ORIGIN_ID;\r\n            document.body.appendChild(this.lastOrigin);\r\n        }\r\n    }\r\n\r\n    private removeLastOrigin() {\r\n        if (this.lastOrigin && this.lastOrigin.id === ORIGIN_ID) {\r\n            this.lastOrigin.remove();\r\n        }\r\n    }\r\n}\r\n","import { Directive, ElementRef, Input } from '@angular/core';\nimport { BaseDropTarget } from './base-drop-target';\nimport { DriveState} from '../../state/drive-state';\nimport { Store } from '@ngxs/store';\nimport { DriveFolder } from '../../folders/models/driveFolder';\nimport { MoveEntries } from '../../state/actions/commands';\n\n@Directive({\n    selector: '[folderDropTarget]'\n})\nexport class FolderDropTargetDirective extends BaseDropTarget {\n    @Input('folderDropTarget') folder: DriveFolder;\n\n    constructor(\n        protected el: ElementRef,\n        protected store: Store,\n    ) {\n      super();\n    }\n\n    protected canDrop(): boolean {\n        const entries = this.store.selectSnapshot(DriveState.selectedEntries),\n            folder = this.folder as DriveFolder;\n\n        return DriveState.canMoveEntriesTo(entries, folder);\n    }\n\n    protected executeAction() {\n        return this.store.dispatch(new MoveEntries(this.folder));\n    }\n}\n","import { Directive, ElementRef, OnDestroy, OnInit } from '@angular/core';\nimport { Select } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { Observable, fromEvent, Subscription } from 'rxjs';\n\n@Directive()\nexport abstract class BaseDropTarget implements OnInit, OnDestroy {\n    @Select(DriveState.dragging) dragging: Observable<boolean>;\n    protected subs: Subscription[] = [];\n    protected active: boolean;\n    protected abstract el: ElementRef<HTMLElement>;\n\n    ngOnInit() {\n        this.dragging.subscribe(dragging => {\n            if (dragging) {\n                this.onDragStart();\n            } else {\n                this.onDragEnd();\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        this.unsubscribe();\n    }\n\n    protected abstract canDrop();\n    protected abstract executeAction();\n\n    protected onDragStart() {\n        const enter = fromEvent(this.el.nativeElement, 'mouseenter')\n            .subscribe(() => this.onDragEnter());\n\n        const leave = fromEvent(this.el.nativeElement, 'mouseleave')\n            .subscribe(() => this.onDragLeave());\n\n        this.subs.push(enter, leave);\n    }\n\n    protected onDragEnter() {\n        const canDrop = this.canDrop(),\n            classes = ['drag-over'];\n        if (canDrop) {\n            this.active = true;\n            classes.push('can-drop');\n        }\n        this.el.nativeElement.classList.add(...classes);\n    }\n\n    protected onDragLeave() {\n        this.active = false;\n        this.removeDragOverClass();\n    }\n\n    protected onDragEnd() {\n        this.unsubscribe();\n        this.removeDragOverClass();\n\n        // pointer never left element before drag stop,\n        // we can assume that user dropped on this el\n        if (this.active && this.canDrop()) {\n            this.executeAction();\n            this.active = false;\n        }\n    }\n\n    protected unsubscribe() {\n        this.subs.forEach(sub => sub && sub.unsubscribe());\n    }\n\n    protected removeDragOverClass() {\n        this.el.nativeElement.classList.remove(...['drag-over', 'can-drop']);\n    }\n}\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const AVAILABLE_CONTEXT_MENUS = new InjectionToken<any>('AVAILABLE_CONTEXT_MENUS');\r\n","import {OverlayRef} from '@angular/cdk/overlay';\r\n\r\nexport class ContextMenuRef<T> {\r\n    constructor(private overlayRef: OverlayRef) {}\r\n\r\n    public close() {\r\n        if (this.overlayRef) {\r\n            this.overlayRef.dispose();\r\n        }\r\n    }\r\n\r\n    public backdropClick() {\r\n        return this.overlayRef.backdropClick();\r\n    }\r\n\r\n    public attachments() {\r\n        return this.overlayRef.attachments();\r\n    }\r\n\r\n    public detachments() {\r\n        return this.overlayRef.detachments();\r\n    }\r\n\r\n    public backdropElement() {\r\n        return this.overlayRef.backdropElement;\r\n    }\r\n\r\n    public contextMenuElement() {\r\n        return this.overlayRef.overlayElement;\r\n    }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const CONTEXT_MENU_DATA = new InjectionToken<{ [key: string]: any }>('CONTEXT_MENU_DATA');\r\n","<div class=\"mat-tree-node root-tree-node\" *ngIf=\"showRootNode\" (click)=\"selectFolder()\" [class.active]=\"!(selectedFolderId$ | async)\">\n    <mat-icon svgIcon=\"network-drive-custom\" class=\"folder-icon\"></mat-icon>\n    <span class=\"text\" trans>My Drive</span>\n</div>\n<mat-tree [dataSource]=\"tree.dataSource\" [treeControl]=\"tree.control\">\n    <mat-tree-node\n            *matTreeNodeDef=\"let node\"\n            matTreeNodePadding\n            [matTreeNodePaddingIndent]=\"showRootNode ? 40 : 24\"\n            [contextMenu]=\"{type: 'entry', entry: node}\"\n            [disableContextMenu]=\"disableContextMenu\"\n            [folderDropTarget]=\"node\"\n            [class.active]=\"(selectedFolderId$ | async) === node.hash\"\n            class=\"tree-node\"\n    >\n        <mat-icon class=\"toggle-expansion-icon\"\n                  matTreeNodeToggle\n                  [class.expanded]=\"tree.control.isExpanded(node)\"\n                  svgIcon=\"arrow-drop-down\"\n        ></mat-icon>\n        <button type=\"button\" class=\"no-style folder-button\" (click)=\"selectFolder(node)\">\n            <mat-icon svgIcon=\"folder\" class=\"folder-icon\"></mat-icon>\n            <span class=\"folder-name text\">{{node.name}}</span>\n        </button>\n    </mat-tree-node>\n</mat-tree>\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FoldersTreeService } from './folders-tree.service';\nimport { DriveFolder } from '../../folders/models/driveFolder';\nimport { Store } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n    selector: 'folders-tree',\n    templateUrl: './folders-tree.component.html',\n    styleUrls: ['./folders-tree.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [FoldersTreeService],\n})\nexport class FoldersTreeComponent implements OnInit, OnDestroy {\n    @HostBinding('class.expanded') @Input() expanded = false;\n    @HostBinding('class.has-root-node') @Input() showRootNode = false;\n    @Input() disableContextMenu = false;\n    @Output() folderSelected: EventEmitter<DriveFolder> = new EventEmitter();\n\n    // TODO: start trackBy function when it's fixed on angular material side\n    private subscriptions: Subscription[] = [];\n    public selectedFolderId$ = new BehaviorSubject<string>(null);\n    constructor(public tree: FoldersTreeService, private store: Store) {}\n\n    public selectFolder(folder?: DriveFolder) {\n        this.selectedFolderId$.next(folder?.hash);\n        this.folderSelected.emit(folder);\n    }\n\n    public toggle() {\n        this.expanded = !this.expanded;\n    }\n\n    ngOnInit() {\n        const sub1 = this.store.select(DriveState.userFolders)\n            .pipe(filter(fs => !!fs))\n            .subscribe(folders => {\n                this.tree.data = folders;\n            });\n\n        const sub2 = this.store.select(DriveState.activePage).subscribe(page => {\n            this.selectedFolderId$.next(page.folderHash);\n        });\n\n        this.subscriptions.push(sub1, sub2);\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n    }\n}\n","import {\n    ChangeDetectionStrategy, Component, OnDestroy, OnInit, ViewEncapsulation\n} from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Actions, ofAction, Select, Store } from '@ngxs/store';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { DriveState } from '../../state/drive-state';\nimport { map, take } from 'rxjs/operators';\nimport { MoveEntries } from '../../state/actions/commands';\nimport { MoveEntriesFailed, MoveEntriesSuccess } from '../../state/actions/events';\nimport { DriveEntry } from '../../files/models/drive-entry';\nimport { DriveFolder } from '../../folders/models/driveFolder';\n\n@Component({\n    selector: 'move-entries-dialog',\n    templateUrl: './move-entries-dialog.component.html',\n    styleUrls: ['./move-entries-dialog.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MoveEntriesDialogComponent implements OnInit, OnDestroy {\n    @Select(DriveState.selectedEntries) selectedEntries$: Observable<DriveEntry[]>;\n    public destination$ = new BehaviorSubject<DriveFolder>(this.store.selectSnapshot(DriveState.activePage).folder);\n    public loading$ = new BehaviorSubject<boolean>(false);\n    private subscriptions: Subscription[] = [];\n    public canMove$ = this.destination$.pipe(map(destination => {\n        const movingEntries = this.store.selectSnapshot(DriveState.selectedEntries);\n        return DriveState.canMoveEntriesTo(movingEntries, destination);\n    }));\n\n    constructor(\n        protected dialogRef: MatDialogRef<MoveEntriesDialogComponent>,\n        protected store: Store,\n        protected actions: Actions,\n    ) {}\n\n    ngOnInit() {\n        const failure = this.actions.pipe(ofAction(MoveEntriesFailed)).subscribe(() => {\n            this.loading$.next(false);\n        });\n        const success = this.actions.pipe(ofAction(MoveEntriesSuccess), take(1))\n            .subscribe(() => {\n                this.close();\n            });\n        this.subscriptions.push(...[success, failure]);\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n    }\n\n    public confirm() {\n        this.loading$.next(true);\n        this.store.dispatch(new MoveEntries(this.destination$.value))\n            .subscribe(() => {\n                this.loading$.next(false);\n            });\n    }\n\n    public close() {\n        this.dialogRef.close();\n    }\n}\n","<div class=\"modal-header\">\n    <h2 mat-dialog-title trans>Move items</h2>\n    <button type=\"button\" mat-icon-button (click)=\"close()\" class=\"close-button\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<form ngNativeValidate (ngSubmit)=\"confirm()\">\n    <mat-dialog-content>\n        <folders-tree\n            [expanded]=\"true\"\n            [disableContextMenu]=\"true\"\n            [showRootNode]=\"true\"\n            (folderSelected)=\"destination$.next($event)\"\n        ></folders-tree>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <button (click)=\"close()\" type=\"button\" mat-button class=\"cancel-button\" trans>Cancel</button>\n        <button type=\"submit\" mat-raised-button color=\"accent\" class=\"submit-button\" [disabled]=\"!(canMove$ | async) || (loading$ | async)\" trans>Move</button>\n    </mat-dialog-actions>\n</form>\n","<div class=\"modal-header\">\n    <h2 mat-dialog-title trans>Rename</h2>\n    <button type=\"button\" mat-icon-button (click)=\"close()\" class=\"close-button\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<form ngNativeValidate (ngSubmit)=\"confirm()\">\n    <mat-dialog-content class=\"many-inputs\">\n        <div class=\"input-container\">\n            <input type=\"text\" [formControl]=\"entryName\" placeholder=\"Enter a name...\" trans-placeholder required min=\"3\">\n            <div class=\"error\" *ngIf=\"errors.name\">{{errors.name}}</div>\n        </div>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <button (click)=\"close()\" type=\"button\" mat-button class=\"cancel-button\" trans>Cancel</button>\n        <button type=\"submit\" mat-raised-button color=\"accent\" class=\"submit-button\" [disabled]=\"loading | async\" trans>Rename</button>\n    </mat-dialog-actions>\n</form>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { FormControl } from '@angular/forms';\nimport { BackendErrorResponse } from '@common/core/types/backend-error-response';\nimport { DriveState } from '../../state/drive-state';\nimport { Store } from '@ngxs/store';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { finalize } from 'rxjs/operators';\nimport { Toast } from '@common/core/ui/toast.service';\nimport { DriveEntry } from '../../files/models/drive-entry';\nimport { DriveEntryApiService } from '../../drive-entry-api.service';\nimport { EntryRenamed } from '../../state/actions/events';\n\nexport interface RenameEntryDialogErrors {\n    name?: string;\n}\n\n@Component({\n    selector: 'rename-entry-dialog',\n    templateUrl: './rename-entry-dialog.component.html',\n    styleUrls: ['./rename-entry-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RenameEntryDialogComponent implements OnInit {\n    public entryName = new FormControl();\n    public loading = new BehaviorSubject(false);\n    public errors: RenameEntryDialogErrors = {};\n    public entry: DriveEntry;\n\n    constructor(\n        private dialogRef: MatDialogRef<RenameEntryDialogComponent>,\n        private store: Store,\n        private toast: Toast,\n        private entriesApi: DriveEntryApiService,\n        private changeDetection: ChangeDetectorRef,\n    ) {}\n\n    ngOnInit() {\n        this.entry = this.store.selectSnapshot(DriveState.selectedEntries)[0];\n        this.entryName.setValue(this.entry.name);\n    }\n\n    public confirm() {\n        const newName = this.entryName.value;\n\n        // entry name was not changed\n        if (newName === this.entry.name) {\n            return this.close();\n        }\n\n        this.loading.next(true);\n\n        return this.entriesApi.update(this.entry.id, {name: newName})\n            .pipe(finalize(() => this.loading.next(false)))\n            .subscribe(() => {\n                this.setErrors();\n                this.store.dispatch(new EntryRenamed(this.entry, newName));\n                this.close();\n            }, response => this.setErrors(response));\n    }\n\n    public setErrors(response?: BackendErrorResponse<RenameEntryDialogErrors>) {\n        this.loading.next(false);\n        this.errors = response ? response.errors : {};\n        this.changeDetection.detectChanges();\n    }\n\n    public close() {\n        this.dialogRef.close();\n    }\n}\n","import {\r\n    AddStar,\r\n    CopySelectedEntries,\r\n    DeleteSelectedEntries,\r\n    DownloadEntries,\r\n    OpenDialog,\r\n    OpenFilePreview,\r\n    RemoveStar\r\n} from '../../state/actions/commands';\r\nimport { ShareDialogComponent } from '../../sharing/share-dialog/share-dialog.component';\r\nimport { ShareLinkDialogComponent } from '../../sharing/share-link-dialog/share-link-dialog.component';\r\nimport { CrupdateFolderDialogComponent } from '../../folders/components/crupdate-folder-dialog/crupdate-folder-dialog.component';\r\nimport { Injectable } from '@angular/core';\r\nimport { MoveEntriesDialogComponent } from '../../entries/move-entries-dialog/move-entries-dialog.component';\r\nimport { RenameEntryDialogComponent } from '../../entries/rename-entry-dialog/rename-entry-dialog.component';\r\nimport { DriveContextActions } from '../drive-context-actions';\r\nimport { DriveState } from '../../state/drive-state';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class EntryActions extends DriveContextActions {\r\n    protected actions = [\r\n        {\r\n            viewName: 'Preview',\r\n            icon: 'visibility',\r\n            showInCompact: true,\r\n            execute: () => {\r\n                this.store.dispatch(new OpenFilePreview());\r\n            },\r\n            visible: () => {\r\n                return !this.onlyFoldersSelected;\r\n            },\r\n        },\r\n        {\r\n            viewName: 'Manage People',\r\n            icon: 'person-add',\r\n            showInCompact: true,\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(ShareDialogComponent));\r\n            },\r\n            visible: () => this.hasPermission('files.update'),\r\n        },\r\n        {\r\n            viewName: 'Get shareable link',\r\n            icon: 'link',\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(ShareLinkDialogComponent, null, {\r\n                    panelClass: 'share-link-dialog-container',\r\n                    autoFocus: false,\r\n                }));\r\n            },\r\n            visible: () => !this.multipleEntriesSelected && this.hasPermission('files.update'),\r\n        },\r\n        {\r\n            viewName: 'Add a star',\r\n            icon: 'star',\r\n            execute: () => {\r\n                this.store.dispatch(new AddStar(this.getSelectedEntries()));\r\n            },\r\n            visible: () => !this.allStarred\r\n        },\r\n        {\r\n            viewName: 'Remove star',\r\n            icon: 'star-border',\r\n            execute: () => {\r\n                this.store.dispatch(new RemoveStar(this.getSelectedEntries()));\r\n            },\r\n            visible: () => this.allStarred\r\n        },\r\n        {\r\n            viewName: 'New Folder',\r\n            icon: 'create-new-folder',\r\n            separatorBefore: this.store.selectSnapshot(DriveState.isMobile),\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(CrupdateFolderDialogComponent, {folder: this.getSelectedFolder()}));\r\n            },\r\n            visible: () => this.hasPermission('files.create')\r\n        },\r\n        {\r\n            viewName: 'Upload Files',\r\n            icon: 'cloud-upload',\r\n            execute: () => {\r\n                this.openUploadWindow('file');\r\n            },\r\n            visible: () => this.hasPermission('files.create') && this.store.selectSnapshot(DriveState.isMobile),\r\n        },\r\n        {\r\n            viewName: 'Upload Folder',\r\n            icon: 'upload-folder-custom',\r\n            execute: () => {\r\n                this.openUploadWindow('directory');\r\n            },\r\n            visible: () => this.hasPermission('files.create') && this.store.selectSnapshot(DriveState.isMobile),\r\n        },\r\n        {\r\n            viewName: 'Move to',\r\n            icon: 'subdirectory-arrow-right',\r\n            separatorBefore: this.store.selectSnapshot(DriveState.isMobile),\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(MoveEntriesDialogComponent, null, {panelClass: 'move-entries-dialog-container'}));\r\n            },\r\n            visible: () => this.hasPermission('files.update'),\r\n        },\r\n        {\r\n            viewName: 'Rename',\r\n            icon: 'edit',\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(RenameEntryDialogComponent));\r\n            },\r\n            visible: () => {\r\n                return !this.multipleEntriesSelected && this.hasPermission('files.update');\r\n            }\r\n        },\r\n        {\r\n            viewName: 'Make a copy',\r\n            icon: 'file-copy',\r\n            execute: () => {\r\n                this.store.dispatch(new CopySelectedEntries());\r\n            },\r\n            visible: () => this.hasPermission('files.create'),\r\n        },\r\n        {\r\n            viewName: 'Download',\r\n            icon: 'file-download',\r\n            execute: () => {\r\n                this.store.dispatch(new DownloadEntries());\r\n            },\r\n            visible: () => this.hasPermission('files.download'),\r\n        },\r\n        {\r\n            viewName: 'Delete',\r\n            icon: 'delete',\r\n            showInCompact: true,\r\n            separatorBefore: true,\r\n            execute: () => {\r\n                this.store.dispatch(new DeleteSelectedEntries());\r\n            },\r\n            visible: () => this.hasPermission('files.delete'),\r\n        },\r\n    ];\r\n}\r\n","import { Store } from '@ngxs/store';\r\nimport { DriveState } from '../state/drive-state';\r\nimport { DriveContextAction } from './types/drive-context-action';\r\nimport { Injectable } from '@angular/core';\r\nimport { WorkspacesService } from '../../../common/workspaces/workspaces.service';\r\nimport { OpenUploadWindow } from '../state/actions/commands';\r\nimport { CurrentUser } from '../../../common/auth/current-user';\r\nimport { DriveFolder } from '../folders/models/driveFolder';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport abstract class DriveContextActions {\r\n    protected multipleEntriesSelected: boolean;\r\n    protected allStarred: boolean;\r\n    protected onlyFoldersSelected: boolean;\r\n\r\n    protected abstract actions: DriveContextAction[];\r\n\r\n    constructor(\r\n        protected store: Store,\r\n        protected workspaces: WorkspacesService,\r\n        protected currentUser: CurrentUser,\r\n    ) {}\r\n\r\n    public getActions() {\r\n        this.updateStatus();\r\n        return this.actions;\r\n    }\r\n\r\n    protected getSelectedEntries() {\r\n        return this.store.selectSnapshot(DriveState.selectedEntries);\r\n    }\r\n\r\n    protected updateStatus() {\r\n        this.multipleEntriesSelected = this.store.selectSnapshot(DriveState.multipleEntriesSelected);\r\n        this.allStarred = this.store.selectSnapshot(DriveState.allSelectedEntriesStarred);\r\n        this.onlyFoldersSelected = this.store.selectSnapshot(DriveState.onlyFoldersSelected);\r\n    }\r\n\r\n    protected hasPermission(permission: string): boolean {\r\n        if (permission === 'files.create') {\r\n            const activeFolder = this.store.selectSnapshot(DriveState.activePage).folder;\r\n\r\n            // upload either to the folder user right clicked on or the folder that is currently open\r\n            const target = (!this.multipleEntriesSelected && this.getSelectedFolder()) || activeFolder;\r\n            return (target?.permissions || [])['files.update'];\r\n        } else {\r\n            return this.getSelectedEntries().every(entry => {\r\n                return entry.permissions[permission];\r\n            });\r\n        }\r\n    }\r\n\r\n    protected getSelectedFolder(): DriveFolder {\r\n        return this.getSelectedEntries().find(f => f.type === 'folder') as DriveFolder;\r\n    }\r\n\r\n    protected openUploadWindow(type: 'file'|'directory') {\r\n        this.store.dispatch(new OpenUploadWindow(type));\r\n    }\r\n}\r\n","import { OpenDialog, } from '../../state/actions/commands';\r\nimport { Injectable } from '@angular/core';\r\nimport { DriveContextActions } from '../drive-context-actions';\r\nimport { CrupdateFolderDialogComponent } from '../../folders/components/crupdate-folder-dialog/crupdate-folder-dialog.component';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FolderActions extends DriveContextActions {\r\n    protected actions = [\r\n        {\r\n            viewName: 'New Folder',\r\n            icon: 'create-new-folder',\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(CrupdateFolderDialogComponent));\r\n            },\r\n            visible: () => this.hasPermission('files.create'),\r\n        },\r\n        {\r\n            viewName: 'Upload Files',\r\n            icon: 'cloud-upload',\r\n            separatorBefore: true,\r\n            execute: () => {\r\n                this.openUploadWindow('file');\r\n            },\r\n            visible: () => this.hasPermission('files.create'),\r\n        },\r\n        {\r\n            viewName: 'Upload Folder',\r\n            icon: 'upload-folder-custom',\r\n            execute: () => {\r\n                this.openUploadWindow('directory');\r\n            },\r\n            visible: () => this.hasPermission('files.create'),\r\n        },\r\n    ];\r\n}\r\n","import { DeleteTrashedEntriesForever, OpenConfirmDialog, RestoreTrashedEntries, } from '../../state/actions/commands';\r\nimport { Injectable } from '@angular/core';\r\nimport { DriveContextActions } from '../drive-context-actions';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TrashActions extends DriveContextActions {\r\n    protected actions = [\r\n        {\r\n            viewName: 'Restore',\r\n            icon: 'restore',\r\n            showInCompact: true,\r\n            execute: () => {\r\n                this.store.dispatch(new RestoreTrashedEntries());\r\n            },\r\n            visible: () => this.hasPermission('files.update'),\r\n        },\r\n        {\r\n            viewName: 'Delete Forever',\r\n            icon: 'delete-forever',\r\n            showInCompact: true,\r\n            execute: () => {\r\n                this.deleteForever();\r\n            },\r\n            visible: () => this.hasPermission('files.delete'),\r\n        },\r\n    ];\r\n\r\n    public deleteForever() {\r\n        this.store.dispatch(new OpenConfirmDialog({\r\n            title: 'Delete Forever',\r\n            body: 'This will permanently delete selected items.',\r\n            bodyBold: 'This action can not be undone.',\r\n            ok: 'Delete Forever',\r\n        }, new DeleteTrashedEntriesForever()));\r\n    }\r\n}\r\n","import {\r\n    CopySelectedEntries, DownloadEntries, OpenDialog, OpenFilePreview, RemoveEntries,\r\n} from '../../state/actions/commands';\r\nimport { Injectable } from '@angular/core';\r\nimport { DriveContextActions } from '../drive-context-actions';\r\nimport { ShareLinkDialogComponent } from '../../sharing/share-link-dialog/share-link-dialog.component';\r\nimport { Store } from '@ngxs/store';\r\nimport { CurrentUser } from '@common/auth/current-user';\r\nimport { SharesApiService } from '../../sharing/shares-api.service';\r\nimport { ShareDialogComponent } from '../../sharing/share-dialog/share-dialog.component';\r\nimport { RenameEntryDialogComponent } from '../../entries/rename-entry-dialog/rename-entry-dialog.component';\r\nimport { WorkspacesService } from '../../../../common/workspaces/workspaces.service';\r\n\r\nconst noopTrue = () => true;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SharesActions extends DriveContextActions {\r\n    protected actions = [\r\n        {\r\n            viewName: 'Preview',\r\n            icon: 'visibility',\r\n            execute: () => {\r\n                this.store.dispatch(new OpenFilePreview());\r\n            },\r\n            visible: () => {\r\n                return !this.onlyFoldersSelected;\r\n            },\r\n        },\r\n        {\r\n            viewName: 'Manage People',\r\n            icon: 'person-add',\r\n            showInCompact: true,\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(ShareDialogComponent));\r\n            },\r\n            visible: () => {\r\n                return this.hasPermission('files.update');\r\n            },\r\n        },\r\n        {\r\n            viewName: 'Get shareable link',\r\n            icon: 'link',\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(ShareLinkDialogComponent, null, {\r\n                    panelClass: 'share-link-dialog-container',\r\n                    autoFocus: false,\r\n                }));\r\n            },\r\n            visible: () => {\r\n                return !this.multipleEntriesSelected && this.hasPermission('files.update');\r\n            }\r\n        },\r\n        {\r\n            viewName: 'Rename',\r\n            icon: 'edit',\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(RenameEntryDialogComponent));\r\n            },\r\n            visible: () => {\r\n                return !this.multipleEntriesSelected && this.hasPermission('files.update');\r\n            }\r\n        },\r\n        {\r\n            viewName: 'Make a copy',\r\n            icon: 'file-copy',\r\n            execute: () => {\r\n                this.store.dispatch(new CopySelectedEntries());\r\n            },\r\n            visible: () => {\r\n                return this.hasPermission('files.download') && this.hasPermission('files.create');\r\n            },\r\n        },\r\n        {\r\n            viewName: 'Download',\r\n            icon: 'file-download',\r\n            execute: () => {\r\n                this.store.dispatch(new DownloadEntries());\r\n            },\r\n            visible: () => {\r\n                return this.hasPermission('files.download');\r\n            },\r\n        },\r\n        {\r\n            viewName: 'Remove',\r\n            icon: 'delete',\r\n            showInCompact: true,\r\n            execute: () => {\r\n                const entries = this.getSelectedEntries();\r\n                this.shares.detachUser(\r\n                    this.currentUser.get('id'),\r\n                    entries.map(e => e.id),\r\n                ).subscribe(() => {\r\n                    this.store.dispatch(new RemoveEntries(entries));\r\n                });\r\n            },\r\n            visible: noopTrue,\r\n        },\r\n    ];\r\n\r\n    constructor(\r\n        protected store: Store,\r\n        protected currentUser: CurrentUser,\r\n        protected shares: SharesApiService,\r\n        protected workspaces: WorkspacesService\r\n    ) {\r\n        super(store, workspaces, currentUser);\r\n    }\r\n}\r\n","import { EmptyTrash, OpenConfirmDialog, } from '../../state/actions/commands';\r\nimport { Injectable } from '@angular/core';\r\nimport { DriveContextActions } from '../drive-context-actions';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TrashPageActions extends DriveContextActions {\r\n    protected actions = [\r\n        {\r\n            viewName: 'Empty Trash',\r\n            icon: 'delete-forever',\r\n            execute: () => {\r\n                this.emptyTrash();\r\n            },\r\n            visible: () => this.hasPermission('files.delete'),\r\n        },\r\n    ];\r\n\r\n    public emptyTrash() {\r\n        this.store.dispatch(new OpenConfirmDialog({\r\n            title: 'Empty Trash',\r\n            body: 'All files and folders in your trash will be permanently deleted.',\r\n            bodyBold: 'This action can not be undone.',\r\n            ok: 'Empty Trash'\r\n        }, new EmptyTrash()));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DriveDomCacheService {\n    public scrollCont: HTMLElement;\n    public filesCont: HTMLElement;\n    public filesContRect: ClientRect;\n    public scrollContRect: ClientRect;\n    public dragPreview: HTMLElement;\n}\n","export const SEARCH_FILE_TYPES = [\r\n    {name: 'Folders', type: 'folder'},\r\n    {name: 'Images', type: 'image'},\r\n    {name: 'Text documents', type: 'text'},\r\n    {name: 'Video', type: 'video'},\r\n    {name: 'Audio', type: 'audio'},\r\n    {name: 'PDFs', type: 'pdf'},\r\n];\r\n","export interface PaginationResponse<T> {\r\n    data: T[];\r\n    from: number;\r\n    to: number;\r\n    total: number;\r\n    per_page: number;\r\n    current_page: number;\r\n    last_page: number;\r\n    path: string;\r\n    next_page_url: string|null;\r\n    prev_page_url: string|null;\r\n}\r\n\r\nexport const EMPTY_PAGINATION_RESPONSE = {\r\n    pagination: {data: []}\r\n};\r\n","<form class=\"input-container\" (ngSubmit)=\"openSearchPage({query: formControl.value})\">\n    <input type=\"text\" [matAutocomplete]=\"auto\" [formControl]=\"formControl\" placeholder=\"Search files and folders...\" #trigger trans-placeholder>\n    <button type=\"button\" mat-icon-button class=\"search-icon\">\n        <mat-icon svgIcon=\"search\"></mat-icon>\n    </button>\n    <button type=\"button\" mat-icon-button class=\"cancel-icon\" *ngIf=\"formControl.value\" (click)=\"resetForm()\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</form>\n\n<mat-autocomplete #auto=\"matAutocomplete\" class=\"file-types-autocomplete mat-elevation-z1\" (optionSelected)=\"executeAction($event)\" [displayWith]=\"displayFn\">\n    <ng-container *ngFor=\"let result of results$ | async\">\n        <mat-option [value]=\"result\">\n            <file-icon [type]=\"result.content.type\"></file-icon>\n            <div class=\"meta\">\n                <div class=\"name\">{{ result.type === 'entryType' ? (result.content.name | trans) : result.content.name}}</div>\n                <div class=\"owner\" *ngIf=\"result.content.users\">{{result.content.users[0]?.display_name}}</div>\n            </div>\n            <div class=\"date\" *ngIf=\"result.content.updated_at\">{{result.content.updated_at | formattedDate}}</div>\n        </mat-option>\n    </ng-container>\n</mat-autocomplete>\n","import {\n    ChangeDetectionStrategy, Component, ElementRef, OnInit, ViewChild, ViewEncapsulation\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { SEARCH_FILE_TYPES } from '../search-file-types';\nimport {\n    MatAutocomplete, MatAutocompleteSelectedEvent, MatAutocompleteTrigger\n} from '@angular/material/autocomplete';\nimport { Store } from '@ngxs/store';\nimport { OpenSearchPage } from '../../state/actions/commands';\nimport { debounceTime, distinctUntilChanged, filter, switchMap } from 'rxjs/operators';\nimport {\n    DriveEntriesPaginationResponse, DriveEntryApiService\n} from '../../drive-entry-api.service';\nimport { BehaviorSubject, Observable, of as observableOf } from 'rxjs';\nimport { DriveEntry } from '../../files/models/drive-entry';\nimport { EntryDoubleTapped } from '../../state/actions/events';\nimport { EMPTY_PAGINATION_RESPONSE } from '@common/core/types/pagination/pagination-response';\n\ninterface SearchResult {\n    type: 'entry'|'entryType';\n    content: DriveEntry|{name: string, type: string};\n}\n\n@Component({\n    selector: 'main-searchbar',\n    templateUrl: './main-searchbar.component.html',\n    styleUrls: ['./main-searchbar.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MainSearchbarComponent implements OnInit {\n    @ViewChild('trigger', { read: MatAutocompleteTrigger }) trigger: MatAutocompleteTrigger;\n    @ViewChild('trigger', { read: ElementRef }) input: ElementRef<HTMLInputElement>;\n    @ViewChild('auto') autocomplete: MatAutocomplete;\n    private defaultResults: SearchResult[] = [];\n    public formControl = new FormControl();\n    public results$: BehaviorSubject<SearchResult[]> = new BehaviorSubject([]);\n    private lastQuery: string;\n\n    constructor(\n        private store: Store,\n        private driveApi: DriveEntryApiService,\n    ) {\n        this.setDefaultResults();\n    }\n\n    ngOnInit() {\n        this.formControl.valueChanges.pipe(\n            debounceTime(300),\n            distinctUntilChanged(),\n            filter(q => typeof q === 'string'),\n            switchMap(query => this.search(query))\n        ).subscribe(response => {\n            this.results$.next((response.data || []).map(entry => {\n                return {type: 'entry', content: entry} as SearchResult;\n            }));\n        });\n    }\n\n    public executeAction(e: MatAutocompleteSelectedEvent) {\n        const value = e.option.value as SearchResult;\n\n        if (value.type === 'entryType') {\n            this.openSearchPage({type: value.content.type});\n            this.resetForm();\n        } else {\n            this.store.dispatch(new EntryDoubleTapped(value.content as DriveEntry));\n        }\n\n        this.closePanelAndBlur();\n    }\n\n    public openSearchPage(params: {type?: string, query?: string}) {\n        this.store.dispatch(new OpenSearchPage(params)).subscribe(() => {\n            this.closePanelAndBlur();\n        });\n    }\n\n    private search(query: string): Observable<DriveEntriesPaginationResponse> {\n        this.lastQuery = query;\n        if ( ! query || query.length < 3) {\n            return observableOf(EMPTY_PAGINATION_RESPONSE) as any;\n        }\n        return this.driveApi.getCurrentUserEntries({query, per_page: 8});\n    }\n\n    private setDefaultResults() {\n        this.defaultResults = SEARCH_FILE_TYPES.map(entryType => {\n            return {type: 'entryType', content: entryType} as SearchResult;\n        });\n\n        this.results$.next(this.defaultResults);\n    }\n\n    public resetForm() {\n        this.formControl.reset();\n        this.setDefaultResults();\n        this.lastQuery = null;\n    }\n\n    private closePanelAndBlur() {\n        this.trigger.closePanel();\n        this.input.nativeElement.blur();\n    }\n\n    displayFn = () => {\n        // always show original user query when\n        // clicking on any autocomplete option\n        return this.lastQuery || '';\n    }\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Inject } from '@angular/core';\nimport { Modal } from '@common/core/ui/dialogs/modal.service';\nimport { CrupdateFolderDialogComponent } from '../../folders/components/crupdate-folder-dialog/crupdate-folder-dialog.component';\nimport { Select, Store } from '@ngxs/store';\nimport { UploadFiles } from '../../state/actions/commands';\nimport { UploadedFile } from '@common/uploads/uploaded-file';\nimport { UploadInputConfig } from '@common/uploads/upload-input-config';\nimport { DriveState } from '../../state/drive-state';\nimport { Observable } from 'rxjs';\nimport { DRIVE_UPLOAD_INPUT_CONFIG } from '../../upload-input-config';\n\n@Component({\n    selector: 'sidebar-action-buttons',\n    templateUrl: './sidebar-action-buttons.component.html',\n    styleUrls: ['./sidebar-action-buttons.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SidebarActionButtonsComponent {\n    @Select(DriveState.canUpload) canUpload$: Observable<boolean>;\n\n    constructor(\n        private dialog: Modal,\n        private store: Store,\n        @Inject(DRIVE_UPLOAD_INPUT_CONFIG) public uploadInputConfig: UploadInputConfig,\n    ) {}\n\n    public openNewFolderDialog() {\n        this.dialog.open(CrupdateFolderDialogComponent);\n    }\n\n    public openUploadsPanel(files: UploadedFile[]) {\n        this.store.dispatch(new UploadFiles(files));\n    }\n}\n","<button mat-raised-button color=\"accent\" class=\"upload-button\" [disabled]=\"!(canUpload$ | async)\" [uploadButton]=\"uploadInputConfig\" (filesSelected)=\"openUploadsPanel($event)\">\n    <mat-icon svgIcon=\"cloud-upload\"></mat-icon>\n    <span trans>Upload</span>\n</button>\n\n<button mat-raised-button color=\"accent\" class=\"new-folder-button\" [disabled]=\"!(canUpload$ | async)\" (click)=\"openNewFolderDialog()\">\n    <mat-icon svgIcon=\"create-new-folder\"></mat-icon>\n</button>\n","import {animate, style, transition, trigger} from '@angular/animations';\r\n\r\nexport const SKELETON_ANIMATIONS = [\r\n    trigger('fadeIn', [\r\n        transition(':enter', [\r\n            style({opacity: 0}),\r\n            animate('325ms ease-in', style({\r\n                opacity: 1,\r\n            }))\r\n        ])\r\n    ]),\r\n    trigger('fadeOut', [\r\n        transition(':leave', [\r\n            style({opacity: 1, position: 'absolute', left: '0', right: '0'}),\r\n            animate('325ms ease-out', style({\r\n                opacity: 0\r\n            }))\r\n        ])\r\n    ])\r\n];\r\n","<mat-progress-bar mode=\"determinate\" color=\"accent\" [value]=\"spaceUsedPercent$ | async\"></mat-progress-bar>\r\n\r\n<div class=\"usage-info\" *ngIf=\"(spaceUsed$ | async) !== null; else skeleton\" @fadeIn>\r\n    {{spaceUsed$ | async | formattedFileSize}} {{'of' | trans}} {{spaceAvailable$ | async | formattedFileSize }} {{'used' | trans}}\r\n</div>\r\n<ng-template #skeleton>\r\n    <skeleton class=\"usage-info\" @fadeOut></skeleton>\r\n</ng-template>\r\n\r\n\r\n<div *ngIf=\"settings.get('billing.enable') && (!(workspaces.activeId$ | async) || (workspaces.activeWorkspace$ | async)?.currentUser?.is_owner)\">\r\n    <a class=\"upgrade-link\" mat-button routerLink=\"/billing/upgrade\" target=\"_blank\" trans>Upgrade Storage</a>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Select } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { Observable } from 'rxjs';\nimport { Settings } from '@common/core/config/settings.service';\nimport { SKELETON_ANIMATIONS } from '../../../../common/core/ui/skeleton/skeleton-animations';\nimport { WorkspacesService } from '../../../../common/workspaces/workspaces.service';\n\n@Component({\n    selector: 'available-space-indicator',\n    templateUrl: './available-space-indicator.component.html',\n    styleUrls: ['./available-space-indicator.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [SKELETON_ANIMATIONS],\n})\nexport class AvailableSpaceIndicatorComponent {\n    @Select(DriveState.userSpaceUsed) spaceUsed$: Observable<number>;\n    @Select(DriveState.userSpaceAvailable) spaceAvailable$: Observable<number>;\n    @Select(DriveState.spaceUsedPercent) spaceUsedPercent$: Observable<number>;\n\n    constructor(public settings: Settings, public workspaces: WorkspacesService) {}\n}\n","<div [matMenuTriggerFor]=\"workspaceMenu\" *ngIf=\"workspaces.activeWorkspace$ | async as selected\">\n    <div class=\"left\">\n        <div class=\"role-name\" trans>{{selected.name}}</div>\n        <div class=\"member-count\">\n            <span *ngIf=\"selected.default\" trans>Personal workspace</span>\n            <span *ngIf=\"!selected.default\" trans>{{ ':count members' | trans:{count: selected?.members_count || 0} }}</span>\n        </div>\n    </div>\n    <div class=\"right\">\n        <mat-icon svgIcon=\"unfold-more\"></mat-icon>\n    </div>\n</div>\n\n<mat-menu #workspaceMenu=\"matMenu\" class=\"workspace-menu\">\n    <div mat-menu-item class=\"workspace-menu-item\" [class.active]=\"(workspaces.activeId$ | async) === workspace.id\" *ngFor=\"let workspace of workspaces.available$ | async\" (click)=\"selectWorkspace(workspace)\">\n        <mat-icon svgIcon=\"check\" [class.visually-hidden]=\"(workspaces.activeId$ | async) !== workspace.id\"></mat-icon>\n        <div>\n            <div class=\"name\" trans>{{workspace.name}}</div>\n            <div class=\"member-count\">\n                <span *ngIf=\"workspace.default\" trans>Personal workspace</span>\n                <span *ngIf=\"!workspace.default\" trans>{{ ':count members' | trans:{count: workspace?.members_count || 0} }}</span>\n            </div>\n        </div>\n        <button type=\"button\" class=\"settings-button\" mat-icon-button *ngIf=\"!workspace.default\" (click)=\"openWorkspaceMembersModal(workspace); $event.stopPropagation()\">\n            <mat-icon svgIcon=\"settings\"></mat-icon>\n        </button>\n    </div>\n    <div mat-menu-item class=\"new-workspace-menu-item\" (click)=\"openCrupdateWorkspaceModal()\" *ngIf=\"currentUser.hasPermission('workspaces.create')\">\n        <mat-icon svgIcon=\"add\"></mat-icon>\n        <span trans>Create new workspace</span>\n    </div>\n</mat-menu>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { Workspace } from '../types/workspace';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { WorkspacesService } from '../workspaces.service';\nimport { Modal } from '../../core/ui/dialogs/modal.service';\nimport { CurrentUser } from '../../auth/current-user';\nimport { BackendErrorResponse } from '../../core/types/backend-error-response';\nimport { HttpErrors } from '../../core/http/errors/http-errors.enum';\nimport { ConfirmModalComponent } from '../../core/ui/confirm-modal/confirm-modal.component';\nimport { filter } from 'rxjs/operators';\nimport { DELETE_RESOURCE_MESSAGE } from '../../datatable/delete-resource-message';\nimport { Toast } from '../../core/ui/toast.service';\n\n@Component({\n    selector: 'workspace-selector',\n    templateUrl: './workspace-selector.component.html',\n    styleUrls: ['./workspace-selector.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WorkspaceSelectorComponent implements OnInit {\n    @ViewChild(MatMenuTrigger) menuTrigger: MatMenuTrigger;\n\n    constructor(\n        private modal: Modal,\n        public workspaces: WorkspacesService,\n        public currentUser: CurrentUser,\n        private toast: Toast,\n        private vcr: ViewContainerRef,\n        private cd: ChangeDetectorRef,\n    ) {}\n\n    ngOnInit() {\n        this.workspaces.index({userId: this.currentUser.get('id'), withCount: ['members']})\n            .subscribe();\n    }\n\n    public openCrupdateWorkspaceModal(workspace?: Workspace) {\n        import('src/common/workspaces/workspace.module')\n            .then(m => {\n                // will have wrong WorkspacesService instance without passing viewContainerRef\n                this.modal.open(m.WorkspaceModule.components.crupdateModal, {workspace}, {viewContainerRef: this.vcr});\n                this.cd.markForCheck();\n            });\n    }\n\n    public openWorkspaceMembersModal(workspace: Workspace) {\n        import('src/common/workspaces/workspace.module')\n            .then(m => {\n                this.modal.open(m.WorkspaceModule.components.manageMembers, {workspace}, {viewContainerRef: this.vcr});\n                this.cd.markForCheck();\n                this.menuTrigger.closeMenu();\n            });\n\n    }\n\n    public maybeDeleteWorkspace(workspace: Workspace) {\n        const data = {...DELETE_RESOURCE_MESSAGE, replacements: {resource: 'workspace'}};\n        this.modal.open(ConfirmModalComponent, data)\n            .afterClosed()\n            .pipe(filter(confirmed => confirmed))\n            .subscribe(() => {\n                this.workspaces.delete([workspace.id]).subscribe(() => {\n                    this.toast.open('Workspace deleted.');\n                }, (errResponse: BackendErrorResponse) => {\n                    this.toast.open(errResponse.message || HttpErrors.Default);\n                });\n            });\n    }\n\n    public selectWorkspace(workspace: Workspace) {\n        this.workspaces.select(workspace.id);\n        this.menuTrigger.closeMenu();\n    }\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { DriveUrlsService } from '../drive-urls.service';\nimport { DriveState } from '../state/drive-state';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { OpenFolder } from '../state/actions/commands';\nimport { DrivePage } from '../state/models/drive-page';\nimport { DriveFolder } from '../folders/models/driveFolder';\n\n@Component({\n    selector: 'sidebar',\n    templateUrl: './sidebar.component.html',\n    styleUrls: ['./sidebar.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SidebarComponent {\n    @Select(DriveState.activePage) activePage$: Observable<DrivePage>;\n    @Select(DriveState.rootFolder) rootFolder$: Observable<DriveFolder>;\n\n    constructor(\n        public urls: DriveUrlsService,\n        private store: Store\n    ) {}\n\n    public openFolder(folder: DriveFolder) {\n        this.store.dispatch(new OpenFolder(folder));\n    }\n}\n","<div class=\"sidebar-body\">\r\n    <sidebar-action-buttons></sidebar-action-buttons>\r\n\r\n    <div class=\"drive-folders\">\r\n        <div class=\"sidebar-menu-item\" [routerLink]=\"urls.driveRoot()\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\" [folderDropTarget]=\"rootFolder$ | async\">\r\n            <mat-icon svgIcon=\"arrow-drop-down\" class=\"toggle-expansion-icon\" [class.expanded]=\"driveTree.expanded\" (click)=\"driveTree.toggle(); $event.stopPropagation()\"></mat-icon>\r\n            <mat-icon svgIcon=\"network-drive-custom\"></mat-icon>\r\n            <span class=\"text\" trans>All Files</span>\r\n        </div>\r\n        <folders-tree (folderSelected)=\"openFolder($event)\" #driveTree></folders-tree>\r\n    </div>\r\n\r\n    <custom-menu class=\"sidebar-menu\" position=\"drive-sidebar\" itemClass=\"sidebar-menu-item\"></custom-menu>\r\n\r\n    <div class=\"usage-container\">\r\n        <mat-icon svgIcon=\"storage\"></mat-icon>\r\n        <available-space-indicator></available-space-indicator>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"sidebar-footer\">\r\n    <workspace-selector></workspace-selector>\r\n</div>\r\n\r\n\r\n","<ng-container *ngIf=\"entry$ | async as entry\">\n    <ng-container *ngIf=\"savingDescription$ | async; else descriptionSaved\">\n        <span trans>Saving...</span>\n    </ng-container>\n    <ng-template #descriptionSaved>\n        <div class=\"input-container\" *ngIf=\"editingDescription$ | async; else descriptionEl\">\n            <label for=\"description\" class=\"hidden\" trans>Description</label>\n            <textarea\n                    rows=\"4\"\n                    id=\"description\"\n                    #textArea\n                    [value]=\"entry.description\"\n                    (enterKeybind)=\"textArea.blur()\"\n                    (blur)=\"updateDescription(entry, textArea.value)\"\n            ></textarea>\n        </div>\n        <ng-template #descriptionEl>\n            <div class=\"description-text\" (click)=\"editDescription()\">{{entry.description || ('Add a description' | trans)}}</div>\n            <button mat-icon-button (click)=\"editDescription()\" [matTooltip]=\"'Edit description' | trans\">\n                <mat-icon svgIcon=\"edit\"></mat-icon>\n            </button>\n        </ng-template>\n    </ng-template>\n</ng-container>","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, QueryList, ViewChildren, ViewEncapsulation } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { FileEntry } from '@common/uploads/types/file-entry';\nimport { UpdateEntryDescription } from '../../../state/actions/commands';\nimport { Select, Store } from '@ngxs/store';\nimport { DriveState } from '../../../state/drive-state';\nimport { DriveEntry } from '../../../files/models/drive-entry';\nimport { finalize } from 'rxjs/operators';\n\n@Component({\n    selector: 'entry-description-panel',\n    templateUrl: './entry-description-panel.component.html',\n    styleUrls: ['./entry-description-panel.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EntryDescriptionPanelComponent implements AfterViewInit {\n    @Select(DriveState.selectedEntryOrActiveFolder) entry$: Observable<DriveEntry>;\n    @ViewChildren('textArea') textArea: QueryList<ElementRef<HTMLTextAreaElement>>;\n    public editingDescription$ = new BehaviorSubject(false);\n    public savingDescription$ = new BehaviorSubject(false);\n\n    constructor(private store: Store) {}\n\n    public ngAfterViewInit() {\n        this.textArea.changes.subscribe(queryList => {\n            queryList.length && queryList.first.nativeElement.focus();\n        });\n    }\n\n    public editDescription() {\n        this.editingDescription$.next(true);\n    }\n\n    public updateDescription(entry: FileEntry, value: string) {\n        this.editingDescription$.next(false);\n        if (entry.description === value) return;\n        this.savingDescription$.next(true);\n        this.store.dispatch(new UpdateEntryDescription(entry, value))\n            .pipe(finalize(() => this.savingDescription$.next(false)))\n            .subscribe();\n    }\n}\n","<img [src]=\"getPreviewUrl()\"\r\n     *ngIf=\"file.type === 'image'\"\r\n     [ngClass]=\"file.type+'-file'\"\r\n     class=\"file-color\"\r\n     draggable=\"false\">\r\n\r\n<file-icon *ngIf=\"file.type !== 'image'\" [type]=\"file.type === 'folder' ? getFolderIcon() : file.type\"></file-icon>","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { DriveEntry } from '../../models/drive-entry';\n\n@Component({\n    selector: 'file-thumbnail',\n    templateUrl: './file-thumbnail.component.html',\n    styleUrls: ['./file-thumbnail.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FileThumbnailComponent {\n    @Input() file: DriveEntry;\n\n    public getPreviewUrl(): string {\n        let url = this.file.url;\n        if (this.file.thumbnail) {\n            const separator = url.includes('?') ? '&' : '?';\n            url += separator + 'thumbnail=true';\n        }\n        return url;\n    }\n\n    public getFolderIcon() {\n        if (this.file.users && this.file.users.length > 1) {\n            return 'shared-folder';\n        } else {\n            return 'folder';\n        }\n    }\n}\n","<ng-container *ngIf=\"entry$ | async as entry; else nothingSelected\">\n    <ng-container *ngIf=\"entry.updated_at; else nothingSelected\">\n        <file-thumbnail *ngIf=\"entry.type === 'image'\" class=\"preview\" [file]=\"entry\"></file-thumbnail>\n        <div class=\"users-list\">\n            <mat-icon class=\"users-list-img workspace-img\" svgIcon=\"groups\" *ngIf=\"entry.workspace_id\" [matTooltip]=\"'Everyone at :workspace workspace' | trans:{workspace: (workspaces.activeWorkspace$ | async)?.name}\"></mat-icon>\n            <img class=\"users-list-img\" *ngFor=\"let user of entry.users\" [src]=\"user.avatar\" [matTooltip]=\"user.display_name\">\n        </div>\n        <div class=\"details-list\">\n            <div class=\"item\">\n                <div class=\"name\" trans>Type</div>\n                <div class=\"value type-value\" trans>{{entry.type}}</div>\n            </div>\n            <div class=\"item\">\n                <div class=\"name\" trans>Size</div>\n                <div class=\"value\">{{entry.file_size | formattedFileSize}}</div>\n            </div>\n            <div class=\"item\">\n                <div class=\"name\" trans>Storage Used</div>\n                <div class=\"value\">{{entry.file_size | formattedFileSize}}</div>\n            </div>\n            <div class=\"item location-item\">\n                <div class=\"name\" trans>Location</div>\n                <div class=\"value\" (click)=\"openLocation()\">\n                    <mat-icon svgIcon=\"folder\"></mat-icon>\n                    <span class=\"text\">{{(parent$ | async)?.name || ('All Files') | trans}}</span>\n                </div>\n            </div>\n            <div class=\"item\" *ngIf=\"owner$ | async as owner\">\n                <div class=\"name\" trans>Owner</div>\n                <div class=\"value\">{{owner.display_name}}</div>\n            </div>\n            <div class=\"item\">\n                <div class=\"name\" trans>Last Updated</div>\n                <div class=\"value\">{{entry.updated_at | formattedDate}}</div>\n            </div>\n            <div class=\"item\">\n                <div class=\"name\" trans>Created</div>\n                <div class=\"value\">{{entry.created_at | formattedDate}}</div>\n            </div>\n            <entry-description-panel></entry-description-panel>\n        </div>\n    </ng-container>\n</ng-container>\n\n<ng-template #nothingSelected>\n    <div class=\"nothing-selected\">\n        <mat-icon svgIcon=\"selection-tool-custom\" class=\"icon\"></mat-icon>\n        <div class=\"text\" trans>Select file or folder to view its details.</div>\n    </div>\n</ng-template>\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { Observable } from 'rxjs';\nimport { DriveEntry } from '../../files/models/drive-entry';\nimport { OpenFolder } from '../../state/actions/commands';\nimport { DriveFolder } from '../../folders/models/driveFolder';\nimport { WorkspacesService } from '../../../../common/workspaces/workspaces.service';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'details-panel',\n    templateUrl: './details-panel.component.html',\n    styleUrls: ['./details-panel.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DetailsPanelComponent {\n    @Select(DriveState.selectedEntryOrActiveFolder) entry$: Observable<DriveEntry>;\n    @Select(DriveState.selectedEntryParent) parent$: Observable<DriveFolder>;\n    public owner$ = this.store.select(DriveState.selectedEntryOrActiveFolder)\n        .pipe(map(e => (e?.users || []).find(u => u.owns_entry)));\n\n    constructor(\n        private store: Store,\n        public workspaces: WorkspacesService,\n    ) {}\n\n    public openLocation() {\n        const parent = this.store.selectSnapshot(DriveState.selectedEntryParent);\n        this.store.dispatch(new OpenFolder(parent));\n    }\n}\n","<div class=\"header\">\n    <div class=\"title\">\n        <ng-container *ngIf=\"entry$ | async as entry; else defaultTitle\">\n            <ng-container *ngIf=\"entry.type; else defaultTitle\">\n                <file-icon [type]=\"entry.type\"></file-icon>\n                <div class=\"name\">{{entry.name}}</div>\n            </ng-container>\n        </ng-container>\n        <ng-template #defaultTitle>\n            <file-icon type=\"folder\"></file-icon>\n            <div class=\"name\">{{ ((activePage$ | async)?.viewName) | trans }}</div>\n        </ng-template>\n        <button mat-icon-button class=\"close-button\" (click)=\"close()\">\n            <mat-icon svgIcon=\"close\"></mat-icon>\n        </button>\n    </div>\n</div>\n<details-panel></details-panel>\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { DriveState} from '../state/drive-state';\nimport { Observable } from 'rxjs';\nimport { DriveEntry } from '../files/models/drive-entry';\nimport { ToggleDetailsSidebar } from '../state/actions/commands';\nimport { DrivePage } from '../state/models/drive-page';\n\n@Component({\n    selector: 'details-sidebar',\n    templateUrl: './details-sidebar.component.html',\n    styleUrls: ['./details-sidebar.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DetailsSidebarComponent {\n    @Select(DriveState.selectedEntryOrActiveFolder) entry$: Observable<DriveEntry>;\n    @Select(DriveState.activePage) activePage$: Observable<DrivePage>;\n\n    constructor(private store: Store) {}\n\n    public close() {\n        this.store.dispatch(new ToggleDetailsSidebar());\n    }\n}\n","import {\n    ContentChildren, Directive, ElementRef, NgZone, OnDestroy, OnInit, QueryList\n} from '@angular/core';\nimport { FilesGridItemComponent } from '../files/components/files-grid/files-grid-item/files-grid-item.component';\nimport { Store } from '@ngxs/store';\nimport { EntryDoubleTapped, EntryTapped } from '../state/actions/events';\nimport { DragEntryService } from './drag-entry.service';\nimport { DeselectAllEntries, SelectEntries } from '../state/actions/commands';\nimport { DriveState } from '../state/drive-state';\nimport { DriveEntry } from '../files/models/drive-entry';\nimport { FilesDragSelectService } from './files-drag-select.service';\nimport { DriveDomCacheService } from './drive-dom-cache.service';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n    selector: '[driveHammerInteractions]'\n})\nexport class DriveHammerInteractionsDirective implements OnInit, OnDestroy {\n    @ContentChildren(FilesGridItemComponent, {descendants: true}) gridItems: QueryList<FilesGridItemComponent>;\n\n    private hammerManager: HammerManager;\n    private panService: FilesDragSelectService|DragEntryService|null;\n    private subscriptions: Subscription[] = [];\n\n    constructor(\n        private zone: NgZone,\n        private el: ElementRef,\n        private store: Store,\n        private dragSelect: FilesDragSelectService,\n        private dragEntry: DragEntryService,\n        private domCache: DriveDomCacheService,\n    ) {}\n\n    ngOnInit() {\n        this.bindToHammer();\n\n        // disable \"pan\" on mobile as it will prevent scrolling\n        const sub = this.store.select(DriveState.isMobile).subscribe(isMobile => {\n            this.hammerManager.get('pan').set({\n                enable: !isMobile\n            });\n            this.hammerManager.get('doubletap').set({\n                enable: !isMobile\n            });\n        });\n\n        this.subscriptions.push(sub);\n    }\n\n    ngOnDestroy() {\n        this.dragSelect.removeSelectBox();\n        this.subscriptions.forEach(sub => sub.unsubscribe());\n    }\n\n    private bindToHammer() {\n        this.createHammerManager();\n        this.onPanStart();\n        this.onPan();\n        this.onPanEnd();\n        this.onTap();\n        this.onDoubleTap();\n    }\n\n    private createHammerManager() {\n        this.zone.runOutsideAngular(() => {\n            this.hammerManager = new Hammer.Manager(this.domCache.filesCont);\n\n            const tap = new Hammer.Tap(),\n                pan = new Hammer.Pan(),\n                doubleTap = new Hammer.Tap({ event: 'doubletap', taps: 2 });\n\n            this.hammerManager.add([tap, doubleTap, pan]);\n            this.hammerManager.get('doubletap').recognizeWith('tap');\n        });\n    }\n\n    private onPanStart() {\n        this.hammerManager.on('panstart', e => {\n            const gridElement = this.getEntryEl(e);\n\n            if (gridElement) {\n                this.panService = this.dragEntry;\n                const entry = this.getEntryByEl(gridElement),\n                    selectedEntries = this.store.selectSnapshot(DriveState.selectedEntries);\n\n                // select entry, if not already selected\n                if ( ! selectedEntries.find(en => en.id === entry.id)) {\n                    this.store.dispatch(new SelectEntries([this.getEntryByEl(gridElement)]));\n                }\n            } else {\n                this.panService = this.dragSelect;\n            }\n\n            this.panService.start(e);\n        });\n    }\n\n    private onPan() {\n        this.hammerManager.on('pan', e => {\n            if (this.panService) this.panService.move(e);\n        });\n    }\n\n    private onPanEnd() {\n        this.hammerManager.on('panend', () => {\n            if (this.panService) this.panService.end();\n        });\n    }\n\n    private onTap() {\n        this.hammerManager.on('tap', e => {\n            const entryEl = this.getEntryEl(e);\n            this.dragSelect.removeSelectBox();\n\n            if (entryEl) {\n                this.store.dispatch(new EntryTapped(this.getEntryByEl(entryEl), e.srcEvent.ctrlKey || e.srcEvent.metaKey));\n            } else if (e.target.closest('.files-container')) {\n                this.store.dispatch(new DeselectAllEntries());\n            }\n        });\n    }\n\n    private onDoubleTap() {\n        this.hammerManager.on('doubletap', e => {\n            const gridElement = this.getEntryEl(e);\n            if ( ! gridElement) return;\n\n            this.store.dispatch(new EntryDoubleTapped(\n                this.getEntryByEl(gridElement)\n            ));\n        });\n    }\n\n    private getEntryEl(e: HammerInput) {\n        return e.target.closest('.drive-entry') as HTMLElement;\n    }\n\n    private getEntryByEl(el: HTMLElement): DriveEntry {\n        const id = +el.dataset.id;\n        return this.store.selectSnapshot(DriveState.entries)\n            .find(curr => curr.id === +id);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { DriveDomCacheService } from './drive-dom-cache.service';\nimport { Store } from '@ngxs/store';\nimport { StoppedDragging } from '../state/actions/events';\nimport { StartedDragging } from '../state/actions/events';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DragEntryService {\n    constructor(\n        private domCache: DriveDomCacheService,\n        private store: Store\n    ) {}\n\n    public start(e: HammerInput) {\n        this.store.dispatch(new StartedDragging());\n    }\n\n    public move(e: HammerInput) {\n        this.domCache.dragPreview.style.top = e.center.y + 'px';\n        this.domCache.dragPreview.style.left = e.center.x + 'px';\n    }\n\n    public end() {\n        this.store.dispatch(new StoppedDragging());\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { EntriesSelectedViaDrag } from '../state/actions/events';\r\nimport { Store } from '@ngxs/store';\r\nimport { DriveDomCacheService } from './drive-dom-cache.service';\r\nimport { DriveState } from '../state/drive-state';\r\n\r\nconst GRID_ITEM_SELECTOR = '.drive-entry';\r\n\r\ntype AreaEdge = 'top'|'left'|'right'|'bottom'|false;\r\n\r\ninterface SelectorRect extends ClientRect {\r\n    height: number;\r\n    width: number;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FilesDragSelectService {\r\n    private selectBox: HTMLDivElement;\r\n    private initial = {x: 0, y: 0, scrollTop: 0};\r\n    private lastPanEvent: HammerInput|null;\r\n    private scrollListener: EventListener;\r\n    private gridElements: HTMLElement[];\r\n\r\n    constructor(\r\n        private store: Store,\r\n        private cache: DriveDomCacheService,\r\n    ) {}\r\n\r\n    public start(e: HammerInput) {\r\n        this.cacheClientRects();\r\n        this.createSelectBox();\r\n        this.bindScroll();\r\n        this.gridElements = this.getGridElements();\r\n\r\n        this.initial = {\r\n            ...this.hammerToRelative(e),\r\n            scrollTop: this.cache.scrollCont.scrollTop,\r\n        };\r\n\r\n        this.selectBox.style.top = this.initial.y + 'px';\r\n        this.selectBox.style.left = this.initial.x + 'px';\r\n\r\n\r\n    }\r\n\r\n    public move(e: HammerInput) {\r\n        this.lastPanEvent = e;\r\n        this.resizeBox(e);\r\n    }\r\n\r\n    public end() {\r\n        this.removeSelectBox();\r\n        this.dispatchSelectedAction();\r\n        this.unbindScroll();\r\n        this.gridElements = [];\r\n    }\r\n\r\n    public resizeBox(e?: HammerInput|null) {\r\n        if ( ! e) e = this.lastPanEvent;\r\n        if ( ! e || ! this.selectBox) return;\r\n        const newPos = this.getNewSelectorPosition(e);\r\n        this.scrollAndRepositionSelector(newPos);\r\n        this.selectIntersectingElements();\r\n    }\r\n\r\n    /**\r\n     * Calculate new position of selector box.\r\n     */\r\n    private getNewSelectorPosition(e: HammerInput): SelectorRect {\r\n        const current = this.hammerToRelative(e);\r\n\r\n        let tmp,\r\n            x1 = this.initial.x,\r\n            y1 = this.initial.y,\r\n            x2 = current.x,\r\n            y2 = current.y;\r\n\r\n        if (x1 > x2) { tmp = x2; x2 = x1; x1 = tmp; }\r\n        if (y1 > y2) { tmp = y2; y2 = y1; y1 = tmp; }\r\n\r\n        return {\r\n            width: x2 - x1,\r\n            height: y2 - y1,\r\n            top: y1,\r\n            right: x1 + (x2 - x1), // left + width\r\n            bottom: y1 + (y2 - y1), // top + height\r\n            left: x1,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Check if specified position intersects any container edge.\r\n     */\r\n    private reachedAreaEdge(newPos: ClientRect): AreaEdge {\r\n        const area = this.rectToRelative(this.cache.filesContRect);\r\n\r\n        if (newPos.left <= area.left) {\r\n            return 'left';\r\n        } else if (newPos.top <= area.top) {\r\n            return 'top';\r\n        } else if (newPos.right >= area.right) {\r\n            return 'right';\r\n        } else if (newPos.bottom >= area.bottom) {\r\n            return 'bottom';\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Auto scroll container (if needed) and reposition selector box.\r\n     */\r\n    private scrollAndRepositionSelector(newPos: SelectorRect) {\r\n        const area = this.cache.scrollCont,\r\n            edge = this.reachedAreaEdge(newPos);\r\n\r\n        // make sure top always starts at the same coordinates\r\n        // regardless of any scrolling done during dragging\r\n        newPos.top += this.initial.scrollTop;\r\n\r\n        // auto scroll when cursor reaches container edge\r\n        if (edge === 'bottom') {\r\n            area.scrollBy({top: 4});\r\n        } else if (edge === 'top') {\r\n            area.scrollBy({top: -4});\r\n        }\r\n\r\n        // scroll diff between drag start and now (auto scroll or mouse wheel)\r\n        const scrollDiff = this.cache.scrollCont.scrollTop - this.initial.scrollTop,\r\n            scrollValue = Math.abs(scrollDiff);\r\n\r\n        // top needs to be changed only if scroll direction is top\r\n        if (scrollDiff < 0) {\r\n            newPos.top -= scrollValue;\r\n        }\r\n\r\n        // height needs to be changed regardless of direction and method\r\n        newPos.height += scrollValue;\r\n\r\n        // check if we have reached bottom edge again, after scroll values are applied\r\n        const reachedBottom = (newPos.top + newPos.height) >= this.cache.scrollCont.scrollHeight;\r\n\r\n        // if any select area edge is reached, bail\r\n        if (edge === 'left' || edge === 'right' || reachedBottom) return;\r\n\r\n        // finally, reposition select box with scroll values applied\r\n        this.applyPosition(newPos);\r\n    }\r\n\r\n    /**\r\n     * Apply specified position to selector box.\r\n     */\r\n    private applyPosition(newPos: ClientRect) {\r\n        this.selectBox.style.width = newPos.width + 'px';\r\n        this.selectBox.style.height = newPos.height + 'px';\r\n        this.selectBox.style.left = newPos.left + 'px';\r\n        this.selectBox.style.top = newPos.top + 'px';\r\n    }\r\n\r\n    private selectIntersectingElements() {\r\n        const selectedBoxRect = this.selectBox.getBoundingClientRect();\r\n        this.gridElements.forEach((gridItem: HTMLElement) => {\r\n            const rect = gridItem.getBoundingClientRect();\r\n\r\n            // item intersects the select box\r\n            if (rect.top + rect.height > selectedBoxRect.top\r\n                && rect.left + rect.width > selectedBoxRect.left\r\n                && rect.bottom - rect.height < selectedBoxRect.bottom\r\n                && rect.right - rect.width < selectedBoxRect.right) {\r\n                gridItem.classList.add('selected');\r\n            } else {\r\n                gridItem.classList.remove('selected');\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Transform absolute container client rect into relative.\r\n     */\r\n    private rectToRelative(rect: ClientRect): ClientRect {\r\n        return {\r\n            width: rect.width,\r\n            height: rect.height,\r\n            left: rect.left - this.cache.filesContRect.left,\r\n            top: rect.top - this.cache.filesContRect.top,\r\n            right: rect.right - this.cache.filesContRect.left,\r\n            bottom: rect.bottom - this.cache.filesContRect.top\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Transform hammer absolute event to relative coordinates.\r\n     */\r\n    private hammerToRelative(e: HammerInput) {\r\n        return {\r\n            x: e.center.x - this.cache.filesContRect.left,\r\n            y: e.center.y - this.cache.filesContRect.top\r\n        };\r\n    }\r\n\r\n    private dispatchSelectedAction() {\r\n        const ids = this.gridElements\r\n            .filter(el => el.classList.contains('selected'))\r\n            .map(el => +el.dataset.id);\r\n\r\n        const entries = this.store.selectSnapshot(DriveState.entries)\r\n            .filter(entry => ids.indexOf(entry.id) > -1);\r\n\r\n        this.store.dispatch(new EntriesSelectedViaDrag(entries));\r\n    }\r\n\r\n    private createSelectBox() {\r\n        this.selectBox = document.createElement('div');\r\n        this.selectBox.classList.add('files-select-box');\r\n        this.cache.filesCont.appendChild(this.selectBox);\r\n    }\r\n\r\n    public removeSelectBox() {\r\n        if ( ! this.selectBox) return;\r\n        this.selectBox.remove();\r\n        this.selectBox = null;\r\n    }\r\n\r\n    public dragging() {\r\n        return !!this.selectBox;\r\n    }\r\n\r\n    private cacheClientRects() {\r\n        this.cache.filesContRect = this.cache.filesCont.getBoundingClientRect();\r\n        this.cache.scrollContRect = this.cache.scrollCont.getBoundingClientRect();\r\n    }\r\n\r\n    private getGridElements(): HTMLElement[] {\r\n        return Array.from(this.cache.filesCont.querySelectorAll(GRID_ITEM_SELECTOR));\r\n    }\r\n\r\n    private bindScroll() {\r\n        this.scrollListener = () => this.resizeBox();\r\n        this.cache.scrollCont.addEventListener('scroll', this.scrollListener);\r\n    }\r\n\r\n    private unbindScroll() {\r\n        this.cache.scrollCont.removeEventListener('scroll', this.scrollListener);\r\n    }\r\n}\r\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, HostBinding } from '@angular/core';\nimport { DriveEntry } from '../../../models/drive-entry';\n\n@Component({\n    selector: 'files-grid-item',\n    templateUrl: './files-grid-item.component.html',\n    styleUrls: ['./files-grid-item.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FilesGridItemComponent {\n    @HostBinding('class.drive-entry') driveEntry = true;\n    @Input() entry: DriveEntry;\n\n    @HostBinding('attr.data-id') get fileId() {\n        return this.entry.id;\n    }\n}\n","import { AfterViewInit, Directive, ElementRef } from '@angular/core';\nimport { Select } from '@ngxs/store';\nimport { DriveState } from '../state/drive-state';\nimport { Observable } from 'rxjs';\n\n@Directive({\n    selector: '[toggleSelectedClass]'\n})\nexport class ToggleSelectedClassDirective implements AfterViewInit {\n    @Select(DriveState.selectedEntryIds) selectedEntryIds: Observable<number[]>;\n\n    constructor(private el: ElementRef) {}\n\n    ngAfterViewInit() {\n        this.selectedEntryIds.subscribe(ids => {\n            const els = this.el.nativeElement.querySelectorAll('.drive-entry');\n            if ( ! els.length) return;\n\n            Array.from(els).forEach((el: HTMLElement) => {\n                const selected = ids.indexOf(parseInt(el.dataset.id, 10)) > -1;\n\n                if (selected) {\n                    el.classList.add('selected');\n                } else {\n                    el.classList.remove('selected');\n                }\n            });\n        });\n    }\n}\n","<div class=\"preview-container\">\n    <file-thumbnail class=\"preview\" [file]=\"entry\"></file-thumbnail>\n</div>\n<figcaption class=\"files-grid-item-footer\">\n    <file-icon [type]=\"entry.type\"></file-icon>\n    <div class=\"text\">{{entry.name}}</div>\n</figcaption>\n","import { UploadedFile } from '../uploaded-file';\r\n\r\nexport async function readUploadedFolders(entries: WebKitEntry[]): Promise<UploadedFile[]> {\r\n    let files = [];\r\n\r\n    for (const key in entries) {\r\n        const entry = entries[key];\r\n\r\n        if ( ! entry.isDirectory) {\r\n            files.push(await transformFileEntry(entry as WebKitFileEntry));\r\n        } else {\r\n            files = files.concat(await readDirRecursive(entry as WebKitDirectoryEntry));\r\n        }\r\n    }\r\n\r\n    return files;\r\n}\r\n\r\nasync function readDirRecursive(entry: WebKitDirectoryEntry, files = []) {\r\n    const entries = await readEntries(entry);\r\n\r\n    for (const key in entries) {\r\n        const childEntry = entries[key];\r\n\r\n        if (childEntry.isDirectory) {\r\n            await readDirRecursive(childEntry as WebKitDirectoryEntry, files);\r\n        } else {\r\n            files.push(await transformFileEntry(childEntry as WebKitFileEntry));\r\n        }\r\n    }\r\n\r\n    return files;\r\n}\r\n\r\nfunction readEntries(dir: WebKitDirectoryEntry): Promise<WebKitEntry[]> {\r\n    return new Promise(resolve => {\r\n       readEntriesRecursive(dir.createReader(), resolve);\r\n    });\r\n}\r\n\r\nfunction readEntriesRecursive(reader: WebKitDirectoryReader, resolve, allEntries: WebKitEntry[] = []) {\r\n    reader.readEntries(entries => {\r\n        if (entries.length) {\r\n            allEntries = allEntries.concat(entries);\r\n            readEntriesRecursive(reader, resolve, allEntries);\r\n        } else {\r\n            resolve(allEntries);\r\n        }\r\n    });\r\n}\r\n\r\nfunction transformFileEntry(entry: WebKitFileEntry) {\r\n    return new Promise(resolve => {\r\n        entry.file((file: any) => {\r\n            resolve(new UploadedFile(file as File, entry.fullPath));\r\n        });\r\n    });\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { openUploadWindow } from '../utils/open-upload-window';\r\nimport { UploadedFile } from '../uploaded-file';\r\nimport { readUploadedFolders } from '../utils/read-uploaded-folders';\r\nimport { UploadInputConfig } from '@common/uploads/upload-input-config';\r\n\r\n@Directive({\r\n    selector: '[fileDropzone]',\r\n})\r\nexport class UploadDropzoneDirective implements OnInit, OnDestroy {\r\n    @Input() disableDropzoneClick = false;\r\n    @Input() disableDropzone = false;\r\n    @Input() clickButton: ElementRef;\r\n    @Input('fileDropzone') uploadConfig: UploadInputConfig = {};\r\n    @Output() filesDropped: EventEmitter<UploadedFile[]> = new EventEmitter();\r\n\r\n    constructor(protected el: ElementRef) {}\r\n\r\n    ngOnInit() {\r\n        const el = this.el.nativeElement;\r\n        el.addEventListener('dragenter', (e) => this.handleDragEnter(e));\r\n        el.addEventListener('dragover', (e) => this.handleDragOver(e));\r\n        el.addEventListener('dragleave', (e) => this.handleDragLeave(e));\r\n        el.addEventListener('drop', (e) => this.handleDrop(e));\r\n\r\n        if ( ! this.disableDropzoneClick) {\r\n            const trigger = this.clickButton ? this.clickButton.nativeElement : el;\r\n            trigger.addEventListener('click', () => this.handleClick());\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.removeClassesFromDropzone();\r\n    }\r\n\r\n    protected handleClick() {\r\n        if (this.disableDropzone) return;\r\n        openUploadWindow(this.uploadConfig).then(files => {\r\n            this.emitUploadEvent(files);\r\n        });\r\n    }\r\n\r\n    public handleDragEnter(e) {\r\n        if (this.dropzoneDisabled(e)) return;\r\n        this.el.nativeElement.classList.add('file-over-dropzone');\r\n    }\r\n\r\n    public handleDragOver(e) {\r\n        if (e.preventDefault) e.preventDefault();\r\n        e.dataTransfer.dropEffect = this.dropzoneDisabled(e) ? 'none' : 'move';\r\n        return false;\r\n    }\r\n\r\n    public handleDragLeave(e: MouseEvent) {\r\n        const newEl = document.elementFromPoint(e.clientX, e.clientY);\r\n        if (this.el.nativeElement.contains(newEl)) return;\r\n        this.removeClassesFromDropzone();\r\n    }\r\n\r\n    public async handleDrop(e) {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        this.removeClassesFromDropzone();\r\n        if (this.dropzoneDisabled(e) || !e.dataTransfer.items) return;\r\n\r\n        const items = Array.from(e.dataTransfer.items)\r\n            .filter((item: DataTransferItem) => item.kind === 'file')\r\n            .map((item: DataTransferItem) => {\r\n                return item.webkitGetAsEntry();\r\n            });\r\n\r\n        if (items.length) {\r\n            this.emitUploadEvent(await readUploadedFolders(items));\r\n        }\r\n    }\r\n\r\n    protected emitUploadEvent(files: UploadedFile[]) {\r\n        this.filesDropped.emit(files);\r\n    }\r\n\r\n    protected removeClassesFromDropzone() {\r\n        this.el.nativeElement.classList.remove('file-over-dropzone');\r\n    }\r\n\r\n    protected dropzoneDisabled(e: DragEvent) {\r\n        const hasFiles = e.dataTransfer.types.find(type => type.toLowerCase() === 'files');\r\n        return this.disableDropzone || ! hasFiles;\r\n    }\r\n}\r\n","import { Directive, ElementRef, NgZone } from '@angular/core';\nimport { LoadMoreEntries } from '../state/actions/commands';\nimport { Store } from '@ngxs/store';\nimport { DriveState } from '../state/drive-state';\nimport { InfiniteScroll } from '@common/core/ui/infinite-scroll/infinite.scroll';\n\n@Directive({\n    selector: '[driveInfiniteScroll]'\n})\nexport class DriveInfiniteScrollDirective extends InfiniteScroll {\n    constructor(\n        protected el: ElementRef,\n        protected store: Store,\n        protected zone: NgZone,\n    ) {\n        super();\n    }\n\n    protected loadMoreItems() {\n        const page = this.store.selectSnapshot(DriveState.currentPage) + 1;\n        this.store.dispatch(new LoadMoreEntries({page}));\n    }\n\n    protected isLoading(): boolean {\n        return this.store.selectSnapshot(DriveState.loading);\n    }\n\n    protected canLoadMore(): boolean {\n        return this.store.selectSnapshot(DriveState.canLoadMoreEntries);\n    }\n}\n","import {Directive, ElementRef, NgZone, OnDestroy, OnInit} from '@angular/core';\r\nimport {fromEvent, Subscription} from 'rxjs';\r\nimport {debounceTime} from 'rxjs/operators';\r\n\r\n@Directive()\r\nexport abstract class InfiniteScroll implements OnInit, OnDestroy {\r\n    protected scrollSub: Subscription;\r\n    protected el: ElementRef<HTMLElement|Document>;\r\n    protected abstract zone: NgZone;\r\n\r\n    public threshold: number | string = 50;\r\n\r\n    ngOnInit() {\r\n        if ( ! this.el) {\r\n            this.el = new ElementRef(document);\r\n        }\r\n        this.zone.runOutsideAngular(() => {\r\n            this.scrollSub = fromEvent(this.getScrollContainer(), 'scroll', {capture: true, passive: true})\r\n                .pipe(debounceTime(20))\r\n                .subscribe((e: Event) => this.onScroll(e.target as HTMLElement));\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.scrollSub && this.scrollSub.unsubscribe();\r\n    }\r\n\r\n    protected getScrollContainer() {\r\n        return this.el ? this.el.nativeElement : document;\r\n    }\r\n\r\n    protected onScroll(target: HTMLElement) {\r\n        if (!target || (target !== this.el.nativeElement) || !this.canLoadMore() || this.isLoading()) return;\r\n\r\n        const offset = parseInt(this.threshold as string),\r\n            targetCanScroll = this.el && (typeof target.scrollTop !== 'undefined');\r\n\r\n        const currentScroll = targetCanScroll ?\r\n            target.scrollTop + target.offsetHeight :\r\n            window.scrollY + window.innerHeight;\r\n\r\n        const heightWithoutOffset = targetCanScroll ?\r\n            target.scrollHeight - offset :\r\n            document.documentElement.scrollHeight - offset;\r\n\r\n        if (currentScroll >= heightWithoutOffset) {\r\n            this.zone.run(() => {\r\n                this.loadMoreItems();\r\n            });\r\n        }\r\n    }\r\n\r\n    protected abstract loadMoreItems();\r\n\r\n    protected abstract canLoadMore(): boolean;\r\n\r\n    protected abstract isLoading(): boolean;\r\n}\r\n","import { ChangeDetectionStrategy, Component, HostBinding, Inject, Optional, ViewEncapsulation } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { DriveEntry } from '../../../files/models/drive-entry';\r\nimport { CONTEXT_MENU_DATA } from '@common/core/ui/context-menu/context-menu-data';\r\nimport { EntryContextMenuOpened } from '../../../state/actions/events';\r\nimport { CurrentUser } from '@common/auth/current-user';\r\nimport { DeselectAllEntries } from '../../../state/actions/commands';\r\n\r\nexport interface FileContextMenuData {\r\n    entry: DriveEntry;\r\n}\r\n\r\n@Component({\r\n    selector: 'drive-context-menu',\r\n    templateUrl: './drive-context-menu.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class DriveContextMenuComponent {\r\n    @HostBinding('class.context-menu') contextMenu = true;\r\n\r\n    constructor(\r\n        @Optional() @Inject(CONTEXT_MENU_DATA) public data: FileContextMenuData,\r\n        protected store: Store,\r\n        protected currentUser: CurrentUser\r\n    ) {\r\n        if (this.data && this.data.entry) {\r\n            this.store.dispatch(new EntryContextMenuOpened(this.data.entry));\r\n        } else {\r\n            this.store.dispatch(new DeselectAllEntries());\r\n        }\r\n    }\r\n}\r\n","<context-actions-container></context-actions-container>","<skeleton *ngIf=\"loading$ | async; else breadcrumbs\" @fadeOut></skeleton>\r\n<ng-template #breadcrumbs>\r\n    <div class=\"breadcrumb-container\" @fadeIn>\r\n        <ng-container *ngFor=\"let item of breadcrumb | async; last as last; first as first;\">\r\n            <div class=\"breadcrumb-item\" (click)=\"last ? openContextMenu(item, button) : openPage(item)\" [class.no-action]=\"!item.hasActions\" #button>\r\n                <span class=\"name\">{{first ? (item.viewName | trans) : item.viewName}}</span>\r\n                <mat-icon svgIcon=\"arrow-drop-down\" *ngIf=\"last && item.hasActions\"></mat-icon>\r\n            </div>\r\n            <mat-icon class=\"separator\" svgIcon=\"keyboard-arrow-right\" *ngIf=\"!last\"></mat-icon>\r\n        </ng-container>\r\n    </div>\r\n</ng-template>\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { DriveEntryApiService } from '../../drive-entry-api.service';\nimport { Store } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { BehaviorSubject, combineLatest, Subscription } from 'rxjs';\nimport { Translations } from '@common/core/translations/translations.service';\nimport {\n    ContextMenu, ContextMenuParams\n} from '@common/core/ui/context-menu/context-menu.service';\nimport { DriveContextMenuComponent } from '../../context-actions/components/drive-context-menu/drive-context-menu.component';\nimport { distinctUntilChanged, filter, take } from 'rxjs/operators';\nimport { OpenFolder } from '../../state/actions/commands';\nimport {\n    DRIVE_PAGE_NAMES, DrivePage, FolderPage, SHARES_PAGE,\n} from '../../state/models/drive-page';\nimport { Navigate } from '@ngxs/router-plugin';\nimport { DriveFolder } from '../../folders/models/driveFolder';\nimport { SKELETON_ANIMATIONS } from '../../../../common/core/ui/skeleton/skeleton-animations';\nimport { WorkspacesService } from '../../../../common/workspaces/workspaces.service';\n\n@Component({\n    selector: 'entry-breadcrumbs',\n    templateUrl: './entry-breadcrumbs.component.html',\n    styleUrls: ['./entry-breadcrumbs.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [SKELETON_ANIMATIONS],\n})\nexport class EntryBreadcrumbsComponent implements OnInit, OnDestroy {\n    public breadcrumb: BehaviorSubject<DrivePage[]> = new BehaviorSubject([]);\n    public loading$ = new BehaviorSubject<boolean>(true);\n    private activePageSub: Subscription;\n\n    constructor(\n        private entriesApi: DriveEntryApiService,\n        private i18n: Translations,\n        private contextMenu: ContextMenu,\n        private store: Store,\n        private workspaces: WorkspacesService,\n    ) {}\n\n    ngOnInit() {\n        // wait until entries and user folders are loaded\n        combineLatest([\n            this.store.select(DriveState.meta),\n            this.store.select(DriveState.userFoldersLoaded),\n            this.workspaces.activeWorkspace$,\n        ]).pipe(\n            filter(([meta, foldersLoaded, workspace]) => meta.currentPage && foldersLoaded && !!workspace),\n            take(1)\n        ).subscribe(() => {\n            this.loading$.next(false);\n            this.bindToActivePage();\n        });\n    }\n\n    ngOnDestroy() {\n        this.activePageSub && this.activePageSub.unsubscribe();\n    }\n\n    public openPage(page: DrivePage) {\n        if (page.folder) {\n            this.store.dispatch(new OpenFolder(page.folder));\n        } else {\n            this.store.dispatch(new Navigate(['/drive/shares']));\n        }\n    }\n\n    public openContextMenu(item: DrivePage, origin: HTMLElement) {\n        let params = {originX: 'start', overlayX: 'start'} as ContextMenuParams;\n        switch (item.name) {\n            case DRIVE_PAGE_NAMES.TRASH:\n                return this.contextMenu.open(DriveContextMenuComponent, origin, params);\n            case DRIVE_PAGE_NAMES.FOLDER:\n                params = {data: {entry: this.store.selectSnapshot(DriveState.activeFolder)}, ...params};\n                return this.contextMenu.open(DriveContextMenuComponent, origin, params);\n        }\n    }\n\n    private generateBreadCrumb(page: DrivePage) {\n        const breadcrumbs = [this.getRootBreadcrumb(page)];\n\n        if (page.folder?.id) {\n            const folderPath = this.getBreadcrumbForFolder(page.folder);\n            breadcrumbs.push(...folderPath);\n        }\n        this.breadcrumb.next(breadcrumbs);\n    }\n\n    private getBreadcrumbForFolder(folder: DriveFolder) {\n        const allFolders = this.store.selectSnapshot(DriveState.flatFolders) || [];\n        const ids = (folder.path ? folder.path.split('/') : [folder.id]) as number[];\n        return ids.map(id => {\n            const pathFolder = folder.id === +id ? folder : allFolders.find(f => f.id === +id);\n            if (pathFolder) {\n                return new FolderPage(pathFolder);\n            }\n        }).filter(f => !!f);\n    }\n\n    private getRootBreadcrumb(page: DrivePage) {\n        if (page.name === DRIVE_PAGE_NAMES.FOLDER) {\n            const workspaceId = this.workspaces.activeId$.value;\n            const ROOT_FOLDER_PAGE = new FolderPage(this.store.selectSnapshot(DriveState.rootFolder));\n            if (workspaceId && page.folder.workspace_id === workspaceId) {\n                return {...ROOT_FOLDER_PAGE, viewName: this.workspaces.activeWorkspace$.value.name};\n            } else {\n                return !this.store.selectSnapshot(DriveState.userOwnsActiveFolder) ? SHARES_PAGE : ROOT_FOLDER_PAGE;\n            }\n        } else {\n            return page;\n        }\n    }\n\n    private bindToActivePage() {\n        this.activePageSub = combineLatest([\n            this.store.select(DriveState.activePage),\n            this.store.select(DriveState.flatFolders),\n        ]).pipe(\n            distinctUntilChanged(),\n            filter(([activePage]) => {\n                // wait until folder data is fully loaded\n                return activePage.name === DRIVE_PAGE_NAMES.FOLDER ? activePage.folder?.name : true;\n            })\n        ).subscribe(([activePage]) => {\n            this.generateBreadCrumb(activePage);\n        });\n    }\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'drive-toolbar',\n    templateUrl: './drive-toolbar.component.html',\n    styleUrls: ['./drive-toolbar.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DriveToolbarComponent {\n}\n","<entry-breadcrumbs></entry-breadcrumbs>\r\n","export const AVAILABLE_SORTS: DriveSortOption[] = [\r\n    {name: 'file_size', viewName: 'Size'},\r\n    {name: 'name', viewName: 'Name'},\r\n    {name: 'updated_at', viewName: 'Last Modified'},\r\n    {name: 'created_at', viewName: 'Upload Date'},\r\n    {name: 'type', viewName: 'Type'},\r\n    {name: 'extension', viewName: 'Extension'},\r\n];\r\n\r\nexport interface DriveSortOption {\r\n    name: SortColumn;\r\n    viewName: string;\r\n}\r\n\r\nexport type SortColumn = 'file_size' | 'name' | 'updated_at' | 'created_at' | 'type' | 'extension';\r\nexport type SortDirection = 'desc'|'asc';\r\n\r\nexport interface SortValue {\r\n    column: SortColumn;\r\n    direction: SortDirection;\r\n}\r\n","<ng-container *ngIf=\"sort$ | async as sortValue\">\n    <span class=\"label\" trans>Sort by</span>\n    <button class=\"no-style\" [matMenuTriggerFor]=\"menu\" [disabled]=\"btnDisabled\">\n        <span class=\"sort-button-content\">\n            <span>{{getSortViewName(sortValue.column) | trans}}</span>\n            <mat-icon svgIcon=\"keyboard-arrow-down\" class=\"arrow-icon\"></mat-icon>\n        </span>\n        <mat-icon svgIcon=\"sort\" class=\"mobile-sort-button-content\"></mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\" class=\"drive-sort-menu\">\n        <div class=\"title\" trans>Direction</div>\n        <button mat-menu-item (click)=\"changeDirection('asc')\" [class.active]=\"sortValue.direction === 'asc'\">\n            <mat-icon svgIcon=\"check\"></mat-icon>\n            <span trans>Ascending</span>\n        </button>\n        <button mat-menu-item (click)=\"changeDirection('desc')\" [class.active]=\"sortValue.direction === 'desc'\">\n            <mat-icon svgIcon=\"check\"></mat-icon>\n            <span trans>Descending</span>\n        </button>\n        <div class=\"separator\"></div>\n        <div class=\"title\" trans>Sort By</div>\n        <button mat-menu-item *ngFor=\"let sort of availableSorts\" (click)=\"changeSort(sort)\" [class.active]=\"sortValue.column === sort.name\">\n            <mat-icon svgIcon=\"check\"></mat-icon>\n            <span trans>{{sort.viewName}}</span>\n        </button>\n    </mat-menu>\n</ng-container>","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { AVAILABLE_SORTS, DriveSortOption, SortColumn, SortDirection, SortValue } from '../../entries/available-sorts';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\n\nconst DEFAULT_VALUE: SortValue = {column: 'updated_at', direction: 'desc'};\n\n@Component({\n    selector: 'entries-sort-button',\n    templateUrl: './entries-sort-button.component.html',\n    styleUrls: ['./entries-sort-button.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: EntriesSortButtonComponent,\n        multi: true,\n    }]\n})\nexport class EntriesSortButtonComponent implements ControlValueAccessor {\n    @Input() btnDisabled = false;\n    public availableSorts = AVAILABLE_SORTS;\n    public propagateChange: Function;\n\n    public sort$: BehaviorSubject<SortValue> = new BehaviorSubject(DEFAULT_VALUE);\n\n    public changeSort(column: DriveSortOption) {\n        this.sort$.next({...this.sort$.value, column: column.name});\n        this.propagateChange(this.sort$.value);\n    }\n\n    public changeDirection(direction: SortDirection) {\n        this.sort$.next({...this.sort$.value, direction});\n        this.propagateChange(this.sort$.value);\n    }\n\n    public getSortViewName(column: SortColumn): string {\n        return this.availableSorts.find(sort => sort.name === column).viewName;\n    }\n\n    public writeValue(value: SortValue) {\n        this.sort$.next(value || DEFAULT_VALUE);\n    }\n\n    public registerOnChange(fn: Function) {\n        this.propagateChange = fn;\n    }\n\n    public registerOnTouched() {}\n}\n","<ng-container *ngFor=\"let action of actions$ | async\">\n    <ng-container *ngIf=\"action.visible()\">\n        <div class=\"separator\" *ngIf=\"!compact && action.separatorBefore\"></div>\n\n        <button class=\"context-menu-item\" *ngIf=\"!compact\" (click)=\"action.execute()\">\n            <mat-icon [svgIcon]=\"action.icon\"></mat-icon>\n            <span trans>{{action.viewName}}</span>\n        </button>\n\n        <button mat-icon-button (click)=\"action.execute()\" [matTooltip]=\"action.viewName | trans\" *ngIf=\"compact && action.showInCompact\">\n            <mat-icon [svgIcon]=\"action.icon\"></mat-icon>\n        </button>\n    </ng-container>\n</ng-container>\n\n<button mat-icon-button (click)=\"openMoreActionsMenu()\" [matTooltip]=\"'More actions' | trans\" #moreActionsButton *ngIf=\"compact && hasMoreActions$ | async\">\n    <mat-icon svgIcon=\"more-vert\"></mat-icon>\n</button>\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    HostBinding,\n    Injector,\n    Input,\n    OnDestroy,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { DriveState } from '../../../state/drive-state';\nimport { Store } from '@ngxs/store';\nimport { DriveContextAction } from '../../types/drive-context-action';\nimport { TrashActions } from '../../actions/trash-actions';\nimport { SharesActions } from '../../actions/shares-actions';\nimport { FolderActions } from '../../actions/folder-actions';\nimport { EntryActions } from '../../actions/entry-actions';\nimport { BehaviorSubject, combineLatest, Subscription } from 'rxjs';\nimport { DRIVE_PAGE_NAMES, DrivePage } from '../../../state/models/drive-page';\nimport { DriveContextMenuComponent } from '../drive-context-menu/drive-context-menu.component';\nimport { ContextMenu } from '@common/core/ui/context-menu/context-menu.service';\nimport { TrashPageActions } from '../../actions/trash-page-actions';\nimport { DriveEntry } from '../../../files/models/drive-entry';\n\n@Component({\n    selector: 'context-actions-container',\n    templateUrl: './context-actions-container.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContextActionsContainerComponent implements OnDestroy {\n    @ViewChild('moreActionsButton', { read: ElementRef }) moreActionsButton: ElementRef;\n    @Input() @HostBinding('class.compact') compact = false;\n\n    // whether there are more actions to display in \"compact\" mode\n    public hasMoreActions$ = new BehaviorSubject(false);\n    public actions$: BehaviorSubject<DriveContextAction[]> = new BehaviorSubject([]);\n    private subscription: Subscription;\n\n    constructor(\n        private store: Store,\n        private injector: Injector,\n        private contextMenu: ContextMenu,\n    ) {\n        this.subscription = combineLatest([\n            this.store.select(DriveState.activePage),\n            this.store.select(DriveState.selectedEntry),\n        ]).subscribe(combined => {\n            this.setActions(combined[0], combined[1]);\n            this.hasMoreActions$.next(this.actions$.value.some(action => !action.showInCompact));\n        });\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n\n    public openMoreActionsMenu() {\n        const entry = this.store.selectSnapshot(DriveState.selectedEntryOrActiveFolder);\n        this.contextMenu.open(\n            DriveContextMenuComponent,\n            this.moreActionsButton.nativeElement,\n            {data: {entry}}\n        );\n    }\n\n    private setActions(activePage: DrivePage, selectedEntry: DriveEntry) {\n        // user clicked on \"trash\" page name in breadcrumb\n        if (activePage.name === DRIVE_PAGE_NAMES.TRASH && !selectedEntry) {\n            this.actions$.next(this.injector.get(TrashPageActions).getActions());\n\n        // context menu opened for selected entries while in \"trash\" or \"shares\" page\n        } else if (activePage.name === 'trash' && selectedEntry) {\n            this.actions$.next(this.injector.get(TrashActions).getActions());\n        } else if (activePage.name === 'shares' && selectedEntry) {\n            this.setActionsForEntry();\n        // context menu opened by clicking on empty space in folder view or clicking on root folder breadcrumb\n        } else if (activePage.folder && !selectedEntry?.id) {\n            this.actions$.next(this.injector.get(FolderActions).getActions());\n\n        // show entries context menu for \"starred\" page\n        } else if (activePage.name === 'starred' || activePage.name === 'recent') {\n            this.actions$.next(this.injector.get(EntryActions).getActions());\n\n        // default to entry actions if can't match to anything else\n        } else if (selectedEntry) {\n            this.setActionsForEntry();\n        } else {\n            this.actions$.next([]);\n        }\n    }\n\n    private setActionsForEntry() {\n        const entries = this.store.selectSnapshot(DriveState.selectedEntries).length\n            ? this.store.selectSnapshot(DriveState.selectedEntries)\n            : [this.store.selectSnapshot(DriveState.activeFolder)];\n        let isOwner = this.store.selectSnapshot(DriveState.selectedEntries).length\n            ? this.store.selectSnapshot(DriveState.userOwnsSelectedEntries)\n            : this.store.selectSnapshot(DriveState.userOwnsActiveFolder);\n        if (this.store.selectSnapshot(DriveState.activeWorkspace)?.id) {\n            isOwner = entries.every(e => e.workspace_id === this.store.selectSnapshot(DriveState.activeWorkspace)?.id);\n        }\n        if (isOwner) {\n            this.actions$.next(this.injector.get(EntryActions).getActions());\n        } else {\n            this.actions$.next(this.injector.get(SharesActions).getActions());\n        }\n    }\n}\n","import {\n    ChangeDetectionStrategy, Component, OnInit, ViewEncapsulation\n} from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { ReloadPageEntries } from '../../state/actions/commands';\nimport { SortColumn, SortValue } from '../../entries/available-sorts';\nimport { DriveState } from '../../state/drive-state';\nimport { combineLatest, Observable } from 'rxjs';\nimport { DrivePage } from '../../state/models/drive-page';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n    selector: 'file-list-header',\n    templateUrl: './file-list-header.component.html',\n    styleUrls: ['./file-list-header.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FileListHeaderComponent implements OnInit {\n    @Select(DriveState.sortColumn) sortColumn$: Observable<SortColumn>;\n    @Select(DriveState.activePage) activePage$: Observable<DrivePage>;\n\n    public sortFormControl = new FormControl({\n        column: this.store.selectSnapshot(DriveState.sortColumn),\n        direction: this.store.selectSnapshot(DriveState.sortDirection),\n    });\n\n    constructor(private store: Store) {}\n\n    ngOnInit() {\n        combineLatest([\n            this.store.select(DriveState.sortColumn),\n            this.store.select(DriveState.sortDirection),\n        ]).subscribe(([column, direction]) => {\n            this.sortFormControl.setValue({column, direction}, {emitEvent: false});\n        });\n        this.sortFormControl.valueChanges.subscribe((sort: SortValue) => {\n            this.store.dispatch(new ReloadPageEntries(\n                {orderBy: sort.column, orderDir: sort.direction}\n            ));\n        });\n    }\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, ElementRef } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { Observable } from 'rxjs';\nimport { ContextMenu } from '@common/core/ui/context-menu/context-menu.service';\nimport { DriveContextMenuComponent } from '../../context-actions/components/drive-context-menu/drive-context-menu.component';\nimport { ToggleDetailsSidebar, SetViewMode } from '../../state/actions/commands';\n\n@Component({\n    selector: 'toolbar-actions',\n    templateUrl: './toolbar-actions.component.html',\n    styleUrls: ['./toolbar-actions.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToolbarActionsComponent {\n    @ViewChild('moreActionsButton', { read: ElementRef }) moreActionsButton: ElementRef;\n    @Select(DriveState.anythingSelected) anythingSelected: Observable<boolean>;\n    @Select(DriveState.viewMode) viewMode: Observable<'list'|'grid'>;\n    @Select(DriveState.detailsOpen) activityOpen: Observable<boolean>;\n    @Select(DriveState.multipleEntriesSelected) multipleEntriesSelected$: Observable<boolean>;\n\n    constructor(\n        protected store: Store,\n        protected contextMenu: ContextMenu,\n    ) {}\n\n    public toggleViewMode() {\n        const current = this.store.selectSnapshot(DriveState.viewMode);\n        this.store.dispatch(new SetViewMode(current === 'list' ? 'grid' : 'list'));\n    }\n\n    public ToggleDetails() {\n        this.store.dispatch(new ToggleDetailsSidebar());\n    }\n\n    public openMoreActionsMenu() {\n        const entry = this.store.selectSnapshot(DriveState.selectedEntry);\n        this.contextMenu.open(\n            DriveContextMenuComponent,\n            this.moreActionsButton.nativeElement,\n            {data: {entry}}\n        );\n    }\n}\n","<context-actions-container [compact]=\"true\"></context-actions-container>\n\n<div class=\"always-visible-actions\">\n    <button mat-icon-button (click)=\"toggleViewMode()\">\n        <mat-icon [svgIcon]=\"(viewMode | async) === 'list' ? 'view-list' : 'view-module'\"></mat-icon>\n    </button>\n    <button mat-icon-button (click)=\"ToggleDetails()\" [class.active]=\"activityOpen | async\">\n        <mat-icon svgIcon=\"info\"></mat-icon>\n    </button>\n</div>\n\n","<div class=\"sort-header\">\r\n   <entries-sort-button [btnDisabled]=\"(activePage$ | async)?.disableSort\" [formControl]=\"sortFormControl\"></entries-sort-button>\r\n</div>\r\n<toolbar-actions></toolbar-actions>","<material-navbar [showToggleButton]=\"(isMobile$ | async)\" (toggleButtonClick)=\"toggleSidebar()\" menuPosition=\"drive-navbar\">\n    <main-searchbar class=\"nav-searchbar\"></main-searchbar>\n</material-navbar>\n<mat-sidenav-container>\n    <mat-sidenav [mode]=\"(isMobile$ | async) ? 'over' : 'side'\" [opened]=\"sidebarOpen$ | async\" class=\"left-sidebar\">\n        <sidebar></sidebar>\n    </mat-sidenav>\n    <mat-sidenav [opened]=\"activityOpen$ | async\" [mode]=\"(isMobile$ | async) ? 'over' : 'side'\" position=\"end\" class=\"right-sidebar\">\n        <details-sidebar></details-sidebar>\n    </mat-sidenav>\n    <mat-sidenav-content driveHammerInteractions [class.has-rek]=\"settings.has('ads.drive')\">\n        <ad-host slot=\"ads.drive\"></ad-host>\n        <ng-container *ngIf=\"(activePage$ | async).name !== 'workspaces'\">\n            <drive-toolbar></drive-toolbar>\n            <file-list-header></file-list-header>\n        </ng-container>\n        <div class=\"loading-overlay-container\">\n            <div\n                class=\"files-container\"\n                #filesContainer\n                #scrollContainer\n                toggleSelectedClass\n                [class.dragging]=\"dragging | async\"\n                contextMenu=\"entry\"\n                [disableContextMenu]=\"!(canUpload$ | async)\"\n                fileDropzone\n                [disableDropzoneClick]=\"true\"\n                [disableDropzone]=\"!(canUpload$ | async)\"\n                driveInfiniteScroll\n                (filesDropped)=\"uploadFiles($event)\"\n            >\n                <router-outlet></router-outlet>\n            </div>\n            <loading-indicator [isVisible]=\"loading$ | async\" class=\"overlay\"></loading-indicator>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n\n<entry-drag-preview></entry-drag-preview>\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewEncapsulation,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Select, Store } from '@ngxs/store';\nimport { DriveState } from './state/drive-state';\nimport { DriveDomCacheService } from './interactions/drive-dom-cache.service';\nimport { EntryDragPreviewComponent } from './interactions/entry-drag-preview/entry-drag-preview.component';\nimport { Observable, Subscription } from 'rxjs';\nimport {\n    LoadUserFolders,\n    LoadUserSpaceUsage,\n    ReloadPageEntries,\n    ResetState,\n    SetCurrentUser,\n    SetViewMode,\n    SetWorkspace,\n    ToggleSidebar,\n    UploadFiles\n} from './state/actions/commands';\nimport { UploadedFile } from '@common/uploads/uploaded-file';\nimport { Settings } from '@common/core/config/settings.service';\nimport { CurrentUser } from '@common/auth/current-user';\nimport { BreakpointObserver } from '@angular/cdk/layout';\nimport { BreakpointChanged, UserSpaceUsageChanged } from './state/actions/events';\nimport { VIEW_MODE_KEY } from './state/models/drive-state-model';\nimport { LocalStorage } from '@common/core/services/local-storage.service';\nimport { User } from '@common/core/types/models/User';\nimport { WorkspacesService } from '../../common/workspaces/workspaces.service';\nimport { filter, skip } from 'rxjs/operators';\nimport { DrivePage, FolderPage } from './state/models/drive-page';\nimport { EntryActions } from './context-actions/actions/entry-actions';\nimport { FolderActions } from './context-actions/actions/folder-actions';\nimport { SharesActions } from './context-actions/actions/shares-actions';\nimport { TrashActions } from './context-actions/actions/trash-actions';\nimport { TrashPageActions } from './context-actions/actions/trash-page-actions';\nimport { ContextMenu } from '../../common/core/ui/context-menu/context-menu.service';\n\nconst actions = [EntryActions, FolderActions, SharesActions, TrashActions, TrashPageActions];\n\n@Component({\n    selector: 'drive',\n    templateUrl: './drive.component.html',\n    styleUrls: ['./drive.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n\n    // scope workspaces to drive component and make sure context menus get correct instance\n    providers: [...actions, ContextMenu, WorkspacesService],\n})\nexport class DriveComponent implements OnInit, OnDestroy {\n    @ViewChild('scrollContainer', { read: ElementRef, static: true }) scrollContainer: ElementRef;\n    @ViewChild('filesContainer', { static: true }) filesContainer: ElementRef;\n    @ViewChild(EntryDragPreviewComponent, { read: ElementRef, static: true }) dragPreview: ElementRef;\n    @Select(DriveState.dragging) dragging: Observable<boolean>;\n    @Select(DriveState.detailsOpen) activityOpen$: Observable<boolean>;\n    @Select(DriveState.sidebarOpen) sidebarOpen$: Observable<boolean>;\n    @Select(DriveState.loading) loading$: Observable<boolean>;\n    @Select(DriveState.isMobile) isMobile$: Observable<boolean>;\n    @Select(DriveState.canUpload) canUpload$: Observable<boolean>;\n    @Select(DriveState.activePage) activePage$: Observable<DrivePage>;\n\n    private subscriptions: Subscription[] = [];\n\n    constructor(\n        private store: Store,\n        private route: ActivatedRoute,\n        private currentUser: CurrentUser,\n        private localStorage: LocalStorage,\n        private domCache: DriveDomCacheService,\n        private breakpoints: BreakpointObserver,\n        private workspaces: WorkspacesService,\n        public settings: Settings,\n    ) {}\n\n    ngOnInit() {\n        this.setViewMode();\n        this.cacheDemoElements();\n        this.observeBreakpointChanges();\n        this.bindToWorkspace();\n        this.store.dispatch(new LoadUserFolders());\n        this.store.dispatch(new LoadUserSpaceUsage());\n\n        // TODO: refactor this once auth is moved to it's own store\n        this.store.dispatch(new SetCurrentUser(this.currentUser.getModel() as User));\n        this.currentUser.model$.subscribe(user => {\n            this.store.dispatch(new SetCurrentUser(user as User));\n        });\n    }\n\n    ngOnDestroy() {\n        this.store.dispatch(ResetState);\n        this.subscriptions.forEach(sub => sub.unsubscribe());\n        this.subscriptions = [];\n    }\n\n    public uploadFiles(files: UploadedFile[]) {\n        this.store.dispatch(new UploadFiles(files));\n    }\n\n    public toggleSidebar() {\n        this.store.dispatch(new ToggleSidebar());\n    }\n\n    private cacheDemoElements() {\n        this.domCache.filesCont = this.filesContainer.nativeElement;\n        this.domCache.scrollCont = this.scrollContainer.nativeElement;\n        this.domCache.dragPreview = this.dragPreview.nativeElement;\n    }\n\n    private setViewMode() {\n        this.store.dispatch(new SetViewMode(\n            this.localStorage.get(VIEW_MODE_KEY, this.settings.get('drive.default_view', 'grid')))\n        );\n    }\n\n    private observeBreakpointChanges() {\n        const sub = this.breakpoints.observe('(max-width: 1100px)').subscribe(result => {\n            this.store.dispatch(new BreakpointChanged({isMobile: result.matches}));\n        });\n        this.subscriptions.push(sub);\n    }\n\n    private bindToWorkspace() {\n        // skip initially selected workspace\n        const sub1 = this.workspaces.activeId$.pipe(skip(1)).subscribe(() => {\n            this.store.dispatch([\n                new ReloadPageEntries({}, new FolderPage(this.store.selectSnapshot(DriveState.rootFolder))),\n                new UserSpaceUsageChanged(),\n                new LoadUserFolders()\n            ]);\n        });\n        const sub3 = this.workspaces.activeWorkspace$.pipe(filter(w => !!w))\n            .subscribe(workspace => {\n                this.store.dispatch(new SetWorkspace(workspace));\n            });\n        const sub2 = this.workspaces.bindToNotificationClick();\n        this.subscriptions.push(sub1, sub2, sub3);\n    }\n}\n","import {Injectable} from '@angular/core';\r\nimport {Keycodes} from './keycodes.enum';\r\nimport {fromEvent, Subscription} from 'rxjs';\r\n\r\ninterface ParsedKeybind {\r\n    ctrl: boolean;\r\n    shift: boolean;\r\n    key: string;\r\n}\r\n\r\n// TODO: refactor so keybinds are stored for a specific \"listenOn\" element instead of globally\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class Keybinds {\r\n    private bindings = [];\r\n\r\n    public add(keybind: string, callback: (e: KeyboardEvent) => void) {\r\n        this.bindings.push({keybind: this.parseKeybindString(keybind), keybindString: keybind, callback});\r\n    }\r\n\r\n    public addWithPreventDefault(keybind: string, callback: Function) {\r\n        this.bindings.push({keybind: this.parseKeybindString(keybind), keybindString: keybind, callback, preventDefault: true});\r\n    }\r\n\r\n    public listenOn(el: HTMLElement|Document): Subscription {\r\n        return fromEvent(el, 'keydown').subscribe((e: KeyboardEvent) => {\r\n            if ( ! ['input', 'select'].includes(document.activeElement.nodeName.toLowerCase())) {\r\n                this.executeBindings(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    private executeBindings(e: KeyboardEvent) {\r\n        this.bindings.forEach(binding => {\r\n            if ( ! this.bindingMatches(binding.keybind, e)) return;\r\n            if (binding.preventDefault && e.preventDefault) e.preventDefault();\r\n            binding.callback(e);\r\n        });\r\n    }\r\n\r\n    private bindingMatches(keybind: ParsedKeybind, e: KeyboardEvent) {\r\n        return Keycodes[keybind.key.toUpperCase()] === e.keyCode && e.ctrlKey === keybind.ctrl && e.shiftKey === keybind.shift;\r\n    }\r\n\r\n    /**\r\n     * Parse keybind string into object.\r\n     */\r\n    private parseKeybindString(keybind: string): ParsedKeybind {\r\n        const parts = keybind.trim().split('+');\r\n        const parsed = {ctrl: false, shift: false, key: ''};\r\n\r\n        parts.forEach(part => {\r\n            part = part.trim().toLowerCase();\r\n\r\n            if (part === 'ctrl') {\r\n                parsed.ctrl = true;\r\n            } else if (part === 'shift') {\r\n                parsed.shift = true;\r\n            } else {\r\n                parsed.key = part;\r\n            }\r\n        });\r\n\r\n        return parsed;\r\n    }\r\n}\r\n","export enum Keycodes {\r\n    ENTER = 13,\r\n    SPACE = 32,\r\n    ESCAPE = 27,\r\n    DELETE = 46,\r\n    ARROW_UP = 38,\r\n    ARROW_RIGHT = 39,\r\n    ARROW_DOWN = 40,\r\n    ARROW_LEFT = 37,\r\n    S = 83,\r\n    N = 78,\r\n    A = 65,\r\n    T = 84,\r\n    B = 66,\r\n    C = 67,\r\n    O = 79,\r\n    P = 80,\r\n    R = 82,\r\n    F = 70,\r\n    Y = 89,\r\n    Z = 90,\r\n}\r\n","<files-grid-item\r\n        *ngFor=\"let entry of entries; trackBy: trackById\"\r\n        [entry]=\"entry\"\r\n        [contextMenu]=\"{type: 'entry', entry: entry}\"\r\n        [disableContextMenu]=\"disableInteractions\"\r\n        [folderDropTarget]=\"entry\"\r\n></files-grid-item>","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { DriveEntry } from '../../models/drive-entry';\n\n@Component({\n    selector: 'files-grid',\n    templateUrl: './files-grid.component.html',\n    styleUrls: ['./files-grid.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FilesGridComponent {\n    @Input() entries: DriveEntry[];\n    @Input() disableInteractions = false;\n    public trackById(index: number, entry: DriveEntry): number {\n        return entry.id;\n    }\n}\n","<table class=\"material-table\">\n    <thead>\n    <tr>\n        <th table-sort-header class=\"name-column\" trans>Name</th>\n        <th table-sort-header=\"updated_at\" class=\"last-updated-column\" trans>Last Updated</th>\n        <th table-sort-header=\"file_size\" class=\"size-column\" trans>Size</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr *ngFor=\"let file of entries; trackBy: trackById\" class=\"drive-entry\" [contextMenu]=\"{type: 'entry', entry: file}\" [disableContextMenu]=\"disableInteractions\" [attr.data-id]=\"file.id\"  [folderDropTarget]=\"file\">\n        <td data-label=\"Name\" class=\"name-column\">\n            <div class=\"file-name-container\">\n                <file-thumbnail [file]=\"file\"></file-thumbnail>\n                <div class=\"file-name\">\n                    <span class=\"entry-name\">{{file.name}}</span>\n                    <mat-icon class=\"star-icon\" svgIcon=\"star\" *ngIf=\"isStarred(file)\" [matTooltip]=\"'Starred' | trans\"></mat-icon>\n                </div>\n            </div>\n        </td>\n        <td data-label=\"Last Updated\" class=\"last-updated-column\">{{file.updated_at | formattedDate}}</td>\n        <td data-label=\"Size\" class=\"size-column\">{{file.file_size | formattedFileSize}}</td>\n    </tr>\n    </tbody>\n</table>\n","import {\n    ChangeDetectionStrategy, Component, Input, OnDestroy, OnInit\n} from '@angular/core';\nimport { DriveEntry } from '../../models/drive-entry';\nimport { Store } from '@ngxs/store';\nimport { ReloadPageEntries } from '../../../state/actions/commands';\nimport { DatatableService } from '@common/datatable/datatable.service';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n    selector: 'files-list',\n    templateUrl: './files-list.component.html',\n    styleUrls: ['./files-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [DatatableService],\n})\nexport class FilesListComponent implements OnInit, OnDestroy {\n    @Input() entries: DriveEntry[];\n    @Input() disableInteractions = false;\n\n    constructor(private store: Store, private datatable: DatatableService<DriveEntry>) {}\n\n    ngOnInit() {\n        this.datatable.init({\n            disableSort: this.disableInteractions,\n        });\n\n        this.datatable.sort$\n            .pipe(filter(v => !!Object.keys(v).length))\n            .subscribe(value => {\n                this.store.dispatch(new ReloadPageEntries(value as any));\n            });\n    }\n\n    ngOnDestroy() {\n        this.datatable.destroy();\n    }\n\n    public isStarred(entry: DriveEntry): boolean {\n        if ( ! entry.tags) return false;\n        return !!entry.tags.find(tag => tag.name === 'starred');\n    }\n\n    public trackById(index: number, entry: DriveEntry): number {\n        return entry.id;\n    }\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'no-search-entries',\n    templateUrl: './no-search-entries.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NoSearchEntriesComponent {\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'no-shared-entries',\n    templateUrl: './no-shared-entries.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NoSharedEntriesComponent {\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'no-starred-entries',\n    templateUrl: './no-starred-entries.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NoStarredEntriesComponent {\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'no-trashed-entries',\n    templateUrl: './no-trashed-entries.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NoTrashedEntriesComponent {\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'no-recent-entries',\n    templateUrl: './no-recent-entries.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NoRecentEntriesComponent {\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'no-folder-entries',\n    templateUrl: './no-folder-entries.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NoFolderEntriesComponent {\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, ElementRef, AfterViewInit, Inject } from '@angular/core';\nimport { DRIVE_UPLOAD_INPUT_CONFIG } from '../../upload-input-config';\nimport { UploadInputConfig } from '@common/uploads/upload-input-config';\nimport { Store } from '@ngxs/store';\nimport { UploadFiles } from '../../state/actions/commands';\nimport { openUploadWindow } from '@common/uploads/utils/open-upload-window';\n\n@Component({\n    selector: 'upload-dropzone',\n    templateUrl: './upload-dropzone.component.html',\n    styleUrls: ['./upload-dropzone.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UploadDropzoneComponent implements AfterViewInit {\n    @ViewChild('clickTarget', { static: true }) clickTarget: ElementRef;\n\n    constructor (\n        private store: Store,\n        @Inject(DRIVE_UPLOAD_INPUT_CONFIG) private uploadConfig: UploadInputConfig,\n    ) {}\n\n    ngAfterViewInit() {\n        this.clickTarget.nativeElement.addEventListener('click', () => {\n            openUploadWindow(this.uploadConfig).then(files => {\n                this.store.dispatch(new UploadFiles(files));\n            });\n        });\n    }\n}\n","<div class=\"no-results-message\">\r\n    <div class=\"main\" trans>No recent entries.</div>\r\n    <div class=\"secondary\" trans>You have not uploaded any files or folders yet.</div>\r\n    <mat-icon svgIcon=\"recent-custom\" class=\"icon\"></mat-icon>\r\n</div>","<div class=\"no-results-message\">\r\n    <div class=\"main\" trans>Trash is empty.</div>\r\n    <div class=\"secondary\" trans>There are no files or folders in your trash currently.</div>\r\n    <mat-icon svgIcon=\"trash-custom\" class=\"icon\"></mat-icon>\r\n</div>","<div class=\"no-results-message\">\n    <div class=\"main\" trans>Nothing is starred.</div>\n    <div class=\"secondary\" trans>Add stars to files and folders that you want to easily find later.</div>\n    <mat-icon svgIcon=\"add-star-custom\" class=\"icon\"></mat-icon>\n</div>","<div class=\"no-results-message\">\r\n    <div class=\"main\" trans>Shared with me.</div>\r\n    <div class=\"secondary\" trans>Files and folders other people have shared with you.</div>\r\n    <mat-icon svgIcon=\"share-custom\" class=\"icon\"></mat-icon>\r\n</div>","<div class=\"no-results-message\">\n    <div class=\"main\" trans>No matches found.</div>\n    <div class=\"secondary\" trans>Try another search with different query or file type.</div>\n    <mat-icon svgIcon=\"search-custom\" class=\"icon\"></mat-icon>\n</div>","<div class=\"animation-circle\"></div>\n<div class=\"content-circle\" #clickTarget>\n    <mat-icon class=\"main-icon\" svgIcon=\"upload-custom\"></mat-icon>\n    <div class=\"text initial-text\">\n        <div class=\"primary\" trans>Drop files or folders here</div>\n        <div class=\"secondary\" trans>or click to upload.</div>\n    </div>\n</div>","<upload-dropzone></upload-dropzone>","<files-grid [entries]=\"entries$ | async\" *ngIf=\"(viewMode$ | async) === 'grid'; else filesList\"></files-grid>\r\n<ng-template #filesList>\r\n    <files-list [entries]=\"entries$ | async\"></files-list>\r\n</ng-template>\r\n\r\n<ng-container [ngSwitch]=\"activePageName$ | async\" *ngIf=\"noEntries | async\">\r\n    <no-recent-entries *ngSwitchCase=\"'recent'\"></no-recent-entries>\r\n    <no-trashed-entries *ngSwitchCase=\"'trash'\"></no-trashed-entries>\r\n    <no-starred-entries *ngSwitchCase=\"'starred'\"></no-starred-entries>\r\n    <no-shared-entries *ngSwitchCase=\"'shares'\"></no-shared-entries>\r\n    <no-search-entries *ngSwitchCase=\"'search'\"></no-search-entries>\r\n    <no-folder-entries *ngSwitchDefault></no-folder-entries>\r\n</ng-container>","import {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    HostBinding,\n    OnDestroy,\n    OnInit,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { DriveEntry } from '../../files/models/drive-entry';\nimport { Observable, Subscription } from 'rxjs';\nimport { DrivePageType } from '../../state/models/available-pages';\nimport { Keybinds } from '@common/core/keybinds/keybinds.service';\nimport {\n    DeleteSelectedEntries,\n    DeleteTrashedEntriesForever,\n    OpenConfirmDialog,\n    SelectAllEntries\n} from '../../state/actions/commands';\nimport { EntryDoubleTapped } from '../../state/actions/events';\nimport { DRIVE_PAGE_NAMES } from '../../state/models/drive-page';\n\n@Component({\n    selector: 'entries-container',\n    templateUrl: './entries-container.component.html',\n    styleUrls: ['./entries-container.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [Keybinds],\n})\nexport class EntriesContainerComponent implements OnInit, OnDestroy {\n    @HostBinding('attr.tabindex') tabindex = 0;\n    @Select(DriveState.entries) entries$: Observable<DriveEntry[]>;\n    @Select(DriveState.entriesEmpty) noEntries: Observable<boolean>;\n    @Select(DriveState.viewMode) viewMode$: Observable<'list'|'grid'>;\n    @Select(DriveState.activePageName) activePageName$: Observable<DrivePageType>;\n    private keybindSub: Subscription;\n\n    constructor(\n        private store: Store,\n        private el: ElementRef,\n        private keybinds: Keybinds,\n    ) {}\n\n    ngOnInit() {\n        this.keybindSub = this.keybinds.listenOn(this.el.nativeElement);\n        this.keybinds.addWithPreventDefault('ctrl+a', () => {\n            this.store.dispatch(new SelectAllEntries());\n        });\n        this.keybinds.addWithPreventDefault('delete', () => {\n            if (this.store.selectSnapshot(DriveState.activePageName) === DRIVE_PAGE_NAMES.TRASH) {\n                this.store.dispatch(new OpenConfirmDialog({\n                    title: 'Delete Forever',\n                    body: 'This will permanently delete selected items.',\n                    bodyBold: 'This action can not be undone.',\n                    ok: 'Delete Forever',\n                }, new DeleteTrashedEntriesForever()));\n            } else {\n                this.store.dispatch(new DeleteSelectedEntries());\n            }\n        });\n        this.keybinds.addWithPreventDefault('enter', () => {\n            this.store.dispatch(new EntryDoubleTapped(this.store.selectSnapshot(DriveState.selectedEntry)));\n        });\n    }\n\n    ngOnDestroy() {\n        this.keybindSub.unsubscribe();\n    }\n}\n","import { EventEmitter, HostBinding, Inject, Directive } from '@angular/core';\r\nimport { CURRENT_PREVIEW_FILE } from './current-preview-file';\r\nimport { FileEntry } from '../uploads/types/file-entry';\r\nimport { PREVIEW_URL_TRANSFORMER, PreviewUrlTransformer } from './preview-url-transformer';\r\nimport { Settings } from '../core/config/settings.service';\r\nimport { Observable } from 'rxjs';\r\nimport { AppHttpClient } from '../core/http/app-http-client.service';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\nimport { CurrentUser } from '../auth/current-user';\r\n\r\n@Directive()\r\nexport abstract class BaseFilePreview {\r\n    @HostBinding('class.file-preview-wrapper') filePreviewWrapper = true;\r\n    public download = new EventEmitter();\r\n\r\n    constructor(\r\n        @Inject(CURRENT_PREVIEW_FILE) protected file: FileEntry,\r\n        @Inject(PREVIEW_URL_TRANSFORMER) protected transformer: PreviewUrlTransformer,\r\n        protected settings: Settings,\r\n        protected http: AppHttpClient,\r\n        protected sanitizer: DomSanitizer,\r\n        protected currentUser: CurrentUser,\r\n    ) {}\r\n\r\n    public getSrc(): string {\r\n        return this.transformer(this.file);\r\n    }\r\n\r\n    public getSafeSrc(): SafeResourceUrl {\r\n        return this.sanitizer.bypassSecurityTrustResourceUrl(this.getSrc());\r\n    }\r\n\r\n    public getContents(): Observable<string> {\r\n        return this.http.get(this.getSrc(), null, {responseType: 'text'});\r\n    }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const CURRENT_PREVIEW_FILE = new InjectionToken<any>('CURRENT_PREVIEW_FILE');\r\n","import { InjectionToken } from '@angular/core';\r\nimport { FileEntry } from '@common/uploads/types/file-entry';\r\n\r\nexport type PreviewUrlTransformer = (entry: FileEntry) => string;\r\n\r\nexport const PREVIEW_URL_TRANSFORMER = new InjectionToken<PreviewUrlTransformer>('PREVIEW_URL_TRANSFORMER', {\r\n    factory: () => {\r\n        return entry => entry.url;\r\n    },\r\n    providedIn: 'root',\r\n});\r\n","<div class=\"panel preview-object\">\r\n    <div class=\"message\" trans>{{getMessage()}}</div>\r\n    <button mat-raised-button color=\"accent\" (click)=\"download.emit()\" *ngIf=\"download.observers.length\" trans>Download</button>\r\n</div>\r\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\r\nimport {BaseFilePreview} from '../base-file-preview';\r\n\r\n@Component({\r\n    selector: 'default-preview',\r\n    templateUrl: './default-preview.component.html',\r\n    styleUrls: ['./default-preview.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DefaultPreviewComponent extends BaseFilePreview {\r\n    @Input() message: string;\r\n\r\n    public getMessage() {\r\n        return this.message || 'No file preview available.';\r\n    }\r\n}\r\n","<default-preview *ngIf=\"fileTooLarge$ | async; else textPreview\" message=\"This file is too large to preview.\"></default-preview>\r\n<ng-template #textPreview>\r\n    <div class=\"text-wrapper preview-object\">\r\n        <pre>{{ content$ | async }}</pre>\r\n    </div>\r\n</ng-template>","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {BaseFilePreview} from '../base-file-preview';\r\n\r\nconst FIVE_MB = 5242880;\r\n\r\n@Component({\r\n    selector: 'text-preview',\r\n    templateUrl: './text-preview.component.html',\r\n    styleUrls: ['./text-preview.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TextPreviewComponent extends BaseFilePreview implements OnInit {\r\n    public content$ = new BehaviorSubject('');\r\n    public fileTooLarge$ = new BehaviorSubject(false);\r\n\r\n    ngOnInit() {\r\n        if (this.file.file_size > FIVE_MB) {\r\n            this.fileTooLarge$.next(true);\r\n        } else {\r\n            this.loadFileContents();\r\n        }\r\n    }\r\n\r\n    private loadFileContents() {\r\n        this.getContents()\r\n            .subscribe(content => {\r\n                this.content$.next(content);\r\n            });\r\n    }\r\n}\r\n","<audio #playerEl controls=\"controls\" class=\"preview-object\" [class.hidden]=\"invalidMedia\" controlsList=\"nodownload noremoteplayback\"></audio>\r\n\r\n<default-preview *ngIf=\"invalidMedia\"></default-preview>","import {ChangeDetectionStrategy, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {BaseFilePreview} from '../base-file-preview';\r\n\r\n@Component({\r\n    selector: 'audio-preview',\r\n    templateUrl: './audio-preview.component.html',\r\n    styleUrls: ['./audio-preview.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AudioPreviewComponent extends BaseFilePreview implements OnInit {\r\n    @ViewChild('playerEl', { static: true }) playerEl: ElementRef;\r\n    public invalidMedia = false;\r\n\r\n    ngOnInit() {\r\n        this.invalidMedia = !this.canPlayVideo();\r\n\r\n        if ( ! this.invalidMedia) {\r\n            const source = document.createElement('source');\r\n            source.src = this.getSrc();\r\n            source.type = this.file.mime;\r\n            this.player().appendChild(source);\r\n            this.player().play();\r\n        }\r\n    }\r\n\r\n    protected canPlayVideo(): boolean {\r\n        return !!this.player().canPlayType(this.file.mime);\r\n    }\r\n\r\n    protected player() {\r\n        return this.playerEl.nativeElement as HTMLVideoElement|HTMLAudioElement;\r\n    }\r\n}\r\n","<video #playerEl controls=\"controls\" class=\"preview-object\" [class.hidden]=\"invalidMedia\" controlsList=\"nodownload noremoteplayback\" playsinline></video>\r\n\r\n<default-preview *ngIf=\"invalidMedia\"></default-preview>\r\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\r\nimport {AudioPreviewComponent} from '../audio-preview/audio-preview.component';\r\n\r\n@Component({\r\n    selector: 'video-preview',\r\n    templateUrl: './video-preview.component.html',\r\n    styleUrls: ['./video-preview.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class VideoPreviewComponent extends AudioPreviewComponent {\r\n}\r\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\r\nimport {BaseFilePreview} from '../base-file-preview';\r\n\r\n@Component({\r\n    selector: 'image-preview',\r\n    templateUrl: './image-preview.component.html',\r\n    styleUrls: ['./image-preview.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ImagePreviewComponent extends BaseFilePreview {}\r\n","import {ChangeDetectionStrategy, Component, HostBinding,} from '@angular/core';\r\nimport {BaseFilePreview} from '../base-file-preview';\r\n\r\n@Component({\r\n  selector: 'pdf-preview',\r\n  templateUrl: './pdf-preview.component.html',\r\n  styleUrls: ['./pdf-preview.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PdfPreviewComponent extends BaseFilePreview {\r\n    @HostBinding('class') className = 'preview-object';\r\n\r\n    public getSrc() {\r\n        return super.getSrc() + '#toolbar=0';\r\n    }\r\n}\r\n","<img [src]=\"getSafeSrc()\" class=\"preview-object\">","<iframe [src]=\"getSafeSrc()\"></iframe>","<ng-container *ngIf=\"!(showDefaultPreview$ | async); else defaultPreview\">\r\n    <iframe class=\"preview-object\" #iframe></iframe>\r\n    <div class=\"pop-out-block office-block\" (click)=\"openInNewWindow()\"></div>\r\n</ng-container>\r\n<ng-template #defaultPreview>\r\n    <default-preview></default-preview>\r\n</ng-template>\r\n<loading-indicator [isVisible]=\"loading$ | async\" class=\"overlay\"></loading-indicator>\r\n","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, ViewChild } from '@angular/core';\nimport { BaseFilePreview } from '../base-file-preview';\nimport { BehaviorSubject } from 'rxjs';\nimport { GenericBackendResponse } from '@common/core/types/backend-response';\nimport { isAbsoluteUrl } from '@common/core/utils/is-absolute-url';\n\n@Component({\n    selector: 'google-docs-viewer',\n    templateUrl: './google-docs-viewer.component.html',\n    styleUrls: ['./google-docs-viewer.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GoogleDocsViewerComponent extends BaseFilePreview implements AfterViewInit {\n    @ViewChild('iframe') iframe: ElementRef<HTMLIFrameElement>;\n    public loading$ = new BehaviorSubject(true);\n    public showDefaultPreview$ = new BehaviorSubject(false);\n    private timeoutRef: any;\n\n    ngAfterViewInit() {\n        // google docs viewer only supports files up to 25MB\n        if (this.file.file_size > 25000000) {\n            return this.showDefaultPreview();\n        }\n\n        this.iframe.nativeElement.onload = () => {\n            clearTimeout(this.timeoutRef);\n            this.stopLoading();\n        };\n\n        this.getIframeSrc().then(url => {\n            this.iframe.nativeElement.src = url;\n        }).catch(() => {\n            this.showDefaultPreview();\n        });\n\n        // if preview iframe is not loaded\n        // after 5 seconds, bail and show default preview\n        this.timeoutRef = setTimeout(() => {\n            this.showDefaultPreview();\n        }, 5000);\n    }\n\n    public stopLoading() {\n        this.loading$.next(false);\n    }\n\n    public showDefaultPreview() {\n        this.stopLoading();\n        this.showDefaultPreview$.next(true);\n    }\n\n    public openInNewWindow() {\n        window.open(window.location.href, '_blank');\n    }\n\n    private getIframeSrc(): Promise<string> {\n        return new Promise((resolve, reject) => {\n            let previewUrl = this.getSrc();\n\n            // if we're not trying to preview shareable link we will need to generate\n            // preview token, otherwise google won't be able to access this file\n            if (previewUrl.indexOf('shareable_link') === -1) {\n                this.http.post<GenericBackendResponse<{preview_token: string}>>(`uploads/${this.file.id}/add-preview-token`).subscribe(response => {\n                    previewUrl += `?preview_token=${response.preview_token}`;\n                    resolve(this.getFullPreviewUrl(previewUrl));\n                }, () => reject);\n            } else {\n                resolve(this.getFullPreviewUrl(previewUrl));\n            }\n        });\n    }\n\n    private getFullPreviewUrl(previewUrl: string) {\n        // https://docs.google.com/gview?embedded=true&url=\n        previewUrl = isAbsoluteUrl(previewUrl) ? previewUrl : this.settings.getBaseUrl() + previewUrl;\n        return 'https://view.officeapps.live.com/op/embed.aspx?src=' + encodeURIComponent(previewUrl);\n    }\n}\n","import {Inject, Injectable, Injector} from '@angular/core';\r\nimport {FileEntry} from '../uploads/types/file-entry';\r\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\r\nimport {AVAILABLE_PREVIEWS, DefaultPreviews} from './available-previews';\r\nimport {ComponentPortal, PortalInjector} from '@angular/cdk/portal';\r\nimport {CURRENT_PREVIEW_FILE} from './current-preview-file';\r\nimport {DefaultPreviewComponent} from './default-preview/default-preview.component';\r\nimport {filter} from 'rxjs/operators';\r\nimport {PREVIEW_URL_TRANSFORMER, PreviewUrlTransformer} from './preview-url-transformer';\r\n\r\ninterface PreviewFilesMeta {\r\n    entry?: FileEntry;\r\n    pointer?: number;\r\n    total?: number;\r\n    haveNext?: boolean;\r\n    havePrevious?: boolean;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PreviewFilesService {\r\n    private files: FileEntry[] = [];\r\n    private portal = new BehaviorSubject(null);\r\n    private meta: BehaviorSubject<PreviewFilesMeta> = new BehaviorSubject({});\r\n    private previewUriTransformer: PreviewUrlTransformer|null = null;\r\n    public download = new Subject();\r\n\r\n    constructor(\r\n        @Inject(AVAILABLE_PREVIEWS) private availablePreviews: DefaultPreviews,\r\n        private injector: Injector,\r\n    ) {}\r\n\r\n    public pagination(): Observable<PreviewFilesMeta> {\r\n        return this.meta\r\n            .pipe(filter(data => data && !!data.entry));\r\n    }\r\n\r\n    public getCurrent(): FileEntry {\r\n        return this.meta.value.entry;\r\n    }\r\n\r\n    public getAllEntries() {\r\n        return this.files;\r\n    }\r\n\r\n    public getPortal(): Observable<ComponentPortal<any>> {\r\n        return this.portal.asObservable();\r\n    }\r\n\r\n    public showNext() {\r\n        if ( ! this.meta.value.haveNext) return;\r\n        this.updateMeta('next');\r\n        this.updatePortal();\r\n    }\r\n\r\n    public showPrevious() {\r\n        if ( ! this.meta.value.havePrevious) return;\r\n        this.updateMeta('previous');\r\n        this.updatePortal();\r\n    }\r\n\r\n    private updateMeta(dir?: 'next'|'previous'|number) {\r\n        let newPointer = 0;\r\n\r\n        if (typeof dir === 'string') {\r\n            const oldPointer = this.meta.value.pointer;\r\n            newPointer = dir === 'next' ? oldPointer + 1 : oldPointer - 1;\r\n        } else if (typeof dir === 'number') {\r\n            newPointer = dir;\r\n        }\r\n\r\n        this.meta.next({\r\n            pointer: newPointer,\r\n            entry: this.files[newPointer],\r\n            total: this.files.length,\r\n            haveNext: (newPointer + 1) < this.files.length,\r\n            havePrevious: (newPointer - 1) > -1,\r\n        });\r\n    }\r\n\r\n    private updatePortal() {\r\n        const current = this.getCurrent();\r\n        const comp = (current && this.availablePreviews[current.type]) || DefaultPreviewComponent;\r\n        this.portal.next(new ComponentPortal(comp, null, this.createInjector()));\r\n    }\r\n\r\n    public set(files: FileEntry[], activeFile?: number) {\r\n        if ( ! files || files.length === 0) return;\r\n        this.files = files.filter(entry => entry.type !== 'folder');\r\n        this.updateMeta(activeFile);\r\n        this.updatePortal();\r\n    }\r\n\r\n    private createInjector(): PortalInjector {\r\n        const injectionTokens = new WeakMap();\r\n\r\n        // set currently active preview file\r\n        injectionTokens.set(CURRENT_PREVIEW_FILE, this.getCurrent());\r\n\r\n        // override preview backend uri, if specified\r\n        if (this.previewUriTransformer) {\r\n            injectionTokens.set(PREVIEW_URL_TRANSFORMER, this.previewUriTransformer);\r\n        }\r\n\r\n        return new PortalInjector(this.injector, injectionTokens);\r\n    }\r\n\r\n    public destroy() {\r\n        this.meta.next({});\r\n        this.files = null;\r\n        this.portal.next(null);\r\n    }\r\n\r\n    /**\r\n     * Provide transformer function for preview file backend url.\r\n     * (for changing base uri, adding url params etc)\r\n     */\r\n    public setPreviewUriTransformer(transformer: PreviewUrlTransformer) {\r\n        this.previewUriTransformer = transformer;\r\n    }\r\n}\r\n","import { InjectionToken, Injectable } from '@angular/core';\r\nimport { TextPreviewComponent } from './text-preview/text-preview.component';\r\nimport { VideoPreviewComponent } from './video-preview/video-preview.component';\r\nimport { ImagePreviewComponent } from './image-preview/image-preview.component';\r\nimport { PdfPreviewComponent } from './pdf-preview/pdf-preview.component';\r\nimport { AudioPreviewComponent } from './audio-preview/audio-preview.component';\r\nimport { GoogleDocsViewerComponent } from './google-docs-viewer/google-docs-viewer.component';\r\n\r\nexport const AVAILABLE_PREVIEWS = new InjectionToken<any>('AVAILABLE_PREVIEWS');\r\n\r\n@Injectable()\nexport class DefaultPreviews {\r\n    text = TextPreviewComponent;\r\n    video = VideoPreviewComponent;\r\n    audio = AudioPreviewComponent;\r\n    image = ImagePreviewComponent;\r\n    pdf = PdfPreviewComponent;\r\n    spreadsheet = GoogleDocsViewerComponent;\r\n    powerPoint = GoogleDocsViewerComponent;\r\n    word = GoogleDocsViewerComponent;\r\n}\r\n\r\n","<mat-icon svgIcon=\"password-custom\"></mat-icon>\n<form class=\"content\" (ngSubmit)=\"submitPassword()\" ngNativeValidate>\n    <div class=\"message\" trans>The link you are trying to access is password protected.</div>\n    <div class=\"input-container\">\n        <label for=\"password\" class=\"hidden\" trans>Password</label>\n        <input type=\"password\" id=\"password\" placeholder=\"Password\" [formControl]=\"passwordControl\" trans-placeholder required>\n    </div>\n    <div class=\"button-container\">\n        <div class=\"error\" *ngIf=\"passwordError$ | async\" trans>Password does not match.</div>\n        <button type=\"submit\" mat-raised-button color=\"accent\" trans>Enter</button>\n    </div>\n</form>\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { ShareableLinksApiService } from '../../../sharing/links/shareable-links-api.service';\nimport { ShareableLink } from '../../../sharing/links/models/shareable-link';\n\n@Component({\n    selector: 'link-preview-password-panel',\n    templateUrl: './link-preview-password-panel.component.html',\n    styleUrls: ['./link-preview-password-panel.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LinkPreviewPasswordPanelComponent {\n    public passwordControl = new FormControl();\n    public passwordError$ = new BehaviorSubject(false);\n\n    @Input() link: ShareableLink;\n    @Output() passwordValid = new EventEmitter(null);\n\n    constructor(private links: ShareableLinksApiService) {}\n\n    public submitPassword() {\n        this.links.checkPassword(this.link.id, this.passwordControl.value)\n            .subscribe(response => {\n               this.handlePasswordCheck(response.matches);\n            }, () => {});\n    }\n\n    private handlePasswordCheck(matches: boolean) {\n        this.passwordError$.next(!matches);\n\n        if (matches) {\n            this.passwordValid.emit(this.passwordControl.value);\n        }\n    }\n}\n","<button mat-icon-button class=\"back-button\" (click)=\"closed.emit(true)\" *ngIf=\"showCloseButton\">\r\n    <mat-icon svgIcon=\"arrow-back\"></mat-icon>\r\n</button>\r\n<ng-container *ngIf=\"previewFiles.pagination() | async as pagination\">\r\n    <div class=\"entry-name\">\r\n        <file-icon [type]=\"pagination.entry.type\"></file-icon>\r\n        {{pagination.entry.name}}\r\n    </div>\r\n\r\n    <ng-container *ngIf=\"previewFiles.pagination() | async as pagination\">\r\n        <div class=\"navigation\">\r\n            <button mat-icon-button class=\"previous\" [disabled]=\"!pagination.havePrevious\" (click)=\"previewFiles.showPrevious()\">\r\n                <mat-icon svgIcon=\"keyboard-arrow-left\"></mat-icon>\r\n            </button>\r\n\r\n            <span class=\"meta\">{{pagination.pointer + 1}} {{'of' | trans}} {{pagination.total}}</span>\r\n\r\n            <button mat-icon-button class=\"next\" [disabled]=\"!pagination.haveNext\" (click)=\"previewFiles.showNext()\">\r\n                <mat-icon svgIcon=\"keyboard-arrow-right\"></mat-icon>\r\n            </button>\r\n        </div>\r\n    </ng-container>\r\n\r\n    <div class=\"actions\">\r\n        <button mat-icon-button (click)=\"downloadFiles()\" [disabled]=\"disableDownload\">\r\n            <mat-icon svgIcon=\"file-download\"></mat-icon>\r\n        </button>\r\n        <ng-content></ng-content>\r\n    </div>\r\n</ng-container>\r\n<a routerLink=\"/drive\" class=\"logo\" *ngIf=\"showLogo && settings.has('branding.logo_light')\">\r\n    <img *ngIf=\"showLogo && settings.get('branding.logo_light')\" [src]=\"settings.get('branding.logo_light')\">\r\n</a>\r\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core';\nimport { PreviewFilesService } from '@common/file-preview/preview-files.service';\nimport { Settings } from '@common/core/config/settings.service';\n\n@Component({\n    selector: 'file-preview-toolbar',\n    templateUrl: './file-preview-toolbar.component.html',\n    styleUrls: ['./file-preview-toolbar.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FilePreviewToolbarComponent {\n    @Input() showLogo = false;\n    @Input() disableDownload = false;\n    @Input() showCloseButton = false;\n\n    @Output() closed = new EventEmitter();\n\n    constructor(\n        public previewFiles: PreviewFilesService,\n        public settings: Settings,\n    ) {}\n\n    public downloadFiles() {\n        this.previewFiles.download.next();\n    }\n}\n","<ng-container *ngIf=\"previewFiles.getPortal() | async as portal\">\r\n    <ng-template [cdkPortalOutlet]=\"portal\" (attached)=\"listenForDownloadClick($event)\"></ng-template>\r\n</ng-container>\r\n","import {ChangeDetectionStrategy, Component, ComponentRef, Input, OnChanges, OnDestroy} from '@angular/core';\r\nimport {FileEntry} from '../../uploads/types/file-entry';\r\nimport {PreviewFilesService} from '../preview-files.service';\r\nimport {BaseFilePreview} from '../base-file-preview';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'preview-container',\r\n    templateUrl: './preview-container.component.html',\r\n    styleUrls: ['./preview-container.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PreviewContainerComponent implements OnChanges, OnDestroy {\r\n    @Input() files: FileEntry[];\r\n    @Input() activeFile: number;\r\n    @Input() disableDownload = false;\r\n    private downloadSub: Subscription;\r\n\r\n    constructor(public previewFiles: PreviewFilesService) {}\r\n\r\n    ngOnChanges(changes) {\r\n        this.previewFiles.set(this.files, this.activeFile);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.previewFiles.destroy();\r\n        if (this.downloadSub) this.downloadSub.unsubscribe();\r\n    }\r\n\r\n    public listenForDownloadClick(comp: ComponentRef<BaseFilePreview>) {\r\n        if (this.downloadSub) this.downloadSub.unsubscribe();\r\n        if ( ! this.disableDownload) {\r\n            this.downloadSub = comp.instance.download.subscribe(() => {\r\n                this.previewFiles.download.next();\r\n            });\r\n        }\r\n    }\r\n}\r\n","<file-preview-toolbar [showCloseButton]=\"true\" (closed)=\"closeOverlay()\" [disableDownload]=\"!canDownload()\">\r\n    <button mat-icon-button (click)=\"openContextMenu()\" #moreOptionsButton *ngIf=\"!data.hideMoreOptionsBtn\">\r\n        <mat-icon svgIcon=\"more-vert\"></mat-icon>\r\n    </button>\r\n</file-preview-toolbar>\r\n<preview-container [files]=\"data.entries\" [activeFile]=\"data.activeEntry\" [disableDownload]=\"!canDownload()\" #previewContainer></preview-container>\r\n","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, Inject, OnDestroy, ViewChild, } from '@angular/core';\nimport { DriveEntry } from '../../files/models/drive-entry';\nimport { OverlayPanelRef } from '@common/core/ui/overlay-panel/overlay-panel-ref';\nimport { OVERLAY_PANEL_DATA } from '@common/core/ui/overlay-panel/overlay-panel-data';\nimport { DriveContextMenuComponent } from '../../context-actions/components/drive-context-menu/drive-context-menu.component';\nimport { ContextMenu } from '@common/core/ui/context-menu/context-menu.service';\nimport { PreviewFilesService } from '@common/file-preview/preview-files.service';\nimport { DownloadEntries } from '../../state/actions/commands';\nimport { Store } from '@ngxs/store';\nimport { Subscription } from 'rxjs';\nimport { CurrentUser } from '@common/auth/current-user';\nimport { ShareableLink } from '../../sharing/links/models/shareable-link';\n\nexport interface FilePreviewOverlayData {\n    entries: DriveEntry[];\n    activeEntry?: number;\n    shareableLink?: ShareableLink;\n    password?: string;\n    hideMoreOptionsBtn?: boolean;\n}\n\n@Component({\n    selector: 'file-preview-overlay',\n    templateUrl: './file-preview-overlay.component.html',\n    styleUrls: ['./file-preview-overlay.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FilePreviewOverlayComponent implements AfterViewInit, OnDestroy {\n    @ViewChild('previewContainer', { read: ElementRef, static: true }) previewContainer: ElementRef;\n    @ViewChild('moreOptionsButton', { read: ElementRef }) optionsButton: ElementRef;\n    private downloadSub: Subscription;\n\n    constructor(\n        private store: Store,\n        private el: ElementRef,\n        private contextMenu: ContextMenu,\n        private overlayRef: OverlayPanelRef,\n        private previewFiles: PreviewFilesService,\n        private currentUser: CurrentUser,\n        @Inject(OVERLAY_PANEL_DATA) public data: FilePreviewOverlayData\n    ) {}\n\n    ngAfterViewInit() {\n        this.bindToDownload();\n        // prevent ghost click from closing preview overlay\n        // when on mobile and single tap opens preview\n        setTimeout(() => {\n            this.previewContainer.nativeElement.addEventListener('click', e => {\n                if ( ! e.target.closest('.preview-object')) {\n                    this.overlayRef.close();\n                }\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.downloadSub.unsubscribe();\n    }\n\n    public openContextMenu() {\n        const origin = this.optionsButton.nativeElement;\n        this.contextMenu.open(DriveContextMenuComponent, origin, {data: {entry: this.previewFiles.getCurrent()}});\n    }\n\n    public closeOverlay() {\n        this.overlayRef.close();\n    }\n\n    public canDownload() {\n        return this.data.entries.every(entry => {\n            if ( ! entry.users) entry.users = [];\n            const user = entry.users && entry.users.find(u => u.id === this.currentUser.get('id'));\n            const userHasDownloadPermission = user && (user.owns_entry || user.entry_permissions.download);\n            return this.data.shareableLink?.allow_download || userHasDownloadPermission;\n        });\n    }\n\n    private bindToDownload() {\n        this.downloadSub = this.previewFiles.download.subscribe(() => {\n            const entries = this.previewFiles.getCurrent();\n            this.store.dispatch(new DownloadEntries([entries], this.data.shareableLink, this.data.password));\n        });\n    }\n}\n","<material-navbar></material-navbar>\r\n\r\n<div class=\"toolbar\">\r\n    <div class=\"breadcrumb\">\r\n        <button mat-icon-button *ngIf=\"isSubFolder()\" (click)=\"openFolder()\" class=\"home-button\">\r\n            <mat-icon svgIcon=\"home\" class=\"action-icon\"></mat-icon>\r\n        </button>\r\n        <ng-container *ngFor=\"let folder of breadcrumb$ | async; last as last;\">\r\n            <div class=\"breadcrumb-item\" (click)=\"openFolder(folder)\">{{folder.name}}</div>\r\n            <mat-icon class=\"separator\" svgIcon=\"keyboard-arrow-right\" *ngIf=\"!last\"></mat-icon>\r\n        </ng-container>\r\n    </div>\r\n\r\n    <div class=\"actions\">\r\n        <entries-sort-button [formControl]=\"sortFormControl\"></entries-sort-button>\r\n\r\n        <span class=\"action-separator\"></span>\r\n\r\n        <ng-container *ngIf=\"viewMode$ | async as viewMode\">\r\n            <button mat-icon-button (click)=\"toggleViewMode()\" class=\"view-toggle-button\" [matTooltip]=\"(viewMode === 'list' ? 'Grid view' : 'List view') | trans\">\r\n                <mat-icon [svgIcon]=\"viewMode === 'list' ? 'view-list' : 'view-module'\" class=\"action-icon\"></mat-icon>\r\n            </button>\r\n        </ng-container>\r\n\r\n        <button mat-icon-button (click)=\"download()\" *ngIf=\"data.link.allow_download\" [matTooltip]=\"'Download all' | trans\">\r\n            <mat-icon svgIcon=\"file-download\" class=\"action-icon\"></mat-icon>\r\n        </button>\r\n\r\n        <ng-content></ng-content>\r\n    </div>\r\n</div>\r\n\r\n<ad-host slot=\"ads.file-preview\" class=\"folder-preview-vert-host\"></ad-host>\r\n\r\n<div class=\"files-container\" #filesContainer (click)=\"onClick($event)\">\r\n   <ng-container *ngIf=\"pagination$ | async as pagination\">\r\n       <files-grid [entries]=\"pagination.data\" [disableInteractions]=\"true\" *ngIf=\"(viewMode$ | async) === 'grid'; else filesList\"></files-grid>\r\n       <ng-template #filesList>\r\n           <files-list [entries]=\"pagination.data\" [disableInteractions]=\"true\"></files-list>\r\n       </ng-template>\r\n       <no-results-message *ngIf=\"!pagination.data.length\">\r\n           <span primary-text trans>Folder Is Empty</span>\r\n           <span secondary-text trans>No files have been uploaded to this folder yet.</span>\r\n       </no-results-message>\r\n   </ng-container>\r\n</div>\r\n\r\n<loading-indicator [isVisible]=\"loading$ | async\" class=\"overlay\"></loading-indicator>\r\n","import {\n    Component, ViewEncapsulation, ChangeDetectionStrategy, Input, ViewChild, ElementRef, OnInit, OnChanges, NgZone,\n} from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { DownloadEntries, SetViewMode } from '../../state/actions/commands';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { FilePreviewOverlayComponent } from '../file-preview-overlay/file-preview-overlay.component';\nimport { Router } from '@angular/router';\nimport { FormControl } from '@angular/forms';\nimport { GetLinkData, ShareableLinksApiService } from '../../sharing/links/shareable-links-api.service';\nimport { finalize } from 'rxjs/operators';\nimport { SortValue } from '../../entries/available-sorts';\nimport { InfiniteScroll } from '@common/core/ui/infinite-scroll/infinite.scroll';\nimport { PaginationResponse } from '@common/core/types/pagination/pagination-response';\nimport { FileEntry } from '@common/uploads/types/file-entry';\nimport { OverlayPanel } from '@common/core/ui/overlay-panel/overlay-panel.service';\nimport { DriveState } from '../../state/drive-state';\n\n@Component({\n    selector: 'folder-preview',\n    templateUrl: './folder-preview.component.html',\n    styleUrls: ['./folder-preview.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FolderPreviewComponent extends InfiniteScroll implements OnChanges, OnInit {\n    @Input() data: GetLinkData;\n    @Input() password: string;\n    @ViewChild('filesContainer', { static: true }) filesContainer: ElementRef<HTMLDivElement>;\n    @Select(DriveState.viewMode) viewMode$: Observable<'list'|'grid'>;\n\n    get folder() {\n        return this.data.link.entry;\n    }\n\n    get children() {\n        return this.pagination$.value.data;\n    }\n\n    public loading$ = new BehaviorSubject(false);\n    public breadcrumb$: BehaviorSubject<FileEntry[]> = new BehaviorSubject([]);\n    public pagination$: BehaviorSubject<PaginationResponse<FileEntry>> = new BehaviorSubject(null);\n    private allFolders = {};\n    public sortFormControl = new FormControl({\n        column: 'updated_at',\n        direction: 'desc',\n    });\n\n    constructor(\n        private store: Store,\n        private overlay: OverlayPanel,\n        private router: Router,\n        private linkApi: ShareableLinksApiService,\n        protected zone: NgZone,\n        protected el: ElementRef,\n    ) {\n        super();\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n        this.sortFormControl.valueChanges.subscribe((value: SortValue) => {\n            if (value) {\n                this.loadChildren({}, true);\n            }\n        });\n    }\n\n    ngOnChanges() {\n        this.allFolders[this.folder.id] = this.folder;\n        this.generateBreadcrumb(this.folder);\n        this.setPagination(this.data.folderChildren);\n        this.loading$.next(false);\n    }\n\n    public download() {\n        this.store.dispatch(new DownloadEntries([this.folder], this.data.link, this.password));\n    }\n\n    public toggleViewMode() {\n        const current = this.store.selectSnapshot(DriveState.viewMode);\n        this.store.dispatch(new SetViewMode(current === 'list' ? 'grid' : 'list'));\n    }\n\n    private openPreviewOverlay(entry: FileEntry) {\n        const entries = this.children.filter(ent => ent.type !== 'folder'),\n            activeEntry = entries.findIndex(e => e.id === entry.id);\n\n        this.overlay.open(FilePreviewOverlayComponent, {\n            position: 'center',\n            origin: 'global',\n            panelClass: 'file-preview-overlay-container',\n            data: {\n                entries: entries.slice(),\n                activeEntry,\n                shareableLink: this.data.link,\n                password: this.password,\n                hideMoreOptionsBtn: true,\n            }\n        });\n    }\n\n    private getEntry(e: MouseEvent): FileEntry {\n        const node = (e.target as HTMLElement).closest('.drive-entry') as HTMLElement;\n        if (node) {\n            return this.children.find(entry => entry.id === +node.dataset.id);\n        }\n    }\n\n    public onClick(e: MouseEvent) {\n        const entry = this.getEntry(e);\n        if ( ! entry) return;\n\n        if (entry.type === 'folder') {\n            this.openFolder(entry);\n        } else {\n            this.openPreviewOverlay(entry);\n        }\n    }\n\n    public isSubFolder() {\n        return this.router.url.indexOf(':') > -1;\n    }\n\n    public openFolder(folder?: FileEntry) {\n        if (folder && this.folder.id === folder.id) return;\n        this.loading$.next(true);\n        this.router.navigate(['/drive/s', this.makeLinkHash(folder)]).then(() => {\n            // reset sort to default, as there's no good way to\n            // pass current sort to parent link preview component\n            this.sortFormControl.reset();\n        });\n    }\n\n    private generateBreadcrumb(folder: FileEntry) {\n        this.breadcrumb$.next(folder.path.split('/').map(folderId => {\n            return this.allFolders[+folderId];\n        }).filter(subFolder => !!subFolder));\n    }\n\n    private loadChildren(params: {page?: number}, replaceChildren = false) {\n        this.loading$.next(true);\n        const order = `${this.sortFormControl.value.column}:${this.sortFormControl.value.direction}`;\n        const page = params.page || this.pagination$.value.current_page;\n        this.linkApi.findByHash(this.makeLinkHash(this.folder), {page, order, withEntries: true})\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                const oldChildren = this.children;\n                const pagination = response.folderChildren;\n                if ( ! replaceChildren) {\n                    pagination.data = [...oldChildren, ...pagination.data];\n                }\n                this.setPagination(pagination);\n            });\n    }\n\n    private makeLinkHash(folder?: FileEntry) {\n        let hash = this.data.link.hash;\n        if (folder) hash += ':' + folder.hash;\n        return hash;\n    }\n\n    private setPagination(pagination: PaginationResponse<FileEntry>) {\n        // add shareable link hash to all entries url to avoid permission errors\n        pagination.data = pagination.data.map(entry => {\n            entry.url += `?shareable_link=${this.data.link.id}`;\n            if (this.password) {\n                entry.url += `&password=${this.password}`;\n            }\n            return entry;\n        });\n        this.pagination$.next(pagination);\n    }\n\n    protected loadMoreItems() {\n        const page = this.pagination$.value.current_page + 1;\n        this.loadChildren({page}, false);\n    }\n\n    protected canLoadMore() {\n        return this.pagination$.value.current_page < this.pagination$.value.last_page;\n    }\n\n    protected isLoading() {\n        return this.loading$.value;\n    }\n}\n","<ng-container *ngIf=\"data$ | async as data\">\n    <link-preview-password-panel *ngIf=\"passwordPanelVisible$ | async; else filePreview\" [link]=\"data.link\" (passwordValid)=\"setValidPassword($event)\"></link-preview-password-panel>\n\n    <ng-template #filePreview>\n        <ng-container *ngIf=\"data.link.entry.type === 'folder'\">\n            <folder-preview [data]=\"data\" [password]=\"this.password\">\n                <ng-container *ngIf=\"!(entryAlreadyImported$ | async) && currentUser.isLoggedIn()\">\n                    <span class=\"action-separator\"></span>\n                    <button\n                            mat-flat-button\n                            color=\"accent\"\n                            (click)=\"import()\"\n                            trans\n                    >Import</button>\n                </ng-container>\n            </folder-preview>\n        </ng-container>\n\n        <ng-container *ngIf=\"data.link.entry.type !== 'folder'\">\n            <file-preview-toolbar [showLogo]=\"true\" [disableDownload]=\"!data.link.allow_download\">\n                <a mat-flat-button color=\"accent\" routerLink=\"/login\" *ngIf=\"!currentUser.isLoggedIn()\" trans>Sign In</a>\n                <button\n                        mat-flat-button\n                        color=\"accent\"\n                        (click)=\"import()\"\n                        *ngIf=\"!(entryAlreadyImported$ | async) && currentUser.isLoggedIn()\"\n                        trans\n                >Import</button>\n            </file-preview-toolbar>\n            <ad-host slot=\"ads.file-preview\" class=\"file-preview-vert-host\"></ad-host>\n            <preview-container [files]=\"[data.link.entry]\" [class.has-rek]=\"settings.has('ads.file-preview')\"></preview-container>\n        </ng-container>\n    </ng-template>\n</ng-container>\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, OnDestroy, ElementRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { GetLinkData, ShareableLinksApiService } from '../../sharing/links/shareable-links-api.service';\nimport { BehaviorSubject, fromEvent, Observable, Subscription } from 'rxjs';\nimport { PreviewFilesService } from '@common/file-preview/preview-files.service';\nimport { Settings } from '@common/core/config/settings.service';\nimport { CurrentUser } from '@common/auth/current-user';\nimport { filter, map } from 'rxjs/operators';\nimport { Toast } from '@common/core/ui/toast.service';\nimport { Store } from '@ngxs/store';\nimport { DownloadEntries, SetViewMode } from '../../state/actions/commands';\nimport { ShareableLink } from '../../sharing/links/models/shareable-link';\nimport { VIEW_MODE_KEY } from '../../state/models/drive-state-model';\nimport { LocalStorage } from '@common/core/services/local-storage.service';\n\n@Component({\n    selector: 'link-preview-container',\n    templateUrl: './link-preview-container.component.html',\n    styleUrls: ['./link-preview-container.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        PreviewFilesService,\n    ]\n})\nexport class LinkPreviewContainerComponent implements OnInit, OnDestroy {\n    public data$: BehaviorSubject<GetLinkData> = new BehaviorSubject(null);\n    public passwordPanelVisible$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n    public password: string;\n    private downloadSub: Subscription;\n\n    /**\n     * Check if current user owns this entry or\n     * already has it imported into their drive.\n     */\n    public get entryAlreadyImported$(): Observable<boolean> {\n        const userId = this.currentUser.get('id');\n        return this.data$.pipe(\n            map(data => data.link),\n            filter(link => !!link && !!link.entry && !!link.entry.users),\n            map(link => link.entry),\n            map(entry => !!entry.users.find(user => user.id === userId))\n        );\n    }\n\n    constructor(\n        private store: Store,\n        private route: ActivatedRoute,\n        private links: ShareableLinksApiService,\n        public previewFiles: PreviewFilesService,\n        public settings: Settings,\n        public currentUser: CurrentUser,\n        private router: Router,\n        private toast: Toast,\n        private el: ElementRef<HTMLElement>,\n        private localStorage: LocalStorage,\n    ) {}\n\n    ngOnInit() {\n        this.bindToDownload();\n        this.disableContextMenu();\n        this.setViewMode();\n        this.route.params.subscribe(params => {\n            this.links.findByHash(params.hash, {withEntries: true}).subscribe(response => {\n                const linkChanged = response.link.id !== (this.data$.value && this.data$.value.link.id);\n                this.data$.next(response);\n                this.setBackgroundClass(response.link);\n\n                // prevent asking password for nested folders, if user already entered password\n                if (response.link.password && (linkChanged || !this.password)) {\n                    this.togglePasswordPanel(true);\n                } else {\n                    this.togglePasswordPanel(false);\n                    this.showPreview();\n                }\n            }, () => {\n                this.router.navigate(['/404']);\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.downloadSub.unsubscribe();\n    }\n\n    public import() {\n        this.links.importEntry(this.data$.value.link.id, this.password)\n            .subscribe(response => {\n                const link = this.data$.value.link;\n                link.entry.users = response.users;\n                this.data$.next({...this.data$.value, link});\n                this.toast.open({\n                    message: `\":name\" imported into your drive.`,\n                    replacements: {name: link.entry.name},\n                });\n            });\n    }\n\n    public togglePasswordPanel(value: boolean) {\n        this.passwordPanelVisible$.next(value);\n    }\n\n    private bindToDownload() {\n        this.downloadSub = this.previewFiles.download.subscribe(() => {\n            const link = this.data$.value.link;\n            this.store.dispatch(new DownloadEntries([link.entry], link, this.password));\n        });\n    }\n\n    /**\n     * Show preview for shareable link files.\n     */\n    private showPreview() {\n        const data = this.data$.value;\n        data.link.entry.url += `?shareable_link=${data.link.id}`;\n        if (this.password) {\n            data.link.entry.url += `&password=${this.password}`;\n        }\n        this.data$.next({...data});\n    }\n\n    public setValidPassword(password: string) {\n        this.password = password;\n        this.showPreview();\n        this.togglePasswordPanel(false);\n    }\n\n    private setBackgroundClass(link: ShareableLink) {\n        const className = link.entry.type === 'folder' ? 'folder-link' : 'file-link';\n        this.el.nativeElement.classList.add(className);\n    }\n\n    private disableContextMenu() {\n        fromEvent(this.el.nativeElement, 'contextmenu')\n            .subscribe(e => {\n                e.preventDefault();\n            });\n    }\n\n    private setViewMode() {\n        this.store.dispatch(new SetViewMode(\n            this.localStorage.get(VIEW_MODE_KEY, this.settings.get('drive.default_view', 'grid')))\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DriveComponent } from './drive.component';\nimport { EntriesContainerComponent } from './entries/entries-container/entries-container.component';\nimport { LinkPreviewContainerComponent } from './preview/link-preview-container/link-preview-container.component';\nimport { AuthGuard } from '@common/guards/auth-guard.service';\nimport { CheckPermissionsGuard } from '../../common/guards/check-permissions-guard.service';\n\nconst dashboardRoutes: Routes = [\n    // shareable links can be accessed by guests\n    {\n        path: 's/:hash',\n        component: LinkPreviewContainerComponent,\n    },\n\n    // main drive routes can only be accessed by logged in users\n    {\n        path: '',\n        component: DriveComponent,\n        canActivate: [AuthGuard, CheckPermissionsGuard],\n        children: [\n            { path: '', component: EntriesContainerComponent},\n            { path: 'shares', component: EntriesContainerComponent},\n            { path: 'search', component: EntriesContainerComponent},\n            { path: 'recent', component: EntriesContainerComponent},\n            { path: 'starred', component: EntriesContainerComponent},\n            { path: 'trash', component: EntriesContainerComponent},\n            { path: 'folders/:hash', component: EntriesContainerComponent},\n            {\n                path: 'workspaces',\n                loadChildren: () => import('src/app/drive/workspace-wrapper.module').then(m => m.WorkspaceWrapperModule)\n            },\n        ]\n    },\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule.forChild(dashboardRoutes)\n    ],\n    exports: [\n        RouterModule\n    ],\n})\nexport class DriveRoutingModule {}\n","import { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { _getShadowRoot, Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base reference size of the spinner.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/common';\n\nfunction MatProgressSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r0._spinnerAnimationLabel)(\"stroke-dashoffset\", ctx_r0._getStrokeDashOffset(), \"px\")(\"stroke-dasharray\", ctx_r0._getStrokeCircumference(), \"px\")(\"stroke-width\", ctx_r0._getCircleStrokeWidth(), \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r0._getCircleRadius());\n} }\nfunction MatProgressSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r1._getStrokeDashOffset(), \"px\")(\"stroke-dasharray\", ctx_r1._getStrokeCircumference(), \"px\")(\"stroke-width\", ctx_r1._getCircleStrokeWidth(), \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r1._getCircleRadius());\n} }\nfunction MatSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r0._spinnerAnimationLabel)(\"stroke-dashoffset\", ctx_r0._getStrokeDashOffset(), \"px\")(\"stroke-dasharray\", ctx_r0._getStrokeCircumference(), \"px\")(\"stroke-width\", ctx_r0._getCircleStrokeWidth(), \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r0._getCircleRadius());\n} }\nfunction MatSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r1._getStrokeDashOffset(), \"px\")(\"stroke-dasharray\", ctx_r1._getStrokeCircumference(), \"px\")(\"stroke-width\", ctx_r1._getCircleStrokeWidth(), \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r1._getCircleRadius());\n} }\nconst _c0 = \".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:currentColor}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\";\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n * @docs-private\n */\nconst BASE_STROKE_WIDTH = 10;\n// Boilerplate for applying mixins to MatProgressSpinner.\n/** @docs-private */\nclass MatProgressSpinnerBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatProgressSpinnerMixinBase = mixinColor(MatProgressSpinnerBase, 'primary');\n/** Injection token to be used to override the default options for `mat-progress-spinner`. */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n// .0001 percentage difference is necessary in order to avoid unwanted animation frames\n// for example because the animation duration is 4 seconds, .1% accounts to 4ms\n// which are enough to see the flicker described in\n// https://github.com/angular/components/issues/8984\nconst INDETERMINATE_ANIMATION_TEMPLATE = `\n @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\n    0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\n    12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\n    12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\n    25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\n\n    25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\n    37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\n    37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\n    50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\n\n    50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\n    62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\n    62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\n    75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\n\n    75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\n    87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\n    87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\n    100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\n  }\n`;\n/**\n * `<mat-progress-spinner>` component.\n */\nclass MatProgressSpinner extends _MatProgressSpinnerMixinBase {\n    constructor(_elementRef, platform, _document, animationMode, defaults) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._document = _document;\n        this._diameter = BASE_SIZE;\n        this._value = 0;\n        this._fallbackAnimation = false;\n        /** Mode of the progress circle */\n        this.mode = 'determinate';\n        const trackedDiameters = MatProgressSpinner._diameters;\n        this._spinnerAnimationLabel = this._getSpinnerAnimationLabel();\n        // The base size is already inserted via the component's structural styles. We still\n        // need to track it so we don't end up adding the same styles again.\n        if (!trackedDiameters.has(_document.head)) {\n            trackedDiameters.set(_document.head, new Set([BASE_SIZE]));\n        }\n        this._fallbackAnimation = platform.EDGE || platform.TRIDENT;\n        this._noopAnimations = animationMode === 'NoopAnimations' &&\n            (!!defaults && !defaults._forceAnimations);\n        if (defaults) {\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n    }\n    /** The diameter of the progress spinner (will set width and height of svg). */\n    get diameter() { return this._diameter; }\n    set diameter(size) {\n        this._diameter = coerceNumberProperty(size);\n        this._spinnerAnimationLabel = this._getSpinnerAnimationLabel();\n        // If this is set before `ngOnInit`, the style root may not have been resolved yet.\n        if (!this._fallbackAnimation && this._styleRoot) {\n            this._attachStyleNode();\n        }\n    }\n    /** Stroke width of the progress spinner. */\n    get strokeWidth() {\n        return this._strokeWidth || this.diameter / 10;\n    }\n    set strokeWidth(value) {\n        this._strokeWidth = coerceNumberProperty(value);\n    }\n    /** Value of the progress circle. */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    set value(newValue) {\n        this._value = Math.max(0, Math.min(100, coerceNumberProperty(newValue)));\n    }\n    ngOnInit() {\n        const element = this._elementRef.nativeElement;\n        // Note that we need to look up the root node in ngOnInit, rather than the constructor, because\n        // Angular seems to create the element outside the shadow root and then moves it inside, if the\n        // node is inside an `ngIf` and a ShadowDom-encapsulated component.\n        this._styleRoot = _getShadowRoot(element) || this._document.head;\n        this._attachStyleNode();\n        // On IE and Edge, we can't animate the `stroke-dashoffset`\n        // reliably so we fall back to a non-spec animation.\n        const animationClass = `mat-progress-spinner-indeterminate${this._fallbackAnimation ? '-fallback' : ''}-animation`;\n        element.classList.add(animationClass);\n    }\n    /** The radius of the spinner, adjusted for stroke width. */\n    _getCircleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /** The view box of the spinner's svg element. */\n    _getViewBox() {\n        const viewBox = this._getCircleRadius() * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /** The stroke circumference of the svg circle. */\n    _getStrokeCircumference() {\n        return 2 * Math.PI * this._getCircleRadius();\n    }\n    /** The dash offset of the svg circle. */\n    _getStrokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return this._getStrokeCircumference() * (100 - this._value) / 100;\n        }\n        // In fallback mode set the circle to 80% and rotate it with CSS.\n        if (this._fallbackAnimation && this.mode === 'indeterminate') {\n            return this._getStrokeCircumference() * 0.2;\n        }\n        return null;\n    }\n    /** Stroke width of the circle in percent. */\n    _getCircleStrokeWidth() {\n        return this.strokeWidth / this.diameter * 100;\n    }\n    /** Dynamically generates a style tag containing the correct animation for this diameter. */\n    _attachStyleNode() {\n        const styleRoot = this._styleRoot;\n        const currentDiameter = this._diameter;\n        const diameters = MatProgressSpinner._diameters;\n        let diametersForElement = diameters.get(styleRoot);\n        if (!diametersForElement || !diametersForElement.has(currentDiameter)) {\n            const styleTag = this._document.createElement('style');\n            styleTag.setAttribute('mat-spinner-animation', this._spinnerAnimationLabel);\n            styleTag.textContent = this._getAnimationText();\n            styleRoot.appendChild(styleTag);\n            if (!diametersForElement) {\n                diametersForElement = new Set();\n                diameters.set(styleRoot, diametersForElement);\n            }\n            diametersForElement.add(currentDiameter);\n        }\n    }\n    /** Generates animation styles adjusted for the spinner's diameter. */\n    _getAnimationText() {\n        const strokeCircumference = this._getStrokeCircumference();\n        return INDETERMINATE_ANIMATION_TEMPLATE\n            // Animation should begin at 5% and end at 80%\n            .replace(/START_VALUE/g, `${0.95 * strokeCircumference}`)\n            .replace(/END_VALUE/g, `${0.2 * strokeCircumference}`)\n            .replace(/DIAMETER/g, `${this._spinnerAnimationLabel}`);\n    }\n    /** Returns the circle diameter formatted for use with the animation-name CSS property. */\n    _getSpinnerAnimationLabel() {\n        // The string of a float point number will include a period ‘.’ character,\n        // which is not valid for a CSS animation-name.\n        return this.diameter.toString().replace('.', '_');\n    }\n}\nMatProgressSpinner.ɵfac = function MatProgressSpinner_Factory(t) { return new (t || MatProgressSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatProgressSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatProgressSpinner, selectors: [[\"mat-progress-spinner\"]], hostAttrs: [\"role\", \"progressbar\", 1, \"mat-progress-spinner\"], hostVars: 10, hostBindings: function MatProgressSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuemin\", ctx.mode === \"determinate\" ? 0 : null)(\"aria-valuemax\", ctx.mode === \"determinate\" ? 100 : null)(\"aria-valuenow\", ctx.mode === \"determinate\" ? ctx.value : null)(\"mode\", ctx.mode);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\", mode: \"mode\", diameter: \"diameter\", strokeWidth: \"strokeWidth\", value: \"value\" }, exportAs: [\"matProgressSpinner\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatProgressSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatProgressSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatProgressSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._getViewBox());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [_c0], encapsulation: 2, changeDetection: 0 });\n/**\n * Tracks diameters of existing instances to de-dupe generated styles (default d = 100).\n * We need to keep track of which elements the diameters were attached to, because for\n * elements in the Shadow DOM the style tags are attached to the shadow root, rather\n * than the document head.\n */\nMatProgressSpinner._diameters = new WeakMap();\nMatProgressSpinner.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n];\nMatProgressSpinner.propDecorators = {\n    diameter: [{ type: Input }],\n    strokeWidth: [{ type: Input }],\n    mode: [{ type: Input }],\n    value: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-progress-spinner',\n                exportAs: 'matProgressSpinner',\n                host: {\n                    'role': 'progressbar',\n                    'class': 'mat-progress-spinner',\n                    '[class._mat-animation-noopable]': `_noopAnimations`,\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter',\n                    '[attr.aria-valuemin]': 'mode === \"determinate\" ? 0 : null',\n                    '[attr.aria-valuemax]': 'mode === \"determinate\" ? 100 : null',\n                    '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                    '[attr.mode]': 'mode'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_getViewBox()\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + _spinnerAnimationLabel\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:currentColor}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, { mode: [{\n            type: Input\n        }], diameter: [{\n            type: Input\n        }], strokeWidth: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\n/**\n * `<mat-spinner>` component.\n *\n * This is a component definition to be used as a convenience reference to create an\n * indeterminate `<mat-progress-spinner>` instance.\n */\nclass MatSpinner extends MatProgressSpinner {\n    constructor(elementRef, platform, document, animationMode, defaults) {\n        super(elementRef, platform, document, animationMode, defaults);\n        this.mode = 'indeterminate';\n    }\n}\nMatSpinner.ɵfac = function MatSpinner_Factory(t) { return new (t || MatSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSpinner, selectors: [[\"mat-spinner\"]], hostAttrs: [\"role\", \"progressbar\", \"mode\", \"indeterminate\", 1, \"mat-spinner\", \"mat-progress-spinner\"], hostVars: 6, hostBindings: function MatSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._getViewBox());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [_c0], encapsulation: 2, changeDetection: 0 });\nMatSpinner.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-spinner',\n                host: {\n                    'role': 'progressbar',\n                    'mode': 'indeterminate',\n                    'class': 'mat-spinner mat-progress-spinner',\n                    '[class._mat-animation-noopable]': `_noopAnimations`,\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_getViewBox()\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + _spinnerAnimationLabel\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:currentColor}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatProgressSpinnerModule {\n}\nMatProgressSpinnerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatProgressSpinnerModule });\nMatProgressSpinnerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatProgressSpinnerModule_Factory(t) { return new (t || MatProgressSpinnerModule)(); }, imports: [[MatCommonModule, CommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatProgressSpinnerModule, { declarations: function () { return [MatProgressSpinner, MatSpinner]; }, imports: function () { return [MatCommonModule, CommonModule]; }, exports: function () { return [MatProgressSpinner, MatSpinner, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinnerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, CommonModule],\n                exports: [\n                    MatProgressSpinner,\n                    MatSpinner,\n                    MatCommonModule\n                ],\n                declarations: [\n                    MatProgressSpinner,\n                    MatSpinner\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n\n//# sourceMappingURL=progress-spinner.js.map","import { DriveContextMenuComponent } from './components/drive-context-menu/drive-context-menu.component';\r\n\r\nexport const DRIVE_CONTEXT_MENUS = {\r\n    entry: DriveContextMenuComponent,\r\n};\r\n","<file-icon [mime]=\"upload.uploadedFile.mime\"></file-icon>\n<div class=\"content\">\n    <div class=\"meta\">\n        <div class=\"name\" [matTooltip]=\"upload.uploadedFile.name\">{{upload.uploadedFile.name}}</div>\n        <div class=\"time-left\" *ngIf=\"progress.percentage && progress.percentage < 100 && !upload.error$.value\">\n            {{progress.eta}}\n            <span trans>left</span>\n        </div>\n        <div class=\"actions\">\n            <mat-icon\n                    svgIcon=\"error\"\n                    *ngIf=\"upload.error$ | async as error; else noError\"\n                    class=\"error-icon\"\n                    [matTooltip]=\"error | trans\"\n                    matTooltipPosition=\"left\"\n            ></mat-icon>\n            <ng-template #noError>\n                <mat-icon svgIcon=\"check-circle\" *ngIf=\"upload.completed\" class=\"completed-icon\"></mat-icon>\n                <span class=\"cancel-button\" *ngIf=\"!upload.completed\" (click)=\"cancelUpload(upload)\" trans>Cancel</span>\n            </ng-template>\n        </div>\n    </div>\n    <mat-progress-bar mode=\"determinate\" [value]=\"progress.percentage\" color=\"accent\"></mat-progress-bar>\n</div>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { UploadQueueItem, UploadQueueItemProgress } from '@common/uploads/upload-queue/upload-queue-item';\nimport { UploadQueueService } from '@common/uploads/upload-queue/upload-queue.service';\nimport { Store } from '@ngxs/store';\nimport { CloseUploadsPanel } from '../../../state/actions/commands';\nimport { throttleTime } from 'rxjs/operators';\nimport { animationFrameScheduler, Subscription } from 'rxjs';\n\n@Component({\n    selector: 'uploads-panel-item',\n    templateUrl: './uploads-panel-item.component.html',\n    styleUrls: ['./uploads-panel-item.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UploadsPanelItemComponent implements OnInit, OnDestroy {\n    @Input() upload: UploadQueueItem;\n    public progress: UploadQueueItemProgress = {};\n    private subscription: Subscription;\n\n    constructor(\n        private uploadQueue: UploadQueueService,\n        private store: Store,\n        private cd: ChangeDetectorRef,\n    ) {}\n\n    ngOnInit() {\n        this.subscription = this.upload.progress$.pipe(\n            // material progress bar animation lasts 250ms\n            throttleTime(260, animationFrameScheduler, {leading: true, trailing: true}),\n        ).subscribe(progress => {\n            this.progress = progress;\n            this.cd.detectChanges();\n        });\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n\n    public cancelUpload(upload: UploadQueueItem) {\n        this.uploadQueue.remove(upload.id);\n        if (this.uploadQueue.isEmpty()) {\n            this.store.dispatch(new CloseUploadsPanel());\n        }\n    }\n}\n","<div class=\"header\">\n    <div class=\"info\">\n        <ng-container *ngIf=\"activeUploads.count$ | async as count\">\n            <ng-container *ngIf=\"count.pending > 0\">\n                {{ 'Uploading' | trans }} {{count.pending}} {{(count.pending > 1 ? 'Items' : 'Item') | trans}}\n            </ng-container>\n            <ng-container *ngIf=\"count.pending === 0\">\n                {{count.completed}} {{'items uploaded' | trans}}\n            </ng-container>\n        </ng-container>\n    </div>\n    <div class=\"actions\">\n        <button mat-icon-button (click)=\"toggleMinimized()\">\n            <mat-icon svgIcon=\"keyboard-arrow-up\" *ngIf=\"minimized$ | async; else notMinimized\" class=\"minimize-icon\"></mat-icon>\n            <ng-template #notMinimized>\n                <mat-icon svgIcon=\"keyboard-arrow-down\" class=\"minimize-icon\"></mat-icon>\n            </ng-template>\n        </button>\n        <button mat-icon-button (click)=\"close()\">\n            <mat-icon svgIcon=\"close\"></mat-icon>\n        </button>\n    </div>\n</div>\n\n<div class=\"uploads-list\" [class.hidden]=\"minimized$ | async\">\n    <uploads-panel-item *ngFor=\"let upload of activeUploads.uploads$ | async; trackBy: trackById\" [upload]=\"upload\"></uploads-panel-item>\n</div>\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { UploadQueueService } from '@common/uploads/upload-queue/upload-queue.service';\nimport { UploadQueueItem } from '@common/uploads/upload-queue/upload-queue-item';\nimport { Store } from '@ngxs/store';\nimport { CloseUploadsPanel } from '../../state/actions/commands';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n    selector: 'uploads-panel',\n    templateUrl: './uploads-panel.component.html',\n    styleUrls: ['./uploads-panel.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UploadsPanelComponent implements OnDestroy {\n    public minimized$ = new BehaviorSubject(false);\n\n    constructor(\n        private store: Store,\n        public activeUploads: UploadQueueService,\n    ) {\n    }\n\n    ngOnDestroy() {\n        this.activeUploads.reset();\n    }\n\n    public toggleMinimized() {\n        this.minimized$.next(!this.minimized$.value);\n    }\n\n    public close() {\n        this.store.dispatch(new CloseUploadsPanel());\n    }\n\n    public trackById(index: number, upload: UploadQueueItem) {\n        return upload.id;\n    }\n}\n","import { Actions, ofActionSuccessful, Store } from '@ngxs/store';\r\nimport { DownloadEntries } from '../actions/commands';\r\nimport { DriveState } from '../drive-state';\r\nimport { downloadFileFromUrl } from '@common/uploads/utils/download-file-from-url';\r\nimport { Settings } from '@common/core/config/settings.service';\r\nimport { FileEntry } from '@common/uploads/types/file-entry';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DownloadHandler {\r\n    constructor(\r\n        private actions$: Actions,\r\n        private store: Store,\r\n        private settings: Settings,\r\n    ) {\r\n        this.actions$.pipe(ofActionSuccessful(DownloadEntries))\r\n            .subscribe((action: DownloadEntries) => {\r\n                downloadFileFromUrl(this.getDownloadUrl(action));\r\n            });\r\n    }\r\n\r\n    private getDownloadUrl(action: DownloadEntries): string {\r\n        const hashes = this.getEntryHashes(action.entries);\r\n        let base = `${this.settings.getBaseUrl()}secure/uploads/download?hashes=${hashes}`;\r\n        if (action.link) base += `&shareable_link=${action.link.id}`;\r\n        if (action.password) base += `&password=${action.password}`;\r\n        return base;\r\n    }\r\n\r\n    /**\r\n     * Get hashes string for specified entries or for currently selected entries.\r\n     */\r\n    private getEntryHashes(entries?: FileEntry[]): string {\r\n        if ( ! entries) {\r\n            entries = this.store.selectSnapshot(DriveState.selectedEntries);\r\n        }\r\n\r\n        return entries.map(entry => entry.hash).join(',');\r\n    }\r\n}\r\n","import { Actions, ofActionSuccessful, Store } from '@ngxs/store';\r\nimport { OpenFilePreview } from '../actions/commands';\r\nimport { OverlayPanel } from '@common/core/ui/overlay-panel/overlay-panel.service';\r\nimport { FilePreviewOverlayComponent } from '../../preview/file-preview-overlay/file-preview-overlay.component';\r\nimport { DriveState } from '../drive-state';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class OverlayHandler {\r\n    constructor(\r\n        private store: Store,\r\n        private actions$: Actions,\r\n        private overlay: OverlayPanel,\r\n    ) {\r\n        this.actions$.pipe(ofActionSuccessful(OpenFilePreview))\r\n            .subscribe((action: OpenFilePreview) => {\r\n                const entries = this.store.selectSnapshot(DriveState.entries).filter(e => e.type !== 'folder');\r\n                const selectedEntry = this.store.selectSnapshot(DriveState.selectedEntry);\r\n                const activeEntry = entries.findIndex(e => e.id === selectedEntry?.id);\r\n                this.overlay.open(FilePreviewOverlayComponent, {\r\n                    position: 'center',\r\n                    origin: 'global',\r\n                    panelClass: 'file-preview-overlay-container',\r\n                    data: {entries: entries.slice(), activeEntry: activeEntry === -1 ? 0 : activeEntry},\r\n                });\r\n            });\r\n    }\r\n}\r\n","import { Actions, ofAction, ofActionSuccessful, Store } from '@ngxs/store';\r\nimport { AddStar, HideLoadingToast, RemoveStar, RestoreTrashedEntries, ShowLoadingToast } from '../actions/commands';\r\nimport {\r\n    EntryRenamed,\r\n    FileDeleteSuccess,\r\n    MoveEntriesFailed,\r\n    MoveEntriesSuccess,\r\n    NewFolderCreated, NotEnoughSpaceError,\r\n    TrashedEntriesDeleteSuccess,\r\n    TrashedEntriesRestoreSuccess\r\n} from '../actions/events';\r\nimport { Toast } from '@common/core/ui/toast.service';\r\nimport { LinkCopySuccess } from '../../sharing/links/share-link.state';\r\nimport { Router } from '@angular/router';\r\nimport { LoadingToastComponent } from '../../messages/loading-toast/loading-toast.component';\r\nimport { MatSnackBarRef } from '@angular/material/snack-bar';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ToastHandler {\r\n    constructor(\r\n        private actions$: Actions,\r\n        private toast: Toast,\r\n        private store: Store,\r\n        private router: Router,\r\n    ) {\r\n        this.entriesDeleted();\r\n        this.entriesStarred();\r\n        this.entriesUnstarred();\r\n        this.entriesMoveFailed();\r\n        this.folderCreated();\r\n        this.entriesMoved();\r\n        this.entriesDeletedForever();\r\n        this.entriesRestoredFromTrash();\r\n        this.entryRenamed();\r\n        this.linkCopiedToClipboard();\r\n        this.notEnoughSpace();\r\n        this.loadingToast();\r\n    }\r\n\r\n    private entriesDeleted() {\r\n        this.actions$\r\n            .pipe(ofAction(FileDeleteSuccess))\r\n            .subscribe((action: FileDeleteSuccess) => {\r\n                const msg = {message: `Deleted :count items.`, replacements: {count: action.deletedFiles.length}};\r\n                this.toast.open(msg, {action: 'UNDO'})\r\n                    .onAction().subscribe(() => {\r\n                        this.store.dispatch(new RestoreTrashedEntries(action.deletedFiles));\r\n                    });\r\n            });\r\n    }\r\n\r\n    private entriesStarred() {\r\n        this.actions$\r\n            .pipe(ofActionSuccessful(AddStar))\r\n            .subscribe((action: AddStar) => {\r\n                this.toast.open(`Star added.`, {action: 'UNDO'}).onAction()\r\n                    .subscribe(() => {\r\n                        this.store.dispatch(new RemoveStar(action.entries));\r\n                    });\r\n            });\r\n    }\r\n\r\n    private entriesUnstarred() {\r\n        this.actions$\r\n            .pipe(ofActionSuccessful(RemoveStar))\r\n            .subscribe((action: RemoveStar) => {\r\n                this.toast.open(`Star Removed.`, {action: 'UNDO'}).onAction()\r\n                    .subscribe(() => {\r\n                        this.store.dispatch(new AddStar(action.entries));\r\n                    });\r\n            });\r\n    }\r\n\r\n    private entriesMoved() {\r\n        this.actions$.pipe(ofAction(MoveEntriesSuccess))\r\n            .subscribe((action: MoveEntriesSuccess) => {\r\n                this.toast.open(\r\n                    {message: 'Moved :count items.', replacements: {count: action.entries.length}}\r\n                );\r\n            });\r\n    }\r\n\r\n    private entriesMoveFailed() {\r\n        this.actions$.pipe(ofAction(MoveEntriesFailed))\r\n            .subscribe(() => {\r\n                this.toast.open('There was an issue with moving selected items.');\r\n            });\r\n    }\r\n\r\n    private folderCreated() {\r\n        this.actions$.pipe(ofAction(NewFolderCreated))\r\n            .subscribe(() => {\r\n                this.toast.open('Folder created.');\r\n            });\r\n    }\r\n\r\n    private entriesDeletedForever() {\r\n        this.actions$.pipe(ofActionSuccessful(TrashedEntriesDeleteSuccess))\r\n            .subscribe((action: TrashedEntriesDeleteSuccess) => {\r\n                this.toast.open({\r\n                    message: `Permanently deleted :count items.`,\r\n                    replacements: {count: action.entries.length}\r\n                });\r\n            });\r\n    }\r\n\r\n    private entriesRestoredFromTrash() {\r\n        this.actions$.pipe(ofActionSuccessful(TrashedEntriesRestoreSuccess))\r\n            .subscribe((action: TrashedEntriesRestoreSuccess) => {\r\n                this.toast.open({\r\n                    message: `Restored :count items.`,\r\n                    replacements: {count: action.entries.length}\r\n                });\r\n            });\r\n    }\r\n\r\n    private entryRenamed() {\r\n        this.actions$.pipe(ofActionSuccessful(EntryRenamed))\r\n            .subscribe((action: EntryRenamed) => {\r\n                this.toast.open({\r\n                    message: `:oldName renamed to :newName`,\r\n                    replacements: {oldName: action.entry.name, newName: action.newName}\r\n                });\r\n            });\r\n\r\n    }\r\n\r\n    private linkCopiedToClipboard() {\r\n        this.actions$.pipe(ofActionSuccessful(LinkCopySuccess))\r\n            .subscribe(() => {\r\n                this.toast.open(`Link copied to clipboard.`);\r\n            });\r\n    }\r\n\r\n    private notEnoughSpace() {\r\n        this.actions$.pipe(ofActionSuccessful(NotEnoughSpaceError))\r\n            .subscribe(() => {\r\n                this.toast.open(`You are out of space. Try to delete some files.`, {action: 'Upgrade'})\r\n                    .onAction().subscribe(() => {\r\n                        this.router.navigate(['/billing/upgrade']);\r\n                    });\r\n            });\r\n    }\r\n\r\n    private loadingToast() {\r\n        let toastRef: MatSnackBarRef<any>;\r\n\r\n        this.actions$.pipe(ofActionSuccessful(ShowLoadingToast))\r\n            .subscribe((action: ShowLoadingToast) => {\r\n                toastRef = this.toast.openComponent(LoadingToastComponent, {duration: 0, data: {message: action.message}});\r\n            });\r\n\r\n        this.actions$.pipe(ofActionSuccessful(HideLoadingToast))\r\n            .subscribe(() => {\r\n                if (toastRef) {\r\n                    toastRef.dismiss();\r\n                    toastRef = null;\r\n                }\r\n            });\r\n    }\r\n}\r\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\n\n@Component({\n    selector: 'loading-toast',\n    templateUrl: './loading-toast.component.html',\n    styleUrls: ['./loading-toast.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LoadingToastComponent {\n    constructor(@Inject(MAT_SNACK_BAR_DATA) public data: {message: string}) {}\n}\n","import { Actions, ofActionDispatched, Store } from '@ngxs/store';\r\nimport { OpenConfirmDialog, OpenDialog } from '../actions/commands';\r\nimport { Injectable } from '@angular/core';\r\nimport { Modal } from '@common/core/ui/dialogs/modal.service';\r\nimport { ConfirmModalComponent } from '@common/core/ui/confirm-modal/confirm-modal.component';\r\n\r\n@Injectable()\r\nexport class DialogHandler {\r\n    constructor(\r\n        private actions$: Actions,\r\n        private dialog: Modal,\r\n        private store: Store,\r\n    ) {\r\n        this.actions$.pipe(ofActionDispatched(OpenDialog))\r\n            .subscribe((action: OpenDialog) => {\r\n                this.dialog.open(action.dialog, action.data, action.config);\r\n            });\r\n\r\n        this.actions$.pipe(ofActionDispatched(OpenConfirmDialog))\r\n            .subscribe((action: OpenConfirmDialog) => {\r\n                this.openConfirmDialog(action);\r\n            });\r\n    }\r\n\r\n    private openConfirmDialog(action: OpenConfirmDialog) {\r\n        this.dialog.open(ConfirmModalComponent, action.data)\r\n            .beforeClosed()\r\n            .subscribe(confirmed => {\r\n                if ( ! confirmed) return;\r\n                return this.store.dispatch(action.confirmAction);\r\n            });\r\n    }\r\n}\r\n","import { Actions, ofActionSuccessful } from '@ngxs/store';\r\nimport { CloseUploadsPanel, OpenUploadsPanel } from '../actions/commands';\r\nimport { OverlayPanel } from '@common/core/ui/overlay-panel/overlay-panel.service';\r\nimport { UploadsPanelComponent } from '../../uploads/uploads-panel/uploads-panel.component';\r\nimport { OverlayPanelRef } from '@common/core/ui/overlay-panel/overlay-panel-ref';\r\nimport { CurrentUser } from '@common/auth/current-user';\r\nimport { OverlayPanelConfig } from '@common/core/ui/overlay-panel/overlay-panel-config';\r\nimport { Injectable } from '@angular/core';\r\n\r\nconst overlayConfig: OverlayPanelConfig = {\r\n    origin: 'global',\r\n    hasBackdrop: false,\r\n    position: {right: '10px', bottom: '10px'},\r\n    mobilePosition: {left: 0, bottom: 0}\r\n};\r\n\r\n@Injectable()\r\nexport class UploadPanelHandler {\r\n    private uploadPanelRef: OverlayPanelRef<UploadsPanelComponent>;\r\n\r\n    constructor(\r\n        private actions$: Actions,\r\n        private currentUser: CurrentUser,\r\n        private overlayPanel: OverlayPanel,\r\n    ) {\r\n        this.actions$\r\n            .pipe(ofActionSuccessful(OpenUploadsPanel))\r\n            .subscribe(() => {\r\n                this.openUploadsPanel();\r\n            });\r\n\r\n        this.actions$\r\n            .pipe(ofActionSuccessful(CloseUploadsPanel))\r\n            .subscribe(() => {\r\n               this.closeUploadsPanel();\r\n            });\r\n\r\n        this.currentUser.model$.subscribe(() => {\r\n            this.closeUploadsPanel();\r\n        });\r\n    }\r\n\r\n    public openUploadsPanel() {\r\n        if (this.uploadPanelRef) return;\r\n        this.uploadPanelRef = this.overlayPanel\r\n            .open(UploadsPanelComponent, overlayConfig);\r\n    }\r\n\r\n    private closeUploadsPanel() {\r\n        if ( ! this.uploadPanelRef) return;\r\n        this.uploadPanelRef.close();\r\n        this.uploadPanelRef = null;\r\n    }\r\n}\r\n","import { Actions, ofActionSuccessful, Store } from '@ngxs/store';\r\nimport { RemoveEntries, RemoveStar } from '../actions/commands';\r\nimport { filter } from 'rxjs/operators';\r\nimport { DriveState } from '../drive-state';\r\nimport { DRIVE_PAGE_NAMES } from '../models/drive-page';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class RemoveStarHandler {\r\n    constructor(\r\n        private actions$: Actions,\r\n        private store: Store\r\n    ) {\r\n        this.actions$.pipe(ofActionSuccessful(RemoveStar))\r\n            .pipe(filter(() => {\r\n                const name = this.store.selectSnapshot(DriveState.activePage).name;\r\n                return name === DRIVE_PAGE_NAMES.STARRED;\r\n            }))\r\n            .subscribe((action: RemoveStar) => {\r\n                this.store.dispatch(new RemoveEntries(action.entries));\r\n            });\r\n    }\r\n}\r\n","import { Actions, ofActionSuccessful, Store } from '@ngxs/store';\r\nimport { RouterNavigation, RouterState } from '@ngxs/router-plugin';\r\nimport {\r\n    FolderPageOpened,\r\n    RecentEntriesPageOpened,\r\n    SearchPageOpened,\r\n    SharesFolderOpened,\r\n    StarredPageOpened,\r\n    TrashPageOpened, WorkspacesIndexPageOpened,\r\n} from '../actions/events';\r\nimport { DRIVE_PAGE_NAMES } from '../models/drive-page';\r\nimport { filter } from 'rxjs/operators';\r\nimport { CurrentUser } from '@common/auth/current-user';\r\nimport { Injectable } from '@angular/core';\r\n\r\nconst LINK_PREVIEW_PAGE = 's';\r\n\r\n@Injectable()\r\nexport class PageLoadHandler {\r\n    constructor(\r\n        private store: Store,\r\n        private actions$: Actions,\r\n        private currentUser: CurrentUser,\r\n    ) {\r\n        this.actions$\r\n            .pipe(\r\n                ofActionSuccessful(RouterNavigation),\r\n                filter((action: RouterNavigation) => action.event.urlAfterRedirects.indexOf('drive') > -1),\r\n                filter(() => this.currentUser.isLoggedIn()),\r\n            )\r\n            .subscribe(() => {\r\n                const action = this.getPageLoadAction();\r\n                if (action) this.store.dispatch(action);\r\n            });\r\n    }\r\n\r\n    private getPageLoadAction() {\r\n        const params = this.getPageUriParams();\r\n        switch (params.pageName) {\r\n            case DRIVE_PAGE_NAMES.RECENT:\r\n                return new RecentEntriesPageOpened();\r\n            case DRIVE_PAGE_NAMES.TRASH:\r\n                return new TrashPageOpened();\r\n            case DRIVE_PAGE_NAMES.SHARES:\r\n                return new SharesFolderOpened();\r\n            case DRIVE_PAGE_NAMES.STARRED:\r\n                return new StarredPageOpened();\r\n            case DRIVE_PAGE_NAMES.SEARCH:\r\n                const state = this.store.selectSnapshot(RouterState.state);\r\n                const search = state.root.firstChild.queryParams;\r\n                return new SearchPageOpened({type: search.type, query: search.query});\r\n            case DRIVE_PAGE_NAMES.WORKSPACES:\r\n                return new WorkspacesIndexPageOpened();\r\n            case LINK_PREVIEW_PAGE:\r\n                return null;\r\n            default:\r\n                return new FolderPageOpened(params.folderHash);\r\n        }\r\n    }\r\n\r\n    private getPageUriParams() {\r\n        // remove query params\r\n        const uri = this.store.selectSnapshot(RouterState.url).split('?')[0];\r\n        const [, pageName, folderHash] = uri.split('/').filter(x => !!x);\r\n        return {pageName, folderHash};\r\n    }\r\n}\r\n","import { Store } from '@ngxs/store';\r\nimport { DeselectAllEntries } from '../actions/commands';\r\nimport { DriveState } from '../drive-state';\r\nimport { filter } from 'rxjs/operators';\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\nexport class PageChangeHandler {\r\n    constructor(\r\n        private store: Store\r\n    ) {\r\n        this.store.select(DriveState.activePage)\r\n            .pipe(filter(page => !!page))\r\n            .subscribe(() => {\r\n                this.store.dispatch(new DeselectAllEntries());\r\n            });\r\n    }\r\n}\r\n","import { Actions, ofActionSuccessful } from '@ngxs/store';\r\nimport { ReloadPageEntries } from '../actions/commands';\r\nimport { DriveDomCacheService } from '../../interactions/drive-dom-cache.service';\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\nexport class ResetScrollHandler {\r\n    constructor(\r\n        private actions$: Actions,\r\n        private domCache: DriveDomCacheService\r\n    ) {\r\n        this.actions$.pipe(ofActionSuccessful(ReloadPageEntries))\r\n            .subscribe(() => {\r\n                this.domCache.scrollCont.scrollTo({top: 0});\r\n            });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharingPermissionsButtonComponent } from './sharing-permissions-button/sharing-permissions-button.component';\nimport { ShareDialogComponent } from './share-dialog/share-dialog.component';\nimport { EntriesAccessTableComponent } from './entries-access-table/entries-access-table.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { LinkOptionsComponent } from './links/link-options/link-options.component';\nimport { ShareLinkDialogComponent } from './share-link-dialog/share-link-dialog.component';\nimport { NoSharedEntriesComponent } from './no-shared-entries/no-shared-entries.component';\nimport { TranslationsModule } from '@common/core/translations/translations.module';\nimport { LoadingIndicatorModule } from '@common/core/ui/loading-indicator/loading-indicator.module';\nimport { Modal } from '@common/core/ui/dialogs/modal.service';\nimport { ChipsModule } from '@common/core/ui/chips/chips.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        TranslationsModule,\n        LoadingIndicatorModule,\n\n        // material\n        MatSlideToggleModule,\n        MatTabsModule,\n        MatDialogModule,\n        ChipsModule,\n        MatIconModule,\n        MatMenuModule,\n        MatButtonModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n    ],\n    declarations: [\n        ShareDialogComponent,\n        EntriesAccessTableComponent,\n        SharingPermissionsButtonComponent,\n        LinkOptionsComponent,\n        ShareLinkDialogComponent,\n        NoSharedEntriesComponent,\n    ],\n    exports: [\n        NoSharedEntriesComponent,\n    ],\n    providers: [\n        Modal,\n    ]\n})\nexport class SharingModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ContextMenuDirective} from '@common/core/ui/context-menu/context-menu.directive';\n\n\n@NgModule({\n    declarations: [\n        ContextMenuDirective,\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        ContextMenuDirective,\n    ]\n})\nexport class ContextMenuModule {\n}\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {TextPreviewComponent} from './text-preview/text-preview.component';\r\nimport {AVAILABLE_PREVIEWS, DefaultPreviews} from './available-previews';\r\nimport {PreviewContainerComponent} from './preview-container/preview-container.component';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {VideoPreviewComponent} from './video-preview/video-preview.component';\r\nimport {ImagePreviewComponent} from './image-preview/image-preview.component';\r\nimport {PdfPreviewComponent} from './pdf-preview/pdf-preview.component';\r\nimport {DefaultPreviewComponent} from './default-preview/default-preview.component';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {AudioPreviewComponent} from './audio-preview/audio-preview.component';\r\nimport {GoogleDocsViewerComponent} from './google-docs-viewer/google-docs-viewer.component';\r\nimport {LoadingIndicatorModule} from '@common/core/ui/loading-indicator/loading-indicator.module';\r\nimport {OverlayPanel} from '@common/core/ui/overlay-panel/overlay-panel.service';\r\nimport {PreviewFilesService} from '@common/file-preview/preview-files.service';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n\r\n        // material\r\n        PortalModule,\r\n        MatButtonModule,\r\n        LoadingIndicatorModule,\r\n    ],\r\n    exports: [\r\n        PreviewContainerComponent,\r\n    ],\r\n    declarations: [\r\n        PreviewContainerComponent,\r\n        TextPreviewComponent,\r\n        VideoPreviewComponent,\r\n        ImagePreviewComponent,\r\n        PdfPreviewComponent,\r\n        DefaultPreviewComponent,\r\n        AudioPreviewComponent,\r\n        GoogleDocsViewerComponent\r\n    ],\r\n    providers: [\r\n        OverlayPanel,\r\n        PreviewFilesService,\r\n        {provide: AVAILABLE_PREVIEWS, useClass: DefaultPreviews},\r\n    ]\r\n})\r\nexport class FilePreviewModule {\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WorkspaceSelectorComponent } from './workspace-selector.component';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TranslationsModule } from '../../core/translations/translations.module';\nimport { MatButtonModule } from '@angular/material/button';\n\n\n\n@NgModule({\n  declarations: [\n      WorkspaceSelectorComponent,\n  ],\n  imports: [\n      CommonModule,\n      TranslationsModule,\n\n      // material\n      MatMenuModule,\n      MatButtonModule,\n      MatIconModule,\n  ],\n  exports: [\n      WorkspaceSelectorComponent,\n  ]\n})\nexport class WorkspaceSelectorModule { }\n","import { Injector, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DriveRoutingModule } from './drive-routing.module';\nimport { DriveComponent } from './drive.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { FoldersTreeComponent } from './sidebar/folders-tree/folders-tree.component';\nimport { FilesGridComponent } from './files/components/files-grid/files-grid.component';\nimport { FileThumbnailComponent } from './files/components/file-thumbnail/file-thumbnail.component';\nimport { FilesGridItemComponent } from './files/components/files-grid/files-grid-item/files-grid-item.component';\nimport { DriveHammerInteractionsDirective } from './interactions/drive-hammer-interactions.directive';\nimport { FileIconComponent } from './files/components/file-icon/file-icon.component';\nimport { DRIVE_CONTEXT_MENUS } from './context-actions/drive-context-menus';\nimport { DriveContextMenuComponent } from './context-actions/components/drive-context-menu/drive-context-menu.component';\nimport { SidebarActionButtonsComponent } from './sidebar/sidebar-action-buttons/sidebar-action-buttons.component';\nimport { CrupdateFolderDialogComponent } from './folders/components/crupdate-folder-dialog/crupdate-folder-dialog.component';\nimport { RenameEntryDialogComponent } from './entries/rename-entry-dialog/rename-entry-dialog.component';\nimport { EntryDragPreviewComponent } from './interactions/entry-drag-preview/entry-drag-preview.component';\nimport { EntryBreadcrumbsComponent } from './drive-toolbar/entry-breadcrumbs/entry-breadcrumbs.component';\nimport { UploadsPanelComponent } from './uploads/uploads-panel/uploads-panel.component';\nimport { MoveEntriesDialogComponent } from './entries/move-entries-dialog/move-entries-dialog.component';\nimport { FolderDropTargetDirective } from './interactions/drop-targets/folder-drop-target.directive';\nimport { DriveToolbarComponent } from './drive-toolbar/drive-toolbar.component';\nimport { ToolbarActionsComponent } from './drive-toolbar/toolbar-actions/toolbar-actions.component';\nimport { MainSearchbarComponent } from './search/main-searchbar/main-searchbar.component';\nimport { UploadDropzoneComponent } from './uploads/upload-dropzone/upload-dropzone.component';\nimport { EntriesContainerComponent } from './entries/entries-container/entries-container.component';\nimport { DetailsPanelComponent } from './details-sidebar/details-panel/details-panel.component';\nimport { FilePreviewOverlayComponent } from './preview/file-preview-overlay/file-preview-overlay.component';\nimport { FilePreviewToolbarComponent } from './preview/file-preview-overlay/file-preview-toolbar/file-preview-toolbar.component';\nimport { OverlayHandler } from './state/handlers/overlay-handler';\nimport { DownloadHandler } from './state/handlers/donwlod-handler';\nimport { ToastHandler } from './state/handlers/toast-handler';\nimport { UploadPanelHandler } from './state/handlers/upload-panel-handler';\nimport { DialogHandler } from './state/handlers/dialog-handler';\nimport { SharingModule } from './sharing/sharing.module';\nimport { DetailsSidebarComponent } from './details-sidebar/details-sidebar.component';\nimport { FileListHeaderComponent } from './header/file-list-header/file-list-header.component';\nimport { DriveInfiniteScrollDirective } from './interactions/drive-infinite-scroll.directive';\nimport { ResetScrollHandler } from './state/handlers/reset-scroll-handler';\nimport { FilesListComponent } from './files/components/files-list/files-list.component';\nimport { ToggleSelectedClassDirective } from './interactions/toggle-selected-class.directive';\nimport { PageChangeHandler } from './state/handlers/page-change-handler';\nimport { PageLoadHandler } from './state/handlers/page-load-handler';\nimport { RemoveStarHandler } from './state/handlers/remove-star-handler';\nimport { NoFolderEntriesComponent } from './messages/no-folder-entries/no-folder-entries.component';\nimport { NoTrashedEntriesComponent } from './messages/no-trashed-entries/no-trashed-entries.component';\nimport { NoStarredEntriesComponent } from './messages/no-starred-entries/no-starred-entries.component';\nimport { NoRecentEntriesComponent } from './messages/no-recent-entries/no-recent-entries.component';\nimport { UploadsPanelItemComponent } from './uploads/uploads-panel/uploads-panel-item/uploads-panel-item.component';\nimport { NgxsModule } from '@ngxs/store';\nimport { ShareDialogState } from './sharing/state/share-dialog.state';\nimport { ShareLinkState } from './sharing/links/share-link.state';\nimport { DriveState } from './state/drive-state';\nimport { AvailableSpaceIndicatorComponent } from './sidebar/available-space-indicator/available-space-indicator.component';\nimport { LoadingToastComponent } from './messages/loading-toast/loading-toast.component';\nimport { LinkPreviewContainerComponent } from './preview/link-preview-container/link-preview-container.component';\nimport { LinkPreviewPasswordPanelComponent } from './preview/link-preview-container/link-preview-password-panel/link-preview-password-panel.component';\nimport { ContextActionsContainerComponent } from './context-actions/components/context-actions-container/context-actions-container.component';\nimport { DRIVE_UPLOAD_INPUT_CONFIG } from './upload-input-config';\nimport { NoSearchEntriesComponent } from './messages/no-search-entries/no-search-entries.component';\nimport { EntryDescriptionPanelComponent } from './details-sidebar/details-panel/entry-description-panel/entry-description-panel.component';\nimport { FolderPreviewComponent } from './preview/folder-preview/folder-preview.component';\nimport { EntriesSortButtonComponent } from './header/entries-sort-button/entries-sort-button.component';\nimport { MaterialNavbarModule } from '@common/core/ui/material-navbar/material-navbar.module';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { TranslationsModule } from '@common/core/translations/translations.module';\nimport { FormatPipesModule } from '@common/core/ui/format-pipes/format-pipes.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NoResultsMessageModule } from '@common/core/ui/no-results-message/no-results-message.module';\nimport { LoadingIndicatorModule } from '@common/core/ui/loading-indicator/loading-indicator.module';\nimport { ContextMenuModule } from '@common/core/ui/context-menu/context-menu.module';\nimport { AdHostModule } from '@common/core/ui/ad-host/ad-host.module';\nimport { FilePreviewModule } from '@common/file-preview/file-preview.module';\nimport { AVAILABLE_CONTEXT_MENUS } from '@common/core/ui/context-menu/available-context-menus';\nimport { UploadsModule } from '@common/uploads/uploads.module';\nimport { Toast } from '@common/core/ui/toast.service';\nimport { ContextMenu } from '@common/core/ui/context-menu/context-menu.service';\nimport { PreviewFilesService } from '@common/file-preview/preview-files.service';\nimport { OverlayPanel } from '@common/core/ui/overlay-panel/overlay-panel.service';\nimport { UploadInputConfig } from '@common/uploads/upload-input-config';\nimport { Settings } from '../../common/core/config/settings.service';\nimport { WorkspaceSelectorModule } from '../../common/workspaces/workspace-selector/workspace-selector.module';\nimport { SkeletonModule } from '../../common/core/ui/skeleton/skeleton.module';\nimport {\n    WORKSPACE_CONFIG, WorkspaceConfig\n} from '../../common/workspaces/workspace-config';\nimport { DatatableModule } from '../../common/datatable/datatable.module';\n\nexport const STATE_HANDLERS = [\n    OverlayHandler,\n    DownloadHandler,\n    ToastHandler,\n    UploadPanelHandler,\n    DialogHandler,\n    ResetScrollHandler,\n    PageChangeHandler,\n    PageLoadHandler,\n    RemoveStarHandler,\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        UploadsModule,\n        DriveRoutingModule,\n        FilePreviewModule,\n        FormsModule,\n        SharingModule,\n        MaterialNavbarModule,\n        TranslationsModule,\n        FormatPipesModule,\n        ReactiveFormsModule,\n        NoResultsMessageModule,\n        LoadingIndicatorModule,\n        ContextMenuModule,\n        AdHostModule,\n        WorkspaceSelectorModule,\n        SkeletonModule,\n        DatatableModule,\n\n        // material\n        MatSidenavModule,\n        MatTreeModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressBarModule,\n        MatIconModule,\n        MatTooltipModule,\n        MatAutocompleteModule,\n        MatTabsModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n\n        // state\n        NgxsModule.forFeature([\n            DriveState,\n            ShareDialogState,\n            ShareLinkState,\n        ]),\n    ],\n    declarations: [\n        DriveComponent,\n        SidebarComponent,\n        FoldersTreeComponent,\n        FilesGridComponent,\n        FileThumbnailComponent,\n        DriveHammerInteractionsDirective,\n        FilesGridItemComponent,\n        FileIconComponent,\n        DriveContextMenuComponent,\n        SidebarActionButtonsComponent,\n        CrupdateFolderDialogComponent,\n        RenameEntryDialogComponent,\n        EntryDragPreviewComponent,\n        DriveToolbarComponent,\n        EntryBreadcrumbsComponent,\n        UploadsPanelComponent,\n        MoveEntriesDialogComponent,\n        FolderDropTargetDirective,\n        ToolbarActionsComponent,\n        MainSearchbarComponent,\n        UploadDropzoneComponent,\n        NoFolderEntriesComponent,\n        NoTrashedEntriesComponent,\n        NoStarredEntriesComponent,\n        NoRecentEntriesComponent,\n        NoSearchEntriesComponent,\n        EntriesContainerComponent,\n        DetailsSidebarComponent,\n        DetailsPanelComponent,\n        FilePreviewOverlayComponent,\n        FilePreviewToolbarComponent,\n        FileListHeaderComponent,\n        DriveInfiniteScrollDirective,\n        FilesListComponent,\n        ToggleSelectedClassDirective,\n        UploadsPanelItemComponent,\n        AvailableSpaceIndicatorComponent,\n        LoadingToastComponent,\n        LinkPreviewContainerComponent,\n        LinkPreviewPasswordPanelComponent,\n        ContextActionsContainerComponent,\n        EntryDescriptionPanelComponent,\n        FolderPreviewComponent,\n        EntriesSortButtonComponent,\n    ],\n    providers: [\n        // fix angular lazy loaded entry components issue\n        OverlayPanel,\n        PreviewFilesService,\n        Toast,\n\n        // handlers\n        ...STATE_HANDLERS,\n        {\n            provide: AVAILABLE_CONTEXT_MENUS,\n            useValue: DRIVE_CONTEXT_MENUS,\n            multi: true,\n        },\n        {\n            provide: DRIVE_UPLOAD_INPUT_CONFIG,\n            deps: [Settings],\n            useFactory: (settings) => {\n                const uploadInputConfig: UploadInputConfig = {multiple: true};\n\n                const extensions = settings.getJson('drive.validation.allowed_extensions');\n                if (extensions) {\n                    uploadInputConfig.extensions = extensions.map(ext => '.' + ext);\n                }\n\n                return uploadInputConfig;\n            },\n        },\n        {\n            provide: WORKSPACE_CONFIG,\n            useValue: {\n                description: 'Workspaces are shared spaces where teams can store, share and collaborate on files and folders.',\n            } as WorkspaceConfig\n        }\n    ]\n})\nexport class DriveModule {\n    constructor(private injector: Injector) {\n        STATE_HANDLERS.forEach(handler => this.injector.get(handler));\n    }\n}\n","/**\r\n * Download file from specified url.\r\n */\r\nexport function downloadFileFromUrl(url: string, name?: string) {\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    if (name) link.download = name;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n}\r\n","<mat-spinner [diameter]=\"30\"></mat-spinner>\r\n<span trans>{{ data.message }}</span>","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","import { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalHostDirective, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, NgZone, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewContainerRef, ContentChild, ViewChild, Input, ComponentFactoryResolver, forwardRef, EventEmitter, ChangeDetectorRef, Output, QueryList, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, merge, fromEvent, of, timer } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token for the MatInkBar's Positioner. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/portal';\nimport * as ɵngcc6 from '@angular/cdk/scrolling';\nimport * as ɵngcc7 from '@angular/cdk/platform';\nimport * as ɵngcc8 from '@angular/cdk/observers';\n\nfunction MatTab_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nfunction MatTabBody_ng_template_2_Template(rf, ctx) { }\nconst _c1 = function (a0) { return { animationDuration: a0 }; };\nconst _c2 = function (a0, a1) { return { value: a0, params: a1 }; };\nconst _c3 = [\"tabBodyWrapper\"];\nconst _c4 = [\"tabHeader\"];\nfunction MatTabGroup_div_2_ng_template_2_ng_template_0_Template(rf, ctx) { }\nfunction MatTabGroup_div_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, MatTabGroup_div_2_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", tab_r4.templateLabel);\n} }\nfunction MatTabGroup_div_2_ng_template_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(tab_r4.textLabel);\n} }\nfunction MatTabGroup_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function MatTabGroup_div_2_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); const tab_r4 = ctx.$implicit; const i_r5 = ctx.index; const ctx_r11 = ɵngcc0.ɵɵnextContext(); const _r0 = ɵngcc0.ɵɵreference(1); return ctx_r11._handleClick(tab_r4, _r0, i_r5); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_ng_template_2_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵtemplate(3, MatTabGroup_div_2_ng_template_3_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-label-active\", ctx_r1.selectedIndex == i_r5);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r1._getTabLabelId(i_r5))(\"disabled\", tab_r4.disabled)(\"matRippleDisabled\", tab_r4.disabled || ctx_r1.disableRipple);\n    ɵngcc0.ɵɵattribute(\"tabIndex\", ctx_r1._getTabIndex(tab_r4, i_r5))(\"aria-posinset\", i_r5 + 1)(\"aria-setsize\", ctx_r1._tabs.length)(\"aria-controls\", ctx_r1._getTabContentId(i_r5))(\"aria-selected\", ctx_r1.selectedIndex == i_r5)(\"aria-label\", tab_r4.ariaLabel || null)(\"aria-labelledby\", !tab_r4.ariaLabel && tab_r4.ariaLabelledby ? tab_r4.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r4.templateLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !tab_r4.templateLabel);\n} }\nfunction MatTabGroup_mat_tab_body_5_Template(rf, ctx) { if (rf & 1) {\n    const _r16 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-tab-body\", 10);\n    ɵngcc0.ɵɵlistener(\"_onCentered\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener() { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15._removeTabBodyWrapperHeight(); })(\"_onCentering\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r17 = ɵngcc0.ɵɵnextContext(); return ctx_r17._setTabBodyWrapperHeight($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r13 = ctx.$implicit;\n    const i_r14 = ctx.index;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-body-active\", ctx_r3.selectedIndex == i_r14);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r3._getTabContentId(i_r14))(\"content\", tab_r13.content)(\"position\", tab_r13.position)(\"origin\", tab_r13.origin)(\"animationDuration\", ctx_r3.animationDuration);\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx_r3._getTabLabelId(i_r14));\n} }\nconst _c5 = [\"tabListContainer\"];\nconst _c6 = [\"tabList\"];\nconst _c7 = [\"nextPaginator\"];\nconst _c8 = [\"previousPaginator\"];\nconst _c9 = [\"mat-tab-nav-bar\", \"\"];\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    const method = (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    });\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\nclass MatInkBar {\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param element\n     */\n    alignToElement(element) {\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => this._setStyles(element));\n            });\n        }\n        else {\n            this._setStyles(element);\n        }\n    }\n    /** Shows the ink bar. */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /** Hides the ink bar. */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @param element\n     */\n    _setStyles(element) {\n        const positions = this._inkBarPositioner(element);\n        const inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    }\n}\nMatInkBar.ɵfac = function MatInkBar_Factory(t) { return new (t || MatInkBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(_MAT_INK_BAR_POSITIONER), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatInkBar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInkBar, selectors: [[\"mat-ink-bar\"]], hostAttrs: [1, \"mat-ink-bar\"], hostVars: 2, hostBindings: function MatInkBar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } } });\nMatInkBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInkBar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-ink-bar',\n                host: {\n                    'class': 'mat-ink-bar',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [_MAT_INK_BAR_POSITIONER]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_CONTENT = new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\nclass MatTabContent {\n    constructor(template) {\n        this.template = template;\n    }\n}\nMatTabContent.ɵfac = function MatTabContent_Factory(t) { return new (t || MatTabContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatTabContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabContent, selectors: [[\"\", \"matTabContent\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }])] });\nMatTabContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabContent, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabContent]',\n                providers: [{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_LABEL = new InjectionToken('MatTabLabel');\n/** Used to flag tab labels for use with the portal directive */\nclass MatTabLabel extends CdkPortal {\n}\nMatTabLabel.ɵfac = function MatTabLabel_Factory(t) { return ɵMatTabLabel_BaseFactory(t || MatTabLabel); };\nMatTabLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLabel, selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatTabLabel_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatTabLabel);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-label], [matTabLabel]',\n                providers: [{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nclass MatTabBase {\n}\nconst _MatTabMixinBase = mixinDisabled(MatTabBase);\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab extends _MatTabMixinBase {\n    constructor(_viewContainerRef, \n    /**\n     * @deprecated `_closestTabGroup` parameter to become required.\n     * @breaking-change 10.0.0\n     */\n    _closestTabGroup) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        this._closestTabGroup = _closestTabGroup;\n        /** Plain text label for the tab, used when there is no template label. */\n        this.textLabel = '';\n        /** Portal that will be the hosted content of the tab */\n        this._contentPortal = null;\n        /** Emits whenever the internal state of the tab changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n    get templateLabel() { return this._templateLabel; }\n    set templateLabel(value) { this._setTemplateLabelInput(value); }\n    /** @docs-private */\n    get content() {\n        return this._contentPortal;\n    }\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setTemplateLabelInput(value) {\n        // Only update the templateLabel via query if there is actually\n        // a MatTabLabel found. This works around an issue where a user may have\n        // manually set `templateLabel` during creation mode, which would then get clobbered\n        // by `undefined` when this query resolves.\n        if (value) {\n            this._templateLabel = value;\n        }\n    }\n}\nMatTab.ɵfac = function MatTab_Factory(t) { return new (t || MatTab)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_TAB_GROUP, 8)); };\nMatTab.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTab, selectors: [[\"mat-tab\"]], contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_TAB_LABEL, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MAT_TAB_CONTENT, true, TemplateRef);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n    } }, viewQuery: function MatTab_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n    } }, inputs: { disabled: \"disabled\", textLabel: [\"label\", \"textLabel\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"] }, exportAs: [\"matTab\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatTab_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2 });\nMatTab.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_TAB_GROUP,] }] }\n];\nMatTab.propDecorators = {\n    templateLabel: [{ type: ContentChild, args: [MAT_TAB_LABEL,] }],\n    _explicitContent: [{ type: ContentChild, args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true },] }],\n    _implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    textLabel: [{ type: Input, args: ['label',] }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTab, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab',\n                template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\",\n                inputs: ['disabled'],\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matTab'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_TAB_GROUP]\n            }] }]; }, { textLabel: [{\n            type: Input,\n            args: ['label']\n        }], templateLabel: [{\n            type: ContentChild,\n            args: [MAT_TAB_LABEL]\n        }], _explicitContent: [{\n            type: ContentChild,\n            args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true }]\n        }], _implicitContent: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nconst matTabsAnimations = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    constructor(componentFactoryResolver, viewContainerRef, _host, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        super(componentFactoryResolver, viewContainerRef, _document);\n        this._host = _host;\n        /** Subscription to events for when the tab body begins centering. */\n        this._centeringSub = Subscription.EMPTY;\n        /** Subscription to events for when the tab body finishes leaving from center position. */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        });\n        this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n    /** Clean up centering subscription. */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.ɵfac = function MatTabBodyPortal_Factory(t) { return new (t || MatTabBodyPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatTabBody)), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatTabBodyPortal.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabBodyPortal, selectors: [[\"\", \"matTabBodyHost\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabBodyPortal.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef(() => MatTabBody),] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabBodyPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabBodyHost]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: MatTabBody, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatTabBody)]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\nclass _MatTabBodyBase {\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /** Subscription to the directionality change observable. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Emits when an animation on the tab is complete. */\n        this._translateTabComplete = new Subject();\n        /** Event emitted when the tab begins to animate towards the center as the active tab. */\n        this._onCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._beforeCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._afterLeavingCenter = new EventEmitter();\n        /** Event emitted when the tab completes its animation towards the center. */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /** Duration for the tab's animation. */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            });\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe(event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        });\n    }\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin(this.origin);\n        }\n    }\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    _onTranslateTabStarted(event) {\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /** The text direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the provided position state is considered center, regardless of origin. */\n    _isCenterPosition(position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    }\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    _computePositionFromOrigin(origin) {\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.ɵfac = function _MatTabBodyBase_Factory(t) { return new (t || _MatTabBodyBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_MatTabBodyBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabBodyBase, inputs: { animationDuration: \"animationDuration\", position: \"position\", _content: [\"content\", \"_content\"], origin: \"origin\" }, outputs: { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" } });\n_MatTabBodyBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\n_MatTabBodyBase.propDecorators = {\n    _onCentering: [{ type: Output }],\n    _beforeCentering: [{ type: Output }],\n    _afterLeavingCenter: [{ type: Output }],\n    _onCentered: [{ type: Output }],\n    _content: [{ type: Input, args: ['content',] }],\n    origin: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    position: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabBodyBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _onCentering: [{\n            type: Output\n        }], _beforeCentering: [{\n            type: Output\n        }], _afterLeavingCenter: [{\n            type: Output\n        }], _onCentered: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], position: [{\n            type: Input\n        }], _content: [{\n            type: Input,\n            args: ['content']\n        }], origin: [{\n            type: Input\n        }] }); })();\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.ɵfac = function MatTabBody_Factory(t) { return new (t || MatTabBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatTabBody.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabBody, selectors: [[\"mat-tab-body\"]], viewQuery: function MatTabBody_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(PortalHostDirective, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-body\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 6, consts: [[1, \"mat-tab-body-content\"], [\"content\", \"\"], [\"matTabBodyHost\", \"\"]], template: function MatTabBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) { return ctx._onTranslateTabStarted($event); })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) { return ctx._translateTabComplete.next($event); });\n        ɵngcc0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"@translateTab\", ɵngcc0.ɵɵpureFunction2(3, _c2, ctx._position, ɵngcc0.ɵɵpureFunction1(1, _c1, ctx.animationDuration)));\n    } }, directives: [MatTabBodyPortal], styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"], encapsulation: 2, data: { animation: [matTabsAnimations.translateTab] } });\nMatTabBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\nMatTabBody.propDecorators = {\n    _portalHost: [{ type: ViewChild, args: [PortalHostDirective,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabBody, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-body',\n                template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\">\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matTabsAnimations.translateTab],\n                host: {\n                    'class': 'mat-tab-body'\n                },\n                styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _portalHost: [{\n            type: ViewChild,\n            args: [PortalHostDirective]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options the tabs module. */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n/** A simple change event emitted on focus or selection changes. */\nclass MatTabChangeEvent {\n}\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nclass MatTabGroupMixinBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** All of the tabs that belong to the group. */\n        this._tabs = new QueryList();\n        /** The tab index that should be selected after the content has been checked. */\n        this._indexToSelect = 0;\n        /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n        this._tabBodyWrapperHeight = 0;\n        /** Subscription to tabs being added/removed. */\n        this._tabsSubscription = Subscription.EMPTY;\n        /** Subscription to changes in the tab labels. */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._dynamicHeight = false;\n        this._selectedIndex = null;\n        /** Position of the tab header. */\n        this.headerPosition = 'above';\n        /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n        this.selectedIndexChange = new EventEmitter();\n        /** Event emitted when focus has changed within a tab group. */\n        this.focusChange = new EventEmitter();\n        /** Event emitted when the body animation has completed */\n        this.animationDone = new EventEmitter();\n        /** Event emitted when the tab selection has changed. */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '500ms';\n        this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ?\n            defaultConfig.disablePagination : false;\n    }\n    /** Whether the tab group should grow to the size of the active tab. */\n    get dynamicHeight() { return this._dynamicHeight; }\n    set dynamicHeight(value) { this._dynamicHeight = coerceBooleanProperty(value); }\n    /** The index of the active tab. */\n    get selectedIndex() { return this._selectedIndex; }\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() { return this._animationDuration; }\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    /** Background color of the tab group. */\n    get backgroundColor() { return this._backgroundColor; }\n    set backgroundColor(value) {\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            });\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngAfterContentInit() {\n        this._subscribeToAllTabChanges();\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe(() => {\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this._tabs.toArray();\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Listens to changes in all of the tabs. */\n    _subscribeToAllTabChanges() {\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n        // some that are inside of nested tab groups. We filter them out manually by checking that\n        // the closest group to the tab is the current one.\n        this._allTabs.changes\n            .pipe(startWith(this._allTabs))\n            .subscribe((tabs) => {\n            this._tabs.reset(tabs.filter(tab => {\n                // @breaking-change 10.0.0 Remove null check for `_closestTabGroup`\n                // once it becomes a required parameter in MatTab.\n                return !tab._closestTabGroup || tab._closestTabGroup === this;\n            }));\n            this._tabs.notifyOnChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._tabs.destroy();\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /** Re-aligns the ink bar to the selected tab element. */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    _focusChanged(index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    _createChangeEvent(index) {\n        const event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges))\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /** Returns a unique id for each tab label element */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /** Returns a unique id for each tab content element */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /** Removes the height of the tab body wrapper. */\n    _removeTabBodyWrapperHeight() {\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /** Handle click events, setting new selected index if appropriate. */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /** Retrieves the tabindex for the tab. */\n    _getTabIndex(tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    }\n}\n_MatTabGroupBase.ɵfac = function _MatTabGroupBase_Factory(t) { return new (t || _MatTabGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabGroupBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabGroupBase, inputs: { headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", disablePagination: \"disablePagination\", dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", backgroundColor: \"backgroundColor\" }, outputs: { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabGroupBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabGroupBase.propDecorators = {\n    dynamicHeight: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    headerPosition: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    disablePagination: [{ type: Input }],\n    backgroundColor: [{ type: Input }],\n    selectedIndexChange: [{ type: Output }],\n    focusChange: [{ type: Output }],\n    animationDone: [{ type: Output }],\n    selectedTabChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabGroupBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { headerPosition: [{\n            type: Input\n        }], selectedIndexChange: [{\n            type: Output\n        }], focusChange: [{\n            type: Output\n        }], animationDone: [{\n            type: Output\n        }], selectedTabChange: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], disablePagination: [{\n            type: Input\n        }], dynamicHeight: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }] }); })();\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.ɵfac = function MatTabGroup_Factory(t) { return new (t || MatTabGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabGroup, selectors: [[\"mat-tab-group\"]], contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTab, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n    } }, viewQuery: function MatTabGroup_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n        ɵngcc0.ɵɵviewQuery(_c4, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-group\"], hostVars: 4, hostBindings: function MatTabGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-tab-group-inverted-header\", ctx.headerPosition === \"below\");\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\" }, exportAs: [\"matTabGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_TAB_GROUP,\n                useExisting: MatTabGroup\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 6, vars: 7, consts: [[3, \"selectedIndex\", \"disableRipple\", \"disablePagination\", \"indexFocused\", \"selectFocusedIndex\"], [\"tabHeader\", \"\"], [\"class\", \"mat-tab-label mat-focus-indicator\", \"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 3, \"id\", \"mat-tab-label-active\", \"disabled\", \"matRippleDisabled\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-tab-body-wrapper\"], [\"tabBodyWrapper\", \"\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-tab-body-active\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mat-tab-label\", \"mat-focus-indicator\", 3, \"id\", \"disabled\", \"matRippleDisabled\", \"click\"], [1, \"mat-tab-label-content\"], [3, \"ngIf\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"id\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\"]], template: function MatTabGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-tab-header\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) { return ctx._focusChanged($event); })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) { return ctx.selectedIndex = $event; });\n        ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_Template, 4, 14, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵtemplate(5, MatTabGroup_mat_tab_body_5_Template, 1, 8, \"mat-tab-body\", 5);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n    } }, directives: function () { return [MatTabHeader, ɵngcc2.NgForOf, MatTabLabelWrapper, ɵngcc3.MatRipple, ɵngcc4.CdkMonitorFocus, ɵngcc2.NgIf, ɵngcc5.CdkPortalOutlet, MatTabBody]; }, styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"], encapsulation: 2 });\nMatTabGroup.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabGroup.propDecorators = {\n    _allTabs: [{ type: ContentChildren, args: [MatTab, { descendants: true },] }],\n    _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper',] }],\n    _tabHeader: [{ type: ViewChild, args: ['tabHeader',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-group',\n                exportAs: 'matTabGroup',\n                template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex == i\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                inputs: ['color', 'disableRipple'],\n                providers: [{\n                        provide: MAT_TAB_GROUP,\n                        useExisting: MatTabGroup\n                    }],\n                host: {\n                    'class': 'mat-tab-group',\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"'\n                },\n                styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _allTabs: [{\n            type: ContentChildren,\n            args: [MatTab, { descendants: true }]\n        }], _tabBodyWrapper: [{\n            type: ViewChild,\n            args: ['tabBodyWrapper']\n        }], _tabHeader: [{\n            type: ViewChild,\n            args: ['tabHeader']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nclass MatTabLabelWrapperBase {\n}\nconst _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase {\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /** Sets focus on the wrapper element */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.ɵfac = function MatTabLabelWrapper_Factory(t) { return new (t || MatTabLabelWrapper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatTabLabelWrapper.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLabelWrapper, selectors: [[\"\", \"matTabLabelWrapper\", \"\"]], hostVars: 3, hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabLabelWrapper.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLabelWrapper, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabLabelWrapper]',\n                inputs: ['disabled'],\n                host: {\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[attr.aria-disabled]': '!!disabled'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nclass MatPaginatedTabHeader {\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, \n    /**\n     * @deprecated @breaking-change 9.0.0 `_platform` and `_animationMode`\n     * parameters to become required.\n     */\n    _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /** The distance in pixels that the tab labels should be translated to the left. */\n        this._scrollDistance = 0;\n        /** Whether the header should scroll to the selected index after the view has been checked. */\n        this._selectedIndexChanged = false;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Whether the controls for pagination should be displayed */\n        this._showPaginationControls = false;\n        /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n        this._disableScrollAfter = true;\n        /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n        this._disableScrollBefore = true;\n        /** Stream that will stop the automated scrolling. */\n        this._stopScrolling = new Subject();\n        /**\n         * Whether pagination should be disabled. This can be used to avoid unnecessary\n         * layout recalculations if it's known that pagination won't be required.\n         */\n        this.disablePagination = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the option is selected. */\n        this.selectFocusedIndex = new EventEmitter();\n        /** Event emitted when a label is focused. */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular(() => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => {\n                this._stopInterval();\n            });\n        });\n    }\n    /** The index of the active tab. */\n    get selectedIndex() { return this._selectedIndex; }\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItem(value);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('before');\n        });\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('after');\n        });\n    }\n    ngAfterContentInit() {\n        const dirChange = this._dir ? this._dir.change : of(null);\n        const resize = this._viewportRuler.change(150);\n        const realign = () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        };\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withHomeAndEnd()\n            .withWrap();\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe(() => {\n            // We need to defer this to give the browser some time to recalculate the element dimensions.\n            Promise.resolve().then(realign);\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        });\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        });\n    }\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /** Handles keyboard events on the header. */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case ENTER:\n            case SPACE:\n                if (this.focusIndex !== this.selectedIndex) {\n                    this.selectFocusedIndex.emit(this.focusIndex);\n                    this._itemSelected(event);\n                }\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    _onContentChanges() {\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run(() => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : 0;\n    }\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this._tabListContainer.nativeElement;\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /** The layout direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    _updateTabScrollPosition() {\n        if (this.disablePagination) {\n            return;\n        }\n        const scrollDistance = this.scrollDistance;\n        const platform = this._platform;\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        // @breaking-change 9.0.0 Remove null check for `platform` after it can no longer be undefined.\n        if (platform && (platform.TRIDENT || platform.EDGE)) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance() { return this._scrollDistance; }\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollHeader(direction) {\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /** Handles click events on the pagination arrows. */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollToLabel(labelIndex) {\n        if (this.disablePagination) {\n            return;\n        }\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        let labelBeforePos, labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkPaginationEnabled() {\n        if (this.disablePagination) {\n            this._showPaginationControls = false;\n        }\n        else {\n            const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n            if (!isEnabled) {\n                this.scrollDistance = 0;\n            }\n            if (isEnabled !== this._showPaginationControls) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._showPaginationControls = isEnabled;\n        }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkScrollingControls() {\n        if (this.disablePagination) {\n            this._disableScrollAfter = this._disableScrollBefore = true;\n        }\n        else {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance == 0;\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _getMaxScrollDistance() {\n        const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    }\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    _alignInkBarToSelectedTab() {\n        const selectedItem = this._items && this._items.length ?\n            this._items.toArray()[this.selectedIndex] : null;\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /** Stops the currently-running paginator interval.  */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param direction In which direction the paginator should be scrolled.\n     */\n    _handlePaginatorPress(direction, mouseEvent) {\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n        // null check the `button`, but we do it so we don't break tests that use fake events.\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n            return;\n        }\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe(() => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        });\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @param position Position to which to scroll.\n     * @returns Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        if (this.disablePagination) {\n            return { maxScrollDistance: 0, distance: 0 };\n        }\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.ɵfac = function MatPaginatedTabHeader_Factory(t) { return new (t || MatPaginatedTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPaginatedTabHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPaginatedTabHeader, inputs: { disablePagination: \"disablePagination\" } });\nMatPaginatedTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPaginatedTabHeader.propDecorators = {\n    disablePagination: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatedTabHeader, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disablePagination: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.ɵfac = function _MatTabHeaderBase_Factory(t) { return new (t || _MatTabHeaderBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabHeaderBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabHeaderBase, inputs: { disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabHeaderBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabHeaderBase.propDecorators = {\n    disableRipple: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabHeaderBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disableRipple: [{\n            type: Input\n        }] }); })();\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.ɵfac = function MatTabHeader_Factory(t) { return new (t || MatTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabHeader, selectors: [[\"mat-tab-header\"]], contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabHeader_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatInkBar, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c5, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c6, true);\n        ɵngcc0.ɵɵviewQuery(_c7, true);\n        ɵngcc0.ɵɵviewQuery(_c8, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-header\"], hostVars: 4, hostBindings: function MatTabHeader_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n    } }, inputs: { selectedIndex: \"selectedIndex\" }, outputs: { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-label-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [\"role\", \"tablist\", 1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-labels\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabHeader_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabHeader_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabHeader_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabHeader_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"], encapsulation: 2 });\nMatTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabHeader.propDecorators = {\n    _items: [{ type: ContentChildren, args: [MatTabLabelWrapper, { descendants: false },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-header',\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                outputs: ['selectFocusedIndex', 'indexFocused'],\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                host: {\n                    'class': 'mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n                },\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [MatTabLabelWrapper, { descendants: false }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /** Theme color of the nav bar. */\n        this.color = 'primary';\n    }\n    /** Background color of the tab nav. */\n    get backgroundColor() { return this._backgroundColor; }\n    set backgroundColor(value) {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    _itemSelected() {\n        // noop\n    }\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            this.updateActiveLink();\n        });\n        super.ngAfterContentInit();\n    }\n    /**\n     * Notifies the component that the active link has been changed.\n     * @breaking-change 8.0.0 `element` parameter to be removed.\n     */\n    updateActiveLink(_element) {\n        if (!this._items) {\n            return;\n        }\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n}\n_MatTabNavBase.ɵfac = function _MatTabNavBase_Factory(t) { return new (t || _MatTabNavBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabNavBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabNavBase, inputs: { color: \"color\", backgroundColor: \"backgroundColor\", disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabNavBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabNavBase.propDecorators = {\n    backgroundColor: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    color: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabNavBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { color: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.ɵfac = function MatTabNav_Factory(t) { return new (t || MatTabNav)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabNav.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabNav, selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]], contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLink, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabNav_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatInkBar, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c5, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c6, true);\n        ɵngcc0.ɵɵviewQuery(_c7, true);\n        ɵngcc0.ɵɵviewQuery(_c8, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-nav-bar\", \"mat-tab-header\"], hostVars: 10, hostBindings: function MatTabNav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { color: \"color\" }, exportAs: [\"matTabNavBar\", \"matTabNav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c9, ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-link-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-links\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabNav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabNav_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabNav_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabNav_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabNav_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabNav_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"], encapsulation: 2 });\nMatTabNav.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabNav.propDecorators = {\n    _items: [{ type: ContentChildren, args: [forwardRef(() => MatTabLink), { descendants: true },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabNav, [{\n        type: Component,\n        args: [{\n                selector: '[mat-tab-nav-bar]',\n                exportAs: 'matTabNavBar, matTabNav',\n                inputs: ['color'],\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-tab-nav-bar mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [forwardRef(() => MatTabLink), { descendants: true }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkMixinBase {\n}\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n/** Base class with all of the `MatTabLink` functionality. */\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    constructor(_tabNavBar, elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /** Whether the tab link is active or not. */\n        this._isActive = false;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    /** Whether the link is active. */\n    get active() { return this._isActive; }\n    set active(value) {\n        if (value !== this._isActive) {\n            this._isActive = value;\n            this._tabNavBar.updateActiveLink(this.elementRef);\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled;\n    }\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this.elementRef);\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n}\n_MatTabLinkBase.ɵfac = function _MatTabLinkBase_Factory(t) { return new (t || _MatTabLinkBase)(ɵngcc0.ɵɵdirectiveInject(_MatTabNavBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabLinkBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabLinkBase, inputs: { active: \"active\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabLinkBase.ctorParameters = () => [\n    { type: _MatTabNavBase },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabLinkBase.propDecorators = {\n    active: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabLinkBase, [{\n        type: Directive\n    }], function () { return [{ type: _MatTabNavBase }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { active: [{\n            type: Input\n        }] }); })();\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.ɵfac = function MatTabLink_Factory(t) { return new (t || MatTabLink)(ɵngcc0.ɵɵdirectiveInject(MatTabNav), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabLink.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLink, selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]], hostAttrs: [1, \"mat-tab-link\", \"mat-focus-indicator\"], hostVars: 7, hostBindings: function MatTabLink_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-current\", ctx.active ? \"page\" : null)(\"aria-disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled)(\"mat-tab-label-active\", ctx.active);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matTabLink\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabLink.ctorParameters = () => [\n    { type: MatTabNav },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLink, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-link], [matTabLink]',\n                exportAs: 'matTabLink',\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                host: {\n                    'class': 'mat-tab-link mat-focus-indicator',\n                    '[attr.aria-current]': 'active ? \"page\" : null',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabIndex]': 'tabIndex',\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[class.mat-tab-label-active]': 'active'\n                }\n            }]\n    }], function () { return [{ type: MatTabNav }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatTabsModule {\n}\nMatTabsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTabsModule });\nMatTabsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTabsModule_Factory(t) { return new (t || MatTabsModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            PortalModule,\n            MatRippleModule,\n            ObserversModule,\n            A11yModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTabsModule, { declarations: function () { return [MatTabGroup, MatTabLabel, MatTab, MatInkBar, MatTabLabelWrapper, MatTabNav, MatTabLink, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule]; }, exports: function () { return [MatCommonModule, MatTabGroup, MatTabLabel, MatTab, MatTabNav, MatTabLink, MatTabContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabsModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PortalModule,\n                    MatRippleModule,\n                    ObserversModule,\n                    A11yModule,\n                ],\n                // Don't export all components because some are only to be used internally.\n                exports: [\n                    MatCommonModule,\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabContent,\n                ],\n                declarations: [\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatInkBar,\n                    MatTabLabelWrapper,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabBody,\n                    MatTabBodyPortal,\n                    MatTabHeader,\n                    MatTabContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵangular_material_src_material_tabs_tabs_a, MAT_TAB_LABEL as ɵangular_material_src_material_tabs_tabs_b, MAT_TAB_CONTENT as ɵangular_material_src_material_tabs_tabs_c, MatPaginatedTabHeader as ɵangular_material_src_material_tabs_tabs_d };\n\n//# sourceMappingURL=tabs.js.map","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n"]}